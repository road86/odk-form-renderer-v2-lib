// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`containers/fields/group/Select All/Dropdown renders correctly for Select All Radio 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(SelectAllRadio)
    assignFieldValueActionCreator={[MockFunction]}
    choices={Object {}}
    csvList={Object {}}
    defaultLanguage="English"
    fieldElement={
      Object {
        "bind": Object {
          "required": "Yes",
        },
        "children": Array [
          Object {
            "label": "A",
            "name": "a",
          },
          Object {
            "label": "B",
            "name": "b",
          },
        ],
        "hint": "select_multiple type, 4 image choices",
        "label": "Spinner widget: select multiple",
        "name": "spinner_multi_widget",
        "type": "select all that apply",
      }
    }
    fieldParentTreeName=""
    fieldValue={
      Array [
        "a",
        "b",
      ]
    }
    getFormSubmitStatusSelector={false}
  >
    <SelectAllRadio
      addErrorInputIdActionCreator={[Function]}
      assignFieldValueActionCreator={[Function]}
      assignOptionListActionCreator={[Function]}
      choices={Object {}}
      csvList={Object {}}
      defaultLanguage="English"
      fieldElement={
        Object {
          "bind": Object {
            "required": "Yes",
          },
          "children": Array [
            Object {
              "label": "A",
              "name": "a",
            },
            Object {
              "label": "B",
              "name": "b",
            },
          ],
          "hint": "select_multiple type, 4 image choices",
          "label": "Spinner widget: select multiple",
          "name": "spinner_multi_widget",
          "type": "select all that apply",
        }
      }
      fieldParentTreeName=""
      fieldValue={
        Array [
          "a",
          "b",
        ]
      }
      getEvaluatedExpressionSelector={[Function]}
      getEvaluatedExpressionSelectorForSelect={[Function]}
      getFormSubmitStatusSelector={false}
      isComponentRender={true}
      isPresentInErrorSelector={[Function]}
      optionList={
        Object {
          "0": Object {
            "label": "A",
            "name": "a",
          },
          "1": Object {
            "label": "B",
            "name": "b",
          },
        }
      }
      removeErrorInputIdActionCreator={[Function]}
    >
      <div>
        <Label
          tag="label"
          widths={
            Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ]
          }
        >
          <label
            className=""
          >
            Spinner widget: select multiple
             
            <span
              className="requiredTextSteric"
            >
              *
            </span>
          </label>
        </Label>
        <Form
          key="selectAll"
          tag="form"
        >
          <form
            className=""
          >
            <FormGroup
              check={true}
              inline={false}
              key="0"
              tag="div"
            >
              <div
                className="form-check"
              >
                <Label
                  check={true}
                  tag="label"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <label
                    className="form-check-label"
                  >
                    <Input
                      checked={true}
                      key="spinner_multi_widget-0"
                      name="spinner_multi_widget"
                      onChange={[Function]}
                      readOnly={false}
                      type="checkbox"
                      value="a"
                    >
                      <input
                        checked={true}
                        className="form-check-input"
                        name="spinner_multi_widget"
                        onChange={[Function]}
                        readOnly={false}
                        type="checkbox"
                        value="a"
                      />
                    </Input>
                     
                    A
                  </label>
                </Label>
              </div>
            </FormGroup>
            <FormGroup
              check={true}
              inline={false}
              key="1"
              tag="div"
            >
              <div
                className="form-check"
              >
                <Label
                  check={true}
                  tag="label"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <label
                    className="form-check-label"
                  >
                    <Input
                      checked={true}
                      key="spinner_multi_widget-1"
                      name="spinner_multi_widget"
                      onChange={[Function]}
                      readOnly={false}
                      type="checkbox"
                      value="b"
                    >
                      <input
                        checked={true}
                        className="form-check-input"
                        name="spinner_multi_widget"
                        onChange={[Function]}
                        readOnly={false}
                        type="checkbox"
                        value="b"
                      />
                    </Input>
                     
                    B
                  </label>
                </Label>
              </div>
            </FormGroup>
          </form>
        </Form>
        <Label
          className="hintText"
          tag="label"
          widths={
            Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ]
          }
        >
          <label
            className="hintText"
          >
            select_multiple type, 4 image choices
          </label>
        </Label>
      </div>
    </SelectAllRadio>
  </Connect(SelectAllRadio)>
</Provider>
`;
