{"version":3,"file":"odkformrenderer.cjs.production.min.js","sources":["../src/constants.tsx","../src/utils/compiler.ts","../src/utils/helpers.ts","../src/store/ducks/formState.ts","../src/containers/fields/group/Group/index.tsx","../src/containers/fields/group/Repeat/Single Repeat/index.tsx","../src/containers/fields/group/Repeat/index.tsx","../src/containers/fields/base/Date/index.tsx","../src/containers/fields/base/Date Time/index.tsx","../src/containers/fields/base/Decimal/index.tsx","../src/containers/fields/base/Integer/index.tsx","../src/containers/fields/base/Note/index.tsx","../src/containers/fields/base/Photo/index.tsx","../src/containers/fields/base/Select All/Dropdown/index.tsx","../src/containers/fields/base/Select All/Radio/index.tsx","../src/containers/fields/base/Select All/index.tsx","../src/containers/fields/base/Select One/Dropdown/index.tsx","../src/containers/fields/base/Select One/Radio/index.tsx","../src/containers/fields/base/Select One/index.tsx","../src/containers/fields/base/Text/index.tsx","../src/components/typeEvalutors/Base/index.tsx","../src/components/typeEvalutors/Group/index.tsx","../src/App/index.tsx","../src/store/index.tsx","../src/index.tsx"],"sourcesContent":["// Field Types\nexport const GROUP_FIELD_TYPE = 'group';\nexport type GROUP_FIELD_TYPE = typeof GROUP_FIELD_TYPE;\nexport const REPEAT_FIELD_TYPE = 'repeat';\nexport type REPEAT_FIELD_TYPE = typeof REPEAT_FIELD_TYPE;\nexport const TEXT_FIELD_TYPE = 'text';\nexport type TEXT_FIELD_TYPE = typeof TEXT_FIELD_TYPE;\nexport const DATE_FIELD_TYPE = 'date';\nexport type DATE_FIELD_TYPE = typeof DATE_FIELD_TYPE;\nexport const DATE_TIME_FIELD_TYPE = 'dateTime';\nexport type DATE_TIME_FIELD_TYPE = typeof DATE_TIME_FIELD_TYPE;\nexport const INTEGER_FIELD_TYPE = 'integer';\nexport type INTEGER_FIELD_TYPE = typeof INTEGER_FIELD_TYPE;\nexport const DECIMAL_FIELD_TYPE = 'decimal';\nexport type DECIMAL_FIELD_TYPE = typeof DECIMAL_FIELD_TYPE;\nexport const PHOTO_FIELD_TYPE = 'photo';\nexport type PHOTO_FIELD_TYPE = typeof PHOTO_FIELD_TYPE;\nexport const NOTE_FIELD_TYPE = 'note';\nexport type NOTE_FIELD_TYPE = typeof NOTE_FIELD_TYPE;\nexport const SELECT_ONE_FIELD_TYPE = 'select one';\nexport type SELECT_ONE_FIELD_TYPE = typeof SELECT_ONE_FIELD_TYPE;\nexport const SELECT_ALL_FIELD_TYPE = 'select all that apply';\nexport type SELECT_ALL_FIELD_TYPE = typeof SELECT_ALL_FIELD_TYPE;\n\n// Required Properties\nexport const REQUIRED_FIELD_MSG = 'This field is required';\nexport type REQUIRED_FIELD_MSG = typeof REQUIRED_FIELD_MSG;\nexport const REQUIRED_SYMBOL = '*';\nexport type REQUIRED_SYMBOL = typeof REQUIRED_SYMBOL;\n\n/* tslint:disable */\nexport const DEMO_FORM_JSON = {\n  \"default_language\": \"English\",\n  \"children\": [\n    {\n      \"name\": \"start\",\n      \"type\": \"start\"\n    },\n    {\n      \"name\": \"end\",\n      \"type\": \"end\"\n    },\n    {\n      \"name\": \"username\",\n      \"type\": \"username\"\n    },\n    {\n      \"name\": \"note_owner_info\",\n      \"label\": {\n        \"Bangla\": \"Owner Information\",\n        \"English\": \"Owner Information\"\n      },\n      \"type\": \"note\"\n    },\n    {\n      \"control\": {\n        \"appearance\": \"w12\"\n      },\n      \"children\": [\n        {\n          \"control\": {\n            \"appearance\": \"w6\"\n          },\n          \"name\": \"date\",\n          \"bind\": {\n            \"jr:constraintMsg\": {\n              \"Bangla\": \"No future date\",\n              \"English\": \"No future date\"\n            },\n            \"required\": \"Yes\",\n            \"constraint\": \".<=today()\"\n          },\n          \"label\": {\n            \"Bangla\": \"\\u09a4\\u09be\\u09b0\\u09bf\\u0996\",\n            \"English\": \"Date\"\n          },\n          \"type\": \"date\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6\"\n          },\n          \"name\": \"owner_name\",\n          \"bind\": {\n            \"required\": \"Yes\"\n          },\n          \"label\": {\n            \"Bangla\": \"\\u09ae\\u09be\\u09b2\\u09bf\\u0995\\u09c7\\u09b0 \\u09a8\\u09be\\u09ae\",\n            \"English\": \"Owner's name\"\n          },\n          \"type\": \"text\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6 minimal\"\n          },\n          \"children\": [\n            {\n              \"name\": \"1\",\n              \"label\": {\n                \"Bangla\": \"Union-1\",\n                \"English\": \"Union-1\"\n              }\n            },\n            {\n              \"name\": \"2\",\n              \"label\": {\n                \"Bangla\": \"Union-2\",\n                \"English\": \"Union-2\"\n              }\n            },\n            {\n              \"name\": \"3\",\n              \"label\": {\n                \"Bangla\": \"Union-3\",\n                \"English\": \"Union-3\"\n              }\n            }\n          ],\n          \"name\": \"union_name\",\n          \"bind\": {\n            \"required\": \"Yes\"\n          },\n          \"label\": {\n            \"Bangla\": \"\\u0987\\u0989\\u09a8\\u09bf\\u09df\\u09a8\",\n            \"English\": \"Union\"\n          },\n          \"type\": \"select one\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6\"\n          },\n          \"name\": \"village\",\n          \"bind\": {\n            \"required\": \"Yes\"\n          },\n          \"label\": {\n            \"Bangla\": \"\\u0997\\u09cd\\u09b0\\u09be\\u09ae\",\n            \"English\": \"Village\"\n          },\n          \"type\": \"text\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6 numbers\"\n          },\n          \"name\": \"mobile\",\n          \"bind\": {\n            \"jr:constraintMsg\": {\n              \"Bangla\": \"\\u09e7\\u09e7 \\u09a1\\u09bf\\u099c\\u09bf\\u099f \\u09aa\\u09cd\\u09b0\\u09ac\\u09c7\\u09b6 \\u0995\\u09b0\\u09c1\\u09a8\",\n              \"English\": \"Put 11 digit\"\n            },\n            \"constraint\": \"regex(., '^[0-9]{11}$')\"\n          },\n          \"label\": {\n            \"Bangla\": \"\\u09ae\\u09cb\\u09ac\\u09be\\u0987\\u09b2 \\u09a8\\u09be\\u09ae\\u09cd\\u09ac\\u09be\\u09b0\",\n            \"English\": \"Mobile number\"\n          },\n          \"type\": \"text\"\n        }\n      ],\n      \"name\": \"owner_info\",\n      \"label\": {\n        \"Bangla\": \"Owner Information\",\n        \"English\": \"Owner Information\"\n      },\n      \"type\": \"group\"\n    },\n    {\n      \"control\": {\n        \"appearance\": \"No\"\n      },\n      \"name\": \"note_patient_info\",\n      \"label\": {\n        \"Bangla\": \"Patient Information\",\n        \"English\": \"Patient Information\"\n      },\n      \"type\": \"note\"\n    },\n    {\n      \"control\": {\n        \"appearance\": \"w12\"\n      },\n      \"children\": [\n        {\n          \"control\": {\n            \"appearance\": \"w6 minimal\"\n          },\n          \"children\": [\n            {\n              \"name\": \"1\",\n              \"label\": {\n                \"Bangla\": \"Buffalo\",\n                \"English\": \"Buffalo\"\n              }\n            },\n            {\n              \"name\": \"2\",\n              \"label\": {\n                \"Bangla\": \"Cat\",\n                \"English\": \"Cat\"\n              }\n            },\n            {\n              \"name\": \"3\",\n              \"label\": {\n                \"Bangla\": \"Cattle\",\n                \"English\": \"Cattle\"\n              }\n            },\n            {\n              \"name\": \"4\",\n              \"label\": {\n                \"Bangla\": \"Dog\",\n                \"English\": \"Dog\"\n              }\n            },\n            {\n              \"name\": \"5\",\n              \"label\": {\n                \"Bangla\": \"Goat\",\n                \"English\": \"Goat\"\n              }\n            },\n            {\n              \"name\": \"6\",\n              \"label\": {\n                \"Bangla\": \"Horse\",\n                \"English\": \"Horse\"\n              }\n            },\n            {\n              \"name\": \"7\",\n              \"label\": {\n                \"Bangla\": \"Pig\",\n                \"English\": \"Pig\"\n              }\n            },\n            {\n              \"name\": \"8\",\n              \"label\": {\n                \"Bangla\": \"Sheep\",\n                \"English\": \"Sheep\"\n              }\n            },\n            {\n              \"name\": \"21\",\n              \"label\": {\n                \"Bangla\": \"Chicken\",\n                \"English\": \"Chicken\"\n              }\n            },\n            {\n              \"name\": \"22\",\n              \"label\": {\n                \"Bangla\": \"Duck\",\n                \"English\": \"Duck\"\n              }\n            },\n            {\n              \"name\": \"23\",\n              \"label\": {\n                \"Bangla\": \"Goose\",\n                \"English\": \"Goose\"\n              }\n            },\n            {\n              \"name\": \"24\",\n              \"label\": {\n                \"Bangla\": \"Moyana\",\n                \"English\": \"Moyana\"\n              }\n            },\n            {\n              \"name\": \"25\",\n              \"label\": {\n                \"Bangla\": \"Pegion\",\n                \"English\": \"Pegion\"\n              }\n            },\n            {\n              \"name\": \"26\",\n              \"label\": {\n                \"Bangla\": \"Quail\",\n                \"English\": \"Quail\"\n              }\n            },\n            {\n              \"name\": \"27\",\n              \"label\": {\n                \"Bangla\": \"Turkey\",\n                \"English\": \"Turkey\"\n              }\n            },\n            {\n              \"name\": \"00\",\n              \"label\": {\n                \"Bangla\": \"Other\",\n                \"English\": \"Other\"\n              }\n            }\n          ],\n          \"name\": \"species\",\n          \"bind\": {\n            \"required\": \"Yes\"\n          },\n          \"label\": {\n            \"Bangla\": \"\\u09aa\\u09cd\\u09b0\\u09be\\u09a3\\u09c0 \\u09aa\\u09cd\\u09b0\\u099c\\u09be\\u09a4\\u09bf\",\n            \"English\": \"Species\"\n          },\n          \"type\": \"select one\"\n        },\n        {\n          \"name\": \"species_label\",\n          \"bind\": {\n            \"calculate\": \"jr:choice-name(${species},'${species}')\"\n          },\n          \"label\": {\n            \"Bangla\": \"species_label\"\n          },\n          \"type\": \"calculate\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6\"\n          },\n          \"name\": \"species_other\",\n          \"bind\": {\n            \"relevant\": \"${species}=00\",\n            \"required\": \"Yes\"\n          },\n          \"label\": {\n            \"Bangla\": \"\\u09aa\\u09cd\\u09b0\\u09be\\u09a3\\u09c0 \\u09aa\\u09cd\\u09b0\\u099c\\u09be\\u09a4\\u09bf - \\u0985\\u09a8\\u09cd\\u09af\\u09be\\u09a8\\u09cd\\u09af\",\n            \"English\": \"Species - Other\"\n          },\n          \"type\": \"text\"\n        },\n        {\n          \"name\": \"species_label_final\",\n          \"bind\": {\n            \"calculate\": \"if(${species}='00',${species_other},${species_label})\"\n          },\n          \"label\": {\n            \"Bangla\": \"species_label_final\"\n          },\n          \"type\": \"calculate\"\n        },\n        {\n          \"name\": \"species_value\",\n          \"bind\": {\n            \"calculate\": \"if(${species}=1,'M1',if(${species}=2,'M2',if(${species}=3,'M3',if(${species}=4,'M4',if(${species}=5,'M5',if(${species}=6,'M6',if(${species}=7,'M7',if(${species}=8,'M8',if(${species}='00' and ${species_type_other}=1,'M_Other',if(${species}=21,'B',if(${species}=22,'B',if(${species}=23,'B',if(${species}=24,'B',if(${species}=25,'B',if(${species}=26,'B',if(${species}=27,'B',if(${species}='00' and ${species_type_other}=2,'B','')))))))))))))))))\"\n          },\n          \"label\": {\n            \"Bangla\": \"species_value\"\n          },\n          \"type\": \"calculate\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6 minimal\"\n          },\n          \"children\": [\n            {\n              \"name\": \"1\",\n              \"label\": {\n                \"Bangla\": \"Mammal\",\n                \"English\": \"Mammal\"\n              }\n            },\n            {\n              \"name\": \"2\",\n              \"label\": {\n                \"Bangla\": \"Bird\",\n                \"English\": \"Bird\"\n              }\n            }\n          ],\n          \"name\": \"species_type_other\",\n          \"bind\": {\n            \"relevant\": \"${species}=00\",\n            \"required\": \"Yes\"\n          },\n          \"label\": {\n            \"Bangla\": \"\\u09aa\\u09cd\\u09b0\\u09be\\u09a3\\u09bf\\u09b8\\u09ae\\u09cd\\u09aa\\u09a6\",\n            \"English\": \"Livestock\"\n          },\n          \"type\": \"select one\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6\"\n          },\n          \"name\": \"species_type\",\n          \"bind\": {\n            \"required\": \"No\",\n            \"calculate\": \"if((${species}>0 and ${species}<21) or ${species_type_other}=1,1,if((${species}>20 and ${species}<50) or ${species_type_other}=2,2,''))\"\n          },\n          \"label\": {\n            \"Bangla\": \"Livestock type\",\n            \"English\": \"Livestock type\"\n          },\n          \"media\": {\n            \"image\": \"species_type_other\"\n          },\n          \"type\": \"calculate\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6 minimal\"\n          },\n          \"itemset\": \"species_breed_type\",\n          \"name\": \"species_breed_type\",\n          \"bind\": {\n            \"relevant\": \"${species}=3 or ${species}=21\",\n            \"required\": \"No\"\n          },\n          \"choice_filter\": \"myfilter=${species}\",\n          \"label\": {\n            \"Bangla\": \"\\u09aa\\u09cd\\u09b0\\u09be\\u09a3\\u09bf\\u09b0 \\u09a7\\u09b0\\u09a3\",\n            \"English\": \"Mammal Type / breed\"\n          },\n          \"type\": \"select one\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6 minimal\"\n          },\n          \"children\": [\n            {\n              \"name\": \"1\",\n              \"label\": {\n                \"Bangla\": \"Milk\",\n                \"English\": \"Milk\"\n              }\n            },\n            {\n              \"name\": \"2\",\n              \"label\": {\n                \"Bangla\": \"Meat\",\n                \"English\": \"Meat\"\n              }\n            },\n            {\n              \"name\": \"3\",\n              \"label\": {\n                \"Bangla\": \"Working\",\n                \"English\": \"Working\"\n              }\n            },\n            {\n              \"name\": \"4\",\n              \"label\": {\n                \"Bangla\": \"Hobby\",\n                \"English\": \"Hobby\"\n              }\n            },\n            {\n              \"name\": \"5\",\n              \"label\": {\n                \"Bangla\": \"Fiber/Wool\",\n                \"English\": \"Fiber/Wool\"\n              }\n            },\n            {\n              \"name\": \"6\",\n              \"label\": {\n                \"Bangla\": \"Multi-purpose\",\n                \"English\": \"Multi-purpose\"\n              }\n            }\n          ],\n          \"name\": \"species_rearing_purpose\",\n          \"bind\": {\n            \"relevant\": \"${species_type}=1\",\n            \"required\": \"Yes\"\n          },\n          \"label\": {\n            \"Bangla\": \"Purpose [${species_label_final}]\",\n            \"English\": \"Purpose [${species_label_final}]\"\n          },\n          \"type\": \"select one\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6\"\n          },\n          \"name\": \"age_month\",\n          \"bind\": {\n            \"relevant\": \"${species_type}=1\",\n            \"required\": \"No\"\n          },\n          \"label\": {\n            \"Bangla\": \"[${species_label_final}] \\u098f\\u09b0 \\u09ac\\u09df\\u09b8 (\\u09ae\\u09be\\u09b8)\",\n            \"English\": \"Age (Month) [${species_label_final}]\"\n          },\n          \"type\": \"decimal\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6\"\n          },\n          \"name\": \"age_week\",\n          \"bind\": {\n            \"relevant\": \"${species_type}=2\",\n            \"required\": \"No\"\n          },\n          \"label\": {\n            \"Bangla\": \"[${species_label_final}] \\u098f\\u09b0 \\u09ac\\u09df\\u09b8 (\\u09b8\\u09aa\\u09cd\\u09a4\\u09be\\u09b9)\",\n            \"English\": \"Age (Week) [${species_label_final}]\"\n          },\n          \"type\": \"decimal\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6 minimal\"\n          },\n          \"children\": [\n            {\n              \"name\": \"1\",\n              \"label\": {\n                \"Bangla\": \"\\u09aa\\u09c1\\u09b0\\u09c1\\u09b7\",\n                \"English\": \"Male\"\n              }\n            },\n            {\n              \"name\": \"2\",\n              \"label\": {\n                \"Bangla\": \"\\u09ae\\u09b9\\u09bf\\u09b2\\u09be\",\n                \"English\": \"Female\"\n              }\n            }\n          ],\n          \"name\": \"sex\",\n          \"bind\": {\n            \"relevant\": \"${species_type}=1\",\n            \"required\": \"No\"\n          },\n          \"label\": {\n            \"Bangla\": \"[${species_label_final}] \\u098f\\u09b0 \\u09b2\\u09bf\\u0999\\u09cd\\u0997\",\n            \"English\": \"Sex [${species_label_final}]\"\n          },\n          \"type\": \"select one\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6\"\n          },\n          \"name\": \"herd_flock_number\",\n          \"bind\": {\n            \"required\": \"Yes\"\n          },\n          \"label\": {\n            \"Bangla\": \"\\u09ae\\u09cb\\u099f [${species_label_final}] \\u098f\\u09b0 \\u09b8\\u0982\\u0996\\u09cd\\u09af\\u09be\",\n            \"English\": \"Number of [${species_label_final}] in the herd / flock\"\n          },\n          \"type\": \"integer\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6\"\n          },\n          \"name\": \"sick_number\",\n          \"bind\": {\n            \"required\": \"Yes\"\n          },\n          \"label\": {\n            \"Bangla\": \"\\u0986\\u0995\\u09cd\\u09b0\\u09be\\u09a8\\u09cd\\u09a4 [${species_label_final}] \\u098f\\u09b0 \\u09b8\\u0982\\u0996\\u09cd\\u09af\\u09be\",\n            \"English\": \"Number of sick [${species_label_final}]\"\n          },\n          \"type\": \"integer\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6\"\n          },\n          \"name\": \"dead_number\",\n          \"bind\": {\n            \"required\": \"Yes\"\n          },\n          \"label\": {\n            \"Bangla\": \"\\u09ae\\u09c3\\u09a4 [${species_label_final}] \\u098f\\u09b0 \\u09b8\\u0982\\u0996\\u09cd\\u09af\\u09be\",\n            \"English\": \"Number of dead [${species_label_final}]\"\n          },\n          \"type\": \"integer\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6\"\n          },\n          \"name\": \"disease_history\",\n          \"bind\": {\n            \"required\": \"No\"\n          },\n          \"label\": {\n            \"Bangla\": \"\\u09b0\\u09cb\\u0997\\u09c7\\u09b0 \\u0987\\u09a4\\u09bf\\u09b9\\u09be\\u09b8\",\n            \"English\": \"Disease History\"\n          },\n          \"type\": \"text\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6 minimal\"\n          },\n          \"itemset\": \"clinical_sign\",\n          \"name\": \"clinical_sign\",\n          \"bind\": {\n            \"required\": \"Yes\"\n          },\n          \"choice_filter\": \"myfilter=${species_type}\",\n          \"label\": {\n            \"Bangla\": \"\\u09b0\\u09cb\\u0997\\u09c7\\u09b0 \\u09b2\\u0995\\u09cd\\u09b7\\u09a3\",\n            \"English\": \"Clinical Sign\"\n          },\n          \"type\": \"select all that apply\"\n        },\n        {\n          \"name\": \"clinical_sign_other\",\n          \"bind\": {\n            \"relevant\": \"selected(${clinical_sign},'00')\",\n            \"required\": \"Yes\"\n          },\n          \"label\": {\n            \"Bangla\": \"\\u09b0\\u09cb\\u0997\\u09c7\\u09b0 \\u09b2\\u0995\\u09cd\\u09b7\\u09a3 - \\u0985\\u09a8\\u09cd\\u09af\\u09be\\u09a8\\u09cd\\u09af\",\n            \"English\": \"Clinical Sign - Other\"\n          },\n          \"type\": \"text\"\n        }\n      ],\n      \"name\": \"patient_info\",\n      \"label\": {\n        \"Bangla\": \"Patient Information\",\n        \"English\": \"Patient Information\"\n      },\n      \"type\": \"group\"\n    },\n    {\n      \"control\": {\n        \"appearance\": \"NO\"\n      },\n      \"name\": \"note_diagnostics\",\n      \"label\": {\n        \"Bangla\": \"Diagnostics\",\n        \"English\": \"Diagnostics\"\n      },\n      \"type\": \"note\"\n    },\n    {\n      \"control\": {\n        \"appearance\": \"w10\"\n      },\n      \"children\": [\n        {\n          \"control\": {\n            \"appearance\": \"horizontal-compact\"\n          },\n          \"children\": [\n            {\n              \"name\": \"1\",\n              \"label\": {\n                \"Bangla\": \"Microscopic\",\n                \"English\": \"Microscopic\"\n              }\n            },\n            {\n              \"name\": \"2\",\n              \"label\": {\n                \"Bangla\": \"Rapid Test\",\n                \"English\": \"Rapid Test\"\n              }\n            },\n            {\n              \"name\": \"3\",\n              \"label\": {\n                \"Bangla\": \"Postmortem examination\",\n                \"English\": \"Postmortem examination\"\n              }\n            }\n          ],\n          \"name\": \"test_tool\",\n          \"bind\": {\n            \"required\": \"yes\"\n          },\n          \"label\": {\n            \"Bangla\": \"Test tool\",\n            \"English\": \"Test tool\"\n          },\n          \"type\": \"select all that apply\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"horizontal-compact\"\n          },\n          \"itemset\": \"microscopic\",\n          \"name\": \"microscopic\",\n          \"bind\": {\n            \"relevant\": \"selected(${test_tool},'1')\",\n            \"required\": \"Yes\"\n          },\n          \"choice_filter\": \"myfilter=${species_type}\",\n          \"label\": {\n            \"Bangla\": \"Microscopic\",\n            \"English\": \"Microscopic\"\n          },\n          \"type\": \"select all that apply\"\n        },\n        {\n          \"name\": \"so_far_outside_fecal\",\n          \"bind\": {\n            \"calculate\": \"join(' ', ${microscopic_test_fecal})\"\n          },\n          \"type\": \"calculate\"\n        },\n        {\n          \"children\": [\n            {\n              \"name\": \"species_recode\",\n              \"bind\": {\n                \"calculate\": \"${species_type}\"\n              },\n              \"type\": \"calculate\"\n            },\n            {\n              \"name\": \"position_fecal\",\n              \"bind\": {\n                \"calculate\": \"position(..)\"\n              },\n              \"type\": \"calculate\"\n            },\n            {\n              \"control\": {\n                \"appearance\": \"w4 minimal\"\n              },\n              \"itemset\": \"microscopic_test_fecal\",\n              \"name\": \"microscopic_test_fecal\",\n              \"bind\": {\n                \"relevant\": \"selected(${microscopic},'1')\",\n                \"required\": \"Yes\"\n              },\n              \"choice_filter\": \"myfilter=${species_recode} and not(selected(${so_far_outside_fecal}, name))\",\n              \"label\": {\n                \"Bangla\": \"\\u09ae\\u09be\\u0987\\u0995\\u09cd\\u09b0\\u09cb\\u09b8\\u09cd\\u0995\\u09aa\\u09bf\\u0995 \\u09aa\\u09b0\\u09c0\\u0995\\u09cd\\u09b7\\u09be - \\u09ae\\u09b2\",\n                \"English\": \"Microscopic test for faeces\"\n              },\n              \"type\": \"select one\"\n            },\n            {\n              \"control\": {\n                \"appearance\": \"w2\"\n              },\n              \"name\": \"microscopic_test_fecal_other\",\n              \"bind\": {\n                \"relevant\": \"selected(${microscopic_test_fecal},'00')\",\n                \"required\": \"Yes\"\n              },\n              \"label\": {\n                \"Bangla\": \"Microscopic test for faeces - Other\",\n                \"English\": \"Microscopic test for faeces - Other\"\n              },\n              \"type\": \"text\"\n            },\n            {\n              \"control\": {\n                \"appearance\": \"w4 minimal\"\n              },\n              \"children\": [\n                {\n                  \"name\": \"1\",\n                  \"label\": {\n                    \"Bangla\": \"+\",\n                    \"English\": \"+\"\n                  }\n                },\n                {\n                  \"name\": \"2\",\n                  \"label\": {\n                    \"Bangla\": \"++\",\n                    \"English\": \"++\"\n                  }\n                },\n                {\n                  \"name\": \"3\",\n                  \"label\": {\n                    \"Bangla\": \"+++\",\n                    \"English\": \"+++\"\n                  }\n                }\n              ],\n              \"name\": \"microscopic_test_fecal_intensity\",\n              \"bind\": {\n                \"required\": \"Yes\"\n              },\n              \"label\": {\n                \"Bangla\": \"Intensity\",\n                \"English\": \"Intensity\"\n              },\n              \"type\": \"select one\"\n            }\n          ],\n          \"name\": \"fecal\",\n          \"bind\": {\n            \"relevant\": \"selected(${microscopic},'1')\"\n          },\n          \"label\": {\n            \"Bangla\": \"Fecal Examination\",\n            \"English\": \"Fecal Examination\"\n          },\n          \"type\": \"repeat\"\n        },\n        {\n          \"name\": \"so_far_outside_parasite\",\n          \"bind\": {\n            \"calculate\": \"join(' ', ${microscopic_test_parasite})\"\n          },\n          \"type\": \"calculate\"\n        },\n        {\n          \"children\": [\n            {\n              \"name\": \"position_parasite\",\n              \"bind\": {\n                \"calculate\": \"position(..)\"\n              },\n              \"type\": \"calculate\"\n            },\n            {\n              \"control\": {\n                \"appearance\": \"w4 minimal\"\n              },\n              \"itemset\": \"microscopic_test_parasite\",\n              \"name\": \"microscopic_test_parasite\",\n              \"bind\": {\n                \"relevant\": \"selected(${microscopic},'2')\",\n                \"required\": \"Yes\"\n              },\n              \"choice_filter\": \"not(selected(${so_far_outside_parasite}, name))\",\n              \"label\": {\n                \"Bangla\": \"\\u09ae\\u09be\\u0987\\u0995\\u09cd\\u09b0\\u09cb\\u09b8\\u09cd\\u0995\\u09aa\\u09bf\\u0995 \\u09aa\\u09b0\\u09c0\\u0995\\u09cd\\u09b7\\u09be - \\u09b0\\u0995\\u09cd\\u09a4\",\n                \"English\": \"Microscopic test for blood parasites\"\n              },\n              \"type\": \"select one\"\n            },\n            {\n              \"control\": {\n                \"appearance\": \"w2\"\n              },\n              \"name\": \"microscopic_test_parasite_other\",\n              \"bind\": {\n                \"relevant\": \"selected(${microscopic_test_parasite},'00')\",\n                \"required\": \"Yes\"\n              },\n              \"label\": {\n                \"Bangla\": \"Microscopic test for blood parasites - Other\",\n                \"English\": \"Microscopic test for blood parasites - Other\"\n              },\n              \"type\": \"text\"\n            },\n            {\n              \"control\": {\n                \"appearance\": \"w4 minimal\"\n              },\n              \"children\": [\n                {\n                  \"name\": \"1\",\n                  \"label\": {\n                    \"Bangla\": \"+\",\n                    \"English\": \"+\"\n                  }\n                },\n                {\n                  \"name\": \"2\",\n                  \"label\": {\n                    \"Bangla\": \"++\",\n                    \"English\": \"++\"\n                  }\n                },\n                {\n                  \"name\": \"3\",\n                  \"label\": {\n                    \"Bangla\": \"+++\",\n                    \"English\": \"+++\"\n                  }\n                }\n              ],\n              \"name\": \"microscopic_test_parasite_intensity\",\n              \"bind\": {\n                \"required\": \"Yes\"\n              },\n              \"label\": {\n                \"Bangla\": \"Intensity\",\n                \"English\": \"Intensity\"\n              },\n              \"type\": \"select one\"\n            }\n          ],\n          \"name\": \"parasite\",\n          \"bind\": {\n            \"relevant\": \"selected(${microscopic},'2')\"\n          },\n          \"label\": {\n            \"Bangla\": \"Blood Parasite Examination\",\n            \"English\": \"Blood Parasite Examination\"\n          },\n          \"type\": \"repeat\"\n        },\n        {\n          \"name\": \"so_far_outside_skin\",\n          \"bind\": {\n            \"calculate\": \"join(' ', ${microscopic_test_skin})\"\n          },\n          \"type\": \"calculate\"\n        },\n        {\n          \"children\": [\n            {\n              \"name\": \"position_skin\",\n              \"bind\": {\n                \"calculate\": \"position(..)\"\n              },\n              \"type\": \"calculate\"\n            },\n            {\n              \"control\": {\n                \"appearance\": \"w4 minimal\"\n              },\n              \"itemset\": \"microscopic_test_skin\",\n              \"name\": \"microscopic_test_skin\",\n              \"bind\": {\n                \"relevant\": \"selected(${microscopic},'3')\",\n                \"required\": \"Yes\"\n              },\n              \"choice_filter\": \"not(selected(${so_far_outside_skin},name))\",\n              \"label\": {\n                \"Bangla\": \"\\u09ae\\u09be\\u0987\\u0995\\u09cd\\u09b0\\u09cb\\u09b8\\u09cd\\u0995\\u09aa\\u09bf\\u0995 \\u09aa\\u09b0\\u09c0\\u0995\\u09cd\\u09b7\\u09be - \\u09b8\\u09cd\\u0995\\u09bf\\u09a8 \\u09b8\\u09cd\\u0995\\u09cd\\u09b0\\u09be\\u09ac\",\n                \"English\": \"Microscopic test for skin\"\n              },\n              \"type\": \"select one\"\n            },\n            {\n              \"control\": {\n                \"appearance\": \"w2\"\n              },\n              \"name\": \"microscopic_test_skin_other\",\n              \"bind\": {\n                \"relevant\": \"selected(${microscopic_test_skin},'00')\",\n                \"required\": \"Yes\"\n              },\n              \"label\": {\n                \"Bangla\": \"Microscopic test for skin - Other\",\n                \"English\": \"Microscopic test for skin - Other\"\n              },\n              \"type\": \"text\"\n            },\n            {\n              \"control\": {\n                \"appearance\": \"w4 minimal\"\n              },\n              \"children\": [\n                {\n                  \"name\": \"1\",\n                  \"label\": {\n                    \"Bangla\": \"Positive\",\n                    \"English\": \"Positive\"\n                  }\n                },\n                {\n                  \"name\": \"0\",\n                  \"label\": {\n                    \"Bangla\": \"Negative\",\n                    \"English\": \"Negative\"\n                  }\n                }\n              ],\n              \"name\": \"skin_positive_negative\",\n              \"bind\": {\n                \"required\": \"Yes\"\n              },\n              \"label\": {\n                \"Bangla\": \"Result\",\n                \"English\": \"Result\"\n              },\n              \"type\": \"select one\"\n            }\n          ],\n          \"name\": \"skin\",\n          \"bind\": {\n            \"relevant\": \"selected(${microscopic},'3')\"\n          },\n          \"label\": {\n            \"Bangla\": \"Skin Examination\",\n            \"English\": \"Skin Examination\"\n          },\n          \"type\": \"repeat\"\n        },\n        {\n          \"name\": \"so_far_outside_urine\",\n          \"bind\": {\n            \"calculate\": \"join(' ', ${microscopic_test_urine})\"\n          },\n          \"type\": \"calculate\"\n        },\n        {\n          \"children\": [\n            {\n              \"name\": \"position_urine\",\n              \"bind\": {\n                \"calculate\": \"position(..)\"\n              },\n              \"type\": \"calculate\"\n            },\n            {\n              \"name\": \"so_far_urine\",\n              \"bind\": {\n                \"calculate\": \"if (${position_urine} = 1, '~', substr(${so_far_outside_urine}, 0, string-length(${so_far_outside_urine}) - string-length(${microscopic_test_urine})))\"\n              },\n              \"type\": \"calculate\"\n            },\n            {\n              \"control\": {\n                \"appearance\": \"w5 minimal\"\n              },\n              \"itemset\": \"microscopic_test_urine\",\n              \"name\": \"microscopic_test_urine\",\n              \"bind\": {\n                \"relevant\": \"selected(${microscopic},'5')\"\n              },\n              \"choice_filter\": \"not(selected(${so_far_outside_urine},name))\",\n              \"label\": {\n                \"Bangla\": \"Microscopic test for urine\",\n                \"English\": \"Microscopic test for urine\"\n              },\n              \"type\": \"select one\"\n            },\n            {\n              \"control\": {\n                \"appearance\": \"w5 minimal\"\n              },\n              \"children\": [\n                {\n                  \"name\": \"1\",\n                  \"label\": {\n                    \"Bangla\": \"+\",\n                    \"English\": \"+\"\n                  }\n                },\n                {\n                  \"name\": \"2\",\n                  \"label\": {\n                    \"Bangla\": \"++\",\n                    \"English\": \"++\"\n                  }\n                },\n                {\n                  \"name\": \"3\",\n                  \"label\": {\n                    \"Bangla\": \"+++\",\n                    \"English\": \"+++\"\n                  }\n                }\n              ],\n              \"name\": \"urine_test_intensity\",\n              \"bind\": {\n                \"required\": \"Yes\"\n              },\n              \"label\": {\n                \"Bangla\": \"Intensity\",\n                \"English\": \"Intensity\"\n              },\n              \"type\": \"select one\"\n            }\n          ],\n          \"name\": \"urine\",\n          \"bind\": {\n            \"relevant\": \"selected(${microscopic},'5')\"\n          },\n          \"label\": {\n            \"Bangla\": \"Urine Examination\",\n            \"English\": \"Urine Examination\"\n          },\n          \"type\": \"repeat\"\n        },\n        {\n          \"name\": \"so_far_outside_ear\",\n          \"bind\": {\n            \"calculate\": \"join(' ', ${microscopic_test_ear})\"\n          },\n          \"type\": \"calculate\"\n        },\n        {\n          \"children\": [\n            {\n              \"name\": \"position_ear\",\n              \"bind\": {\n                \"calculate\": \"position(..)\"\n              },\n              \"type\": \"calculate\"\n            },\n            {\n              \"control\": {\n                \"appearance\": \"w4 minimal\"\n              },\n              \"itemset\": \"microscopic_test_ear\",\n              \"name\": \"microscopic_test_ear\",\n              \"bind\": {\n                \"relevant\": \"selected(${microscopic},'4')\"\n              },\n              \"choice_filter\": \"not(selected(${so_far_outside_ear},name))\",\n              \"label\": {\n                \"Bangla\": \"Microscopic test for Ear Test\",\n                \"English\": \"Microscopic test for Ear\"\n              },\n              \"type\": \"select one\"\n            },\n            {\n              \"control\": {\n                \"appearance\": \"w2 minimal\"\n              },\n              \"children\": [\n                {\n                  \"name\": \"1\",\n                  \"label\": {\n                    \"Bangla\": \"Yes\",\n                    \"English\": \"Yes\"\n                  }\n                },\n                {\n                  \"name\": \"0\",\n                  \"label\": {\n                    \"Bangla\": \"No\",\n                    \"English\": \"No\"\n                  }\n                }\n              ],\n              \"name\": \"deafness_result\",\n              \"bind\": {\n                \"relevant\": \"selected(${microscopic_test_ear},'2')\",\n                \"required\": \"yes\"\n              },\n              \"label\": {\n                \"Bangla\": \"Deafness Result\",\n                \"English\": \"Deafness Result\"\n              },\n              \"type\": \"select one\"\n            },\n            {\n              \"control\": {\n                \"appearance\": \"w4 minimal\"\n              },\n              \"children\": [\n                {\n                  \"name\": \"1\",\n                  \"label\": {\n                    \"Bangla\": \"Positive\",\n                    \"English\": \"Positive\"\n                  }\n                },\n                {\n                  \"name\": \"0\",\n                  \"label\": {\n                    \"Bangla\": \"Negative\",\n                    \"English\": \"Negative\"\n                  }\n                }\n              ],\n              \"name\": \"ear_positive_negative\",\n              \"bind\": {\n                \"relevant\": \"selected(${microscopic_test_ear},'1') or selected(${microscopic_test_ear},'3') or selected(${microscopic_test_ear},'4') or selected(${microscopic_test_ear},'5') or selected(${microscopic_test_ear},'6') or selected(${microscopic_test_ear},'7') or selected(${microscopic_test_ear},'8') or selected(${microscopic_test_ear},'00')\",\n                \"required\": \"Yes\"\n              },\n              \"label\": {\n                \"Bangla\": \"Result\",\n                \"English\": \"Result\"\n              },\n              \"type\": \"select one\"\n            }\n          ],\n          \"name\": \"ear\",\n          \"bind\": {\n            \"relevant\": \"selected(${microscopic},'4')\"\n          },\n          \"label\": {\n            \"Bangla\": \"Ear Examination\",\n            \"English\": \"Ear Examination\"\n          },\n          \"type\": \"repeat\"\n        },\n        {\n          \"name\": \"so_far_outside_urine_strip\",\n          \"bind\": {\n            \"calculate\": \"join(' ', ${microscopic_test_urine_strip})\"\n          },\n          \"type\": \"calculate\"\n        },\n        {\n          \"children\": [\n            {\n              \"name\": \"position_urine_strip\",\n              \"bind\": {\n                \"calculate\": \"position(..)\"\n              },\n              \"type\": \"calculate\"\n            },\n            {\n              \"control\": {\n                \"appearance\": \"w4 minimal\"\n              },\n              \"itemset\": \"microscopic_test_urine_strip\",\n              \"name\": \"microscopic_test_urine_strip\",\n              \"bind\": {\n                \"relevant\": \"selected(${microscopic},'6')\"\n              },\n              \"choice_filter\": \"not(selected(${so_far_outside_urine_strip},name))\",\n              \"label\": {\n                \"Bangla\": \"Urine Strip tests\",\n                \"English\": \"Urine Strip tests\"\n              },\n              \"type\": \"select one\"\n            },\n            {\n              \"control\": {\n                \"appearance\": \"w4 minimal\"\n              },\n              \"children\": [\n                {\n                  \"name\": \"1\",\n                  \"label\": {\n                    \"Bangla\": \"Positive\",\n                    \"English\": \"Positive\"\n                  }\n                },\n                {\n                  \"name\": \"0\",\n                  \"label\": {\n                    \"Bangla\": \"Negative\",\n                    \"English\": \"Negative\"\n                  }\n                }\n              ],\n              \"name\": \"urine_strip_test_positive_negative\",\n              \"bind\": {\n                \"required\": \"Yes\"\n              },\n              \"label\": {\n                \"Bangla\": \"Result\",\n                \"English\": \"Result\"\n              },\n              \"type\": \"select one\"\n            },\n            {\n              \"control\": {\n                \"appearance\": \"w1 minimal\"\n              },\n              \"children\": [\n                {\n                  \"name\": \"1\",\n                  \"label\": {\n                    \"Bangla\": \"+\",\n                    \"English\": \"+\"\n                  }\n                },\n                {\n                  \"name\": \"2\",\n                  \"label\": {\n                    \"Bangla\": \"++\",\n                    \"English\": \"++\"\n                  }\n                },\n                {\n                  \"name\": \"3\",\n                  \"label\": {\n                    \"Bangla\": \"+++\",\n                    \"English\": \"+++\"\n                  }\n                }\n              ],\n              \"name\": \"urine_strip_test_intensity\",\n              \"bind\": {\n                \"relevant\": \"${urine_strip_test_positive_negative}=1\",\n                \"required\": \"Yes\"\n              },\n              \"label\": {\n                \"Bangla\": \"Intensity\",\n                \"English\": \"Intensity\"\n              },\n              \"type\": \"select one\"\n            }\n          ],\n          \"name\": \"urine_strip\",\n          \"bind\": {\n            \"relevant\": \"selected(${microscopic},'6')\"\n          },\n          \"label\": {\n            \"Bangla\": \"Urine Strip Test\",\n            \"English\": \"Urine Strip Test\"\n          },\n          \"type\": \"repeat\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6 minimal\"\n          },\n          \"children\": [\n            {\n              \"name\": \"1\",\n              \"label\": {\n                \"Bangla\": \"Circulatory system\",\n                \"English\": \"Circulatory system\"\n              }\n            },\n            {\n              \"name\": \"2\",\n              \"label\": {\n                \"Bangla\": \"Digestive system\",\n                \"English\": \"Digestive system\"\n              }\n            },\n            {\n              \"name\": \"3\",\n              \"label\": {\n                \"Bangla\": \"Immune system\",\n                \"English\": \"Immune system\"\n              }\n            },\n            {\n              \"name\": \"4\",\n              \"label\": {\n                \"Bangla\": \"Integumetary system\",\n                \"English\": \"Integumetary system\"\n              }\n            },\n            {\n              \"name\": \"5\",\n              \"label\": {\n                \"Bangla\": \"Musculoskeletal system\",\n                \"English\": \"Musculoskeletal system\"\n              }\n            },\n            {\n              \"name\": \"6\",\n              \"label\": {\n                \"Bangla\": \"Nervous systems & important sensory organs\",\n                \"English\": \"Nervous systems & important sensory organs\"\n              }\n            },\n            {\n              \"name\": \"7\",\n              \"label\": {\n                \"Bangla\": \"Renal system\",\n                \"English\": \"Renal system\"\n              }\n            },\n            {\n              \"name\": \"8\",\n              \"label\": {\n                \"Bangla\": \"Reproductive system\",\n                \"English\": \"Reproductive system\"\n              }\n            },\n            {\n              \"name\": \"9\",\n              \"label\": {\n                \"Bangla\": \"Resporitory system\",\n                \"English\": \"Resporitory system\"\n              }\n            }\n          ],\n          \"name\": \"postmortem\",\n          \"bind\": {\n            \"relevant\": \"selected(${test_tool},'3') and ${species_type}=2\",\n            \"required\": \"yes\"\n          },\n          \"label\": {\n            \"Bangla\": \"Postmortem\",\n            \"English\": \"\\u09aa\\u09cb\\u09b8\\u09cd\\u099f \\u09ae\\u09b0\\u09cd\\u099f\\u09c7\\u09ae \\u09a8\\u09ae\\u09c2\\u09a8\\u09be\\u09b0 \\u09a7\\u09b0\\u09a8\"\n          },\n          \"type\": \"select all that apply\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6 minimal\"\n          },\n          \"children\": [\n            {\n              \"name\": \"1\",\n              \"label\": {\n                \"Bangla\": \"ENT\",\n                \"English\": \"ENT\"\n              }\n            },\n            {\n              \"name\": \"2\",\n              \"label\": {\n                \"Bangla\": \"CU system\",\n                \"English\": \"Respiratory system\"\n              }\n            },\n            {\n              \"name\": \"3\",\n              \"label\": {\n                \"Bangla\": \"GI tract\",\n                \"English\": \"CU system\"\n              }\n            },\n            {\n              \"name\": \"4\",\n              \"label\": {\n                \"Bangla\": \"H ... System\",\n                \"English\": \"GI tract\"\n              }\n            },\n            {\n              \"name\": \"5\",\n              \"label\": {\n                \"Bangla\": \"Integumetary skin and hair\",\n                \"English\": \"Integumetary skin and hair\"\n              }\n            },\n            {\n              \"name\": \"6\",\n              \"label\": {\n                \"Bangla\": \"MS system\",\n                \"English\": \"MS system\"\n              }\n            },\n            {\n              \"name\": \"7\",\n              \"label\": {\n                \"Bangla\": \"Neurologic system\",\n                \"English\": \"Neurologic system\"\n              }\n            },\n            {\n              \"name\": \"8\",\n              \"label\": {\n                \"Bangla\": \"Renal system\",\n                \"English\": \"Renal system\"\n              }\n            },\n            {\n              \"name\": \"9\",\n              \"label\": {\n                \"Bangla\": \"Reproductive Syste\",\n                \"English\": \"H ... System\"\n              }\n            },\n            {\n              \"name\": \"10\",\n              \"label\": {\n                \"Bangla\": \"Respiratory system\",\n                \"English\": \"Reproductive Syste\"\n              }\n            },\n            {\n              \"name\": \"00\",\n              \"label\": {\n                \"Bangla\": \"Other\",\n                \"English\": \"Other\"\n              }\n            },\n            {\n              \"name\": \"1\",\n              \"label\": {\n                \"Bangla\": \"Organ-1\",\n                \"English\": \"Organ-1\"\n              }\n            },\n            {\n              \"name\": \"2\",\n              \"label\": {\n                \"Bangla\": \"Organ-2\",\n                \"English\": \"Organ-2\"\n              }\n            },\n            {\n              \"name\": \"3\",\n              \"label\": {\n                \"Bangla\": \"Organ-3\",\n                \"English\": \"Organ-3\"\n              }\n            }\n          ],\n          \"name\": \"postmortem_organ\",\n          \"bind\": {\n            \"relevant\": \"selected(${test_tool},'3') and ${species_type}=2\",\n            \"required\": \"yes\"\n          },\n          \"label\": {\n            \"Bangla\": \"Organ\",\n            \"English\": \"Organ\"\n          },\n          \"type\": \"select all that apply\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6\"\n          },\n          \"name\": \"postmortem_mammal\",\n          \"bind\": {\n            \"relevant\": \"selected(${test_tool},'3') and ${species_type}=1\"\n          },\n          \"label\": {\n            \"Bangla\": \"Postmortem - Mammal\",\n            \"English\": \"Postmortem - Mammal\"\n          },\n          \"type\": \"text\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6 minimal\"\n          },\n          \"itemset\": \"postmortem_findings_bird\",\n          \"name\": \"postmortem_findings_bird\",\n          \"bind\": {\n            \"relevant\": \"selected(${test_tool},'3') and ${species_type}=2\"\n          },\n          \"choice_filter\": \"selected(${postmortem},myfilter)\",\n          \"label\": {\n            \"Bangla\": \"Postmortem Findings - Bird\",\n            \"English\": \"Postmortem Findings - Bird\"\n          },\n          \"type\": \"select all that apply\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6 minimal\"\n          },\n          \"children\": [\n            {\n              \"name\": \"1\",\n              \"label\": {\n                \"Bangla\": \"1\",\n                \"English\": \"1\"\n              }\n            },\n            {\n              \"name\": \"2\",\n              \"label\": {\n                \"Bangla\": \"2\",\n                \"English\": \"2\"\n              }\n            }\n          ],\n          \"name\": \"postmortem_findings_mammal\",\n          \"bind\": {\n            \"relevant\": \"selected(${test_tool},'3') and ${species_type}=1\"\n          },\n          \"label\": {\n            \"Bangla\": \"Postmortem Findings - Mammal\",\n            \"English\": \"Postmortem Findings - Mammal\"\n          },\n          \"type\": \"select all that apply\"\n        },\n        {\n          \"name\": \"so_far_outside_rapid_test\",\n          \"bind\": {\n            \"calculate\": \"join(' ', ${rapid_test})\"\n          },\n          \"type\": \"calculate\"\n        },\n        {\n          \"children\": [\n            {\n              \"name\": \"species_recode_2\",\n              \"bind\": {\n                \"calculate\": \"${species_type}\"\n              },\n              \"type\": \"calculate\"\n            },\n            {\n              \"name\": \"position_rapid_test\",\n              \"bind\": {\n                \"calculate\": \"position(..)\"\n              },\n              \"type\": \"calculate\"\n            },\n            {\n              \"control\": {\n                \"appearance\": \"w4 minimal\"\n              },\n              \"itemset\": \"rapid_test_bird\",\n              \"name\": \"rapid_test\",\n              \"bind\": {\n                \"relevant\": \"selected(${test_tool},'2')\",\n                \"required\": \"Yes\"\n              },\n              \"choice_filter\": \"myfilter=${species_recode_2} and not(selected(${so_far_outside_rapid_test},name))\",\n              \"label\": {\n                \"Bangla\": \"Rapid test\",\n                \"English\": \"Rapid test\"\n              },\n              \"type\": \"select one\"\n            },\n            {\n              \"control\": {\n                \"appearance\": \"w2\"\n              },\n              \"name\": \"rapid_test_other\",\n              \"bind\": {\n                \"relevant\": \"selected(${rapid_test},'00')\",\n                \"required\": \"Yes\"\n              },\n              \"label\": {\n                \"Bangla\": \"Rapid test - Other\",\n                \"English\": \"Rapid test - Animal - Other\"\n              },\n              \"type\": \"text\"\n            },\n            {\n              \"control\": {\n                \"appearance\": \"w4 minimal\"\n              },\n              \"children\": [\n                {\n                  \"name\": \"1\",\n                  \"label\": {\n                    \"Bangla\": \"Positive\",\n                    \"English\": \"Positive\"\n                  }\n                },\n                {\n                  \"name\": \"0\",\n                  \"label\": {\n                    \"Bangla\": \"Negative\",\n                    \"English\": \"Negative\"\n                  }\n                }\n              ],\n              \"name\": \"rapid_test_result\",\n              \"bind\": {\n                \"relevant\": \"selected(${test_tool},'2')\",\n                \"required\": \"Yes\"\n              },\n              \"label\": {\n                \"Bangla\": \"\\u09b0\\u200d\\u09cd\\u09af\\u09be\\u09aa\\u09bf\\u09a1 \\u099f\\u09c7\\u09b8\\u09cd\\u099f\\u09c7\\u09b0 \\u09ab\\u09b2\\u09be\\u09ab\\u09b2\",\n                \"English\": \"Rapid test result\"\n              },\n              \"type\": \"select one\"\n            }\n          ],\n          \"name\": \"rapid\",\n          \"bind\": {\n            \"relevant\": \"selected(${test_tool},'2')\"\n          },\n          \"label\": {\n            \"Bangla\": \"Rapid Test\",\n            \"English\": \"Rapid Test\"\n          },\n          \"type\": \"repeat\"\n        }\n      ],\n      \"name\": \"diagnostic\",\n      \"label\": {\n        \"Bangla\": \"Diagnostics\",\n        \"English\": \"Diagnostics\"\n      },\n      \"type\": \"group\"\n    },\n    {\n      \"name\": \"note_diagnosis_treatment\",\n      \"label\": {\n        \"Bangla\": \"Diagnosis and Treatment\",\n        \"English\": \"Diagnosis and Treatment\"\n      },\n      \"type\": \"note\"\n    },\n    {\n      \"control\": {\n        \"appearance\": \"w12\"\n      },\n      \"children\": [\n        {\n          \"control\": {\n            \"appearance\": \"w6 minimal\"\n          },\n          \"itemset\": \"tentative_diagnosis\",\n          \"name\": \"tentative_diagnosis\",\n          \"choice_filter\": \"myfilter=${species_value}\",\n          \"label\": {\n            \"Bangla\": \"\\u09b8\\u09ae\\u09cd\\u09ad\\u09be\\u09ac\\u09cd\\u09af \\u09b0\\u09cb\\u0997\",\n            \"English\": \"Tentative diagnosis\"\n          },\n          \"type\": \"select all that apply\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6\"\n          },\n          \"name\": \"tentative_diagnosis_other\",\n          \"bind\": {\n            \"relevant\": \"selected(${tentative_diagnosis},'00')\"\n          },\n          \"label\": {\n            \"Bangla\": \"\\u09b8\\u09ae\\u09cd\\u09ad\\u09be\\u09ac\\u09cd\\u09af \\u09b0\\u09cb\\u0997 - \\u0985\\u09a8\\u09cd\\u09af\\u09be\\u09a8\\u09cd\\u09af\",\n            \"English\": \"Tentative diagnosis - other\"\n          },\n          \"type\": \"text\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6 minimal\"\n          },\n          \"children\": [\n            {\n              \"name\": \"1\",\n              \"label\": {\n                \"Bangla\": \"a\",\n                \"English\": \"a\"\n              }\n            },\n            {\n              \"name\": \"2\",\n              \"label\": {\n                \"Bangla\": \"b\",\n                \"English\": \"b\"\n              }\n            },\n            {\n              \"name\": \"3\",\n              \"label\": {\n                \"Bangla\": \"c\",\n                \"English\": \"c\"\n              }\n            },\n            {\n              \"name\": \"00\",\n              \"label\": {\n                \"Bangla\": \"Other\",\n                \"English\": \"Other\"\n              }\n            }\n          ],\n          \"name\": \"treatment\",\n          \"label\": {\n            \"Bangla\": \"\\u099a\\u09bf\\u0995\\u09bf\\u09ce\\u09b8\\u09be\",\n            \"English\": \"Treatment\"\n          },\n          \"type\": \"select all that apply\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6\"\n          },\n          \"name\": \"treatment_other\",\n          \"bind\": {\n            \"relevant\": \"selected(${treatment},'00')\"\n          },\n          \"label\": {\n            \"Bangla\": \"\\u099a\\u09bf\\u0995\\u09bf\\u09ce\\u09b8\\u09be - \\u0985\\u09a8\\u09cd\\u09af\\u09be\\u09a8\\u09cd\\u09af\",\n            \"English\": \"Treatment - other\"\n          },\n          \"type\": \"text\"\n        },\n        {\n          \"control\": {\n            \"appearance\": \"w6 minimal\"\n          },\n          \"children\": [\n            {\n              \"name\": \"1\",\n              \"label\": {\n                \"Bangla\": \"Yes\",\n                \"English\": \"Yes\"\n              }\n            },\n            {\n              \"name\": \"0\",\n              \"label\": {\n                \"Bangla\": \"No\",\n                \"English\": \"No\"\n              }\n            }\n          ],\n          \"name\": \"sample_sent_lab\",\n          \"label\": {\n            \"Bangla\": \"\\u09aa\\u09b0\\u09c0\\u0995\\u09cd\\u09b7\\u09be\\u0997\\u09be\\u09b0\\u09c7 \\u09a8\\u09ae\\u09c1\\u09a8\\u09be \\u09aa\\u09cd\\u09b0\\u09c7\\u09b0\\u09a3\",\n            \"English\": \"Sample send to laboratory\"\n          },\n          \"type\": \"select one\"\n        }\n      ],\n      \"name\": \"diagnosis_treatment\",\n      \"label\": {\n        \"Bangla\": \"Diagnosis and Treatment\",\n        \"English\": \"Diagnosis and Treatment\"\n      },\n      \"type\": \"group\"\n    },\n    {\n      \"control\": {\n        \"bodyless\": true\n      },\n      \"children\": [\n        {\n          \"name\": \"instanceID\",\n          \"bind\": {\n            \"readonly\": \"true()\",\n            \"calculate\": \"concat('uuid:', uuid())\"\n          },\n          \"type\": \"calculate\"\n        }\n      ],\n      \"name\": \"meta\",\n      \"type\": \"group\"\n    }\n  ],\n  \"style\": \"theme-grid\",\n  \"version\": \"1.0.1\",\n  \"type\": \"survey\",\n  \"name\": \"patient_registry\",\n  \"sms_keyword\": \"patient_registry\",\n  \"title\": \"Patient Registry\",\n  \"choices\": {\n    \"sex\": [\n      {\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"\\u09aa\\u09c1\\u09b0\\u09c1\\u09b7\",\n          \"English\": \"Male\"\n        }\n      },\n      {\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"\\u09ae\\u09b9\\u09bf\\u09b2\\u09be\",\n          \"English\": \"Female\"\n        }\n      }\n    ],\n    \"species_type_other\": [\n      {\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Mammal\",\n          \"English\": \"Mammal\"\n        }\n      },\n      {\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Bird\",\n          \"English\": \"Bird\"\n        }\n      }\n    ],\n    \"intensity\": [\n      {\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"+\",\n          \"English\": \"+\"\n        }\n      },\n      {\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"++\",\n          \"English\": \"++\"\n        }\n      },\n      {\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"+++\",\n          \"English\": \"+++\"\n        }\n      }\n    ],\n    \"microscopic_test_skin\": [\n      {\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Mites\",\n          \"English\": \"Mites\"\n        }\n      },\n      {\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Lice\",\n          \"English\": \"Lice\"\n        }\n      },\n      {\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Other\",\n          \"English\": \"Other\"\n        }\n      }\n    ],\n    \"microscopic_test_urine_strip\": [\n      {\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Biliruubin\",\n          \"English\": \"Biliruubin\"\n        }\n      },\n      {\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Blood\",\n          \"English\": \"Blood\"\n        }\n      },\n      {\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Glucose\",\n          \"English\": \"Glucose\"\n        }\n      },\n      {\n        \"name\": \"4\",\n        \"label\": {\n          \"Bangla\": \"Keteone\",\n          \"English\": \"Keteone\"\n        }\n      },\n      {\n        \"name\": \"5\",\n        \"label\": {\n          \"Bangla\": \"Leukocytes\",\n          \"English\": \"Leukocytes\"\n        }\n      },\n      {\n        \"name\": \"6\",\n        \"label\": {\n          \"Bangla\": \"Nitrite\",\n          \"English\": \"Nitrite\"\n        }\n      },\n      {\n        \"name\": \"7\",\n        \"label\": {\n          \"Bangla\": \"Protein\",\n          \"English\": \"Protein\"\n        }\n      },\n      {\n        \"name\": \"8\",\n        \"label\": {\n          \"Bangla\": \"Urobilinogen\",\n          \"English\": \"Urobilinogen\"\n        }\n      },\n      {\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Others\",\n          \"English\": \"Others\"\n        }\n      }\n    ],\n    \"test_tool\": [\n      {\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Microscopic\",\n          \"English\": \"Microscopic\"\n        }\n      },\n      {\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Rapid Test\",\n          \"English\": \"Rapid Test\"\n        }\n      },\n      {\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Postmortem examination\",\n          \"English\": \"Postmortem examination\"\n        }\n      }\n    ],\n    \"species\": [\n      {\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Buffalo\",\n          \"English\": \"Buffalo\"\n        }\n      },\n      {\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Cat\",\n          \"English\": \"Cat\"\n        }\n      },\n      {\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Cattle\",\n          \"English\": \"Cattle\"\n        }\n      },\n      {\n        \"name\": \"4\",\n        \"label\": {\n          \"Bangla\": \"Dog\",\n          \"English\": \"Dog\"\n        }\n      },\n      {\n        \"name\": \"5\",\n        \"label\": {\n          \"Bangla\": \"Goat\",\n          \"English\": \"Goat\"\n        }\n      },\n      {\n        \"name\": \"6\",\n        \"label\": {\n          \"Bangla\": \"Horse\",\n          \"English\": \"Horse\"\n        }\n      },\n      {\n        \"name\": \"7\",\n        \"label\": {\n          \"Bangla\": \"Pig\",\n          \"English\": \"Pig\"\n        }\n      },\n      {\n        \"name\": \"8\",\n        \"label\": {\n          \"Bangla\": \"Sheep\",\n          \"English\": \"Sheep\"\n        }\n      },\n      {\n        \"name\": \"21\",\n        \"label\": {\n          \"Bangla\": \"Chicken\",\n          \"English\": \"Chicken\"\n        }\n      },\n      {\n        \"name\": \"22\",\n        \"label\": {\n          \"Bangla\": \"Duck\",\n          \"English\": \"Duck\"\n        }\n      },\n      {\n        \"name\": \"23\",\n        \"label\": {\n          \"Bangla\": \"Goose\",\n          \"English\": \"Goose\"\n        }\n      },\n      {\n        \"name\": \"24\",\n        \"label\": {\n          \"Bangla\": \"Moyana\",\n          \"English\": \"Moyana\"\n        }\n      },\n      {\n        \"name\": \"25\",\n        \"label\": {\n          \"Bangla\": \"Pegion\",\n          \"English\": \"Pegion\"\n        }\n      },\n      {\n        \"name\": \"26\",\n        \"label\": {\n          \"Bangla\": \"Quail\",\n          \"English\": \"Quail\"\n        }\n      },\n      {\n        \"name\": \"27\",\n        \"label\": {\n          \"Bangla\": \"Turkey\",\n          \"English\": \"Turkey\"\n        }\n      },\n      {\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Other\",\n          \"English\": \"Other\"\n        }\n      }\n    ],\n    \"microscopic\": [\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Fecal examination\",\n          \"English\": \"Fecal examination\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Blood Parasites examination\",\n          \"English\": \"Blood Parasites examination\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Skin examination\",\n          \"English\": \"Skin examination\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Fecal examination\",\n          \"English\": \"Fecal examination\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Blood Parasites examination\",\n          \"English\": \"Blood Parasites examination\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Skin examination\",\n          \"English\": \"Skin examination\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"4\",\n        \"label\": {\n          \"Bangla\": \"Ear examination\",\n          \"English\": \"Ear examination\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"5\",\n        \"label\": {\n          \"Bangla\": \"Urine examination\",\n          \"English\": \"Urine examination\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"6\",\n        \"label\": {\n          \"Bangla\": \"Urine strip test\",\n          \"English\": \"Urine strip test\"\n        }\n      }\n    ],\n    \"treatment\": [\n      {\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"a\",\n          \"English\": \"a\"\n        }\n      },\n      {\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"b\",\n          \"English\": \"b\"\n        }\n      },\n      {\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"c\",\n          \"English\": \"c\"\n        }\n      },\n      {\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Other\",\n          \"English\": \"Other\"\n        }\n      }\n    ],\n    \"postmortem\": [\n      {\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Circulatory system\",\n          \"English\": \"Circulatory system\"\n        }\n      },\n      {\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Digestive system\",\n          \"English\": \"Digestive system\"\n        }\n      },\n      {\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Immune system\",\n          \"English\": \"Immune system\"\n        }\n      },\n      {\n        \"name\": \"4\",\n        \"label\": {\n          \"Bangla\": \"Integumetary system\",\n          \"English\": \"Integumetary system\"\n        }\n      },\n      {\n        \"name\": \"5\",\n        \"label\": {\n          \"Bangla\": \"Musculoskeletal system\",\n          \"English\": \"Musculoskeletal system\"\n        }\n      },\n      {\n        \"name\": \"6\",\n        \"label\": {\n          \"Bangla\": \"Nervous systems & important sensory organs\",\n          \"English\": \"Nervous systems & important sensory organs\"\n        }\n      },\n      {\n        \"name\": \"7\",\n        \"label\": {\n          \"Bangla\": \"Renal system\",\n          \"English\": \"Renal system\"\n        }\n      },\n      {\n        \"name\": \"8\",\n        \"label\": {\n          \"Bangla\": \"Reproductive system\",\n          \"English\": \"Reproductive system\"\n        }\n      },\n      {\n        \"name\": \"9\",\n        \"label\": {\n          \"Bangla\": \"Resporitory system\",\n          \"English\": \"Resporitory system\"\n        }\n      }\n    ],\n    \"microscopic_test_parasite\": [\n      {\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Anaplasma\",\n          \"English\": \"Anaplasma\"\n        }\n      },\n      {\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Babesia\",\n          \"English\": \"Babesia\"\n        }\n      },\n      {\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Haemoproteus\",\n          \"English\": \"Haemoproteus\"\n        }\n      },\n      {\n        \"name\": \"4\",\n        \"label\": {\n          \"Bangla\": \"Leucocytozoon\",\n          \"English\": \"Leucocytozoon\"\n        }\n      },\n      {\n        \"name\": \"5\",\n        \"label\": {\n          \"Bangla\": \"Plasmodium\",\n          \"English\": \"Plasmodium\"\n        }\n      },\n      {\n        \"name\": \"6\",\n        \"label\": {\n          \"Bangla\": \"Rickettsiae\",\n          \"English\": \"Rickettsiae\"\n        }\n      },\n      {\n        \"name\": \"7\",\n        \"label\": {\n          \"Bangla\": \"Schistosoma\",\n          \"English\": \"Schistosoma\"\n        }\n      },\n      {\n        \"name\": \"8\",\n        \"label\": {\n          \"Bangla\": \"Theileria\",\n          \"English\": \"Theileria\"\n        }\n      },\n      {\n        \"name\": \"9\",\n        \"label\": {\n          \"Bangla\": \"Trypansoma\",\n          \"English\": \"Trypansoma\"\n        }\n      },\n      {\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Other\",\n          \"English\": \"Other\"\n        }\n      }\n    ],\n    \"microscopic_test_urine\": [\n      {\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Bacteria\",\n          \"English\": \"Bacteria\"\n        }\n      },\n      {\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Crystals\",\n          \"English\": \"Crystals\"\n        }\n      },\n      {\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Cylindruria (Casts)\",\n          \"English\": \"Cylindruria (Casts)\"\n        }\n      },\n      {\n        \"name\": \"4\",\n        \"label\": {\n          \"Bangla\": \"Lipids\",\n          \"English\": \"Lipids\"\n        }\n      },\n      {\n        \"name\": \"5\",\n        \"label\": {\n          \"Bangla\": \"RBCs\",\n          \"English\": \"RBCs\"\n        }\n      },\n      {\n        \"name\": \"6\",\n        \"label\": {\n          \"Bangla\": \"Spermatozoa\",\n          \"English\": \"Spermatozoa\"\n        }\n      },\n      {\n        \"name\": \"7\",\n        \"label\": {\n          \"Bangla\": \"Squamous cells\",\n          \"English\": \"Squamous cells\"\n        }\n      },\n      {\n        \"name\": \"8\",\n        \"label\": {\n          \"Bangla\": \"Yeast\",\n          \"English\": \"Yeast\"\n        }\n      },\n      {\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Others\",\n          \"English\": \"Others\"\n        }\n      }\n    ],\n    \"rapid_test_result\": [\n      {\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Positive\",\n          \"English\": \"Positive\"\n        }\n      },\n      {\n        \"name\": \"0\",\n        \"label\": {\n          \"Bangla\": \"Negative\",\n          \"English\": \"Negative\"\n        }\n      }\n    ],\n    \"microscopic_test_ear\": [\n      {\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Auricular chondritis\",\n          \"English\": \"Auricular chondritis\"\n        }\n      },\n      {\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Deafness\",\n          \"English\": \"Deafness\"\n        }\n      },\n      {\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Hair loss on the outer ear\",\n          \"English\": \"Hair loss on the outer ear\"\n        }\n      },\n      {\n        \"name\": \"4\",\n        \"label\": {\n          \"Bangla\": \"Lice\",\n          \"English\": \"Lice\"\n        }\n      },\n      {\n        \"name\": \"5\",\n        \"label\": {\n          \"Bangla\": \"Mite\",\n          \"English\": \"Mite\"\n        }\n      },\n      {\n        \"name\": \"6\",\n        \"label\": {\n          \"Bangla\": \"Nodular granulomatous dermatitis\",\n          \"English\": \"Nodular granulomatous dermatitis\"\n        }\n      },\n      {\n        \"name\": \"7\",\n        \"label\": {\n          \"Bangla\": \"Tick\",\n          \"English\": \"Tick\"\n        }\n      },\n      {\n        \"name\": \"8\",\n        \"label\": {\n          \"Bangla\": \"Tissue death of the pinna\",\n          \"English\": \"Tissue death of the pinna\"\n        }\n      },\n      {\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Others\",\n          \"English\": \"Others\"\n        }\n      }\n    ],\n    \"clinical_sign\": [\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Abdominal pain\",\n          \"English\": \"Abdominal pain\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Abortion in first trimester\",\n          \"English\": \"Abortion in first trimester\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Abortion in second trimester\",\n          \"English\": \"Abortion in second trimester\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"4\",\n        \"label\": {\n          \"Bangla\": \"Abortion in third trimester\",\n          \"English\": \"Abortion in third trimester\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"5\",\n        \"label\": {\n          \"Bangla\": \"Abscess\",\n          \"English\": \"Abscess\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"6\",\n        \"label\": {\n          \"Bangla\": \"Aggressiveness\",\n          \"English\": \"Aggressiveness\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"7\",\n        \"label\": {\n          \"Bangla\": \"Anaemia\",\n          \"English\": \"Anaemia\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"8\",\n        \"label\": {\n          \"Bangla\": \"Blackish skin\",\n          \"English\": \"Blackish skin\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"9\",\n        \"label\": {\n          \"Bangla\": \"Bloody milk\",\n          \"English\": \"Bloody milk\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"10\",\n        \"label\": {\n          \"Bangla\": \"Bottle jaw\",\n          \"English\": \"Bottle jaw\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"11\",\n        \"label\": {\n          \"Bangla\": \"Breathing difficulty (Dyspnea)\",\n          \"English\": \"Breathing difficulty (Dyspnea)\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"12\",\n        \"label\": {\n          \"Bangla\": \"Coffee colour urine\",\n          \"English\": \"Coffee colour urine\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"13\",\n        \"label\": {\n          \"Bangla\": \"Cough\",\n          \"English\": \"Cough\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"14\",\n        \"label\": {\n          \"Bangla\": \"Crack in Teat\",\n          \"English\": \"Crack in Teat\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"15\",\n        \"label\": {\n          \"Bangla\": \"Cracking sound in muscle\",\n          \"English\": \"Cracking sound in muscle\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"16\",\n        \"label\": {\n          \"Bangla\": \"Dehydration\",\n          \"English\": \"Dehydration\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"17\",\n        \"label\": {\n          \"Bangla\": \"Depression\",\n          \"English\": \"Depression\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"18\",\n        \"label\": {\n          \"Bangla\": \"Dermatitis\",\n          \"English\": \"Dermatitis\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"19\",\n        \"label\": {\n          \"Bangla\": \"Diarrhoea (bloody)\",\n          \"English\": \"Diarrhea (bloody)\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"20\",\n        \"label\": {\n          \"Bangla\": \"Diarrhoea (watery)\",\n          \"English\": \"Diarrhea (watery)\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"21\",\n        \"label\": {\n          \"Bangla\": \"Diarrhoea (greenish)\",\n          \"English\": \"Diarrhoea (greenish)\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"22\",\n        \"label\": {\n          \"Bangla\": \"Diarrhoea (whitish)\",\n          \"English\": \"Diarrhoea (whitish)\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"23\",\n        \"label\": {\n          \"Bangla\": \"Diarrhoea (yellowish)\",\n          \"English\": \"Diarrhoea (yellowish)\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"24\",\n        \"label\": {\n          \"Bangla\": \"Difficulty in movement\",\n          \"English\": \"Difficulty in movement\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"25\",\n        \"label\": {\n          \"Bangla\": \"Exudate on the skin\",\n          \"English\": \"Exudate on the skin\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"26\",\n        \"label\": {\n          \"Bangla\": \"Fever\",\n          \"English\": \"Fever\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"27\",\n        \"label\": {\n          \"Bangla\": \"Fever (Fluctuating)\",\n          \"English\": \"Fever (Fluctuating)\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"28\",\n        \"label\": {\n          \"Bangla\": \"Fever (high)\",\n          \"English\": \"Fever (high)\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"29\",\n        \"label\": {\n          \"Bangla\": \"Foul smell from the wound\",\n          \"English\": \"Foul smell from the wound\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"30\",\n        \"label\": {\n          \"Bangla\": \"Gangrene\",\n          \"English\": \"Gangrene\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"31\",\n        \"label\": {\n          \"Bangla\": \"Grunting sound from affected area\",\n          \"English\": \"Grunting sound from affected area\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"32\",\n        \"label\": {\n          \"Bangla\": \"Haemorrhage on conjunctiva\",\n          \"English\": \"Haemorrhage on conjunctiva\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"33\",\n        \"label\": {\n          \"Bangla\": \"Hair loss\",\n          \"English\": \"Hair loss\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"34\",\n        \"label\": {\n          \"Bangla\": \"Incoordination in movement\",\n          \"English\": \"Incoordination in movement\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"35\",\n        \"label\": {\n          \"Bangla\": \"Itichy skin (pruritus)\",\n          \"English\": \"Itichy skin (pruritus)\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"36\",\n        \"label\": {\n          \"Bangla\": \"Jaundice\",\n          \"English\": \"Jaundice\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"37\",\n        \"label\": {\n          \"Bangla\": \"Lameness\",\n          \"English\": \"Lameness\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"38\",\n        \"label\": {\n          \"Bangla\": \"Lateral recumbency\",\n          \"English\": \"Lateral recumbency\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"39\",\n        \"label\": {\n          \"Bangla\": \"Leg stiffness\",\n          \"English\": \"Leg stiffness\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"40\",\n        \"label\": {\n          \"Bangla\": \"Loss of appetite\",\n          \"English\": \"Loss of appetite\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"41\",\n        \"label\": {\n          \"Bangla\": \"Lymph nodes enlargement\",\n          \"English\": \"Lymph nodes enlargement\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"42\",\n        \"label\": {\n          \"Bangla\": \"Mucus in feces\",\n          \"English\": \"Mucus in feces\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"43\",\n        \"label\": {\n          \"Bangla\": \"Nasal discharge\",\n          \"English\": \"Nasal discharge\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"44\",\n        \"label\": {\n          \"Bangla\": \"Neck stiffness\",\n          \"English\": \"Neck stiffness\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"45\",\n        \"label\": {\n          \"Bangla\": \"Necrotic tissue in interdigital space\",\n          \"English\": \"Necrotic tissue in interdigital space\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"46\",\n        \"label\": {\n          \"Bangla\": \"Pain in teat\",\n          \"English\": \"Pain in teat\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"47\",\n        \"label\": {\n          \"Bangla\": \"Papules on the mucous membranes of the eyes\",\n          \"English\": \"Papules on the mucous membranes of the eyes\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"48\",\n        \"label\": {\n          \"Bangla\": \"Paralysis\",\n          \"English\": \"Paralysis\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"49\",\n        \"label\": {\n          \"Bangla\": \"Pendulous abdomen\",\n          \"English\": \"Pendulous abdomen\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"50\",\n        \"label\": {\n          \"Bangla\": \"Poor growth\",\n          \"English\": \"Poor growth\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"51\",\n        \"label\": {\n          \"Bangla\": \"Presence of lice\",\n          \"English\": \"Presence of lice\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"52\",\n        \"label\": {\n          \"Bangla\": \"Presence of the tick\",\n          \"English\": \"Presence of the tick\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"53\",\n        \"label\": {\n          \"Bangla\": \"Raised and matted tufts of hair\",\n          \"English\": \"Raised and matted tufts of hair\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"54\",\n        \"label\": {\n          \"Bangla\": \"Retained placentas\",\n          \"English\": \"Retained placentas\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"55\",\n        \"label\": {\n          \"Bangla\": \"Rolling of eye balls\",\n          \"English\": \"Rolling of eye balls\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"56\",\n        \"label\": {\n          \"Bangla\": \"Rough hair coat\",\n          \"English\": \"Rough hair coat\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"57\",\n        \"label\": {\n          \"Bangla\": \"Salivation\",\n          \"English\": \"Salivation\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"58\",\n        \"label\": {\n          \"Bangla\": \"Segment of worms in faeces\",\n          \"English\": \"Segment of worms in faeces\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"59\",\n        \"label\": {\n          \"Bangla\": \"Shivering\",\n          \"English\": \"Shivering\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"60\",\n        \"label\": {\n          \"Bangla\": \"Softening of skull bone\",\n          \"English\": \"Softening of skull bone\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"61\",\n        \"label\": {\n          \"Bangla\": \"Stillbirth\",\n          \"English\": \"Stillbirth\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"62\",\n        \"label\": {\n          \"Bangla\": \"Subnormal temperature\",\n          \"English\": \"Subnormal temperature\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"63\",\n        \"label\": {\n          \"Bangla\": \"Sudden death\",\n          \"English\": \"Sudden death\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"64\",\n        \"label\": {\n          \"Bangla\": \"Swelling and redness of interdigital tissues\",\n          \"English\": \"Swelling and redness of interdigital tissues\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"65\",\n        \"label\": {\n          \"Bangla\": \"Swollen and painful navel\",\n          \"English\": \"Swollen and painful navel\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"66\",\n        \"label\": {\n          \"Bangla\": \"Thickened intestine\",\n          \"English\": \"Thickened intestine\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"67\",\n        \"label\": {\n          \"Bangla\": \"Thickening of the skin\",\n          \"English\": \"Thickening of the skin\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"68\",\n        \"label\": {\n          \"Bangla\": \"Tongue protrusion\",\n          \"English\": \"Tongue protrusion\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"69\",\n        \"label\": {\n          \"Bangla\": \"Trembling\",\n          \"English\": \"Trembling\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"70\",\n        \"label\": {\n          \"Bangla\": \"Tympany\",\n          \"English\": \"Tympany\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"71\",\n        \"label\": {\n          \"Bangla\": \"Udder (Gangrene)\",\n          \"English\": \"Udder (Gangrene)\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"72\",\n        \"label\": {\n          \"Bangla\": \"Udder (Harden)\",\n          \"English\": \"Udder (Harden)\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"73\",\n        \"label\": {\n          \"Bangla\": \"Udder (Swollen and hot )\",\n          \"English\": \"Udder (Swollen and hot )\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"74\",\n        \"label\": {\n          \"Bangla\": \"Ulcer in nose\",\n          \"English\": \"Ulcer in nose\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"75\",\n        \"label\": {\n          \"Bangla\": \"Unable to work\",\n          \"English\": \"Unable to work\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"76\",\n        \"label\": {\n          \"Bangla\": \"Unthrifty animals\",\n          \"English\": \"Unthrifty animals\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"77\",\n        \"label\": {\n          \"Bangla\": \"Upward flexion of the hindlimb\",\n          \"English\": \"Upward flexion of the hindlimb\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"78\",\n        \"label\": {\n          \"Bangla\": \"Weakness\",\n          \"English\": \"Weakness\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"79\",\n        \"label\": {\n          \"Bangla\": \"Weight loss\",\n          \"English\": \"Weight loss\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"80\",\n        \"label\": {\n          \"Bangla\": \"Worms on the skin lesion\",\n          \"English\": \"Worms on the skin lesion\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"81\",\n        \"label\": {\n          \"Bangla\": \"Wound in hoof\",\n          \"English\": \"Wound in hoof\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"82\",\n        \"label\": {\n          \"Bangla\": \"Wound in hump\",\n          \"English\": \"Wound in hump\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"83\",\n        \"label\": {\n          \"Bangla\": \"Wound in mouth\",\n          \"English\": \"Wound in mouth\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"84\",\n        \"label\": {\n          \"Bangla\": \"Wound in teat\",\n          \"English\": \"Wound in teat\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Other\",\n          \"English\": \"Other\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Abnormal eggs\",\n          \"English\": \"Abnormal eggs\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"7\",\n        \"label\": {\n          \"Bangla\": \"Anaemia\",\n          \"English\": \"Anaemia\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Ataxia\",\n          \"English\": \"Ataxia\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"11\",\n        \"label\": {\n          \"Bangla\": \"Breathing difficulty (Dyspnea)\",\n          \"English\": \"Breathing difficulty (Dyspnea)\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Breathing rapidly\",\n          \"English\": \"Breathing rapidly\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"4\",\n        \"label\": {\n          \"Bangla\": \"Conjunctivitis\",\n          \"English\": \"Conjunctivitis\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"17\",\n        \"label\": {\n          \"Bangla\": \"Depression\",\n          \"English\": \"Depression\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"19\",\n        \"label\": {\n          \"Bangla\": \"Diarrhoea (bloody)\",\n          \"English\": \"Diarrhea (bloody)\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"20\",\n        \"label\": {\n          \"Bangla\": \"Diarrhoea (watery)\",\n          \"English\": \"Diarrhea (watery)\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"21\",\n        \"label\": {\n          \"Bangla\": \"Diarrhoea (greenish)\",\n          \"English\": \"Diarrhoea (greenish)\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"22\",\n        \"label\": {\n          \"Bangla\": \"Diarrhoea (whitish)\",\n          \"English\": \"Diarrhoea (whitish)\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"23\",\n        \"label\": {\n          \"Bangla\": \"Diarrhoea (yellowish)\",\n          \"English\": \"Diarrhoea (yellowish)\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"5\",\n        \"label\": {\n          \"Bangla\": \"Egg production decrease\",\n          \"English\": \"Egg production decrease\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"6\",\n        \"label\": {\n          \"Bangla\": \"Gasping\",\n          \"English\": \"Gasping\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"8\",\n        \"label\": {\n          \"Bangla\": \"Incoordination of movement\",\n          \"English\": \"Incoordination of movement\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"9\",\n        \"label\": {\n          \"Bangla\": \"Itchy skin (pruritus)\",\n          \"English\": \"Itchy skin (pruritus)\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"10\",\n        \"label\": {\n          \"Bangla\": \"Leg weakness\",\n          \"English\": \"Leg weakness\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"12\",\n        \"label\": {\n          \"Bangla\": \"Lice eggs present on skin\",\n          \"English\": \"Lice eggs present on skin\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"13\",\n        \"label\": {\n          \"Bangla\": \"Lice present on skin\",\n          \"English\": \"Lice present on skin\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"14\",\n        \"label\": {\n          \"Bangla\": \"Mosit rales\",\n          \"English\": \"Mosit rales\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"15\",\n        \"label\": {\n          \"Bangla\": \"Mucoid discharge from eye\",\n          \"English\": \"Mucoid discharge from eye\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"16\",\n        \"label\": {\n          \"Bangla\": \"Mucoid discharge from nose\",\n          \"English\": \"Mucoid discharge from nose\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"18\",\n        \"label\": {\n          \"Bangla\": \"Poor feed intake\",\n          \"English\": \"Poor feed intake\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"24\",\n        \"label\": {\n          \"Bangla\": \"Reluctant to move\",\n          \"English\": \"Reluctant to move\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"25\",\n        \"label\": {\n          \"Bangla\": \"Restlessness\",\n          \"English\": \"Restlessness\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"27\",\n        \"label\": {\n          \"Bangla\": \"Retardation in growth\",\n          \"English\": \"Retardation in growth\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"28\",\n        \"label\": {\n          \"Bangla\": \"Ruffled feathers\",\n          \"English\": \"Ruffled feathers\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"29\",\n        \"label\": {\n          \"Bangla\": \"Scabbing\",\n          \"English\": \"Scabbing\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"30\",\n        \"label\": {\n          \"Bangla\": \"Scaly leg\",\n          \"English\": \"Scaly leg\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"31\",\n        \"label\": {\n          \"Bangla\": \"Sinusitis\",\n          \"English\": \"Sinusitis\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"32\",\n        \"label\": {\n          \"Bangla\": \"Swollen face\",\n          \"English\": \"Swollen face\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"33\",\n        \"label\": {\n          \"Bangla\": \"Swollen foot pad\",\n          \"English\": \"Swollen foot pad\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"34\",\n        \"label\": {\n          \"Bangla\": \"Swollen infraorbital sinus\",\n          \"English\": \"Swollen infraorbital sinus\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"279\",\n        \"label\": {\n          \"Bangla\": \"Weight loss\",\n          \"English\": \"Weight loss\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"26\",\n        \"label\": {\n          \"Bangla\": \"Wings drop\",\n          \"English\": \"Wings drop\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Other\",\n          \"English\": \"Other\"\n        }\n      }\n    ],\n    \"postmortem_organ\": [\n      {\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"ENT\",\n          \"English\": \"ENT\"\n        }\n      },\n      {\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"CU system\",\n          \"English\": \"Respiratory system\"\n        }\n      },\n      {\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"GI tract\",\n          \"English\": \"CU system\"\n        }\n      },\n      {\n        \"name\": \"4\",\n        \"label\": {\n          \"Bangla\": \"H ... System\",\n          \"English\": \"GI tract\"\n        }\n      },\n      {\n        \"name\": \"5\",\n        \"label\": {\n          \"Bangla\": \"Integumetary skin and hair\",\n          \"English\": \"Integumetary skin and hair\"\n        }\n      },\n      {\n        \"name\": \"6\",\n        \"label\": {\n          \"Bangla\": \"MS system\",\n          \"English\": \"MS system\"\n        }\n      },\n      {\n        \"name\": \"7\",\n        \"label\": {\n          \"Bangla\": \"Neurologic system\",\n          \"English\": \"Neurologic system\"\n        }\n      },\n      {\n        \"name\": \"8\",\n        \"label\": {\n          \"Bangla\": \"Renal system\",\n          \"English\": \"Renal system\"\n        }\n      },\n      {\n        \"name\": \"9\",\n        \"label\": {\n          \"Bangla\": \"Reproductive Syste\",\n          \"English\": \"H ... System\"\n        }\n      },\n      {\n        \"name\": \"10\",\n        \"label\": {\n          \"Bangla\": \"Respiratory system\",\n          \"English\": \"Reproductive Syste\"\n        }\n      },\n      {\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Other\",\n          \"English\": \"Other\"\n        }\n      },\n      {\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Organ-1\",\n          \"English\": \"Organ-1\"\n        }\n      },\n      {\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Organ-2\",\n          \"English\": \"Organ-2\"\n        }\n      },\n      {\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Organ-3\",\n          \"English\": \"Organ-3\"\n        }\n      }\n    ],\n    \"union_name\": [\n      {\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Union-1\",\n          \"English\": \"Union-1\"\n        }\n      },\n      {\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Union-2\",\n          \"English\": \"Union-2\"\n        }\n      },\n      {\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Union-3\",\n          \"English\": \"Union-3\"\n        }\n      }\n    ],\n    \"postmortem_findings_bird\": [\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Fibrinous exudate in heart\",\n          \"English\": \"Fibrinous exudate in heart\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Nodules/ tumor in heart\",\n          \"English\": \"Nodules/ tumor in heart\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhage in heart muscle\",\n          \"English\": \"Hemorrhage in heart muscle\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"4\",\n        \"label\": {\n          \"Bangla\": \"Clotted blood in the heart chamber\",\n          \"English\": \"Clotted blood in the heart chamber\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"5\",\n        \"label\": {\n          \"Bangla\": \"Pericarditis\",\n          \"English\": \"Pericarditis\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"6\",\n        \"label\": {\n          \"Bangla\": \"Dilated blood vessel\",\n          \"English\": \"Dilated blood vessel\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Others\",\n          \"English\": \"Others\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"7\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhage in esophagus\",\n          \"English\": \"Hemorrhage in esophagus\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"8\",\n        \"label\": {\n          \"Bangla\": \"Congestion in esophagus\",\n          \"English\": \"Congestion in esophagus\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"9\",\n        \"label\": {\n          \"Bangla\": \"Nodules/ tumor in esophagus\",\n          \"English\": \"Nodules/ tumor in esophagus\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"10\",\n        \"label\": {\n          \"Bangla\": \"Diphtheritic lesions in esophagus\",\n          \"English\": \"Diphtheritic lesions in esophagus\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"11\",\n        \"label\": {\n          \"Bangla\": \"Ulcerative lesion in esophagus\",\n          \"English\": \"Ulcerative lesion in esophagus\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"12\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhage in crop\",\n          \"English\": \"Hemorrhage in crop\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"13\",\n        \"label\": {\n          \"Bangla\": \"Congestion in crop\",\n          \"English\": \"Congestion in crop\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"14\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhage in proventriculus\",\n          \"English\": \"Hemorrhage in proventriculus\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"15\",\n        \"label\": {\n          \"Bangla\": \"Congestion in proventriculus\",\n          \"English\": \"Congestion in proventriculus\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"16\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhage in gizzard\",\n          \"English\": \"Hemorrhage in gizzard\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"17\",\n        \"label\": {\n          \"Bangla\": \"Congestion in gizzard\",\n          \"English\": \"Congestion in gizzard\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"18\",\n        \"label\": {\n          \"Bangla\": \"Nodules/ tumor in gizzard\",\n          \"English\": \"Nodules/ tumor in gizzard\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"19\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhage in small intestine\",\n          \"English\": \"Hemorrhage in small intestine\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"20\",\n        \"label\": {\n          \"Bangla\": \"Congestion in small intestine\",\n          \"English\": \"Congestion in small intestine\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"21\",\n        \"label\": {\n          \"Bangla\": \"Thickening of membrane wall in small intestine\",\n          \"English\": \"Thickening of membrane wall in small intestine\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"22\",\n        \"label\": {\n          \"Bangla\": \"Thinning of membrane wall in small intestine\",\n          \"English\": \"Thinning of membrane wall in small intestine\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"23\",\n        \"label\": {\n          \"Bangla\": \"Ulcerative lesion in small intestine\",\n          \"English\": \"Ulcerative lesion in small intestine\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"24\",\n        \"label\": {\n          \"Bangla\": \"Nodules/ tumor in small intestine\",\n          \"English\": \"Nodules/ tumor in small intestine\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"25\",\n        \"label\": {\n          \"Bangla\": \"Parasites in small intestine\",\n          \"English\": \"Parasites in small intestine\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"26\",\n        \"label\": {\n          \"Bangla\": \"Lumen of small intestine filled with blood\",\n          \"English\": \"Lumen of small intestine filled with blood\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"27\",\n        \"label\": {\n          \"Bangla\": \"Turkish towel appearance of the mucosa of the small intstine\",\n          \"English\": \"Turkish towel appearance of the mucosa of the small intstine\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"28\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhage in cecum\",\n          \"English\": \"Hemorrhage in cecum\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"29\",\n        \"label\": {\n          \"Bangla\": \"Congestion in cecum\",\n          \"English\": \"Congestion in cecum\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"30\",\n        \"label\": {\n          \"Bangla\": \"Enlarged cecum\",\n          \"English\": \"Enlarged cecum\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"31\",\n        \"label\": {\n          \"Bangla\": \"Clotted blood in the caeca\",\n          \"English\": \"Clotted blood in the caeca\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"32\",\n        \"label\": {\n          \"Bangla\": \"Fibrinous exudate in liver\",\n          \"English\": \"Fibrinous exudate in liver\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"33\",\n        \"label\": {\n          \"Bangla\": \"Hepatomegaly\",\n          \"English\": \"Hepatomegaly\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"34\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhage in liver\",\n          \"English\": \"Hemorrhage in liver\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"35\",\n        \"label\": {\n          \"Bangla\": \"Congestion in liver\",\n          \"English\": \"Congestion in liver\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"36\",\n        \"label\": {\n          \"Bangla\": \"Necrosis in liver\",\n          \"English\": \"Necrosis in liver\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"37\",\n        \"label\": {\n          \"Bangla\": \"Ulcerative lesion in lesion\",\n          \"English\": \"Ulcerative lesion in lesion\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"38\",\n        \"label\": {\n          \"Bangla\": \"Pinpoint whitish spots on the liver\",\n          \"English\": \"Pinpoint whitish spots on the liver\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"39\",\n        \"label\": {\n          \"Bangla\": \"Copper colored liver\",\n          \"English\": \"Copper colored liver\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"40\",\n        \"label\": {\n          \"Bangla\": \"Frigile liver\",\n          \"English\": \"Frigile liver\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"41\",\n        \"label\": {\n          \"Bangla\": \"Pale liver\",\n          \"English\": \"Pale liver\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"42\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhage in gall bladder\",\n          \"English\": \"Hemorrhage in gall bladder\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"43\",\n        \"label\": {\n          \"Bangla\": \"Congestion in gall bladder\",\n          \"English\": \"Congestion in gall bladder\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"44\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhage in spleen\",\n          \"English\": \"Hemorrhage in spleen\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"45\",\n        \"label\": {\n          \"Bangla\": \"Congestion in spleen\",\n          \"English\": \"Congestion in spleen\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"46\",\n        \"label\": {\n          \"Bangla\": \"Splenomegaly\",\n          \"English\": \"Splenomegaly\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"47\",\n        \"label\": {\n          \"Bangla\": \"Splenitis\",\n          \"English\": \"Splenitis\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"48\",\n        \"label\": {\n          \"Bangla\": \"Necrosis in spleen\",\n          \"English\": \"Necrosis in spleen\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"49\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhage in pancreas\",\n          \"English\": \"Hemorrhage in pancreas\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"50\",\n        \"label\": {\n          \"Bangla\": \"Congestion in pancreas\",\n          \"English\": \"Congestion in pancreas\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"51\",\n        \"label\": {\n          \"Bangla\": \"Necrosis in pancreas\",\n          \"English\": \"Necrosis in pancreas\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"52\",\n        \"label\": {\n          \"Bangla\": \"Haemorrhage in cloaca\",\n          \"English\": \"Haemorrhage in cloaca\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"53\",\n        \"label\": {\n          \"Bangla\": \"Congestion in cloaca\",\n          \"English\": \"Congestion in cloaca\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"54\",\n        \"label\": {\n          \"Bangla\": \"Thickening of cloaca membrane wall\",\n          \"English\": \"Thickening of cloaca membrane wall\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"55\",\n        \"label\": {\n          \"Bangla\": \"Thinning of cloaca membrane wall\",\n          \"English\": \"Thinning of cloaca membrane wall\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"56\",\n        \"label\": {\n          \"Bangla\": \"Cheesy exudateds in cloaca\",\n          \"English\": \"Cheesy exudateds in cloaca\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"57\",\n        \"label\": {\n          \"Bangla\": \"Edematous mesentery\",\n          \"English\": \"Edematous mesentery\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"58\",\n        \"label\": {\n          \"Bangla\": \"Congestion in mesentery\",\n          \"English\": \"Congestion in mesentery\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Others\",\n          \"English\": \"Others\"\n        }\n      },\n      {\n        \"myfilter\": \"3\",\n        \"name\": \"59\",\n        \"label\": {\n          \"Bangla\": \"Haemorrhage in bursa of fabricius\",\n          \"English\": \"Haemorrhage in bursa of fabricius\"\n        }\n      },\n      {\n        \"myfilter\": \"3\",\n        \"name\": \"60\",\n        \"label\": {\n          \"Bangla\": \"Congestion in bursa of fabricius\",\n          \"English\": \"Congestion in bursa of fabricius\"\n        }\n      },\n      {\n        \"myfilter\": \"3\",\n        \"name\": \"61\",\n        \"label\": {\n          \"Bangla\": \"Swollen in bursa of fabricius\",\n          \"English\": \"Swollen in bursa of fabricius\"\n        }\n      },\n      {\n        \"myfilter\": \"3\",\n        \"name\": \"62\",\n        \"label\": {\n          \"Bangla\": \"Atrophied in bursa of fabricius\",\n          \"English\": \"Atrophied in bursa of fabricius\"\n        }\n      },\n      {\n        \"myfilter\": \"3\",\n        \"name\": \"63\",\n        \"label\": {\n          \"Bangla\": \"Haemorrhage in thymus\",\n          \"English\": \"Haemorrhage in thymus\"\n        }\n      },\n      {\n        \"myfilter\": \"3\",\n        \"name\": \"64\",\n        \"label\": {\n          \"Bangla\": \"Thymic atrophy\",\n          \"English\": \"Thymic atrophy\"\n        }\n      },\n      {\n        \"myfilter\": \"3\",\n        \"name\": \"65\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhage in caecal tonsil\",\n          \"English\": \"Hemorrhage in caecal tonsil\"\n        }\n      },\n      {\n        \"myfilter\": \"3\",\n        \"name\": \"66\",\n        \"label\": {\n          \"Bangla\": \"Congestion in caecal tonsil\",\n          \"English\": \"Congestion in caecal tonsil\"\n        }\n      },\n      {\n        \"myfilter\": \"3\",\n        \"name\": \"67\",\n        \"label\": {\n          \"Bangla\": \"Ulcerative lesion in caecal tonsil\",\n          \"English\": \"Ulcerative lesion in caecal tonsil\"\n        }\n      },\n      {\n        \"myfilter\": \"3\",\n        \"name\": \"68\",\n        \"label\": {\n          \"Bangla\": \"Atropy of caecal tonsil\",\n          \"English\": \"Atropy of caecal tonsil\"\n        }\n      },\n      {\n        \"myfilter\": \"3\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Others\",\n          \"English\": \"Others\"\n        }\n      },\n      {\n        \"myfilter\": \"4\",\n        \"name\": \"69\",\n        \"label\": {\n          \"Bangla\": \"Haemorrhage in skin\",\n          \"English\": \"Haemorrhage in skin\"\n        }\n      },\n      {\n        \"myfilter\": \"4\",\n        \"name\": \"70\",\n        \"label\": {\n          \"Bangla\": \"Swollen skin\",\n          \"English\": \"Swollen skin\"\n        }\n      },\n      {\n        \"myfilter\": \"4\",\n        \"name\": \"71\",\n        \"label\": {\n          \"Bangla\": \"Necrosis of skin\",\n          \"English\": \"Necrosis of skin\"\n        }\n      },\n      {\n        \"myfilter\": \"4\",\n        \"name\": \"72\",\n        \"label\": {\n          \"Bangla\": \"Inflammation of skin\",\n          \"English\": \"Inflammation of skin\"\n        }\n      },\n      {\n        \"myfilter\": \"4\",\n        \"name\": \"73\",\n        \"label\": {\n          \"Bangla\": \"Scabbing\",\n          \"English\": \"Scabbing\"\n        }\n      },\n      {\n        \"myfilter\": \"4\",\n        \"name\": \"74\",\n        \"label\": {\n          \"Bangla\": \"Edema in comb\",\n          \"English\": \"Edema in comb\"\n        }\n      },\n      {\n        \"myfilter\": \"4\",\n        \"name\": \"75\",\n        \"label\": {\n          \"Bangla\": \"Congestion in comb\",\n          \"English\": \"Congestion in comb\"\n        }\n      },\n      {\n        \"myfilter\": \"4\",\n        \"name\": \"76\",\n        \"label\": {\n          \"Bangla\": \"Nodules/ tumor in comb\",\n          \"English\": \"Nodules/ tumor in comb\"\n        }\n      },\n      {\n        \"myfilter\": \"4\",\n        \"name\": \"77\",\n        \"label\": {\n          \"Bangla\": \"Edema in wattle\",\n          \"English\": \"Edema in wattle\"\n        }\n      },\n      {\n        \"myfilter\": \"4\",\n        \"name\": \"78\",\n        \"label\": {\n          \"Bangla\": \"Congestion in wattle\",\n          \"English\": \"Congestion in wattle\"\n        }\n      },\n      {\n        \"myfilter\": \"4\",\n        \"name\": \"79\",\n        \"label\": {\n          \"Bangla\": \"Nodules/ tumor in wattle\",\n          \"English\": \"Nodules/ tumor in wattle\"\n        }\n      },\n      {\n        \"myfilter\": \"4\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Others\",\n          \"English\": \"Others\"\n        }\n      },\n      {\n        \"myfilter\": \"5\",\n        \"name\": \"80\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhage in breast muscle\",\n          \"English\": \"Hemorrhage in breast muscle\"\n        }\n      },\n      {\n        \"myfilter\": \"5\",\n        \"name\": \"81\",\n        \"label\": {\n          \"Bangla\": \"Congestion in breast muscle\",\n          \"English\": \"Congestion in breast muscle\"\n        }\n      },\n      {\n        \"myfilter\": \"5\",\n        \"name\": \"82\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhage in thigh muscle\",\n          \"English\": \"Hemorrhage in thigh muscle\"\n        }\n      },\n      {\n        \"myfilter\": \"5\",\n        \"name\": \"83\",\n        \"label\": {\n          \"Bangla\": \"Congestion in thigh muscle\",\n          \"English\": \"Congestion in thigh muscle\"\n        }\n      },\n      {\n        \"myfilter\": \"5\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Others\",\n          \"English\": \"Others\"\n        }\n      },\n      {\n        \"myfilter\": \"6\",\n        \"name\": \"84\",\n        \"label\": {\n          \"Bangla\": \"Enlargement of sciatic nerve\",\n          \"English\": \"Enlargement of sciatic nerve\"\n        }\n      },\n      {\n        \"myfilter\": \"6\",\n        \"name\": \"85\",\n        \"label\": {\n          \"Bangla\": \"Discolored iris\",\n          \"English\": \"Discolored iris\"\n        }\n      },\n      {\n        \"myfilter\": \"6\",\n        \"name\": \"86\",\n        \"label\": {\n          \"Bangla\": \"Irregular pupil\",\n          \"English\": \"Irregular pupil\"\n        }\n      },\n      {\n        \"myfilter\": \"6\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Others\",\n          \"English\": \"Others\"\n        }\n      },\n      {\n        \"myfilter\": \"7\",\n        \"name\": \"87\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhage in kidney\",\n          \"English\": \"Hemorrhage in kidney\"\n        }\n      },\n      {\n        \"myfilter\": \"7\",\n        \"name\": \"88\",\n        \"label\": {\n          \"Bangla\": \"Congestion in kidney\",\n          \"English\": \"Congestion in kidney\"\n        }\n      },\n      {\n        \"myfilter\": \"7\",\n        \"name\": \"89\",\n        \"label\": {\n          \"Bangla\": \"Atrophy of kidney\",\n          \"English\": \"Atrophy of kidney\"\n        }\n      },\n      {\n        \"myfilter\": \"7\",\n        \"name\": \"90\",\n        \"label\": {\n          \"Bangla\": \"Nodules/ tumor in kidney\",\n          \"English\": \"Nodules/ tumor in kidney\"\n        }\n      },\n      {\n        \"myfilter\": \"7\",\n        \"name\": \"91\",\n        \"label\": {\n          \"Bangla\": \"Inflammation in kidney\",\n          \"English\": \"Inflammation in kidney\"\n        }\n      },\n      {\n        \"myfilter\": \"7\",\n        \"name\": \"92\",\n        \"label\": {\n          \"Bangla\": \"Swollen kidney\",\n          \"English\": \"Swollen kidney\"\n        }\n      },\n      {\n        \"myfilter\": \"7\",\n        \"name\": \"93\",\n        \"label\": {\n          \"Bangla\": \"Pale kidney\",\n          \"English\": \"Pale kidney\"\n        }\n      },\n      {\n        \"myfilter\": \"7\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Others\",\n          \"English\": \"Others\"\n        }\n      },\n      {\n        \"myfilter\": \"8\",\n        \"name\": \"94\",\n        \"label\": {\n          \"Bangla\": \"Edematous ovary\",\n          \"English\": \"Edematous ovary\"\n        }\n      },\n      {\n        \"myfilter\": \"8\",\n        \"name\": \"95\",\n        \"label\": {\n          \"Bangla\": \"Congestion in ovary\",\n          \"English\": \"Congestion in ovary\"\n        }\n      },\n      {\n        \"myfilter\": \"8\",\n        \"name\": \"96\",\n        \"label\": {\n          \"Bangla\": \"Ovarian regression\",\n          \"English\": \"Ovarian regression\"\n        }\n      },\n      {\n        \"myfilter\": \"8\",\n        \"name\": \"97\",\n        \"label\": {\n          \"Bangla\": \"Rupture of ovary\",\n          \"English\": \"Rupture of ovary\"\n        }\n      },\n      {\n        \"myfilter\": \"8\",\n        \"name\": \"98\",\n        \"label\": {\n          \"Bangla\": \"Edematous oviduct\",\n          \"English\": \"Edematous oviduct\"\n        }\n      },\n      {\n        \"myfilter\": \"8\",\n        \"name\": \"99\",\n        \"label\": {\n          \"Bangla\": \"Congestion in oviduct\",\n          \"English\": \"Congestion in oviduct\"\n        }\n      },\n      {\n        \"myfilter\": \"8\",\n        \"name\": \"100\",\n        \"label\": {\n          \"Bangla\": \"Atrophy of oviduct\",\n          \"English\": \"Atrophy of oviduct\"\n        }\n      },\n      {\n        \"myfilter\": \"8\",\n        \"name\": \"101\",\n        \"label\": {\n          \"Bangla\": \"Dilated yolk sac blood vessels\",\n          \"English\": \"Dilated yolk sac blood vessels\"\n        }\n      },\n      {\n        \"myfilter\": \"8\",\n        \"name\": \"102\",\n        \"label\": {\n          \"Bangla\": \"Atrophy of yolk sac\",\n          \"English\": \"Atrophy of yolk sac\"\n        }\n      },\n      {\n        \"myfilter\": \"8\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Others\",\n          \"English\": \"Others\"\n        }\n      },\n      {\n        \"myfilter\": \"9\",\n        \"name\": \"103\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhage in lung\",\n          \"English\": \"Hemorrhage in lung\"\n        }\n      },\n      {\n        \"myfilter\": \"9\",\n        \"name\": \"104\",\n        \"label\": {\n          \"Bangla\": \"Congestion in lung\",\n          \"English\": \"Congestion in lung\"\n        }\n      },\n      {\n        \"myfilter\": \"9\",\n        \"name\": \"105\",\n        \"label\": {\n          \"Bangla\": \"Fibrinous exudate in lung\",\n          \"English\": \"Fibrinous exudate in lung\"\n        }\n      },\n      {\n        \"myfilter\": \"9\",\n        \"name\": \"106\",\n        \"label\": {\n          \"Bangla\": \"Necrosis in lung\",\n          \"English\": \"Necrosis in lung\"\n        }\n      },\n      {\n        \"myfilter\": \"9\",\n        \"name\": \"107\",\n        \"label\": {\n          \"Bangla\": \"Nodules/ tumor in lung\",\n          \"English\": \"Nodules/ tumor in lung\"\n        }\n      },\n      {\n        \"myfilter\": \"9\",\n        \"name\": \"108\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhage in trachea\",\n          \"English\": \"Hemorrhage in trachea\"\n        }\n      },\n      {\n        \"myfilter\": \"9\",\n        \"name\": \"109\",\n        \"label\": {\n          \"Bangla\": \"Congestion in trachea\",\n          \"English\": \"Congestion in trachea\"\n        }\n      },\n      {\n        \"myfilter\": \"9\",\n        \"name\": \"110\",\n        \"label\": {\n          \"Bangla\": \"Diphtheritic lesions in trachea\",\n          \"English\": \"Diphtheritic lesions in trachea\"\n        }\n      },\n      {\n        \"myfilter\": \"9\",\n        \"name\": \"111\",\n        \"label\": {\n          \"Bangla\": \"Exudate in trachea\",\n          \"English\": \"Exudate in trachea\"\n        }\n      },\n      {\n        \"myfilter\": \"9\",\n        \"name\": \"112\",\n        \"label\": {\n          \"Bangla\": \"Excess mucus in trachea\",\n          \"English\": \"Excess mucus in trachea\"\n        }\n      },\n      {\n        \"myfilter\": \"9\",\n        \"name\": \"113\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhage in air sac\",\n          \"English\": \"Hemorrhage in air sac\"\n        }\n      },\n      {\n        \"myfilter\": \"9\",\n        \"name\": \"114\",\n        \"label\": {\n          \"Bangla\": \"Congestion in air sac\",\n          \"English\": \"Congestion in air sac\"\n        }\n      },\n      {\n        \"myfilter\": \"9\",\n        \"name\": \"115\",\n        \"label\": {\n          \"Bangla\": \"Fibrinous exudate in air sac\",\n          \"English\": \"Fibrinous exudate in air sac\"\n        }\n      },\n      {\n        \"myfilter\": \"9\",\n        \"name\": \"116\",\n        \"label\": {\n          \"Bangla\": \"Air saculitis\",\n          \"English\": \"Air saculitis\"\n        }\n      },\n      {\n        \"myfilter\": \"9\",\n        \"name\": \"117\",\n        \"label\": {\n          \"Bangla\": \"Inflammation of infra-orbital sinus\",\n          \"English\": \"Inflammation of infra-orbital sinus\"\n        }\n      },\n      {\n        \"myfilter\": \"9\",\n        \"name\": \"118\",\n        \"label\": {\n          \"Bangla\": \"Exudate in infra-orbital sinus\",\n          \"English\": \"Exudate in infra-orbital sinus\"\n        }\n      },\n      {\n        \"myfilter\": \"9\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Other\",\n          \"English\": \"Other\"\n        }\n      }\n    ],\n    \"microscopic_test_fecal\": [\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Ancylostoma (Hookworm)\",\n          \"English\": \"Ancylostoma (Hookworm)\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Ascaris (roundworm)\",\n          \"English\": \"Ascaris (roundworm)\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Balantidium\",\n          \"English\": \"Balantidium\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"4\",\n        \"label\": {\n          \"Bangla\": \"Bunostomum (Hookworm)\",\n          \"English\": \"Bunostomum (Hookworm)\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"5\",\n        \"label\": {\n          \"Bangla\": \"Capillaria\",\n          \"English\": \"Capillaria\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"6\",\n        \"label\": {\n          \"Bangla\": \"Coccidia\",\n          \"English\": \"Coccidia\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"7\",\n        \"label\": {\n          \"Bangla\": \"Fasciola (liver fluke)\",\n          \"English\": \"Fasciola (liver fluke)\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"8\",\n        \"label\": {\n          \"Bangla\": \"Oesophagostomum\",\n          \"English\": \"Oesophagostomum\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"9\",\n        \"label\": {\n          \"Bangla\": \"Paramphistomum (Rumen fluke)\",\n          \"English\": \"Paramphistomum (Rumen fluke)\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"10\",\n        \"label\": {\n          \"Bangla\": \"Strongyloides (threadworm)\",\n          \"English\": \"Strongyloides (threadworm)\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"11\",\n        \"label\": {\n          \"Bangla\": \"Toxocara\",\n          \"English\": \"Toxocara\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"12\",\n        \"label\": {\n          \"Bangla\": \"Toxoplasma\",\n          \"English\": \"Toxoplasma\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"13\",\n        \"label\": {\n          \"Bangla\": \"Trichuris (Whip worm)\",\n          \"English\": \"Trichuris (Whip worm)\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Other\",\n          \"English\": \"Other\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Ascaris (roundworm)\",\n          \"English\": \"Ascaris (roundworm)\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"5\",\n        \"label\": {\n          \"Bangla\": \"Capillaria\",\n          \"English\": \"Capillaria\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"6\",\n        \"label\": {\n          \"Bangla\": \"Coccidia\",\n          \"English\": \"Coccidia\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Heterakis\",\n          \"English\": \"Heterakis\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Other\",\n          \"English\": \"Other\"\n        }\n      }\n    ],\n    \"postmortem_findings_mammal\": [\n      {\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"1\",\n          \"English\": \"1\"\n        }\n      },\n      {\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"2\",\n          \"English\": \"2\"\n        }\n      }\n    ],\n    \"yes_no\": [\n      {\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Yes\",\n          \"English\": \"Yes\"\n        }\n      },\n      {\n        \"name\": \"0\",\n        \"label\": {\n          \"Bangla\": \"No\",\n          \"English\": \"No\"\n        }\n      }\n    ],\n    \"positive_negative\": [\n      {\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Positive\",\n          \"English\": \"Positive\"\n        }\n      },\n      {\n        \"name\": \"0\",\n        \"label\": {\n          \"Bangla\": \"Negative\",\n          \"English\": \"Negative\"\n        }\n      }\n    ],\n    \"species_breed_type\": [\n      {\n        \"myfilter\": \"3\",\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Cross\",\n          \"English\": \"Cross\"\n        }\n      },\n      {\n        \"myfilter\": \"3\",\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Local\",\n          \"English\": \"Local\"\n        }\n      },\n      {\n        \"myfilter\": \"3\",\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Exotic\",\n          \"English\": \"Exotic\"\n        }\n      },\n      {\n        \"myfilter\": \"21\",\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Broiler\",\n          \"English\": \"Broiler\"\n        }\n      },\n      {\n        \"myfilter\": \"21\",\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Layer\",\n          \"English\": \"Layer\"\n        }\n      },\n      {\n        \"myfilter\": \"21\",\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Sonali\",\n          \"English\": \"Sonali\"\n        }\n      },\n      {\n        \"myfilter\": \"21\",\n        \"name\": \"4\",\n        \"label\": {\n          \"Bangla\": \"Deshi\",\n          \"English\": \"Deshi\"\n        }\n      }\n    ],\n    \"tentative_diagnosis\": [\n      {\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"a\",\n          \"English\": \"a\"\n        }\n      },\n      {\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"b\",\n          \"English\": \"b\"\n        }\n      },\n      {\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"c\",\n          \"English\": \"c\"\n        }\n      },\n      {\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Other\",\n          \"English\": \"Other\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Aflatoxicosis\",\n          \"English\": \"Aflatoxicosis\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"4\",\n        \"label\": {\n          \"Bangla\": \"Aspergillosis\",\n          \"English\": \"Aspergillosis\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"5\",\n        \"label\": {\n          \"Bangla\": \"Avian Influenza\",\n          \"English\": \"Avian Influenza\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"6\",\n        \"label\": {\n          \"Bangla\": \"Avian Leukosis\",\n          \"English\": \"Avian Leukosis\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"7\",\n        \"label\": {\n          \"Bangla\": \"Avitaminosis\",\n          \"English\": \"Avitaminosis\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"13\",\n        \"label\": {\n          \"Bangla\": \"Chronic Respiratory Disease (CRD)\",\n          \"English\": \"Chronic Respiratory Disease (CRD)\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"14\",\n        \"label\": {\n          \"Bangla\": \"Coccidiosis\",\n          \"English\": \"Coccidiosis\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"15\",\n        \"label\": {\n          \"Bangla\": \"Colibacillosis (E. coli Infection)\",\n          \"English\": \"Colibacillosis (E. coli Infection)\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"18\",\n        \"label\": {\n          \"Bangla\": \"Duck Cholera\",\n          \"English\": \"Duck Cholera\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"19\",\n        \"label\": {\n          \"Bangla\": \"Duck Plague (Duck Enteritis Virus)\",\n          \"English\": \"Duck Plague (Duck Enteritis Virus)\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"20\",\n        \"label\": {\n          \"Bangla\": \"Egg Drop Syndrome (EDS)\",\n          \"English\": \"Egg Drop Syndrome (EDS)\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"24\",\n        \"label\": {\n          \"Bangla\": \"Fowl Cholera\",\n          \"English\": \"Fowl Cholera\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"25\",\n        \"label\": {\n          \"Bangla\": \"Fowl Pox\",\n          \"English\": \"Fowl Pox\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"27\",\n        \"label\": {\n          \"Bangla\": \"Gangrenous Dermatitis\",\n          \"English\": \"Gangrenous Dermatitis\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"32\",\n        \"label\": {\n          \"Bangla\": \"Infectious Bursal Disease (IBD)\",\n          \"English\": \"Infectious Bursal Disease (IBD)\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"33\",\n        \"label\": {\n          \"Bangla\": \"Infectious Coryza\",\n          \"English\": \"Infectious Coryza\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"34\",\n        \"label\": {\n          \"Bangla\": \"Infectious Laryngotracheitis Virus (ILT)\",\n          \"English\": \"Infectious Laryngotracheitis Virus (ILT)\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"36\",\n        \"label\": {\n          \"Bangla\": \"Lice Infestation\",\n          \"English\": \"Lice Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"38\",\n        \"label\": {\n          \"Bangla\": \"Malnutrition\",\n          \"English\": \"Malnutrition\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"39\",\n        \"label\": {\n          \"Bangla\": \"Marek\\u2019s Disease\",\n          \"English\": \"Marek\\u2019s Disease\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"42\",\n        \"label\": {\n          \"Bangla\": \"Mite Infestation\",\n          \"English\": \"Mite Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"43\",\n        \"label\": {\n          \"Bangla\": \"Mycoplasmosis\",\n          \"English\": \"Mycoplasmosis\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"45\",\n        \"label\": {\n          \"Bangla\": \"Necrotic Enteritis\",\n          \"English\": \"Necrotic Enteritis\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"46\",\n        \"label\": {\n          \"Bangla\": \"Newcastle Disease\",\n          \"English\": \"Newcastle Disease\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"52\",\n        \"label\": {\n          \"Bangla\": \"Salmonellosis\",\n          \"English\": \"Salmonellosis\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"60\",\n        \"label\": {\n          \"Bangla\": \"Worm Infestation\",\n          \"English\": \"Worm Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"B\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Others\",\n          \"English\": \"Others\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Anaplasmosis\",\n          \"English\": \"Anaplasmosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Anthrax\",\n          \"English\": \"Anthrax\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"8\",\n        \"label\": {\n          \"Bangla\": \"Babesiosis\",\n          \"English\": \"Babesiosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"9\",\n        \"label\": {\n          \"Bangla\": \"Black Quarter (BQ)\",\n          \"English\": \"Black Quarter (BQ)\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"10\",\n        \"label\": {\n          \"Bangla\": \"Bovine Tuberculosis\",\n          \"English\": \"Bovine Tuberculosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"11\",\n        \"label\": {\n          \"Bangla\": \"Brucellosis\",\n          \"English\": \"Brucellosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"14\",\n        \"label\": {\n          \"Bangla\": \"Coccidiosis\",\n          \"English\": \"Coccidiosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"17\",\n        \"label\": {\n          \"Bangla\": \"Dermatophilosis\",\n          \"English\": \"Dermatophilosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"21\",\n        \"label\": {\n          \"Bangla\": \"Ephemeral Fever\",\n          \"English\": \"Ephemeral Fever\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"22\",\n        \"label\": {\n          \"Bangla\": \"Foot and Mouth Disease (FMD)\",\n          \"English\": \"Foot and Mouth Disease (FMD)\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"23\",\n        \"label\": {\n          \"Bangla\": \"Foot rot\",\n          \"English\": \"Foot rot\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"26\",\n        \"label\": {\n          \"Bangla\": \"Gangrene\",\n          \"English\": \"Gangrene\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"30\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhagic Septicemia (HS)\",\n          \"English\": \"Hemorrhagic Septicemia (HS)\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"31\",\n        \"label\": {\n          \"Bangla\": \"Hump Sore\",\n          \"English\": \"Hump Sore\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"35\",\n        \"label\": {\n          \"Bangla\": \"Jhone\\u2019s Disease (Paratuberculosis)\",\n          \"English\": \"Jhone\\u2019s Disease (Paratuberculosis)\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"36\",\n        \"label\": {\n          \"Bangla\": \"Lice Infestation\",\n          \"English\": \"Lice Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"37\",\n        \"label\": {\n          \"Bangla\": \"Liver Fluke\",\n          \"English\": \"Liver Fluke\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"40\",\n        \"label\": {\n          \"Bangla\": \"Mastitis\",\n          \"English\": \"Mastitis\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"41\",\n        \"label\": {\n          \"Bangla\": \"Milk Fever\",\n          \"English\": \"Milk Fever\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"42\",\n        \"label\": {\n          \"Bangla\": \"Mite Infestation\",\n          \"English\": \"Mite Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"44\",\n        \"label\": {\n          \"Bangla\": \"Navel Ill\",\n          \"English\": \"Navel Ill\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"48\",\n        \"label\": {\n          \"Bangla\": \"Rabies\",\n          \"English\": \"Rabies\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"49\",\n        \"label\": {\n          \"Bangla\": \"Ringworm (Dermatophytosis)\",\n          \"English\": \"Ringworm (Dermatophytosis)\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"50\",\n        \"label\": {\n          \"Bangla\": \"Round Worm\",\n          \"English\": \"Round Worm\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"51\",\n        \"label\": {\n          \"Bangla\": \"Ruminal Tympany/ Bloat\",\n          \"English\": \"Ruminal Tympany/ Bloat\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"55\",\n        \"label\": {\n          \"Bangla\": \"Tape Worm\",\n          \"English\": \"Tape Worm\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"56\",\n        \"label\": {\n          \"Bangla\": \"Teat Sore\",\n          \"English\": \"Teat Sore\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"57\",\n        \"label\": {\n          \"Bangla\": \"Tetanus\",\n          \"English\": \"Tetanus\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"58\",\n        \"label\": {\n          \"Bangla\": \"Theileriosis\",\n          \"English\": \"Theileriosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"59\",\n        \"label\": {\n          \"Bangla\": \"Tick Infestation\",\n          \"English\": \"Tick Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M1\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Other\",\n          \"English\": \"Other\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Anaplasmosis\",\n          \"English\": \"Anaplasmosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Anthrax\",\n          \"English\": \"Anthrax\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"8\",\n        \"label\": {\n          \"Bangla\": \"Babesiosis\",\n          \"English\": \"Babesiosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"9\",\n        \"label\": {\n          \"Bangla\": \"Black Quarter (BQ)\",\n          \"English\": \"Black Quarter (BQ)\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"10\",\n        \"label\": {\n          \"Bangla\": \"Bovine Tuberculosis\",\n          \"English\": \"Bovine Tuberculosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"11\",\n        \"label\": {\n          \"Bangla\": \"Brucellosis\",\n          \"English\": \"Brucellosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"12\",\n        \"label\": {\n          \"Bangla\": \"Calf Scour\",\n          \"English\": \"Calf Scour\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"14\",\n        \"label\": {\n          \"Bangla\": \"Coccidiosis\",\n          \"English\": \"Coccidiosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"17\",\n        \"label\": {\n          \"Bangla\": \"Dermatophilosis\",\n          \"English\": \"Dermatophilosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"21\",\n        \"label\": {\n          \"Bangla\": \"Ephemeral Fever\",\n          \"English\": \"Ephemeral Fever\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"22\",\n        \"label\": {\n          \"Bangla\": \"Foot and Mouth Disease (FMD)\",\n          \"English\": \"Foot and Mouth Disease (FMD)\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"23\",\n        \"label\": {\n          \"Bangla\": \"Foot rot\",\n          \"English\": \"Foot rot\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"26\",\n        \"label\": {\n          \"Bangla\": \"Gangrene\",\n          \"English\": \"Gangrene\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"30\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhagic Septicemia (HS)\",\n          \"English\": \"Hemorrhagic Septicemia (HS)\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"31\",\n        \"label\": {\n          \"Bangla\": \"Hump Sore\",\n          \"English\": \"Hump Sore\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"35\",\n        \"label\": {\n          \"Bangla\": \"Jhone\\u2019s Disease (Paratuberculosis)\",\n          \"English\": \"Jhone\\u2019s Disease (Paratuberculosis)\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"36\",\n        \"label\": {\n          \"Bangla\": \"Lice Infestation\",\n          \"English\": \"Lice Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"37\",\n        \"label\": {\n          \"Bangla\": \"Liver Fluke\",\n          \"English\": \"Liver Fluke\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"40\",\n        \"label\": {\n          \"Bangla\": \"Mastitis\",\n          \"English\": \"Mastitis\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"41\",\n        \"label\": {\n          \"Bangla\": \"Milk Fever\",\n          \"English\": \"Milk Fever\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"42\",\n        \"label\": {\n          \"Bangla\": \"Mite Infestation\",\n          \"English\": \"Mite Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"44\",\n        \"label\": {\n          \"Bangla\": \"Navel Ill\",\n          \"English\": \"Navel Ill\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"48\",\n        \"label\": {\n          \"Bangla\": \"Rabies\",\n          \"English\": \"Rabies\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"49\",\n        \"label\": {\n          \"Bangla\": \"Ringworm (Dermatophytosis)\",\n          \"English\": \"Ringworm (Dermatophytosis)\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"50\",\n        \"label\": {\n          \"Bangla\": \"Round Worm\",\n          \"English\": \"Round Worm\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"51\",\n        \"label\": {\n          \"Bangla\": \"Ruminal Tympany/ Bloat\",\n          \"English\": \"Ruminal Tympany/ Bloat\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"54\",\n        \"label\": {\n          \"Bangla\": \"Stringhalt\",\n          \"English\": \"Stringhalt\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"55\",\n        \"label\": {\n          \"Bangla\": \"Tape Worm\",\n          \"English\": \"Tape Worm\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"56\",\n        \"label\": {\n          \"Bangla\": \"Teat Sore\",\n          \"English\": \"Teat Sore\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"57\",\n        \"label\": {\n          \"Bangla\": \"Tetanus\",\n          \"English\": \"Tetanus\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"58\",\n        \"label\": {\n          \"Bangla\": \"Theileriosis\",\n          \"English\": \"Theileriosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"59\",\n        \"label\": {\n          \"Bangla\": \"Tick Infestation\",\n          \"English\": \"Tick Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M3\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Other\",\n          \"English\": \"Other\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Anaplasmosis\",\n          \"English\": \"Anaplasmosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Anthrax\",\n          \"English\": \"Anthrax\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"8\",\n        \"label\": {\n          \"Bangla\": \"Babesiosis\",\n          \"English\": \"Babesiosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"9\",\n        \"label\": {\n          \"Bangla\": \"Black Quarter (BQ)\",\n          \"English\": \"Black Quarter (BQ)\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"11\",\n        \"label\": {\n          \"Bangla\": \"Brucellosis\",\n          \"English\": \"Brucellosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"14\",\n        \"label\": {\n          \"Bangla\": \"Coccidiosis\",\n          \"English\": \"Coccidiosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"16\",\n        \"label\": {\n          \"Bangla\": \"Contagious Caprine Pleuropneumonia\",\n          \"English\": \"Contagious Caprine Pleuropneumonia\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"17\",\n        \"label\": {\n          \"Bangla\": \"Dermatophilosis\",\n          \"English\": \"Dermatophilosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"22\",\n        \"label\": {\n          \"Bangla\": \"Foot and Mouth Disease (FMD)\",\n          \"English\": \"Foot and Mouth Disease (FMD)\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"23\",\n        \"label\": {\n          \"Bangla\": \"Foot rot\",\n          \"English\": \"Foot rot\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"26\",\n        \"label\": {\n          \"Bangla\": \"Gangrene\",\n          \"English\": \"Gangrene\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"29\",\n        \"label\": {\n          \"Bangla\": \"Goat Pox\",\n          \"English\": \"Goat Pox\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"30\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhagic Septicemia (HS)\",\n          \"English\": \"Hemorrhagic Septicemia (HS)\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"35\",\n        \"label\": {\n          \"Bangla\": \"Jhone\\u2019s Disease (Paratuberculosis)\",\n          \"English\": \"Jhone\\u2019s Disease (Paratuberculosis)\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"36\",\n        \"label\": {\n          \"Bangla\": \"Lice Infestation\",\n          \"English\": \"Lice Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"37\",\n        \"label\": {\n          \"Bangla\": \"Liver Fluke\",\n          \"English\": \"Liver Fluke\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"40\",\n        \"label\": {\n          \"Bangla\": \"Mastitis\",\n          \"English\": \"Mastitis\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"42\",\n        \"label\": {\n          \"Bangla\": \"Mite Infestation\",\n          \"English\": \"Mite Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"44\",\n        \"label\": {\n          \"Bangla\": \"Navel Ill\",\n          \"English\": \"Navel Ill\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"47\",\n        \"label\": {\n          \"Bangla\": \"Pesti des Petits Ruminants\",\n          \"English\": \"Pesti des Petits Ruminants\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"48\",\n        \"label\": {\n          \"Bangla\": \"Rabies\",\n          \"English\": \"Rabies\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"49\",\n        \"label\": {\n          \"Bangla\": \"Ringworm (Dermatophytosis)\",\n          \"English\": \"Ringworm (Dermatophytosis)\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"50\",\n        \"label\": {\n          \"Bangla\": \"Round Worm\",\n          \"English\": \"Round Worm\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"51\",\n        \"label\": {\n          \"Bangla\": \"Ruminal Tympany/ Bloat\",\n          \"English\": \"Ruminal Tympany/ Bloat\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"55\",\n        \"label\": {\n          \"Bangla\": \"Tape Worm\",\n          \"English\": \"Tape Worm\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"56\",\n        \"label\": {\n          \"Bangla\": \"Teat Sore\",\n          \"English\": \"Teat Sore\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"57\",\n        \"label\": {\n          \"Bangla\": \"Tetanus\",\n          \"English\": \"Tetanus\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"58\",\n        \"label\": {\n          \"Bangla\": \"Theileriosis\",\n          \"English\": \"Theileriosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"59\",\n        \"label\": {\n          \"Bangla\": \"Tick Infestation\",\n          \"English\": \"Tick Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M5\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Other\",\n          \"English\": \"Other\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Anaplasmosis\",\n          \"English\": \"Anaplasmosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Anthrax\",\n          \"English\": \"Anthrax\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"8\",\n        \"label\": {\n          \"Bangla\": \"Babesiosis\",\n          \"English\": \"Babesiosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"9\",\n        \"label\": {\n          \"Bangla\": \"Black Quarter (BQ)\",\n          \"English\": \"Black Quarter (BQ)\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"11\",\n        \"label\": {\n          \"Bangla\": \"Brucellosis\",\n          \"English\": \"Brucellosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"14\",\n        \"label\": {\n          \"Bangla\": \"Coccidiosis\",\n          \"English\": \"Coccidiosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"17\",\n        \"label\": {\n          \"Bangla\": \"Dermatophilosis\",\n          \"English\": \"Dermatophilosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"22\",\n        \"label\": {\n          \"Bangla\": \"Foot and Mouth Disease (FMD)\",\n          \"English\": \"Foot and Mouth Disease (FMD)\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"23\",\n        \"label\": {\n          \"Bangla\": \"Foot rot\",\n          \"English\": \"Foot rot\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"26\",\n        \"label\": {\n          \"Bangla\": \"Gangrene\",\n          \"English\": \"Gangrene\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"28\",\n        \"label\": {\n          \"Bangla\": \"Gid Disease (Cerebral coenurosis)\",\n          \"English\": \"Gid Disease (Cerebral coenurosis)\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"30\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhagic Septicemia (HS)\",\n          \"English\": \"Hemorrhagic Septicemia (HS)\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"35\",\n        \"label\": {\n          \"Bangla\": \"Jhone\\u2019s Disease (Paratuberculosis)\",\n          \"English\": \"Jhone\\u2019s Disease (Paratuberculosis)\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"36\",\n        \"label\": {\n          \"Bangla\": \"Lice Infestation\",\n          \"English\": \"Lice Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"37\",\n        \"label\": {\n          \"Bangla\": \"Liver Fluke\",\n          \"English\": \"Liver Fluke\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"40\",\n        \"label\": {\n          \"Bangla\": \"Mastitis\",\n          \"English\": \"Mastitis\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"42\",\n        \"label\": {\n          \"Bangla\": \"Mite Infestation\",\n          \"English\": \"Mite Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"44\",\n        \"label\": {\n          \"Bangla\": \"Navel Ill\",\n          \"English\": \"Navel Ill\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"47\",\n        \"label\": {\n          \"Bangla\": \"Pesti des Petits Ruminants\",\n          \"English\": \"Pesti des Petits Ruminants\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"48\",\n        \"label\": {\n          \"Bangla\": \"Rabies\",\n          \"English\": \"Rabies\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"49\",\n        \"label\": {\n          \"Bangla\": \"Ringworm (Dermatophytosis)\",\n          \"English\": \"Ringworm (Dermatophytosis)\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"50\",\n        \"label\": {\n          \"Bangla\": \"Round Worm\",\n          \"English\": \"Round Worm\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"51\",\n        \"label\": {\n          \"Bangla\": \"Ruminal Tympany/ Bloat\",\n          \"English\": \"Ruminal Tympany/ Bloat\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"53\",\n        \"label\": {\n          \"Bangla\": \"Sheep Pox\",\n          \"English\": \"Sheep Pox\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"55\",\n        \"label\": {\n          \"Bangla\": \"Tape Worm\",\n          \"English\": \"Tape Worm\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"56\",\n        \"label\": {\n          \"Bangla\": \"Teat Sore\",\n          \"English\": \"Teat Sore\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"57\",\n        \"label\": {\n          \"Bangla\": \"Tetanus\",\n          \"English\": \"Tetanus\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"58\",\n        \"label\": {\n          \"Bangla\": \"Theileriosis\",\n          \"English\": \"Theileriosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"59\",\n        \"label\": {\n          \"Bangla\": \"Tick Infestation\",\n          \"English\": \"Tick Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M8\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Other\",\n          \"English\": \"Other\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Anaplasmosis\",\n          \"English\": \"Anaplasmosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Anthrax\",\n          \"English\": \"Anthrax\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"8\",\n        \"label\": {\n          \"Bangla\": \"Babesiosis\",\n          \"English\": \"Babesiosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"11\",\n        \"label\": {\n          \"Bangla\": \"Brucellosis\",\n          \"English\": \"Brucellosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"14\",\n        \"label\": {\n          \"Bangla\": \"Coccidiosis\",\n          \"English\": \"Coccidiosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"17\",\n        \"label\": {\n          \"Bangla\": \"Dermatophilosis\",\n          \"English\": \"Dermatophilosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"23\",\n        \"label\": {\n          \"Bangla\": \"Foot rot\",\n          \"English\": \"Foot rot\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"26\",\n        \"label\": {\n          \"Bangla\": \"Gangrene\",\n          \"English\": \"Gangrene\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"28\",\n        \"label\": {\n          \"Bangla\": \"Gid Disease (Cerebral coenurosis)\",\n          \"English\": \"Gid Disease (Cerebral coenurosis)\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"30\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhagic Septicemia (HS)\",\n          \"English\": \"Hemorrhagic Septicemia (HS)\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"35\",\n        \"label\": {\n          \"Bangla\": \"Jhone\\u2019s Disease (Paratuberculosis)\",\n          \"English\": \"Jhone\\u2019s Disease (Paratuberculosis)\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"36\",\n        \"label\": {\n          \"Bangla\": \"Lice Infestation\",\n          \"English\": \"Lice Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"37\",\n        \"label\": {\n          \"Bangla\": \"Liver Fluke\",\n          \"English\": \"Liver Fluke\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"40\",\n        \"label\": {\n          \"Bangla\": \"Mastitis\",\n          \"English\": \"Mastitis\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"42\",\n        \"label\": {\n          \"Bangla\": \"Mite Infestation\",\n          \"English\": \"Mite Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"44\",\n        \"label\": {\n          \"Bangla\": \"Navel Ill\",\n          \"English\": \"Navel Ill\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"48\",\n        \"label\": {\n          \"Bangla\": \"Rabies\",\n          \"English\": \"Rabies\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"49\",\n        \"label\": {\n          \"Bangla\": \"Ringworm (Dermatophytosis)\",\n          \"English\": \"Ringworm (Dermatophytosis)\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"50\",\n        \"label\": {\n          \"Bangla\": \"Round Worm\",\n          \"English\": \"Round Worm\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"55\",\n        \"label\": {\n          \"Bangla\": \"Tape Worm\",\n          \"English\": \"Tape Worm\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"56\",\n        \"label\": {\n          \"Bangla\": \"Teat Sore\",\n          \"English\": \"Teat Sore\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"57\",\n        \"label\": {\n          \"Bangla\": \"Tetanus\",\n          \"English\": \"Tetanus\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"58\",\n        \"label\": {\n          \"Bangla\": \"Theileriosis\",\n          \"English\": \"Theileriosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"59\",\n        \"label\": {\n          \"Bangla\": \"Tick Infestation\",\n          \"English\": \"Tick Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M6\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Other\",\n          \"English\": \"Other\"\n        }\n      },\n      {\n        \"myfilter\": \"M2\",\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Anaplasmosis\",\n          \"English\": \"Anaplasmosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M2\",\n        \"name\": \"8\",\n        \"label\": {\n          \"Bangla\": \"Babesiosis\",\n          \"English\": \"Babesiosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M2\",\n        \"name\": \"11\",\n        \"label\": {\n          \"Bangla\": \"Brucellosis\",\n          \"English\": \"Brucellosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M2\",\n        \"name\": \"14\",\n        \"label\": {\n          \"Bangla\": \"Coccidiosis\",\n          \"English\": \"Coccidiosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M2\",\n        \"name\": \"17\",\n        \"label\": {\n          \"Bangla\": \"Dermatophilosis\",\n          \"English\": \"Dermatophilosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M2\",\n        \"name\": \"26\",\n        \"label\": {\n          \"Bangla\": \"Gangrene\",\n          \"English\": \"Gangrene\"\n        }\n      },\n      {\n        \"myfilter\": \"M2\",\n        \"name\": \"36\",\n        \"label\": {\n          \"Bangla\": \"Lice Infestation\",\n          \"English\": \"Lice Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M2\",\n        \"name\": \"37\",\n        \"label\": {\n          \"Bangla\": \"Liver Fluke\",\n          \"English\": \"Liver Fluke\"\n        }\n      },\n      {\n        \"myfilter\": \"M2\",\n        \"name\": \"40\",\n        \"label\": {\n          \"Bangla\": \"Mastitis\",\n          \"English\": \"Mastitis\"\n        }\n      },\n      {\n        \"myfilter\": \"M2\",\n        \"name\": \"42\",\n        \"label\": {\n          \"Bangla\": \"Mite Infestation\",\n          \"English\": \"Mite Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M2\",\n        \"name\": \"48\",\n        \"label\": {\n          \"Bangla\": \"Rabies\",\n          \"English\": \"Rabies\"\n        }\n      },\n      {\n        \"myfilter\": \"M2\",\n        \"name\": \"49\",\n        \"label\": {\n          \"Bangla\": \"Ringworm (Dermatophytosis)\",\n          \"English\": \"Ringworm (Dermatophytosis)\"\n        }\n      },\n      {\n        \"myfilter\": \"M2\",\n        \"name\": \"50\",\n        \"label\": {\n          \"Bangla\": \"Round Worm\",\n          \"English\": \"Round Worm\"\n        }\n      },\n      {\n        \"myfilter\": \"M2\",\n        \"name\": \"55\",\n        \"label\": {\n          \"Bangla\": \"Tape Worm\",\n          \"English\": \"Tape Worm\"\n        }\n      },\n      {\n        \"myfilter\": \"M2\",\n        \"name\": \"56\",\n        \"label\": {\n          \"Bangla\": \"Teat Sore\",\n          \"English\": \"Teat Sore\"\n        }\n      },\n      {\n        \"myfilter\": \"M2\",\n        \"name\": \"57\",\n        \"label\": {\n          \"Bangla\": \"Tetanus\",\n          \"English\": \"Tetanus\"\n        }\n      },\n      {\n        \"myfilter\": \"M2\",\n        \"name\": \"58\",\n        \"label\": {\n          \"Bangla\": \"Theileriosis\",\n          \"English\": \"Theileriosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M2\",\n        \"name\": \"59\",\n        \"label\": {\n          \"Bangla\": \"Tick Infestation\",\n          \"English\": \"Tick Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M2\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Other\",\n          \"English\": \"Other\"\n        }\n      },\n      {\n        \"myfilter\": \"M4\",\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Anaplasmosis\",\n          \"English\": \"Anaplasmosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M4\",\n        \"name\": \"8\",\n        \"label\": {\n          \"Bangla\": \"Babesiosis\",\n          \"English\": \"Babesiosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M4\",\n        \"name\": \"11\",\n        \"label\": {\n          \"Bangla\": \"Brucellosis\",\n          \"English\": \"Brucellosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M4\",\n        \"name\": \"14\",\n        \"label\": {\n          \"Bangla\": \"Coccidiosis\",\n          \"English\": \"Coccidiosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M4\",\n        \"name\": \"17\",\n        \"label\": {\n          \"Bangla\": \"Dermatophilosis\",\n          \"English\": \"Dermatophilosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M4\",\n        \"name\": \"26\",\n        \"label\": {\n          \"Bangla\": \"Gangrene\",\n          \"English\": \"Gangrene\"\n        }\n      },\n      {\n        \"myfilter\": \"M4\",\n        \"name\": \"36\",\n        \"label\": {\n          \"Bangla\": \"Lice Infestation\",\n          \"English\": \"Lice Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M4\",\n        \"name\": \"37\",\n        \"label\": {\n          \"Bangla\": \"Liver Fluke\",\n          \"English\": \"Liver Fluke\"\n        }\n      },\n      {\n        \"myfilter\": \"M4\",\n        \"name\": \"40\",\n        \"label\": {\n          \"Bangla\": \"Mastitis\",\n          \"English\": \"Mastitis\"\n        }\n      },\n      {\n        \"myfilter\": \"M4\",\n        \"name\": \"42\",\n        \"label\": {\n          \"Bangla\": \"Mite Infestation\",\n          \"English\": \"Mite Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M4\",\n        \"name\": \"48\",\n        \"label\": {\n          \"Bangla\": \"Rabies\",\n          \"English\": \"Rabies\"\n        }\n      },\n      {\n        \"myfilter\": \"M4\",\n        \"name\": \"49\",\n        \"label\": {\n          \"Bangla\": \"Ringworm (Dermatophytosis)\",\n          \"English\": \"Ringworm (Dermatophytosis)\"\n        }\n      },\n      {\n        \"myfilter\": \"M4\",\n        \"name\": \"50\",\n        \"label\": {\n          \"Bangla\": \"Round Worm\",\n          \"English\": \"Round Worm\"\n        }\n      },\n      {\n        \"myfilter\": \"M4\",\n        \"name\": \"55\",\n        \"label\": {\n          \"Bangla\": \"Tape Worm\",\n          \"English\": \"Tape Worm\"\n        }\n      },\n      {\n        \"myfilter\": \"M4\",\n        \"name\": \"56\",\n        \"label\": {\n          \"Bangla\": \"Teat Sore\",\n          \"English\": \"Teat Sore\"\n        }\n      },\n      {\n        \"myfilter\": \"M4\",\n        \"name\": \"57\",\n        \"label\": {\n          \"Bangla\": \"Tetanus\",\n          \"English\": \"Tetanus\"\n        }\n      },\n      {\n        \"myfilter\": \"M4\",\n        \"name\": \"58\",\n        \"label\": {\n          \"Bangla\": \"Theileriosis\",\n          \"English\": \"Theileriosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M4\",\n        \"name\": \"59\",\n        \"label\": {\n          \"Bangla\": \"Tick Infestation\",\n          \"English\": \"Tick Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M4\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Other\",\n          \"English\": \"Other\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Anaplasmosis\",\n          \"English\": \"Anaplasmosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Anthrax\",\n          \"English\": \"Anthrax\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"8\",\n        \"label\": {\n          \"Bangla\": \"Babesiosis\",\n          \"English\": \"Babesiosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"11\",\n        \"label\": {\n          \"Bangla\": \"Brucellosis\",\n          \"English\": \"Brucellosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"14\",\n        \"label\": {\n          \"Bangla\": \"Coccidiosis\",\n          \"English\": \"Coccidiosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"17\",\n        \"label\": {\n          \"Bangla\": \"Dermatophilosis\",\n          \"English\": \"Dermatophilosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"22\",\n        \"label\": {\n          \"Bangla\": \"Foot and Mouth Disease (FMD)\",\n          \"English\": \"Foot and Mouth Disease (FMD)\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"23\",\n        \"label\": {\n          \"Bangla\": \"Foot rot\",\n          \"English\": \"Foot rot\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"26\",\n        \"label\": {\n          \"Bangla\": \"Gangrene\",\n          \"English\": \"Gangrene\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"30\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhagic Septicemia (HS)\",\n          \"English\": \"Hemorrhagic Septicemia (HS)\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"36\",\n        \"label\": {\n          \"Bangla\": \"Lice Infestation\",\n          \"English\": \"Lice Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"37\",\n        \"label\": {\n          \"Bangla\": \"Liver Fluke\",\n          \"English\": \"Liver Fluke\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"40\",\n        \"label\": {\n          \"Bangla\": \"Mastitis\",\n          \"English\": \"Mastitis\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"42\",\n        \"label\": {\n          \"Bangla\": \"Mite Infestation\",\n          \"English\": \"Mite Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"44\",\n        \"label\": {\n          \"Bangla\": \"Navel Ill\",\n          \"English\": \"Navel Ill\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"48\",\n        \"label\": {\n          \"Bangla\": \"Rabies\",\n          \"English\": \"Rabies\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"49\",\n        \"label\": {\n          \"Bangla\": \"Ringworm (Dermatophytosis)\",\n          \"English\": \"Ringworm (Dermatophytosis)\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"50\",\n        \"label\": {\n          \"Bangla\": \"Round Worm\",\n          \"English\": \"Round Worm\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"55\",\n        \"label\": {\n          \"Bangla\": \"Tape Worm\",\n          \"English\": \"Tape Worm\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"56\",\n        \"label\": {\n          \"Bangla\": \"Teat Sore\",\n          \"English\": \"Teat Sore\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"57\",\n        \"label\": {\n          \"Bangla\": \"Tetanus\",\n          \"English\": \"Tetanus\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"58\",\n        \"label\": {\n          \"Bangla\": \"Theileriosis\",\n          \"English\": \"Theileriosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"59\",\n        \"label\": {\n          \"Bangla\": \"Tick Infestation\",\n          \"English\": \"Tick Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M7\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Others\",\n          \"English\": \"Others\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Anaplasmosis\",\n          \"English\": \"Anaplasmosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Anthrax\",\n          \"English\": \"Anthrax\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"8\",\n        \"label\": {\n          \"Bangla\": \"Babesiosis\",\n          \"English\": \"Babesiosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"9\",\n        \"label\": {\n          \"Bangla\": \"Black Quarter (BQ)\",\n          \"English\": \"Black Quarter (BQ)\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"10\",\n        \"label\": {\n          \"Bangla\": \"Bovine Tuberculosis\",\n          \"English\": \"Bovine Tuberculosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"11\",\n        \"label\": {\n          \"Bangla\": \"Brucellosis\",\n          \"English\": \"Brucellosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"12\",\n        \"label\": {\n          \"Bangla\": \"Calf Scour\",\n          \"English\": \"Calf Scour\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"14\",\n        \"label\": {\n          \"Bangla\": \"Coccidiosis\",\n          \"English\": \"Coccidiosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"16\",\n        \"label\": {\n          \"Bangla\": \"Contagious Caprine Pleuropneumonia\",\n          \"English\": \"Contagious Caprine Pleuropneumonia\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"17\",\n        \"label\": {\n          \"Bangla\": \"Dermatophilosis\",\n          \"English\": \"Dermatophilosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"21\",\n        \"label\": {\n          \"Bangla\": \"Ephemeral Fever\",\n          \"English\": \"Ephemeral Fever\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"22\",\n        \"label\": {\n          \"Bangla\": \"Foot and Mouth Disease (FMD)\",\n          \"English\": \"Foot and Mouth Disease (FMD)\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"23\",\n        \"label\": {\n          \"Bangla\": \"Foot rot\",\n          \"English\": \"Foot rot\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"26\",\n        \"label\": {\n          \"Bangla\": \"Gangrene\",\n          \"English\": \"Gangrene\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"28\",\n        \"label\": {\n          \"Bangla\": \"Gid Disease (Cerebral coenurosis)\",\n          \"English\": \"Gid Disease (Cerebral coenurosis)\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"29\",\n        \"label\": {\n          \"Bangla\": \"Goat Pox\",\n          \"English\": \"Goat Pox\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"30\",\n        \"label\": {\n          \"Bangla\": \"Hemorrhagic Septicemia (HS)\",\n          \"English\": \"Hemorrhagic Septicemia (HS)\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"31\",\n        \"label\": {\n          \"Bangla\": \"Hump Sore\",\n          \"English\": \"Hump Sore\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"35\",\n        \"label\": {\n          \"Bangla\": \"Jhone\\u2019s Disease (Paratuberculosis)\",\n          \"English\": \"Jhone\\u2019s Disease (Paratuberculosis)\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"36\",\n        \"label\": {\n          \"Bangla\": \"Lice Infestation\",\n          \"English\": \"Lice Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"37\",\n        \"label\": {\n          \"Bangla\": \"Liver Fluke\",\n          \"English\": \"Liver Fluke\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"40\",\n        \"label\": {\n          \"Bangla\": \"Mastitis\",\n          \"English\": \"Mastitis\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"41\",\n        \"label\": {\n          \"Bangla\": \"Milk Fever\",\n          \"English\": \"Milk Fever\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"42\",\n        \"label\": {\n          \"Bangla\": \"Mite Infestation\",\n          \"English\": \"Mite Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"44\",\n        \"label\": {\n          \"Bangla\": \"Navel Ill\",\n          \"English\": \"Navel Ill\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"47\",\n        \"label\": {\n          \"Bangla\": \"Pesti des Petits Ruminants\",\n          \"English\": \"Pesti des Petits Ruminants\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"48\",\n        \"label\": {\n          \"Bangla\": \"Rabies\",\n          \"English\": \"Rabies\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"49\",\n        \"label\": {\n          \"Bangla\": \"Ringworm (Dermatophytosis)\",\n          \"English\": \"Ringworm (Dermatophytosis)\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"50\",\n        \"label\": {\n          \"Bangla\": \"Round Worm\",\n          \"English\": \"Round Worm\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"51\",\n        \"label\": {\n          \"Bangla\": \"Ruminal Tympany/ Bloat\",\n          \"English\": \"Ruminal Tympany/ Bloat\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"53\",\n        \"label\": {\n          \"Bangla\": \"Sheep Pox\",\n          \"English\": \"Sheep Pox\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"54\",\n        \"label\": {\n          \"Bangla\": \"Stringhalt\",\n          \"English\": \"Stringhalt\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"55\",\n        \"label\": {\n          \"Bangla\": \"Tape Worm\",\n          \"English\": \"Tape Worm\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"56\",\n        \"label\": {\n          \"Bangla\": \"Teat Sore\",\n          \"English\": \"Teat Sore\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"57\",\n        \"label\": {\n          \"Bangla\": \"Tetanus\",\n          \"English\": \"Tetanus\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"58\",\n        \"label\": {\n          \"Bangla\": \"Theileriosis\",\n          \"English\": \"Theileriosis\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"59\",\n        \"label\": {\n          \"Bangla\": \"Tick Infestation\",\n          \"English\": \"Tick Infestation\"\n        }\n      },\n      {\n        \"myfilter\": \"M_Other\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Others\",\n          \"English\": \"Others\"\n        }\n      }\n    ],\n    \"rapid_test_bird\": [\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Avian influenza\",\n          \"English\": \"Avian influenza\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"CMT\",\n          \"English\": \"CMT\"\n        }\n      },\n      {\n        \"myfilter\": \"1\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Other\",\n          \"English\": \"Other\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Mycoplasma\",\n          \"English\": \"Mycoplasma\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"4\",\n        \"label\": {\n          \"Bangla\": \"Newcastle Disease\",\n          \"English\": \"Newcastle Disease\"\n        }\n      },\n      {\n        \"myfilter\": \"2\",\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Other\",\n          \"English\": \"Other\"\n        }\n      }\n    ],\n    \"species_rearing_purpose\": [\n      {\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Milk\",\n          \"English\": \"Milk\"\n        }\n      },\n      {\n        \"name\": \"2\",\n        \"label\": {\n          \"Bangla\": \"Meat\",\n          \"English\": \"Meat\"\n        }\n      },\n      {\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Working\",\n          \"English\": \"Working\"\n        }\n      },\n      {\n        \"name\": \"4\",\n        \"label\": {\n          \"Bangla\": \"Hobby\",\n          \"English\": \"Hobby\"\n        }\n      },\n      {\n        \"name\": \"5\",\n        \"label\": {\n          \"Bangla\": \"Fiber/Wool\",\n          \"English\": \"Fiber/Wool\"\n        }\n      },\n      {\n        \"name\": \"6\",\n        \"label\": {\n          \"Bangla\": \"Multi-purpose\",\n          \"English\": \"Multi-purpose\"\n        }\n      }\n    ],\n    \"microscopic_test_ear_1\": [\n      {\n        \"name\": \"1\",\n        \"label\": {\n          \"Bangla\": \"Auricular chondritis\",\n          \"English\": \"Auricular chondritis\"\n        }\n      },\n      {\n        \"name\": \"3\",\n        \"label\": {\n          \"Bangla\": \"Hair loss on the outer ear\",\n          \"English\": \"Hair loss on the outer ear\"\n        }\n      },\n      {\n        \"name\": \"4\",\n        \"label\": {\n          \"Bangla\": \"Lice\",\n          \"English\": \"Lice\"\n        }\n      },\n      {\n        \"name\": \"5\",\n        \"label\": {\n          \"Bangla\": \"Mite\",\n          \"English\": \"Mite\"\n        }\n      },\n      {\n        \"name\": \"6\",\n        \"label\": {\n          \"Bangla\": \"Nodular granulomatous dermatitis\",\n          \"English\": \"Nodular granulomatous dermatitis\"\n        }\n      },\n      {\n        \"name\": \"7\",\n        \"label\": {\n          \"Bangla\": \"Tick\",\n          \"English\": \"Tick\"\n        }\n      },\n      {\n        \"name\": \"8\",\n        \"label\": {\n          \"Bangla\": \"Tissue death of the pinna\",\n          \"English\": \"Tissue death of the pinna\"\n        }\n      },\n      {\n        \"name\": \"00\",\n        \"label\": {\n          \"Bangla\": \"Others\",\n          \"English\": \"Others\"\n        }\n      }\n    ]\n  },\n  \"id_string\": \"patient_registry\"\n};\n\nexport const geo = [\n  {\n    district_code: '1004',\n    district_name: 'BargunaH',\n    division_code: '10',\n    division_name: 'Barisal',\n    union_code: '10040913',\n    union_name: 'Amtali',\n    upazila_code: '100409',\n    upazila_name: 'Amtali',\n  },\n  {\n    district_code: '1005',\n    district_name: 'BargunaL',\n    division_code: '10',\n    division_name: 'Barisal',\n    union_code: '10040915',\n    union_name: 'Arpangashia',\n    upazila_code: '100409',\n    upazila_name: 'Amtali',\n  },\n  {\n    district_code: '2003',\n    district_name: 'Bandarban',\n    division_code: '20',\n    division_name: 'Chittagong',\n    union_code: '20030431',\n    union_name: 'Alikadam',\n    upazila_code: '200304',\n    upazila_name: 'Alikadam',\n  },\n  {\n    district_code: '2003',\n    district_name: 'Bandarban',\n    division_code: '20',\n    division_name: 'Chittagong',\n    union_code: '20030480',\n    union_name: 'Nayapara',\n    upazila_code: '200304',\n    upazila_name: 'Alikadam',\n  },\n];\n\n/* tslint:enable */\nexport type DEMO_FORM_JSON = typeof DEMO_FORM_JSON;\n","let actualExpression: string;\nlet currentHierarchicalName: string = '';\nlet formItemProperty: any = {};\nlet userInput: any = {};\n\nfunction tokenizeCharacter(type: any, value: any, input: any, current: any) {\n  return value === input[current] ? [1, { type, value }] : [0, null];\n}\n\nfunction tokenizeParenOpen(input: any, current: any) {\n  return tokenizeCharacter('paren', '(', input, current);\n}\n\nfunction tokenizeBrakeOpen(input: any, current: any) {\n  return tokenizeCharacter('brac', '[', input, current);\n}\n\nfunction tokenizeBrakeClose(input: any, current: any) {\n  return tokenizeCharacter('brac', ']', input, current);\n}\n\nfunction tokenizeParenClose(input: any, current: any) {\n  return tokenizeCharacter('paren', ')', input, current);\n}\n\nfunction tokenizeEqual(input: any, current: any) {\n  return tokenizeCharacter('equal', '=', input, current);\n}\n\nfunction tokenizePlus(input: any, current: any) {\n  return tokenizeCharacter('plus', '+', input, current);\n}\n\nfunction tokenizeMinus(input: any, current: any) {\n  return tokenizeCharacter('minus', '-', input, current);\n}\n\nfunction tokenizeMultiply(input: any, current: any) {\n  return tokenizeCharacter('multiply', '*', input, current);\n}\n\nfunction tokenizeDivide(input: any, current: any) {\n  return tokenizeCharacter('divide', '/', input, current);\n}\n\nfunction tokenizeLessThan(input: any, current: any) {\n  return tokenizeCharacter('lessThan', '<', input, current);\n}\n\nfunction tokenizeGreaterThan(input: any, current: any) {\n  return tokenizeCharacter('greaterThan', '>', input, current);\n}\n\nfunction tokenizeNot(input: any, current: any) {\n  return tokenizeCharacter('not', '!', input, current);\n}\n\nfunction tokenizeComma(input: any, current: any) {\n  return tokenizeCharacter('comma', ',', input, current);\n}\n\nfunction tokenizeDot(input: any, current: any) {\n  return tokenizeCharacter('dot', '.', input, current);\n}\n\nfunction tokenizePattern(type: any, pattern: any, input: any, current: any) {\n  let char = input[current];\n  let consumedChars = 0;\n  if (pattern.test(char)) {\n    let value = '';\n    while (char && pattern.test(char)) {\n      value += char;\n      consumedChars += 1;\n      char = input[current + consumedChars];\n    }\n    return [consumedChars, { type, value }];\n  }\n  return [0, null];\n}\n\nfunction tokenizeString(input: any, current: any) {\n  if (input[current] === '\"' || input[current] === \"'\") {\n    const matchQuote = input[current];\n    let value = '';\n    let consumedChars = 0;\n    consumedChars += 1;\n    let char = input[current + consumedChars];\n    while (char !== matchQuote) {\n      if (char === undefined) {\n        throw new TypeError('unterminated string ');\n      }\n      value += char;\n      consumedChars += 1;\n      char = input[current + consumedChars];\n    }\n    return [consumedChars + 1, { type: 'string', value }];\n  }\n  return [0, null];\n}\n\nfunction tokenizeFunction(input: any, current: any) {\n  if (/[a-z_]/i.test(input[current])) {\n    let value = '';\n    let consumedChars = 0;\n    // consumedChars ++;\n    let char = input[current + consumedChars];\n    while (char && /[:a-z0-9_-]/i.test(char)) {\n      if (char === undefined) {\n        throw new TypeError('unterminated string ');\n      }\n      value += char;\n      consumedChars += 1;\n      char = input[current + consumedChars];\n    }\n    while (char && /\\s/.test(char)) {\n      consumedChars += 1;\n      char = input[current + consumedChars];\n    }\n    if (char && char === '(') {\n      return [consumedChars, { type: 'function', value }];\n    }\n  }\n  return [0, null];\n}\n\nfunction tokenizeNumber(input: any, current: any) {\n  if (/[0-9]/i.test(input[current])) {\n    let value = '';\n    let consumedChars = 0;\n    // consumedChars ++;\n    let char = input[current + consumedChars];\n    while (/[0-9]/i.test(char)) {\n      if (char === undefined) {\n        throw new TypeError('unterminated string ');\n      }\n      value += char;\n      consumedChars += 1;\n      char = input[current + consumedChars];\n    }\n    if (char !== '.') {\n      return [consumedChars, { type: 'number', value }];\n    }\n  }\n  return [0, null];\n}\n\nfunction tokenizeDecimal(input: any, current: any) {\n  if (/[0-9.]/i.test(input[current])) {\n    let value = '';\n    let consumedChars = 0;\n    // consumedChars ++;\n    let char = input[current + consumedChars];\n    while (/[0-9]/i.test(char)) {\n      if (char === undefined) {\n        throw new TypeError('unterminated string ');\n      }\n      value += char;\n      consumedChars += 1;\n      char = input[current + consumedChars];\n    }\n    if (char === '.') {\n      value += char;\n      consumedChars += 1;\n      char = input[current + consumedChars];\n      if (/[0-9]/i.test(char)) {\n        while (/[0-9]/i.test(char)) {\n          if (char === undefined) {\n            throw new TypeError('unterminated string ');\n          }\n          value += char;\n          consumedChars += 1;\n          char = input[current + consumedChars];\n        }\n        return [consumedChars, { type: 'decimal', value }];\n      }\n    }\n  }\n  return [0, null];\n}\n\nfunction tokenizeVariable(input: any, current: any) {\n  if (input[current] === '#' || input[current] === '$') {\n    if (input[current + 1] && input[current + 1] === '{') {\n      let value = '';\n      let consumedChars = 1;\n      consumedChars += 1;\n      let char = input[current + consumedChars];\n      while (char !== '}') {\n        if (char === undefined) {\n          throw new TypeError('unterminated string ');\n        }\n        value += char;\n        consumedChars += 1;\n        char = input[current + consumedChars];\n      }\n      return [consumedChars + 1, { type: 'variable', value }];\n    }\n  }\n  return [0, null];\n}\n\nfunction tokenizeOr(input: any, current: any) {\n  if (input[current] === 'o') {\n    if (input[current + 1] && input[current + 1] === 'r') {\n      if (\n        input[current + 2] === undefined ||\n        /[0-9\\s]/.test(input[current + 2])\n      ) {\n        return [2, { type: 'or', value: 'or' }];\n      }\n    }\n  }\n  return [0, null];\n}\n\nfunction tokenizeIf(input: any, current: any) {\n  if (input[current] === 'i') {\n    if (input[current + 1] && input[current + 1] === 'f') {\n      if (\n        input[current + 2] === undefined ||\n        !/[a-z]i/.test(input[current + 2])\n      ) {\n        return [2, { type: 'if', value: 'if' }];\n      }\n    }\n  }\n  return [0, null];\n}\n\nfunction tokenizeAnd(input: any, current: any) {\n  if (input[current] === 'a') {\n    if (input[current + 1] && input[current + 1] === 'n') {\n      if (input[current + 2] && input[current + 2] === 'd') {\n        if (\n          input[current + 3] === undefined ||\n          /[0-9\\s]/.test(input[current + 3])\n        ) {\n          return [3, { type: 'and', value: 'and' }];\n        }\n      }\n    }\n  }\n  return [0, null];\n}\n\nfunction tokenizeDiv(input: any, current: any) {\n  if (input[current] === 'd') {\n    if (input[current + 1] && input[current + 1] === 'i') {\n      if (input[current + 2] && input[current + 2] === 'v') {\n        if (\n          input[current + 3] === undefined ||\n          /[0-9\\s]/.test(input[current + 3])\n        ) {\n          return [3, { type: 'divide', value: '/' }];\n        }\n      }\n    }\n  }\n  return [0, null];\n}\n\nfunction tokenizeName(input: any, current: any) {\n  return tokenizePattern('name', /[a-z]/i, input, current);\n}\n\nfunction skipWhiteSpace(input: any, current: any) {\n  return /\\s/.test(input[current]) ? [1, null] : [0, null];\n}\n\nconst tokenizers = [\n  skipWhiteSpace,\n  tokenizeParenOpen,\n  tokenizeParenClose,\n  tokenizeIf,\n  tokenizeOr,\n  tokenizeAnd,\n  tokenizeVariable,\n  tokenizeString,\n  tokenizeFunction,\n  tokenizeEqual,\n  tokenizePlus,\n  tokenizeMinus,\n  tokenizeMultiply,\n  tokenizeDivide,\n  tokenizeDiv,\n  tokenizeLessThan,\n  tokenizeGreaterThan,\n  tokenizeNot,\n  tokenizeBrakeOpen,\n  tokenizeBrakeClose,\n  tokenizeDot,\n  tokenizeComma,\n  tokenizeNumber,\n  tokenizeDecimal,\n  tokenizeName,\n];\n\nfunction tokenizer(input: any) {\n  let current: number = 0;\n  const tokens: any = [];\n  while (current < input.length) {\n    let tokenized = false;\n    tokenizers.forEach(tokenizerFn => {\n      if (tokenized) {\n        return;\n      }\n      const [consumedChars, token]: any = tokenizerFn(input, current);\n      if (consumedChars !== 0) {\n        tokenized = true;\n        current += consumedChars;\n      }\n      if (token) {\n        tokens.push(token);\n      }\n    });\n    if (!tokenized) {\n      throw new TypeError(\n        `I dont know what this character is: ${input[current]}`\n      );\n    }\n  }\n  return tokens;\n}\n\n// tslint:disable-next-line: variable-name\nfunction kbSelected(funcName: any, params: any, _paramsTokens: any) {\n  if (funcName === 'selected') {\n    let tmp = false;\n    if (Array.isArray(params[0])) {\n      params[0].forEach((element: any) => {\n        // tslint:disable-next-line: triple-equals\n        tmp = tmp || element == params[1];\n      });\n      return [true, tmp];\n    }\n    // tslint:disable-next-line: triple-equals\n    return [true, params[0] == params[1]];\n  }\n  return [false, null];\n}\n\n// tslint:disable-next-line: variable-name\nfunction kbToday(funcName: any, _params: any, _paramsTokens: any) {\n  // tslint:disable-next-line: triple-equals\n  if (funcName == 'today') {\n    const d = new Date();\n    d.setHours(0, 0, 0, 0);\n    return [true, d];\n  }\n  return [false, null];\n}\n\n// tslint:disable-next-line: variable-name\nfunction kbRound(funcName: any, params: any, _paramsTokens: any) {\n  // tslint:disable-next-line: triple-equals\n  if (funcName == 'round') {\n    if (params[0] && params[1]) {\n      if (typeof params[0] === 'number' && typeof params[1] === 'number') {\n        return [true, params[0].toFixed(params[1])];\n      }\n      if (typeof params[0] === 'string' && typeof params[1] === 'number') {\n        return [true, parseFloat(params[0]).toFixed(params[1])];\n      }\n    }\n  }\n  return [false, null];\n}\n\n// tslint:disable-next-line: variable-name\nfunction kbRegex(funcName: any, params: any, _paramsTokens: any) {\n  // tslint:disable-next-line: triple-equals\n  if (funcName == 'regex') {\n    const regex = RegExp(params[1]);\n    return [true, regex.test(params[0])];\n  }\n  return [false, null];\n}\n\n// tslint:disable-next-line: variable-name\nfunction kbCountSelected(funcName: any, params: any, _paramsTokens: any) {\n  // tslint:disable-next-line: triple-equals\n  if (funcName == 'count-selected') {\n    if (params[0] && Array.isArray(params[0])) {\n      return [true, params[0].length];\n    }\n    if (params[0] && typeof params[0] !== 'object') {\n      return [true, 1];\n    }\n    return [true, 0];\n  }\n  return [false, null];\n}\n\n// tslint:disable-next-line: variable-name\nfunction kbInt(funcName: any, params: any, _paramsTokens: any) {\n  // tslint:disable-next-line: triple-equals\n  if (funcName == 'int') {\n    if (typeof params[0] === 'string') {\n      return [true, parseInt(params[0], 10)];\n    }\n  }\n  return [false, null];\n}\n\n// tslint:disable-next-line: variable-name\nfunction kbCoalesce(funcName: any, params: any, _paramsTokens: any) {\n  // tslint:disable-next-line: triple-equals\n  if (funcName == 'coalesce') {\n    if (!params[0] && params[0] !== 0) {\n      return [true, params[1]];\n    }\n    return [true, params[0]];\n  }\n  return [false, null];\n}\n\n// tslint:disable-next-line: variable-name\nfunction kbPosition(funcName: any, _params: any, _paramsTokens: any) {\n  // tslint:disable-next-line: triple-equals\n  if (funcName == 'position') {\n    if (currentHierarchicalName) {\n      const tmpName = currentHierarchicalName.split('/');\n      if (tmpName.length > 2) {\n        return [true, parseInt(tmpName[tmpName.length - 2], 10) + 1];\n      }\n    }\n  }\n  return [false, null];\n}\n\nfunction sumValuesOverJsn(sum: any, jsnObj: any, variableName: any) {\n  if (Array.isArray(jsnObj)) {\n    let i;\n    for (i = 0; i < jsnObj.length; i += 1) {\n      sum = sumValuesOverJsn(sum, jsnObj[i], variableName);\n    }\n  } else if (typeof jsnObj === 'object') {\n    for (const key in jsnObj) {\n      if (typeof jsnObj[key] === 'object') {\n        sum = sumValuesOverJsn(sum, jsnObj[key], variableName);\n      } else if (key === variableName) {\n        if (typeof jsnObj[key] === 'string') {\n          sum += parseFloat(jsnObj[key]);\n        }\n        if (typeof jsnObj[key] === 'number') {\n          sum += jsnObj[key];\n        }\n      }\n    }\n  }\n  return sum;\n}\n\n// tslint:disable-next-line: variable-name\nfunction kbSum(funcName: any, _params: any, paramsTokens: any) {\n  // tslint:disable-next-line: triple-equals\n  if (funcName == 'sum') {\n    let sumValue = null;\n    if (\n      paramsTokens &&\n      paramsTokens.length > 0 &&\n      paramsTokens[0] &&\n      paramsTokens[0].length > 0 &&\n      paramsTokens[0][0].type === 'variable'\n    ) {\n      sumValue = sumValuesOverJsn(0, userInput, paramsTokens[0][0].value);\n    }\n    return [true, sumValue];\n  }\n  return [false, null];\n}\n\n// tslint:disable-next-line: variable-name\nfunction kbConcat(funcName: any, params: any, _paramsTokens: any) {\n  // tslint:disable-next-line: triple-equals\n  if (funcName == 'concat') {\n    if (params && params.length > 0) {\n      let concatStr = '';\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i < params.length; i += 1) {\n        if (params[i] == null) {\n          return [false, null];\n        }\n        concatStr += params[i];\n      }\n      return [true, concatStr];\n    }\n  }\n  return [false, null];\n}\n\n// tslint:disable-next-line: variable-name\nfunction kbSubstr(funcName: any, params: any, _paramsTokens: any) {\n  // tslint:disable-next-line: triple-equals\n  if (funcName == 'substr') {\n    if (params && params.length > 0) {\n      if (params[0] && params[1] !== null) {\n        if (params[2] !== null && params[2] < params[0].length) {\n          const subStr = params[0].substring(params[1], params[2]);\n          return [true, subStr];\n        }\n        return [true, params[0].substring(params[1])];\n      }\n    }\n  }\n  return [false, null];\n}\n\nfunction outerScopedVariables(\n  variableName: any,\n  variableValue: any,\n  tmpUserInput: any\n): any {\n  // tslint:disable-next-line: forin\n  for (const key in tmpUserInput) {\n    const nodeNames = key.split('/');\n    const variableNameFromKey = nodeNames[nodeNames.length - 1];\n    if (variableNameFromKey === variableName) {\n      return tmpUserInput[key];\n    }\n    if (typeof tmpUserInput[key] === 'object') {\n      if (variableValue == null) {\n        variableValue = outerScopedVariables(\n          variableName,\n          variableValue,\n          tmpUserInput[key]\n        );\n      }\n    }\n  }\n  return variableValue;\n}\n\nfunction parseMostClosestScopedVariable(variableName: any) {\n  const tmpHierchicalName = currentHierarchicalName.split('/');\n  let i;\n  const tmpUserInput = userInput;\n  let variableValue = null;\n  variableValue = outerScopedVariables(\n    variableName,\n    variableValue,\n    tmpUserInput\n  );\n  let parent = '';\n  for (i = 0; i < tmpHierchicalName.length - 1; ) {\n    // tslint:disable-next-line: triple-equals\n    if (tmpHierchicalName[i] == 'repeat') {\n      i += 1;\n      const index = parseInt(tmpHierchicalName[i + 1], 10);\n      variableValue = outerScopedVariables(\n        variableName,\n        variableValue,\n        tmpUserInput[parent + tmpHierchicalName[i]][index]\n      );\n      i += 2;\n    } else {\n      // path.push(parent + tmpHierchicalName[i + 1]);\n      parent = parent + tmpHierchicalName[i + 1] + '/';\n      i += 2;\n    }\n  }\n  return variableValue;\n}\n\nfunction parseDot() {\n  const tmpHierchicalName = currentHierarchicalName.split('/');\n  let i;\n  let tmpUserInput = userInput;\n  let parent = '';\n  const path = [];\n  for (i = 0; i < tmpHierchicalName.length - 1; ) {\n    // tslint:disable-next-line: triple-equals\n    if (tmpHierchicalName[i] == 'repeat') {\n      i += 1;\n      path.push(parent + tmpHierchicalName[i]);\n      path.push(parseInt(tmpHierchicalName[i + 1], 10));\n      parent = parent + tmpHierchicalName[i] + '/';\n      i += 2;\n    } else {\n      // path.push(parent + tmpHierchicalName[i + 1]);\n      parent = parent + tmpHierchicalName[i + 1] + '/';\n      i += 2;\n    }\n  }\n  path.push(parent + tmpHierchicalName[tmpHierchicalName.length - 1]);\n  tmpUserInput = userInput.getIn(path);\n  return tmpUserInput;\n}\n\n// tslint:disable-next-line: variable-name\nfunction parseLiterals(_tmpOutput: any, tokens: any, current: any) {\n  if (tokens[current].type === 'number') {\n    return [1, parseInt(tokens[current].value, 10)];\n  }\n  if (tokens[current].type === 'string') {\n    return [1, tokens[current].value];\n  }\n  if (tokens[current].type === 'decimal') {\n    return [1, parseFloat(tokens[current].value)];\n  }\n  if (tokens[current].type === 'variable') {\n    return [1, parseMostClosestScopedVariable(tokens[current].value)];\n  }\n  if (tokens[current].type === 'name') {\n    if (tokens[current].value.toLowerCase() === 'true') {\n      return [1, true];\n    }\n    if (tokens[current].value.toLowerCase() === 'false') {\n      return [1, false];\n    }\n    if (tokens[current].value in formItemProperty) {\n      return [1, formItemProperty[tokens[current].value]];\n    }\n    return [1, null];\n  }\n  if (tokens[current].type === 'dot') {\n    return [1, parseDot()];\n  }\n  return [0, null];\n}\n\n// tslint:disable-next-line: variable-name\nfunction parseFunction(_output: any, tokens: any, current: any) {\n  const possibleFunctions = [\n    kbSelected,\n    kbCountSelected,\n    kbToday,\n    kbRegex,\n    kbInt,\n    kbCoalesce,\n    kbPosition,\n    kbSum,\n    kbConcat,\n    kbSubstr,\n    kbRound,\n  ];\n  if (tokens[current].type === 'function') {\n    const funcName = tokens[current].value;\n    const arrayOfParams: any = [];\n    const arrayOfOriginalTokens: any = [];\n    let i = 1;\n    if (\n      tokens[current + i].type === 'paren' &&\n      tokens[current + i].value === '('\n    ) {\n      const tmpQueue = [];\n      tmpQueue.push(1);\n      i += 1;\n      let tmpTokens = [];\n      while (tokens[current + i] && tmpQueue.length) {\n        tmpTokens.push(tokens[current + i]);\n        if (\n          tokens[current + i].type === 'paren' &&\n          tokens[current + i].value === ')'\n        ) {\n          tmpQueue.pop();\n        }\n        if (\n          tokens[current + i].type === 'paren' &&\n          tokens[current + i].value === '('\n        ) {\n          tmpQueue.push(1);\n        }\n        if (tokens[current + i].type === 'comma' && tmpQueue.length === 1) {\n          tmpTokens.pop();\n          const tmpVal = parser(null, tmpTokens, 0);\n          arrayOfParams.push(tmpVal);\n          arrayOfOriginalTokens.push(tmpTokens);\n          tmpTokens = [];\n        }\n        i += 1;\n      }\n      i -= 1;\n\n      if (\n        tokens[current + i].type === 'paren' &&\n        tokens[current + i].value === ')'\n      ) {\n        tmpTokens.pop();\n        const tmpVal = parser(null, tmpTokens, 0);\n        arrayOfParams.push(tmpVal);\n        arrayOfOriginalTokens.push(tmpTokens);\n        let parsedFn = false;\n        let parsedVal = null;\n        possibleFunctions.forEach(functionFn => {\n          if (parsedFn) {\n            return;\n          }\n          [parsedFn, parsedVal] = functionFn(\n            funcName,\n            arrayOfParams,\n            arrayOfOriginalTokens\n          );\n        });\n        if (parsedFn) {\n          return [i + 1, parsedVal];\n        }\n      }\n    }\n  }\n  return [0, null];\n}\n\n// tslint:disable-next-line: variable-name\nfunction parseIf(_output: any, tokens: any, current: any) {\n  if (tokens[current].type === 'if') {\n    const arrayOfParams = [];\n    let i = 1;\n    if (\n      tokens[current + i].type === 'paren' &&\n      tokens[current + i].value === '('\n    ) {\n      const tmpQueue = [];\n      tmpQueue.push(1);\n      i += 1;\n      let tmpTokens = [];\n      while (tokens[current + i] && tmpQueue.length) {\n        tmpTokens.push(tokens[current + i]);\n        if (\n          tokens[current + i].type === 'paren' &&\n          tokens[current + i].value === ')'\n        ) {\n          tmpQueue.pop();\n        }\n        if (\n          tokens[current + i].type === 'paren' &&\n          tokens[current + i].value === '('\n        ) {\n          tmpQueue.push(1);\n        }\n        if (tokens[current + i].type === 'comma' && tmpQueue.length === 1) {\n          tmpTokens.pop();\n          const tmpVal = parser(null, tmpTokens, 0);\n          arrayOfParams.push(tmpVal);\n          tmpTokens = [];\n        }\n        i += 1;\n      }\n      i -= 1;\n\n      if (\n        tokens[current + i].type === 'paren' &&\n        tokens[current + i].value === ')'\n      ) {\n        tmpTokens.pop();\n        const tmpVal = parser(null, tmpTokens, 0);\n        arrayOfParams.push(tmpVal);\n        if (arrayOfParams.length % 2 === 0) {\n          let j;\n          for (j = 0; j < arrayOfParams.length; j += 2) {\n            if (arrayOfParams[j]) {\n              return [i + 1, arrayOfParams[j + 1]];\n            }\n          }\n        } else {\n          let j;\n          for (j = 0; j < arrayOfParams.length - 1; j += 2) {\n            if (arrayOfParams[j]) {\n              return [i + 1, arrayOfParams[j + 1]];\n            }\n          }\n          return [i + 1, arrayOfParams[arrayOfParams.length - 1]];\n        }\n      }\n    }\n  }\n  return [0, null];\n}\n\nfunction parseNot(output: any, tokens: any, current: any) {\n  if (tokens[current].type === 'not') {\n    let tmpTokens;\n    let i = 1;\n    if (tokens[current + i].type === 'equal' && output != null) {\n      tmpTokens = [];\n      i += 1;\n      const terminatingTokens = ['and', 'or'];\n      while (\n        tokens[current + i] &&\n        terminatingTokens.indexOf(tokens[current + i].type) === -1\n      ) {\n        tmpTokens.push(tokens[current + i]);\n        i += 1;\n      }\n      let newOutput;\n      if (tmpTokens.length) {\n        newOutput = parser(null, tmpTokens, 0);\n        // tslint:disable-next-line: triple-equals\n        return [i, output != newOutput];\n      }\n    } else {\n      let parsed = false;\n      const possibleParsers = [\n        parseLiterals,\n        parseMinus,\n        parseParen,\n        parseFunction,\n      ];\n      let consumedTokens;\n      let newOutput;\n      possibleParsers.forEach(parserFn => {\n        if (parsed) {\n          return;\n        }\n        if (parserFn === parseMinus) {\n          [consumedTokens, newOutput] = parserFn(null, tokens, current + 1);\n        } else {\n          [consumedTokens, newOutput] = parserFn(output, tokens, current + 1);\n        }\n        if (consumedTokens !== 0) {\n          parsed = true;\n          i += consumedTokens;\n        }\n      });\n      if (parsed) {\n        return [i, !newOutput];\n      }\n    }\n  }\n  return [0, null];\n}\n\nfunction parseAnd(output: any, tokens: any, current: any): any {\n  if (tokens[current].type === 'and' && output != null) {\n    const tmpTokens = [];\n    let i = 1;\n    let newOutput = null;\n    if (\n      tokens[current + i].type === 'paren' &&\n      tokens[current + i].value === '('\n    ) {\n      let consumedChars;\n      [consumedChars, newOutput] = parseParen(null, tokens, current + i);\n      i += consumedChars;\n    } else {\n      const terminatingTokens = ['and', 'or'];\n      while (\n        tokens[current + i] &&\n        terminatingTokens.indexOf(tokens[current + i].type) === -1\n      ) {\n        tmpTokens.push(tokens[current + i]);\n        i += 1;\n      }\n      if (tmpTokens.length) {\n        newOutput = parser(null, tmpTokens, 0);\n      }\n    }\n    if (newOutput != null) {\n      newOutput = output && newOutput;\n      if (tokens[current + i] && tokens[current + i].type === 'and') {\n        let consumedChars = 0;\n        [consumedChars, newOutput] = parseAnd(newOutput, tokens, current + i);\n        i += consumedChars;\n      }\n      return [i, newOutput];\n    }\n  }\n  return [0, null];\n}\n\nfunction parseOr(output: any, tokens: any, current: any) {\n  if (tokens[current].type === 'or' && output != null) {\n    const tmpTokens = [];\n    let i = 1;\n    let newOutput = null;\n    if (\n      tokens[current + i].type === 'paren' &&\n      tokens[current + i].value === '('\n    ) {\n      let consumedChars;\n      [consumedChars, newOutput] = parseParen(null, tokens, current + i);\n      i += consumedChars;\n    } else {\n      const terminatingTokens = ['and', 'or'];\n      while (\n        tokens[current + i] &&\n        terminatingTokens.indexOf(tokens[current + i].type) === -1\n      ) {\n        tmpTokens.push(tokens[current + i]);\n        i += 1;\n      }\n      if (tmpTokens.length) {\n        newOutput = parser(null, tmpTokens, 0);\n      }\n    }\n    if (newOutput != null) {\n      if (tokens[current + i] && tokens[current + i].type === 'and') {\n        let consumedChars = 0;\n        [consumedChars, newOutput] = parseAnd(newOutput, tokens, current + i);\n        i += consumedChars;\n      }\n      return [i, output || newOutput];\n    }\n  }\n  return [0, null];\n}\n\nfunction parseEqual(output: any, tokens: any, current: any) {\n  if (tokens[current].type === 'equal' && output != null) {\n    const tmpTokens = [];\n    let i = 1;\n    const terminatingTokens = ['and', 'or'];\n    while (\n      tokens[current + i] &&\n      terminatingTokens.indexOf(tokens[current + i].type) === -1\n    ) {\n      tmpTokens.push(tokens[current + i]);\n      i += 1;\n    }\n    let newOutput;\n    if (tmpTokens.length) {\n      newOutput = parser(null, tmpTokens, 0);\n      // tslint:disable-next-line: triple-equals\n      return [i, output == newOutput];\n    }\n  }\n  return [0, null];\n}\n\nfunction parseLessThan(output: any, tokens: any, current: any) {\n  if (tokens[current].type === 'lessThan' && output != null) {\n    let flagLessThanOrEqual = false;\n    const tmpTokens = [];\n    let i = 1;\n    if (tokens[current + i].type === 'equal') {\n      i += 1;\n      flagLessThanOrEqual = true;\n    }\n    const terminatingTokens = ['and', 'or'];\n    while (\n      tokens[current + i] &&\n      terminatingTokens.indexOf(tokens[current + i].type) === -1\n    ) {\n      tmpTokens.push(tokens[current + i]);\n      i += 1;\n    }\n    let newOutput;\n    if (tmpTokens.length) {\n      newOutput = parser(null, tmpTokens, 0);\n      if (flagLessThanOrEqual) {\n        return [i, output <= newOutput];\n      }\n      return [i, output < newOutput];\n    }\n  }\n  return [0, null];\n}\n\nfunction parseGreaterThan(output: any, tokens: any, current: any) {\n  if (tokens[current].type === 'greaterThan' && output != null) {\n    let flagGreaterThanOrEqual = false;\n    const tmpTokens = [];\n    let i = 1;\n    if (tokens[current + i].type === 'equal') {\n      i += 1;\n      flagGreaterThanOrEqual = true;\n    }\n    const terminatingTokens = ['and', 'or'];\n    while (\n      tokens[current + i] &&\n      terminatingTokens.indexOf(tokens[current + i].type) === -1\n    ) {\n      tmpTokens.push(tokens[current + i]);\n      i += 1;\n    }\n    let newOutput;\n    if (tmpTokens.length) {\n      newOutput = parser(null, tmpTokens, 0);\n\n      if (flagGreaterThanOrEqual) {\n        return [i, output >= newOutput];\n      }\n      return [i, output > newOutput];\n    }\n  }\n  return [0, null];\n}\n\n// tslint:disable-next-line: variable-name\nfunction parseParen(_output: any, tokens: any, current: any) {\n  if (tokens[current].type === 'paren' && tokens[current].value === '(') {\n    const tmpQueue = [];\n    tmpQueue.push(1);\n    let i = 1;\n    const tmpTokens = [];\n    while (tokens[current + i] && tmpQueue.length) {\n      tmpTokens.push(tokens[current + i]);\n      if (\n        tokens[current + i].type === 'paren' &&\n        tokens[current + i].value === ')'\n      ) {\n        tmpQueue.pop();\n      }\n      if (\n        tokens[current + i].type === 'paren' &&\n        tokens[current + i].value === '('\n      ) {\n        tmpQueue.push(1);\n      }\n      i += 1;\n    }\n    i -= 1;\n\n    if (\n      tokens[current + i].type === 'paren' &&\n      tokens[current + i].value === ')'\n    ) {\n      tmpTokens.pop();\n      const tmpVal = parser(null, tmpTokens, 0);\n      return [i + 1, tmpVal];\n    }\n  }\n  return [0, null];\n}\n\nfunction parseDivide(output: any, tokens: any, current: any) {\n  if (output != null && tokens[current].type === 'divide') {\n    const possibleTokens = [\n      'number',\n      'decimal',\n      'minus',\n      'paren',\n      'variable',\n      'function',\n    ];\n    if (\n      current < tokens.length &&\n      possibleTokens.indexOf(tokens[current + 1].type) !== -1\n    ) {\n      let parsed = false;\n      let ct: any = null;\n      const possibleParsers = [\n        parseLiterals,\n        parseMinus,\n        parseParen,\n        parseFunction,\n      ];\n      possibleParsers.forEach(parserFn => {\n        if (parsed) {\n          return;\n        }\n        let consumedTokens;\n        let newOutput: any;\n        if (parserFn === parseMinus) {\n          [consumedTokens, newOutput] = parserFn(null, tokens, current + 1);\n        } else {\n          [consumedTokens, newOutput] = parserFn(output, tokens, current + 1);\n        }\n        if (consumedTokens !== 0) {\n          parsed = true;\n          consumedTokens += 1;\n          current += consumedTokens;\n          ct = consumedTokens;\n        }\n        const precedentParsers = [parseDivide, parseMultiply];\n        let preParsed = false;\n        let preOutput;\n        precedentParsers.forEach(preParseFn => {\n          if (preParsed) {\n            return;\n          }\n          if (tokens[current]) {\n            [consumedTokens, preOutput] = preParseFn(\n              newOutput,\n              tokens,\n              current\n            );\n            ct += consumedTokens;\n            if (consumedTokens !== 0) {\n              preParsed = true;\n              newOutput = preOutput;\n            }\n          }\n        });\n\n        if (newOutput != null) {\n          output /= newOutput;\n        }\n      });\n      if (parsed) {\n        return [ct, output];\n      }\n    }\n  }\n  return [0, null];\n}\n\nfunction parseMultiply(output: any, tokens: any, current: any) {\n  if (output != null && tokens[current].type === 'multiply') {\n    const possibleTokens = [\n      'number',\n      'decimal',\n      'minus',\n      'paren',\n      'variable',\n      'function',\n    ];\n    if (\n      current < tokens.length &&\n      possibleTokens.indexOf(tokens[current + 1].type) !== -1\n    ) {\n      let parsed = false;\n      let ct: any = null;\n      const possibleParsers = [\n        parseLiterals,\n        parseMinus,\n        parseParen,\n        parseFunction,\n      ];\n      possibleParsers.forEach(parserFn => {\n        if (parsed) {\n          return;\n        }\n        let consumedTokens;\n        let newOutput: any;\n        if (parserFn === parseMinus) {\n          [consumedTokens, newOutput] = parserFn(null, tokens, current + 1);\n        } else {\n          [consumedTokens, newOutput] = parserFn(output, tokens, current + 1);\n        }\n        if (consumedTokens !== 0) {\n          parsed = true;\n          consumedTokens += 1;\n          current += consumedTokens;\n          ct = consumedTokens;\n        }\n        const precedentParsers = [parseDivide, parseMultiply];\n        let preParsed = false;\n        let preOutput;\n        precedentParsers.forEach(preParseFn => {\n          if (preParsed) {\n            return;\n          }\n          if (tokens[current]) {\n            [consumedTokens, preOutput] = preParseFn(\n              newOutput,\n              tokens,\n              current\n            );\n            ct += consumedTokens;\n            if (consumedTokens !== 0) {\n              preParsed = true;\n              newOutput = preOutput;\n            }\n          }\n        });\n\n        if (newOutput != null) {\n          output *= newOutput;\n        }\n      });\n      if (parsed) {\n        return [ct, output];\n      }\n    }\n  }\n  return [0, null];\n}\n\nfunction parsePlus(output: any, tokens: any, current: any) {\n  if (output != null && tokens[current].type === 'plus') {\n    const possibleTokens = [\n      'number',\n      'decimal',\n      'string',\n      'minus',\n      'paren',\n      'variable',\n      'function',\n    ];\n    if (\n      current < tokens.length &&\n      possibleTokens.indexOf(tokens[current + 1].type) !== -1\n    ) {\n      let parsed = false;\n      let ct: any = null;\n      const possibleParsers = [\n        parseLiterals,\n        parseMinus,\n        parseParen,\n        parseFunction,\n      ];\n      possibleParsers.forEach(parserFn => {\n        if (parsed) {\n          return;\n        }\n        let consumedTokens;\n        let newOutput: any;\n        if (parserFn === parseMinus) {\n          [consumedTokens, newOutput] = parserFn(null, tokens, current + 1);\n        } else {\n          [consumedTokens, newOutput] = parserFn(output, tokens, current + 1);\n        }\n        if (consumedTokens !== 0) {\n          parsed = true;\n          consumedTokens += 1;\n          current += consumedTokens;\n          ct = consumedTokens;\n          const precedentParsers = [parseDivide, parseMultiply];\n          let preParsed = false;\n          let preOutput;\n          precedentParsers.forEach(preParseFn => {\n            if (preParsed) {\n              return;\n            }\n            if (tokens[current]) {\n              [consumedTokens, preOutput] = preParseFn(\n                newOutput,\n                tokens,\n                current\n              );\n              ct += consumedTokens;\n              if (consumedTokens !== 0) {\n                preParsed = true;\n                newOutput = preOutput;\n              }\n            }\n          });\n        }\n        if (newOutput != null) {\n          output += newOutput;\n        }\n      });\n      if (parsed) {\n        return [ct, output];\n      }\n    }\n  }\n  return [0, null];\n}\n\nfunction parseMinus(output: any, tokens: any, current: any) {\n  if (tokens[current].type === 'minus') {\n    const possibleTokens = [\n      'number',\n      'decimal',\n      'paren',\n      'variable',\n      'function',\n    ];\n    if (\n      current < tokens.length &&\n      possibleTokens.indexOf(tokens[current + 1].type) !== -1\n    ) {\n      let parsed = false;\n      let ct: any = null;\n      const possibleParsers = [parseLiterals, parseParen, parseFunction];\n      possibleParsers.forEach(parserFn => {\n        if (parsed) {\n          return;\n        }\n        let [consumedTokens, newOutput] = parserFn(output, tokens, current + 1);\n        if (consumedTokens !== 0) {\n          parsed = true;\n          consumedTokens += 1;\n          current += consumedTokens;\n          ct = consumedTokens;\n          const precedentParsers = [parseDivide, parseMultiply];\n          let preParsed = false;\n          let preOutput;\n          precedentParsers.forEach(preParseFn => {\n            if (preParsed) {\n              return;\n            }\n            if (tokens[current]) {\n              [consumedTokens, preOutput] = preParseFn(\n                newOutput,\n                tokens,\n                current\n              );\n              ct += consumedTokens;\n              if (consumedTokens !== 0) {\n                preParsed = true;\n                newOutput = preOutput;\n              }\n            }\n          });\n        }\n        if (newOutput) {\n          if (output) {\n            if (\n              Object.prototype.toString.call(newOutput) === '[object Date]' &&\n              Object.prototype.toString.call(output) === '[object Date]'\n            ) {\n              if (!isNaN(output.getTime()) && !isNaN(newOutput.getTime())) {\n                output -= newOutput;\n                output = Math.ceil(output / (1000 * 60 * 60 * 24));\n              } else {\n                output = NaN;\n              }\n            } else if (\n              Object.prototype.toString.call(newOutput) === '[object Date]' ||\n              Object.prototype.toString.call(output) === '[object Date]'\n            ) {\n              output = NaN;\n            } else if (newOutput === '' || output === '') {\n              output = NaN;\n            } else {\n              output -= newOutput;\n            }\n          } else {\n            if (Object.prototype.toString.call(newOutput) === '[object Date]') {\n              output = NaN;\n            } else {\n              output = -newOutput;\n            }\n          }\n        } else {\n          output = NaN;\n        }\n      });\n      if (parsed) {\n        if (output === '') {\n          output = NaN;\n        }\n        return [ct, output];\n      }\n    }\n  }\n  return [0, null];\n}\n\nconst parsers = [\n  parseIf,\n  parseParen,\n  parseLiterals,\n  parseDivide,\n  parseMultiply,\n  parsePlus,\n  parseMinus,\n  parseLessThan,\n  parseGreaterThan,\n  parseEqual,\n  parseAnd,\n  parseOr,\n  parseNot,\n  parseFunction,\n];\n\nfunction parser(leftOutput: any, tokens: any, pos: any) {\n  let current = pos;\n  let output = leftOutput;\n  while (current < tokens.length) {\n    let parsed = false;\n    parsers.forEach(parserFn => {\n      if (parsed) {\n        return;\n      }\n      const [consumedTokens, newOutput] = parserFn(output, tokens, current);\n      if (consumedTokens !== 0) {\n        parsed = true;\n        current += consumedTokens;\n      }\n      if (newOutput != null) {\n        output = newOutput;\n      }\n    });\n    if (!parsed) {\n      // throw new TypeError('syntax error');\n      // tslint:disable-next-line: no-console\n      console.log('syntax error');\n      // tslint:disable-next-line: no-console\n      console.log(actualExpression);\n      return null;\n    }\n  }\n  return output;\n}\n\nexport default function evaluater(\n  expression: string,\n  tmpUserInput: any,\n  tmpFormItemProperty: any,\n  tmpCurrentHierarchicalName: string\n) {\n  if (!tmpUserInput) {\n    tmpUserInput = {};\n  }\n  currentHierarchicalName = tmpCurrentHierarchicalName;\n  actualExpression = expression;\n  userInput = tmpUserInput;\n  formItemProperty = tmpFormItemProperty;\n  return parser(null, tokenizer(expression), 0);\n}\n","import { FieldElement } from '../components/typeEvalutors/Base';\n\n/**\n * get the text from multilang obj based on language identifier,\n * @param {FieldElement} property - field multilang property or string\n * @return {string} - text value of the property based on language identifier, empty if not present\n */\nexport default function getTextFromProperty(\n  property: string | { [key: string]: string },\n  languageIdentifier: string\n): string {\n  if (typeof property === 'string') {\n    return property || '';\n  }\n  return property[languageIdentifier] || '';\n}\n\n/**\n * get the label text of the fieldElement\n * @param {FieldElement} fieldElement - the fieldElement Object\n * @return {string} - field label text\n */\nexport function getFieldLabelText(\n  fieldElement: FieldElement,\n  languageIdentifier: string\n) {\n  if (fieldElement.label) {\n    return getTextFromProperty(fieldElement.label, languageIdentifier);\n  }\n  return '';\n}\n\n/**\n * get the hint text of the fieldElement\n * @param {FieldElement} fieldElement - the fieldElement Object\n * @return {string} - field hint text\n */\nexport function getFieldHintText(\n  fieldElement: FieldElement,\n  languageIdentifier: string\n) {\n  if (fieldElement.hint) {\n    return getTextFromProperty(fieldElement.hint, languageIdentifier);\n  }\n  return '';\n}\n\n/**\n * get the label text of the fieldElement constraint msg\n * @param {FieldElement} fieldElement - the fieldElement Object\n * @return {string} - constraint label text\n */\nexport function getConstraintLabelText(\n  fieldElement: FieldElement,\n  languageIdentifier: string\n) {\n  if (fieldElement.bind && fieldElement.bind['jr:constraintMsg']) {\n    return getTextFromProperty(\n      fieldElement.bind['jr:constraintMsg'],\n      languageIdentifier\n    );\n  }\n  return '';\n}\n\n/**\n * get the boolean result depending on the expression\n * @param {string} - required string\n * @returns {boolean} - true if required, otherwise false\n */\nfunction requiredEvaluator(expression: string): boolean {\n  if (\n    expression.toLowerCase() === 'yes' ||\n    expression === '1' ||\n    expression.toLowerCase() === 'true'\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * get the boolean result of fieldElement string\n * @param fieldElement\n * @return {boolean} - boolean value by calculating fieldElement required properties\n */\nexport function isInputRequired(fieldElement: FieldElement): boolean {\n  let isRequired = false;\n  if (fieldElement.bind) {\n    if (fieldElement.bind.required) {\n      if (\n        typeof fieldElement.bind.required === 'string' &&\n        requiredEvaluator(fieldElement.bind.required)\n      ) {\n        isRequired = true;\n      }\n    }\n  }\n  return isRequired;\n}\n\n/** interface for EvaluateExpression\n * @param {string} expression - the expression that needs to be evaluated\n * @param {fieldTreeName} - the field Tree name\n * @returns {any} - evaluated value\n */\nexport type EvaluateExpression = (\n  expression: string,\n  fieldTreeName: string\n) => any;\n\n/** evaluates whether a component be relevant or not\n * @param {FieldElement} fieldElement - the expression that needs to be evaluated\n * @param {string} fieldParentTreeName- the field Parent Tree name\n * @param {EvaluateExpression} evaluateExpression- an handler to evaluate the relevant expression\n * @returns {boolean} - true if relevant; otherwise, false;\n */\nexport function shouldComponentBeRelevant(\n  fieldElement: FieldElement,\n  fieldParentTreeName: string,\n  evaluateExpression: EvaluateExpression\n): boolean {\n  if (fieldElement && fieldElement.bind && fieldElement.bind.relevant) {\n    const isRelevant = evaluateExpression(\n      fieldElement.bind.relevant,\n      fieldParentTreeName + fieldElement.name\n    );\n    if (isRelevant) {\n      return true;\n    }\n    return false;\n  }\n  return true;\n}\n\n/** evaluates whether a component be readonly or not\n * @param {FieldElement} fieldElement - the expression that needs to be evaluated\n * @param {string} fieldParentTreeName- the field Parent Tree name\n * @param {EvaluateExpression} evaluateExpression- an handler to evaluate the readonly expression\n * @returns {boolean} - true if readonly; otherwise, false;\n */\nexport function shouldComponentBeReadOnly(\n  fieldElement: FieldElement,\n  fieldParentTreeName: string,\n  evaluateExpression: EvaluateExpression\n): boolean {\n  if (fieldElement && fieldElement.bind && fieldElement.bind.readonly) {\n    const isReadOnly = evaluateExpression(\n      fieldElement.bind.readonly,\n      fieldParentTreeName + fieldElement.name\n    );\n    if (isReadOnly) {\n      return true;\n    }\n    return false;\n  }\n  return false;\n}\n\n/** evaluates whether the input violates constraint or not\n * @param {FieldElement} fieldElement - the constraint expression\n * @param {string} fieldParentTreeName- the field Parent Tree name\n * @param {EvaluateExpression} evaluateExpression- an handler to evaluate the expression\n * @returns {boolean} - true if violates; otherwise, false;\n */\nexport function shouldInputViolatesConstraint(\n  fieldElement: FieldElement,\n  fieldParentTreeName: string,\n  evaluateExpression: EvaluateExpression\n): boolean {\n  if (fieldElement && fieldElement.bind && fieldElement.bind.constraint) {\n    const isConstraintViolated = !evaluateExpression(\n      fieldElement.bind.constraint,\n      fieldParentTreeName + fieldElement.name\n    );\n    if (isConstraintViolated) {\n      return true;\n    }\n    return false;\n  }\n  return false;\n}\n\n/** returns the new user input object after assigning value of passed fieldTreeName\n * @param {any} userInputObj - the current user input object\n * @param {string} fieldTreeName - the field Tree name\n * @param {any} fieldValue - the value that needs to be assigned\n * @returns {any} - the new user input object after assignment\n */\nexport function getModifiedUserInputObject(\n  userInputObj: any,\n  fieldTreeName: string,\n  fieldValue: any\n): any {\n  const treeNodes = fieldTreeName.split('/');\n  let i;\n  let parent = '';\n  let modifiedObj = userInputObj;\n  for (i = 0; i < treeNodes.length - 1; ) {\n    if (treeNodes[i] === 'repeat') {\n      i += 1;\n      if (parent + treeNodes[i] in modifiedObj) {\n        modifiedObj = modifiedObj[parent + treeNodes[i]];\n      } else {\n        modifiedObj[parent + treeNodes[i]] = [];\n      }\n      const index = parseInt(treeNodes[i + 1], 10);\n      if (modifiedObj[index]) {\n        modifiedObj = modifiedObj[index];\n      } else {\n        modifiedObj[index] = {};\n        modifiedObj = modifiedObj[index];\n      }\n      parent = parent + treeNodes[i] + '/';\n      i += 2;\n    } else {\n      parent = parent + treeNodes[i + 1] + '/';\n      i += 2;\n    }\n  }\n  modifiedObj[parent + treeNodes[treeNodes.length - 1]] = fieldValue;\n  return userInputObj;\n}\n\n/** returns the value from the user input object\n * @param {any} userInputObj - the user input object\n * @param {string} fieldTreeName - the field Tree name\n * @returns {any} - the value, present in user input object, of the fieldTreeName\n */\nexport function getValueFromUserInputObj(\n  userInputObj: any,\n  fieldTreeName: string\n): any {\n  const treeNodes = fieldTreeName.split('/');\n  let i;\n  let parent = '';\n  let modifiedObj = userInputObj;\n  for (i = 0; i < treeNodes.length - 1; ) {\n    if (treeNodes[i] === 'repeat') {\n      i += 1;\n      if (parent + treeNodes[i] in modifiedObj) {\n        modifiedObj = modifiedObj[parent + treeNodes[i]];\n      } else {\n        modifiedObj[parent + treeNodes[i]] = [];\n      }\n      const index = parseInt(treeNodes[i + 1], 10);\n      if (modifiedObj[index]) {\n        modifiedObj = modifiedObj[index];\n      } else {\n        modifiedObj[index] = {};\n        modifiedObj = modifiedObj[index];\n      }\n      parent = parent + treeNodes[i] + '/';\n      i += 2;\n    } else {\n      parent = parent + treeNodes[i + 1] + '/';\n      i += 2;\n    }\n  }\n  return modifiedObj[parent + treeNodes[treeNodes.length - 1]];\n}\n\n/** evaluates whether the component is minimal or not\n * @param {FieldElement} fieldElement - the constraint expression\n * @returns {boolean} - true if minimal; otherwise, false;\n */\nexport function shouldComponentBeMinimal(fieldElement: FieldElement): boolean {\n  let isMinimal = false;\n  if (fieldElement.control && fieldElement.control.appearance) {\n    fieldElement.control.appearance.toString().includes('minimal')\n      ? (isMinimal = true)\n      : (isMinimal = false);\n  }\n  return isMinimal;\n}\n\n/** returns the new user input object after emptying the desired grouped values\n * @param {any} userInputObj - the current user input object\n * @param {string} groupTreeName - the group Tree name\n * @returns {any} - the new user input object after emptying the grouped values\n */\nexport function emptyGroupedValues(\n  userInputObj: any,\n  groupTreeName: string\n): any {\n  const treeNodes = groupTreeName.split('/');\n  let i;\n  let parent = '';\n  let modifiedObj = userInputObj;\n  for (i = 0; i < treeNodes.length - 1; ) {\n    if (treeNodes[i] === 'repeat') {\n      i += 1;\n      if (parent + treeNodes[i] in modifiedObj) {\n        modifiedObj = modifiedObj[parent + treeNodes[i]];\n      } else {\n        modifiedObj[parent + treeNodes[i]] = [];\n      }\n      const index = parseInt(treeNodes[i + 1], 10);\n      if (modifiedObj[index]) {\n        modifiedObj = modifiedObj[index];\n      } else {\n        modifiedObj[index] = {};\n        modifiedObj = modifiedObj[index];\n      }\n      parent = parent + treeNodes[i] + '/';\n      i += 2;\n    } else {\n      parent = parent + treeNodes[i + 1] + '/';\n      i += 2;\n    }\n  }\n  Object.keys(modifiedObj).forEach(objKey => {\n    if (objKey.startsWith(parent + treeNodes[treeNodes.length - 1])) {\n      modifiedObj[objKey] = null;\n    }\n  });\n  return userInputObj;\n}\n\n/** returns whether the grouped values are empty or not\n * @param {any} userInputObj - the current user input object\n * @param {string} groupTreeName - the group Tree name\n * @returns {any} - true if empty; otherwise, false\n */\nexport function checkGroupedValuesForEmpty(\n  userInputObj: any,\n  groupTreeName: string\n): any {\n  const treeNodes = groupTreeName.split('/');\n  let i;\n  let parent = '';\n  let modifiedObj = userInputObj;\n  for (i = 0; i < treeNodes.length - 1; ) {\n    if (treeNodes[i] === 'repeat') {\n      i += 1;\n      if (parent + treeNodes[i] in modifiedObj) {\n        modifiedObj = modifiedObj[parent + treeNodes[i]];\n      } else {\n        modifiedObj[parent + treeNodes[i]] = [];\n      }\n      const index = parseInt(treeNodes[i + 1], 10);\n      if (modifiedObj[index]) {\n        modifiedObj = modifiedObj[index];\n      } else {\n        modifiedObj[index] = {};\n        modifiedObj = modifiedObj[index];\n      }\n      parent = parent + treeNodes[i] + '/';\n      i += 2;\n    } else {\n      parent = parent + treeNodes[i + 1] + '/';\n      i += 2;\n    }\n  }\n  let isEmpty: boolean = true;\n  Object.keys(modifiedObj).forEach(objKey => {\n    if (objKey.startsWith(parent + treeNodes[treeNodes.length - 1])) {\n      if (\n        modifiedObj[objKey] !== null &&\n        modifiedObj[objKey] !== undefined &&\n        isEmpty\n      ) {\n        isEmpty = false;\n      }\n    }\n  });\n  return isEmpty;\n}\n","import { AnyAction, Store } from 'redux';\nimport SeamlessImmutable from 'seamless-immutable';\nimport evaluater from '../../utils/compiler';\nimport {\n  checkGroupedValuesForEmpty,\n  emptyGroupedValues,\n  getModifiedUserInputObject,\n  getValueFromUserInputObj,\n} from '../../utils/helpers';\n\n/** interface for the store state */\nexport interface FormState {\n  userInput: object;\n  errors: string[];\n}\n\n// actions\n\n/** FIELD_VALUE_ASSIGNED action type */\nexport const FIELD_VALUE_ASSIGNED = 'odk/reducer/form/FIELD_VALUE_ASSIGNED';\n/** RESET_STORE action type */\nexport const RESET_STORE = 'odk/reducer/form/RESET_STORE';\n/** ADD_ERROR_INPUT_ID action type */\nexport const ADD_ERROR_INPUT_ID = 'odk/reducer/form/ADD_ERROR_INPUT_ID';\n/** REMOVE_ERROR_INPUT_ID action type */\nexport const REMOVE_ERROR_INPUT_ID = 'odk/reducer/form/REMOVE_ERROR_INPUT_ID';\n/** EMPTY_GROUP_FIELDS */\nexport const EMPTY_GROUP_FIELDS = 'odk/reducer/form/EMPTY_GROUP_FIELDS';\n/** REMOVE_GROUP_FIELDS_FROM_ERRORS */\nexport const REMOVE_GROUP_FIELDS_FROM_ERRORS =\n  'odk/reducer/form/REMOVE_GROUP_FIELDS_FROM_ERRORS';\n\n/** interface for ASSIGN_FIELD_VALUE action */\nexport interface AssignFieldValueAction extends AnyAction {\n  fieldTreeName: string;\n  fieldValue: any;\n  type: typeof FIELD_VALUE_ASSIGNED;\n}\n\n/** interface for RESET_STORE action */\nexport interface ResetStoreAction extends AnyAction {\n  type: typeof RESET_STORE;\n}\n\n/** interface for ADD_ERROR_INPUT_ID action */\nexport interface AddErrorInputId extends AnyAction {\n  fieldTreeName: string;\n  type: typeof ADD_ERROR_INPUT_ID;\n}\n\n/** interface for REMOVE_ERROR_INPUT_ID action */\nexport interface RemoveErrorInputId extends AnyAction {\n  fieldTreeName: string;\n  type: typeof REMOVE_ERROR_INPUT_ID;\n}\n\n/** interface for EMPTY_GROUP_FIELDS action */\nexport interface EmptyGroupFields extends AnyAction {\n  fieldTreeName: string;\n  type: typeof EMPTY_GROUP_FIELDS;\n}\n\n/** interface for REMOVE_GROUP_FIELDS_FROM_ERRORS action */\nexport interface RemoveGroupFieldsFromErrors extends AnyAction {\n  fieldTreeName: string;\n  type: typeof REMOVE_GROUP_FIELDS_FROM_ERRORS;\n}\n\n/** Assigns the value to the proper field name\n * @param {string} fieldTreeName - the extended field name\n * @param {any} fieldValue - the value that will be assigned\n * @return {AssignFieldValueAction} - an action to assign value to a field in the redux store\n */\nexport const assignFieldValueAction = (\n  fieldTreeName: string,\n  fieldValue: any\n): AssignFieldValueAction => ({\n  fieldTreeName,\n  fieldValue,\n  type: FIELD_VALUE_ASSIGNED,\n});\n\n/** Resets the redux store state to initial state\n * @return {ResetStoreAction} - an action to reset the redux store state\n */\nexport const resetStoreAction = (): ResetStoreAction => ({\n  type: RESET_STORE,\n});\n\n/** add the field tree name as error id to store in redux store that violates constraints\n * @param fieldTreeName - the field tree name\n * @returns {AddErrorInputId} - an action to add input id for errors\n */\nexport const addErrorInputId = (fieldTreeName: string): AddErrorInputId => ({\n  fieldTreeName,\n  type: ADD_ERROR_INPUT_ID,\n});\n\n/** remove the field tree name as error id to store in redux store that violates constraints\n * @param fieldTreeName - the field tree name\n * @returns {RemoveErrorInputId} - an action to remove input id for errors\n */\nexport const removeErrorInputId = (\n  fieldTreeName: string\n): RemoveErrorInputId => ({\n  fieldTreeName,\n  type: REMOVE_ERROR_INPUT_ID,\n});\n\n/** empties the values of the fields of the group\n * @param fieldTreeName - the group field tree name\n * @returns {RemoveErrorInputId} - an action to empty the group field values\n */\nexport const emptyGroupFields = (fieldTreeName: string): EmptyGroupFields => ({\n  fieldTreeName,\n  type: EMPTY_GROUP_FIELDS,\n});\n\n/** removes the group field names from store errors obj\n * @param fieldTreeName - the group field tree name\n * @returns {RemoveGroupFieldsFromErrors} - an action to remove group field names from errors\n */\nexport const removeGroupFieldsFromErrors = (\n  fieldTreeName: string\n): RemoveGroupFieldsFromErrors => ({\n  fieldTreeName,\n  type: REMOVE_GROUP_FIELDS_FROM_ERRORS,\n});\n\n/** Create type for forms reducer actions */\nexport type FormActionTypes =\n  | AssignFieldValueAction\n  | ResetStoreAction\n  | AddErrorInputId\n  | RemoveErrorInputId\n  | EmptyGroupFields\n  | RemoveGroupFieldsFromErrors\n  | AnyAction;\n\n/** Create an immutable form state */\nexport type ImmutableFormState = SeamlessImmutable.ImmutableObject<FormState>;\n\n/** initial form state */\nexport const initialState: ImmutableFormState = SeamlessImmutable({\n  errors: [],\n  userInput: {},\n});\n\n/** the form reducer function */\nexport default function reducer(\n  state: ImmutableFormState = initialState,\n  action: FormActionTypes\n): ImmutableFormState {\n  switch (action.type) {\n    case FIELD_VALUE_ASSIGNED:\n      const modifiedUserInputObj = getModifiedUserInputObject(\n        state.getIn(['userInput']).asMutable({ deep: true }),\n        action.fieldTreeName,\n        action.fieldValue\n      );\n      const stateM = state.asMutable({ deep: true });\n      return SeamlessImmutable({ ...stateM, userInput: modifiedUserInputObj });\n    case RESET_STORE:\n      return initialState;\n    case ADD_ERROR_INPUT_ID:\n      if (!state.errors.includes(action.fieldTreeName)) {\n        return state.updateIn(['errors'], arr =>\n          arr.concat([action.fieldTreeName])\n        );\n      }\n      return state;\n    case REMOVE_ERROR_INPUT_ID:\n      if (state.errors.includes(action.fieldTreeName)) {\n        return state.updateIn(['errors'], arr =>\n          arr.filter(elm => elm !== action.fieldTreeName)\n        );\n      }\n      return state;\n    case EMPTY_GROUP_FIELDS:\n      const mUserInputObj = emptyGroupedValues(\n        state.getIn(['userInput']).asMutable({ deep: true }),\n        action.fieldTreeName\n      );\n      const mState = state.asMutable({ deep: true });\n      return SeamlessImmutable({ ...mState, userInput: mUserInputObj });\n    case REMOVE_GROUP_FIELDS_FROM_ERRORS:\n      return state.updateIn(['errors'], arr =>\n        arr.filter(elm => !elm.startsWith(action.fieldTreeName))\n      );\n    default:\n      return state;\n  }\n}\n\n// selectors\n\n/** get the value by their respective element tree name\n * @param {Partial<Store>} state - the redux store\n * @param {string} fieldTreeName - the hierchical tree name of the field\n * @return {any | null} value if the element name is found else null\n */\nexport function getFieldValue(\n  state: Partial<Store>,\n  fieldTreeName: string\n): any {\n  return getValueFromUserInputObj((state as any).userInput, fieldTreeName);\n}\n\n/** get the value of the evaluated expression\n * @param {Partial<Store>} state - the redux store\n * @param {string} expression - the expression that needs to be evaluated\n * @param {string} fieldTreeName - the hierchical tree name of the field\n * @return {any | null} - the evaluated value or null if syntax error\n */\nexport function getEvaluatedExpression(\n  state: Partial<Store>,\n  expression: string,\n  fieldTreeName: string\n): any {\n  return evaluater(expression, (state as any).userInput, null, fieldTreeName);\n}\n\n/** get the value of the evaluated expression for Select One and Select All\n * @param {Partial<Store>} state - the redux store\n * @param {string} expression - the expression that needs to be evaluated\n * @param {any} options - the options that needs to be evaluated\n * @param {string} fieldTreeName - the hierchical tree name of the field\n * @return {any | null} - the evaluated value or null if syntax error\n */\nexport function getEvaluatedExpressionForSelect(\n  state: Partial<Store>,\n  expression: string,\n  options: any,\n  fieldTreeName: string\n): any {\n  return evaluater(\n    expression,\n    (state as any).userInput,\n    options,\n    fieldTreeName\n  );\n}\n\n/** check if the field element is present in the store\n * @param {Partial<Store>} state - the redux store\n * @param {string} fieldTreeName - the hierchical tree name of the field\n * @return {boolean} true if present; otherwise, false\n */\nexport function isPresentInError(\n  state: Partial<Store>,\n  fieldTreeName: string\n): any {\n  return (state as any).errors.includes(fieldTreeName);\n}\n\n/** check if the field elements under group are empty or not\n * @param {Partial<Store>} state - the redux store\n * @param {string} fieldTreeName - the hierchical tree name of the group field\n * @return {boolean} true if empty; otherwise, false\n */\nexport function isGroupFieldsEmpty(\n  state: Partial<Store>,\n  fieldTreeName: string\n): any {\n  return checkGroupedValuesForEmpty((state as any).userInput, fieldTreeName);\n}\n\n/** check if the field elements under group are present in errors or not\n * @param {Partial<Store>} state - the redux store\n * @param {string} fieldTreeName - the hierchical tree name of the group field\n * @return {boolean} true if present; otherwise, false\n */\nexport function isErrorsIncludeGroupFields(\n  state: Partial<Store>,\n  fieldTreeName: string\n): any {\n  let isPresent = false;\n  (state as any).errors.forEach((fTName: string) => {\n    if (fTName.startsWith(fieldTreeName) && !isPresent) {\n      isPresent = true;\n    }\n  });\n  return isPresent;\n}\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { FormGroup, Label } from 'reactstrap';\nimport { Store } from 'redux';\nimport {\n  FieldElement,\n  FieldParentTreeName,\n} from '../../../../components/typeEvalutors/Base';\nimport GroupTypeEvaluator from '../../../../components/typeEvalutors/Group';\nimport {\n  emptyGroupFields,\n  getEvaluatedExpression,\n  isErrorsIncludeGroupFields,\n  isGroupFieldsEmpty,\n  removeGroupFieldsFromErrors,\n} from '../../../../store/ducks/formState';\nimport {\n  getFieldLabelText,\n  shouldComponentBeRelevant,\n} from '../../../../utils/helpers';\n\nexport interface GroupProps {\n  defaultLanguage: string;\n  fieldElement: FieldElement;\n  fieldParentTreeName: string;\n  getEvaluatedExpressionSelector: any;\n  isComponentRender: boolean;\n  isGroupFieldsEmptySelector: any;\n  isErrorsIncludeGroupFieldsSelector: any;\n  emptyGroupFieldsActionCreator: typeof emptyGroupFields;\n  removeGroupFieldsFromErrorsActionCreator: typeof removeGroupFieldsFromErrors;\n}\n\nclass Group extends React.Component<GroupProps> {\n  public render() {\n    const {\n      fieldElement,\n      fieldParentTreeName,\n      defaultLanguage,\n      isComponentRender,\n    } = this.props;\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\n    if (isComponentRender) {\n      return (\n        <FormGroup>\n          <Label>{fieldLabel}</Label>\n          {fieldElement.children && (\n            <GroupTypeEvaluator\n              fieldElements={fieldElement.children}\n              fieldParentTreeName={\n                fieldParentTreeName + 'group/' + fieldElement.name + '/'\n              }\n              defaultLanguage={defaultLanguage}\n            />\n          )}\n        </FormGroup>\n      );\n    } else {\n      if (\n        this.props.isErrorsIncludeGroupFieldsSelector(\n          fieldParentTreeName + 'group/' + fieldElement.name + '/'\n        )\n      ) {\n        this.props.removeGroupFieldsFromErrorsActionCreator(\n          fieldParentTreeName + 'group/' + fieldElement.name + '/'\n        );\n      }\n      if (\n        !this.props.isGroupFieldsEmptySelector(\n          fieldParentTreeName + fieldElement.name\n        )\n      ) {\n        this.props.emptyGroupFieldsActionCreator(\n          fieldParentTreeName + fieldElement.name\n        );\n      }\n      return null;\n    }\n  }\n}\n\n/** connect the component to the store */\n\n/** Interface to describe props from mapStateToProps */\ninterface DispatchedStateProps {\n  getEvaluatedExpressionSelector: any;\n  isComponentRender: boolean;\n  isGroupFieldsEmptySelector: any;\n  isErrorsIncludeGroupFieldsSelector: any;\n}\n\n/** Interface to describe props from parent */\ninterface ParentProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n  defaultLanguage: string;\n}\n\n/** Map props to state  */\nconst mapStateToProps = (\n  state: Partial<Store>,\n  parentProps: ParentProps\n): DispatchedStateProps => {\n  const { fieldElement, fieldParentTreeName } = parentProps;\n  const getEvaluatedExpressionSelector = (\n    expression: string,\n    fieldTreeName: string\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\n  const isGroupFieldsEmptySelector = (fieldTreeName: string) =>\n    isGroupFieldsEmpty(state, fieldTreeName);\n  const isErrorsIncludeGroupFieldsSelector = (fieldTreeName: string) =>\n    isErrorsIncludeGroupFields(state, fieldTreeName);\n  const result = {\n    getEvaluatedExpressionSelector,\n    isComponentRender: shouldComponentBeRelevant(\n      fieldElement,\n      fieldParentTreeName,\n      getEvaluatedExpressionSelector\n    ),\n    isErrorsIncludeGroupFieldsSelector,\n    isGroupFieldsEmptySelector,\n  };\n  return result;\n};\n\n/** map props to actions */\nconst mapDispatchToProps = {\n  emptyGroupFieldsActionCreator: emptyGroupFields,\n  removeGroupFieldsFromErrorsActionCreator: removeGroupFieldsFromErrors,\n};\n\n/** connect Group component to the redux store */\nconst ConnectedGroup = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Group);\n\nexport default ConnectedGroup;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport {\n  FieldElement,\n  FieldParentTreeName,\n} from '../../../../../components/typeEvalutors/Base';\nimport GroupTypeEvaluator from '../../../../../components/typeEvalutors/Group';\n\nexport interface SingleRepeatProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n  fieldValue: any;\n  defaultLanguage: string;\n  repeatIndex: number;\n  assignmentHandler: any;\n  removeHandler: any;\n}\n\nclass SingleRepeat extends React.Component<SingleRepeatProps> {\n  public render() {\n    const {\n      defaultLanguage,\n      fieldElement,\n      fieldParentTreeName,\n      repeatIndex,\n    } = this.props;\n    return (\n      <div>\n        <div>\n          <span onClick={this.handleChange}>\n            <FontAwesomeIcon icon=\"minus-circle\" />\n          </span>\n        </div>\n        {fieldElement.children && (\n          <GroupTypeEvaluator\n            fieldElements={fieldElement.children}\n            fieldParentTreeName={\n              fieldParentTreeName +\n              'repeat/' +\n              fieldElement.name +\n              '/' +\n              repeatIndex +\n              '/'\n            }\n            defaultLanguage={defaultLanguage}\n          />\n        )}\n      </div>\n    );\n  }\n\n  // tslint:disable-next-line: variable-name\n  private handleChange = (_event: React.MouseEvent<HTMLDivElement>) => {\n    const {\n      repeatIndex,\n      fieldValue,\n      assignmentHandler,\n      fieldElement,\n      fieldParentTreeName,\n      removeHandler,\n    } = this.props;\n    let newFieldValue: any[] = [...fieldValue];\n    newFieldValue = newFieldValue.filter(\n      // tslint:disable-next-line: variable-name\n      (_elem, index) => index !== repeatIndex\n    );\n    assignmentHandler(fieldParentTreeName + fieldElement.name, newFieldValue);\n    removeHandler(fieldParentTreeName + 'repeat/' + fieldElement.name + '/');\n  };\n}\n\nexport default SingleRepeat;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { FormGroup, Label } from 'reactstrap';\nimport { Store } from 'redux';\nimport {\n  FieldElement,\n  FieldParentTreeName,\n} from '../../../../components/typeEvalutors/Base';\nimport {\n  assignFieldValueAction,\n  emptyGroupFields,\n  getEvaluatedExpression,\n  getFieldValue,\n  isErrorsIncludeGroupFields,\n  isGroupFieldsEmpty,\n  removeGroupFieldsFromErrors,\n} from '../../../../store/ducks/formState';\nimport {\n  getFieldLabelText,\n  shouldComponentBeRelevant,\n} from '../../../../utils/helpers';\nimport SingleRepeat from './Single Repeat';\n\nexport interface RepeatProps {\n  defaultLanguage: string;\n  fieldElement: FieldElement;\n  fieldValue: any;\n  fieldParentTreeName: string;\n  getEvaluatedExpressionSelector: any;\n  isComponentRender: boolean;\n  isGroupFieldsEmptySelector: any;\n  isErrorsIncludeGroupFieldsSelector: any;\n  emptyGroupFieldsActionCreator: typeof emptyGroupFields;\n  removeGroupFieldsFromErrorsActionCreator: typeof removeGroupFieldsFromErrors;\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\n}\n\nclass Repeat extends React.Component<RepeatProps> {\n  public render() {\n    const {\n      fieldValue,\n      fieldElement,\n      fieldParentTreeName,\n      defaultLanguage,\n      isComponentRender,\n      assignFieldValueActionCreator,\n      removeGroupFieldsFromErrorsActionCreator,\n    } = this.props;\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\n    if (isComponentRender) {\n      if (!fieldValue) {\n        this.props.assignFieldValueActionCreator(\n          fieldParentTreeName + fieldElement.name,\n          [{}]\n        );\n      }\n      return (\n        <FormGroup>\n          <Label>{fieldLabel}</Label>\n          {fieldValue &&\n            // tslint:disable-next-line: variable-name\n            fieldValue.map((_elm: any, index: any) => (\n              <div className=\"repeat-fields-body\" key={'repeat' + index}>\n                <SingleRepeat\n                  defaultLanguage={defaultLanguage}\n                  fieldElement={fieldElement}\n                  fieldParentTreeName={fieldParentTreeName}\n                  fieldValue={fieldValue}\n                  repeatIndex={index}\n                  assignmentHandler={assignFieldValueActionCreator}\n                  removeHandler={removeGroupFieldsFromErrorsActionCreator}\n                />\n              </div>\n            ))}\n          <div>\n            <span onClick={this.addAnotherRepeat}>\n              <FontAwesomeIcon icon=\"plus-circle\" />\n            </span>\n          </div>\n        </FormGroup>\n      );\n    } else {\n      if (\n        this.props.isErrorsIncludeGroupFieldsSelector(\n          fieldParentTreeName + 'repeat/' + fieldElement.name + '/'\n        )\n      ) {\n        this.props.removeGroupFieldsFromErrorsActionCreator(\n          fieldParentTreeName + 'repeat/' + fieldElement.name + '/'\n        );\n      }\n      if (fieldValue) {\n        this.props.assignFieldValueActionCreator(\n          fieldParentTreeName + fieldElement.name,\n          null\n        );\n      }\n      return null;\n    }\n  }\n\n  // tslint:disable-next-line: variable-name\n  private addAnotherRepeat = (_event: React.MouseEvent<HTMLDivElement>) => {\n    const { fieldValue, fieldParentTreeName, fieldElement } = this.props;\n    const newFieldValue = [...fieldValue];\n    newFieldValue.push({});\n    this.props.assignFieldValueActionCreator(\n      fieldParentTreeName + fieldElement.name,\n      newFieldValue\n    );\n  };\n}\n\n/** connect the component to the store */\n\n/** Interface to describe props from mapStateToProps */\ninterface DispatchedStateProps {\n  fieldValue: any;\n  getEvaluatedExpressionSelector: any;\n  isComponentRender: boolean;\n  isGroupFieldsEmptySelector: any;\n  isErrorsIncludeGroupFieldsSelector: any;\n}\n\n/** Interface to describe props from parent */\ninterface ParentProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n  defaultLanguage: string;\n}\n\n/** Map props to state  */\nconst mapStateToProps = (\n  state: Partial<Store>,\n  parentProps: ParentProps\n): DispatchedStateProps => {\n  const { fieldElement, fieldParentTreeName } = parentProps;\n  const getEvaluatedExpressionSelector = (\n    expression: string,\n    fieldTreeName: string\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\n  const isGroupFieldsEmptySelector = (fieldTreeName: string) =>\n    isGroupFieldsEmpty(state, fieldTreeName);\n  const isErrorsIncludeGroupFieldsSelector = (fieldTreeName: string) =>\n    isErrorsIncludeGroupFields(state, fieldTreeName);\n  const result = {\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\n    getEvaluatedExpressionSelector,\n    isComponentRender: shouldComponentBeRelevant(\n      fieldElement,\n      fieldParentTreeName,\n      getEvaluatedExpressionSelector\n    ),\n    isErrorsIncludeGroupFieldsSelector,\n    isGroupFieldsEmptySelector,\n  };\n  return result;\n};\n\n/** map props to actions */\nconst mapDispatchToProps = {\n  assignFieldValueActionCreator: assignFieldValueAction,\n  emptyGroupFieldsActionCreator: emptyGroupFields,\n  removeGroupFieldsFromErrorsActionCreator: removeGroupFieldsFromErrors,\n};\n\n/** connect Group component to the redux store */\nconst ConnectedRepeat = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Repeat);\n\nexport default ConnectedRepeat;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport { Store } from 'redux';\nimport {\n  FieldElement,\n  FieldParentTreeName,\n} from '../../../../components/typeEvalutors/Base';\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\nimport {\n  addErrorInputId,\n  assignFieldValueAction,\n  getEvaluatedExpression,\n  getFieldValue,\n  isPresentInError,\n  removeErrorInputId,\n} from '../../../../store/ducks/formState';\nimport {\n  getConstraintLabelText,\n  getFieldLabelText,\n  isInputRequired,\n  shouldComponentBeReadOnly,\n  shouldComponentBeRelevant,\n  shouldInputViolatesConstraint,\n} from '../../../../utils/helpers';\n\n/** props interface for the KbDate component */\nexport interface DateProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n  fieldValue: any;\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\n  getEvaluatedExpressionSelector: any;\n  isComponentRender: boolean;\n  isPresentInErrorSelector: any;\n  addErrorInputIdActionCreator: typeof addErrorInputId;\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\n  defaultLanguage: string;\n}\n\nclass KbDate extends React.Component<DateProps> {\n  public render() {\n    const {\n      fieldElement,\n      fieldParentTreeName,\n      fieldValue,\n      isComponentRender,\n      getEvaluatedExpressionSelector,\n      isPresentInErrorSelector,\n      defaultLanguage,\n    } = this.props;\n    const isRequired = isInputRequired(fieldElement);\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\n    const isConstraintViolated =\n      fieldValue &&\n      fieldValue !== '' &&\n      shouldInputViolatesConstraint(\n        fieldElement,\n        fieldParentTreeName,\n        getEvaluatedExpressionSelector\n      );\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\n    const constraintLabel = getConstraintLabelText(\n      fieldElement,\n      defaultLanguage\n    );\n    if (isComponentRender) {\n      if (fieldValue == null && 'default' in fieldElement) {\n        this.props.assignFieldValueActionCreator(\n          fieldParentTreeName + fieldElement.name,\n          fieldElement.default\n        );\n      }\n      const isReadonly = shouldComponentBeReadOnly(\n        fieldElement,\n        fieldParentTreeName,\n        getEvaluatedExpressionSelector\n      );\n      if (\n        (isRequiredViolated || isConstraintViolated) &&\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\n      ) {\n        this.props.addErrorInputIdActionCreator(\n          fieldParentTreeName + fieldElement.name\n        );\n      } else if (\n        !isRequiredViolated &&\n        !isConstraintViolated &&\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\n      ) {\n        this.props.removeErrorInputIdActionCreator(\n          fieldParentTreeName + fieldElement.name\n        );\n      }\n      let defaultValue: string = '';\n      if (fieldValue) {\n        defaultValue = fieldValue.toISOString().slice(0, 10);\n      }\n      return (\n        <FormGroup>\n          <Label>{fieldLabel}</Label>\n          {isRequired && <Label>{REQUIRED_SYMBOL}</Label>}\n          <Input\n            type=\"date\"\n            name={fieldElement.name}\n            onChange={this.onChangeHandler}\n            value={defaultValue}\n            readOnly={isReadonly}\n          />\n          {isRequiredViolated && <Label>{REQUIRED_FIELD_MSG}</Label>}\n          {isConstraintViolated && <Label>{constraintLabel}</Label>}\n        </FormGroup>\n      );\n    } else {\n      if (fieldValue != null) {\n        this.props.assignFieldValueActionCreator(\n          fieldParentTreeName + fieldElement.name,\n          null\n        );\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\n          this.props.removeErrorInputIdActionCreator(\n            fieldParentTreeName + fieldElement.name\n          );\n        }\n      }\n      return null;\n    }\n  }\n  /** sets the value of field element in store\n   * @param {React.FormEvent<HTMLInputElement>} event - the onchange input event\n   */\n  private onChangeHandler = (event: React.FormEvent<HTMLInputElement>) => {\n    this.props.assignFieldValueActionCreator(\n      this.props.fieldParentTreeName + event.currentTarget.name,\n      new Date(event.currentTarget.value)\n    );\n  };\n}\n\n/** connect the component to the store */\n\n/** Interface to describe props from mapStateToProps */\ninterface DispatchedStateProps {\n  fieldValue: any;\n  getEvaluatedExpressionSelector: any;\n  isComponentRender: boolean;\n  isPresentInErrorSelector: any;\n}\n\n/** Interface to describe props from parent */\ninterface ParentProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n}\n\n/** Map props to state  */\nconst mapStateToProps = (\n  state: Partial<Store>,\n  parentProps: ParentProps\n): DispatchedStateProps => {\n  const { fieldElement, fieldParentTreeName } = parentProps;\n  const getEvaluatedExpressionSelector = (\n    expression: string,\n    fieldTreeName: string\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\n    isPresentInError(state, fieldTreeName);\n  const result = {\n    fieldValue:\n      getFieldValue(state, fieldParentTreeName + fieldElement.name) || '',\n    getEvaluatedExpressionSelector,\n    isComponentRender: shouldComponentBeRelevant(\n      fieldElement,\n      fieldParentTreeName,\n      getEvaluatedExpressionSelector\n    ),\n    isPresentInErrorSelector,\n  };\n  return result;\n};\n\n/** map props to actions */\nconst mapDispatchToProps = {\n  addErrorInputIdActionCreator: addErrorInputId,\n  assignFieldValueActionCreator: assignFieldValueAction,\n  removeErrorInputIdActionCreator: removeErrorInputId,\n};\n\n/** connect KbDate component to the redux store */\nconst ConnectedDate = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(KbDate);\n\nexport default ConnectedDate;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport { Store } from 'redux';\nimport {\n  FieldElement,\n  FieldParentTreeName,\n} from '../../../../components/typeEvalutors/Base';\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\nimport {\n  addErrorInputId,\n  assignFieldValueAction,\n  getEvaluatedExpression,\n  getFieldValue,\n  isPresentInError,\n  removeErrorInputId,\n} from '../../../../store/ducks/formState';\nimport {\n  getConstraintLabelText,\n  getFieldLabelText,\n  isInputRequired,\n  shouldComponentBeReadOnly,\n  shouldComponentBeRelevant,\n  shouldInputViolatesConstraint,\n} from '../../../../utils/helpers';\n\n/** props interface for the date Time component */\nexport interface DateTimeProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n  fieldValue: any;\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\n  getEvaluatedExpressionSelector: any;\n  isComponentRender: boolean;\n  isPresentInErrorSelector: any;\n  addErrorInputIdActionCreator: typeof addErrorInputId;\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\n  defaultLanguage: string;\n}\n\nclass DateTime extends React.Component<DateTimeProps> {\n  public render() {\n    const {\n      fieldElement,\n      fieldParentTreeName,\n      fieldValue,\n      isComponentRender,\n      getEvaluatedExpressionSelector,\n      isPresentInErrorSelector,\n      defaultLanguage,\n    } = this.props;\n    const isRequired = isInputRequired(fieldElement);\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\n    const isConstraintViolated =\n      fieldValue &&\n      fieldValue !== '' &&\n      shouldInputViolatesConstraint(\n        fieldElement,\n        fieldParentTreeName,\n        getEvaluatedExpressionSelector\n      );\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\n    const constraintLabel = getConstraintLabelText(\n      fieldElement,\n      defaultLanguage\n    );\n    if (isComponentRender) {\n      if (fieldValue == null && 'default' in fieldElement) {\n        this.props.assignFieldValueActionCreator(\n          fieldParentTreeName + fieldElement.name,\n          fieldElement.default\n        );\n      }\n      const isReadonly = shouldComponentBeReadOnly(\n        fieldElement,\n        fieldParentTreeName,\n        getEvaluatedExpressionSelector\n      );\n      if (\n        (isRequiredViolated || isConstraintViolated) &&\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\n      ) {\n        this.props.addErrorInputIdActionCreator(\n          fieldParentTreeName + fieldElement.name\n        );\n      } else if (\n        !isRequiredViolated &&\n        !isConstraintViolated &&\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\n      ) {\n        this.props.removeErrorInputIdActionCreator(\n          fieldParentTreeName + fieldElement.name\n        );\n      }\n      let defaultValue: string = '';\n      if (fieldValue) {\n        defaultValue = fieldValue.toISOString().slice(0, 23);\n      }\n\n      return (\n        <FormGroup>\n          <Label>{fieldLabel}</Label>\n          {isRequired && <Label>{REQUIRED_SYMBOL}</Label>}\n          <Input\n            type=\"datetime-local\"\n            name={fieldElement.name}\n            onChange={this.onChangeHandler}\n            value={defaultValue}\n            readOnly={isReadonly}\n          />\n          {isRequiredViolated && <Label>{REQUIRED_FIELD_MSG}</Label>}\n          {isConstraintViolated && <Label>{constraintLabel}</Label>}\n        </FormGroup>\n      );\n    } else {\n      if (fieldValue != null) {\n        this.props.assignFieldValueActionCreator(\n          fieldParentTreeName + fieldElement.name,\n          null\n        );\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\n          this.props.removeErrorInputIdActionCreator(\n            fieldParentTreeName + fieldElement.name\n          );\n        }\n      }\n      return null;\n    }\n  }\n  /** sets the value of field element in store\n   * @param {React.FormEvent<HTMLInputElement>} event - the onchange input event\n   */\n  private onChangeHandler = (event: React.FormEvent<HTMLInputElement>) => {\n    if (event.currentTarget.value) {\n      this.props.assignFieldValueActionCreator(\n        this.props.fieldParentTreeName + event.currentTarget.name,\n        new Date(event.currentTarget.value)\n      );\n    } else {\n      this.props.assignFieldValueActionCreator(\n        this.props.fieldParentTreeName + event.currentTarget.name,\n        ''\n      );\n    }\n  };\n}\n\n/** connect the component to the store */\n\n/** Interface to describe props from mapStateToProps */\ninterface DispatchedStateProps {\n  fieldValue: string;\n  getEvaluatedExpressionSelector: any;\n  isComponentRender: boolean;\n  isPresentInErrorSelector: any;\n}\n\n/** Interface to describe props from parent */\ninterface ParentProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n}\n\n/** Map props to state  */\nconst mapStateToProps = (\n  state: Partial<Store>,\n  parentProps: ParentProps\n): DispatchedStateProps => {\n  const { fieldElement, fieldParentTreeName } = parentProps;\n  const getEvaluatedExpressionSelector = (\n    expression: string,\n    fieldTreeName: string\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\n    isPresentInError(state, fieldTreeName);\n  const result = {\n    fieldValue:\n      getFieldValue(state, fieldParentTreeName + fieldElement.name) || '',\n    getEvaluatedExpressionSelector,\n    isComponentRender: shouldComponentBeRelevant(\n      fieldElement,\n      fieldParentTreeName,\n      getEvaluatedExpressionSelector\n    ),\n    isPresentInErrorSelector,\n  };\n  return result;\n};\n\n/** map props to actions */\nconst mapDispatchToProps = {\n  addErrorInputIdActionCreator: addErrorInputId,\n  assignFieldValueActionCreator: assignFieldValueAction,\n  removeErrorInputIdActionCreator: removeErrorInputId,\n};\n\n/** connect Date Time component to the redux store */\nconst ConnectedDateTime = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DateTime);\n\nexport default ConnectedDateTime;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport { Store } from 'redux';\nimport {\n  FieldElement,\n  FieldParentTreeName,\n} from '../../../../components/typeEvalutors/Base';\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\nimport {\n  addErrorInputId,\n  assignFieldValueAction,\n  getEvaluatedExpression,\n  getFieldValue,\n  isPresentInError,\n  removeErrorInputId,\n} from '../../../../store/ducks/formState';\nimport {\n  getConstraintLabelText,\n  getFieldLabelText,\n  isInputRequired,\n  shouldComponentBeReadOnly,\n  shouldComponentBeRelevant,\n  shouldInputViolatesConstraint,\n} from '../../../../utils/helpers';\n\n/** props interface for the decimal component */\nexport interface DecimalProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n  fieldValue: any;\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\n  getEvaluatedExpressionSelector: any;\n  isComponentRender: boolean;\n  isPresentInErrorSelector: any;\n  addErrorInputIdActionCreator: typeof addErrorInputId;\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\n  defaultLanguage: string;\n}\n\nclass Decimal extends React.Component<DecimalProps> {\n  public render() {\n    const {\n      fieldElement,\n      fieldParentTreeName,\n      fieldValue,\n      isComponentRender,\n      getEvaluatedExpressionSelector,\n      isPresentInErrorSelector,\n      defaultLanguage,\n    } = this.props;\n\n    const isRequired = isInputRequired(fieldElement);\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\n    const isConstraintViolated =\n      fieldValue &&\n      fieldValue !== '' &&\n      shouldInputViolatesConstraint(\n        fieldElement,\n        fieldParentTreeName,\n        getEvaluatedExpressionSelector\n      );\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\n    const constraintLabel = getConstraintLabelText(\n      fieldElement,\n      defaultLanguage\n    );\n    if (isComponentRender) {\n      if (fieldValue == null && 'default' in fieldElement) {\n        this.props.assignFieldValueActionCreator(\n          fieldParentTreeName + fieldElement.name,\n          fieldElement.default\n        );\n      }\n      const isReadonly = shouldComponentBeReadOnly(\n        fieldElement,\n        fieldParentTreeName,\n        getEvaluatedExpressionSelector\n      );\n      if (\n        (isRequiredViolated || isConstraintViolated) &&\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\n      ) {\n        this.props.addErrorInputIdActionCreator(\n          fieldParentTreeName + fieldElement.name\n        );\n      } else if (\n        !isRequiredViolated &&\n        !isConstraintViolated &&\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\n      ) {\n        this.props.removeErrorInputIdActionCreator(\n          fieldParentTreeName + fieldElement.name\n        );\n      }\n      return (\n        <FormGroup>\n          <Label>{fieldLabel}</Label>\n          {isRequired && <Label>{REQUIRED_SYMBOL}</Label>}\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name={fieldElement.name}\n            onChange={this.onChangeHandler}\n            value={fieldValue || fieldValue === 0 ? fieldValue : ''}\n            readOnly={isReadonly}\n          />\n          {isRequiredViolated && <Label>{REQUIRED_FIELD_MSG}</Label>}\n          {isConstraintViolated && <Label>{constraintLabel}</Label>}\n        </FormGroup>\n      );\n    } else {\n      if (fieldValue != null) {\n        this.props.assignFieldValueActionCreator(\n          fieldParentTreeName + fieldElement.name,\n          null\n        );\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\n          this.props.removeErrorInputIdActionCreator(\n            fieldParentTreeName + fieldElement.name\n          );\n        }\n      }\n      return null;\n    }\n  }\n  /** sets the value of field element in store\n   * @param {React.FormEvent<HTMLInputElement>} event - the onchange input event\n   */\n  private onChangeHandler = (event: React.FormEvent<HTMLInputElement>) => {\n    const value = parseFloat(event.currentTarget.value);\n    this.props.assignFieldValueActionCreator(\n      this.props.fieldParentTreeName + event.currentTarget.name,\n      value\n    );\n  };\n}\n\n/** connect the component to the store */\n\n/** Interface to describe props from mapStateToProps */\ninterface DispatchedStateProps {\n  fieldValue: any;\n  getEvaluatedExpressionSelector: any;\n  isComponentRender: boolean;\n  isPresentInErrorSelector: any;\n}\n\n/** Interface to describe props from parent */\ninterface ParentProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n}\n\n/** Map props to state  */\nconst mapStateToProps = (\n  state: Partial<Store>,\n  parentProps: ParentProps\n): DispatchedStateProps => {\n  const { fieldElement, fieldParentTreeName } = parentProps;\n  const getEvaluatedExpressionSelector = (\n    expression: string,\n    fieldTreeName: string\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\n    isPresentInError(state, fieldTreeName);\n  const result = {\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\n    getEvaluatedExpressionSelector,\n    isComponentRender: shouldComponentBeRelevant(\n      fieldElement,\n      fieldParentTreeName,\n      getEvaluatedExpressionSelector\n    ),\n    isPresentInErrorSelector,\n  };\n  return result;\n};\n\n/** map props to actions */\nconst mapDispatchToProps = {\n  addErrorInputIdActionCreator: addErrorInputId,\n  assignFieldValueActionCreator: assignFieldValueAction,\n  removeErrorInputIdActionCreator: removeErrorInputId,\n};\n\n/** connect Decimal component to the redux store */\nconst ConnectedDecimal = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Decimal);\n\nexport default ConnectedDecimal;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport { Store } from 'redux';\nimport {\n  FieldElement,\n  FieldParentTreeName,\n} from '../../../../components/typeEvalutors/Base';\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\nimport {\n  addErrorInputId,\n  assignFieldValueAction,\n  getEvaluatedExpression,\n  getFieldValue,\n  isPresentInError,\n  removeErrorInputId,\n} from '../../../../store/ducks/formState';\nimport {\n  getConstraintLabelText,\n  getFieldLabelText,\n  isInputRequired,\n  shouldComponentBeReadOnly,\n  shouldComponentBeRelevant,\n  shouldInputViolatesConstraint,\n} from '../../../../utils/helpers';\n\n/** props interface for the integer component */\nexport interface IntegerProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n  fieldValue: any;\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\n  getEvaluatedExpressionSelector: any;\n  isComponentRender: boolean;\n  isPresentInErrorSelector: any;\n  addErrorInputIdActionCreator: typeof addErrorInputId;\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\n  defaultLanguage: string;\n}\n\nclass Integer extends React.Component<IntegerProps> {\n  public render() {\n    const {\n      fieldElement,\n      fieldParentTreeName,\n      fieldValue,\n      isComponentRender,\n      getEvaluatedExpressionSelector,\n      isPresentInErrorSelector,\n      defaultLanguage,\n    } = this.props;\n    const isRequired = isInputRequired(fieldElement);\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\n    const isConstraintViolated =\n      fieldValue &&\n      fieldValue !== '' &&\n      shouldInputViolatesConstraint(\n        fieldElement,\n        fieldParentTreeName,\n        getEvaluatedExpressionSelector\n      );\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\n    const constraintLabel = getConstraintLabelText(\n      fieldElement,\n      defaultLanguage\n    );\n    if (isComponentRender) {\n      if (fieldValue == null && 'default' in fieldElement) {\n        this.props.assignFieldValueActionCreator(\n          fieldParentTreeName + fieldElement.name,\n          fieldElement.default\n        );\n      }\n      const isReadonly = shouldComponentBeReadOnly(\n        fieldElement,\n        fieldParentTreeName,\n        getEvaluatedExpressionSelector\n      );\n      if (\n        (isRequiredViolated || isConstraintViolated) &&\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\n      ) {\n        this.props.addErrorInputIdActionCreator(\n          fieldParentTreeName + fieldElement.name\n        );\n      } else if (\n        !isRequiredViolated &&\n        !isConstraintViolated &&\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\n      ) {\n        this.props.removeErrorInputIdActionCreator(\n          fieldParentTreeName + fieldElement.name\n        );\n      }\n\n      return (\n        <FormGroup>\n          <Label>{fieldLabel}</Label>\n          {isRequired && <Label>{REQUIRED_SYMBOL}</Label>}\n          <Input\n            type=\"number\"\n            name={fieldElement.name}\n            onChange={this.onChangeHandler}\n            value={fieldValue}\n            readOnly={isReadonly}\n          />\n          {isRequiredViolated && <Label>{REQUIRED_FIELD_MSG}</Label>}\n          {isConstraintViolated && <Label>{constraintLabel}</Label>}\n        </FormGroup>\n      );\n    } else {\n      if (fieldValue != null) {\n        this.props.assignFieldValueActionCreator(\n          fieldParentTreeName + fieldElement.name,\n          null\n        );\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\n          this.props.removeErrorInputIdActionCreator(\n            fieldParentTreeName + fieldElement.name\n          );\n        }\n      }\n      return null;\n    }\n  }\n  /** sets the value of field element in store\n   * @param {React.FormEvent<HTMLInputElement>} event - the onchange input event\n   */\n  private onChangeHandler = (event: React.FormEvent<HTMLInputElement>) => {\n    const value = parseInt(event.currentTarget.value, 10);\n    this.props.assignFieldValueActionCreator(\n      this.props.fieldParentTreeName + event.currentTarget.name,\n      value\n    );\n  };\n}\n\n/** connect the component to the store */\n\n/** Interface to describe props from mapStateToProps */\ninterface DispatchedStateProps {\n  fieldValue: any;\n  getEvaluatedExpressionSelector: any;\n  isComponentRender: boolean;\n  isPresentInErrorSelector: any;\n}\n\n/** Interface to describe props from parent */\ninterface ParentProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n}\n\n/** Map props to state  */\nconst mapStateToProps = (\n  state: Partial<Store>,\n  parentProps: ParentProps\n): DispatchedStateProps => {\n  const { fieldElement, fieldParentTreeName } = parentProps;\n  const getEvaluatedExpressionSelector = (\n    expression: string,\n    fieldTreeName: string\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\n    isPresentInError(state, fieldTreeName);\n\n  const result = {\n    fieldValue:\n      getFieldValue(state, fieldParentTreeName + fieldElement.name) || '',\n    getEvaluatedExpressionSelector,\n    isComponentRender: shouldComponentBeRelevant(\n      fieldElement,\n      fieldParentTreeName,\n      getEvaluatedExpressionSelector\n    ),\n    isPresentInErrorSelector,\n  };\n  return result;\n};\n\n/** map props to actions */\nconst mapDispatchToProps = {\n  addErrorInputIdActionCreator: addErrorInputId,\n  assignFieldValueActionCreator: assignFieldValueAction,\n  removeErrorInputIdActionCreator: removeErrorInputId,\n};\n\n/** connect Integer component to the redux store */\nconst ConnectedInteger = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Integer);\n\nexport default ConnectedInteger;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { FormGroup, FormText, Label } from 'reactstrap';\nimport { Store } from 'redux';\nimport {\n  FieldElement,\n  FieldParentTreeName,\n} from '../../../../components/typeEvalutors/Base';\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\nimport {\n  addErrorInputId,\n  assignFieldValueAction,\n  getEvaluatedExpression,\n  getFieldValue,\n  isPresentInError,\n  removeErrorInputId,\n} from '../../../../store/ducks/formState';\nimport {\n  getConstraintLabelText,\n  getFieldHintText,\n  getFieldLabelText,\n  isInputRequired,\n  shouldComponentBeRelevant,\n  shouldInputViolatesConstraint,\n} from '../../../../utils/helpers';\n\n/** props interface for the text component */\nexport interface NoteProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n  fieldValue: string;\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\n  getEvaluatedExpressionSelector: any;\n  isPresentInErrorSelector: any;\n  isComponentRender: boolean;\n  addErrorInputIdActionCreator: typeof addErrorInputId;\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\n  defaultLanguage: string;\n}\n\nclass Note extends React.Component<NoteProps> {\n  public render() {\n    const {\n      fieldElement,\n      fieldParentTreeName,\n      fieldValue,\n      isComponentRender,\n      getEvaluatedExpressionSelector,\n      isPresentInErrorSelector,\n      defaultLanguage,\n    } = this.props;\n    const isRequired = isInputRequired(fieldElement);\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\n    const isConstraintViolated =\n      fieldValue &&\n      fieldValue !== '' &&\n      shouldInputViolatesConstraint(\n        fieldElement,\n        fieldParentTreeName,\n        getEvaluatedExpressionSelector\n      );\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\n    const constraintLabel = getConstraintLabelText(\n      fieldElement,\n      defaultLanguage\n    );\n    if (isComponentRender) {\n      if (fieldValue == null && 'default' in fieldElement) {\n        this.props.assignFieldValueActionCreator(\n          fieldElement.name,\n          fieldElement.default\n        );\n      }\n      const fieldHint = getFieldHintText(fieldElement, defaultLanguage);\n      if (\n        (isRequiredViolated || isConstraintViolated) &&\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\n      ) {\n        this.props.addErrorInputIdActionCreator(\n          fieldParentTreeName + fieldElement.name\n        );\n      } else if (\n        !isRequiredViolated &&\n        !isConstraintViolated &&\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\n      ) {\n        this.props.removeErrorInputIdActionCreator(\n          fieldParentTreeName + fieldElement.name\n        );\n      }\n      return (\n        <FormGroup>\n          <Label>{fieldLabel}</Label>\n          {isRequired && <Label>{REQUIRED_SYMBOL}</Label>}\n          <FormText>{fieldHint}</FormText>\n          {isRequiredViolated && <Label>{REQUIRED_FIELD_MSG}</Label>}\n          {isConstraintViolated && <Label>{constraintLabel}</Label>}\n        </FormGroup>\n      );\n    } else {\n      if (fieldValue != null) {\n        this.props.assignFieldValueActionCreator(fieldElement.name, null);\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\n          this.props.removeErrorInputIdActionCreator(\n            fieldParentTreeName + fieldElement.name\n          );\n        }\n      }\n      return null;\n    }\n  }\n}\n\n/** connect the component to the store */\n\n/** Interface to describe props from mapStateToProps */\ninterface DispatchedStateProps {\n  fieldValue: string;\n  getEvaluatedExpressionSelector: any;\n  isComponentRender: boolean;\n  isPresentInErrorSelector: any;\n}\n\n/** Interface to describe props from parent */\ninterface ParentProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n}\n\n/** Map props to state  */\nconst mapStateToProps = (\n  state: Partial<Store>,\n  parentProps: ParentProps\n): DispatchedStateProps => {\n  const { fieldElement, fieldParentTreeName } = parentProps;\n  const getEvaluatedExpressionSelector = (\n    expression: string,\n    fieldTreeName: string\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\n    isPresentInError(state, fieldTreeName);\n  const result = {\n    fieldValue:\n      getFieldValue(state, fieldParentTreeName + fieldElement.name) || '',\n    getEvaluatedExpressionSelector,\n    isComponentRender: shouldComponentBeRelevant(\n      fieldElement,\n      fieldParentTreeName,\n      getEvaluatedExpressionSelector\n    ),\n    isPresentInErrorSelector,\n  };\n  return result;\n};\n\n/** map props to actions */\nconst mapDispatchToProps = {\n  addErrorInputIdActionCreator: addErrorInputId,\n  assignFieldValueActionCreator: assignFieldValueAction,\n  removeErrorInputIdActionCreator: removeErrorInputId,\n};\n\n/** connect Note component to the redux store */\nconst ConnectedNote = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Note);\n\nexport default ConnectedNote;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport { Store } from 'redux';\nimport { FieldElement } from '../../../../components/typeEvalutors/Base';\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\nimport {\n  assignFieldValueAction,\n  getFieldValue,\n} from '../../../../store/ducks/formState';\nimport { getFieldLabelText, isInputRequired } from '../../../../utils/helpers';\n\n/** props interface for the photo component */\nexport interface PhotoProps {\n  fieldElement: FieldElement;\n  fieldValue: string;\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\n  defaultLanguage: string;\n}\n\nclass Photo extends React.Component<PhotoProps> {\n  public render() {\n    const { fieldElement, fieldValue, defaultLanguage } = this.props;\n    const isRequired = isInputRequired(fieldElement);\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\n    return (\n      <FormGroup>\n        <Label>{fieldLabel}</Label>\n        {isRequired && <Label>{REQUIRED_SYMBOL}</Label>}\n        <Input\n          type=\"file\"\n          accept=\"image/*\"\n          name={fieldElement.name}\n          onChange={this.onChangeHandler}\n          value={fieldValue}\n        />\n        {isRequired && <Label>{REQUIRED_FIELD_MSG}</Label>}\n      </FormGroup>\n    );\n  }\n  /** sets the value of field element in store\n   * @param {React.FormEvent<HTMLInputElement>} event - the onchange input event\n   */\n  private onChangeHandler = (event: React.FormEvent<HTMLInputElement>) => {\n    this.props.assignFieldValueActionCreator(\n      event.currentTarget.name,\n      event.currentTarget.value\n    );\n  };\n}\n\n/** connect the component to the store */\n\n/** Interface to describe props from mapStateToProps */\ninterface DispatchedStateProps {\n  fieldValue: string;\n}\n\n/** Interface to describe props from parent */\ninterface ParentProps {\n  fieldElement: FieldElement;\n}\n\n/** Map props to state  */\nconst mapStateToProps = (\n  state: Partial<Store>,\n  parentProps: ParentProps\n): DispatchedStateProps => {\n  const { fieldElement } = parentProps;\n  const result = {\n    fieldValue: getFieldValue(state, fieldElement.name),\n  };\n  return result;\n};\n\n/** map props to actions */\nconst mapDispatchToProps = {\n  assignFieldValueActionCreator: assignFieldValueAction,\n};\n\n/** connect Photo component to the redux store */\nconst ConnectedPhoto = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Photo);\n\nexport default ConnectedPhoto;\n","import _ from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\nimport { FormGroup, Label } from 'reactstrap';\nimport { Store } from 'redux';\nimport {\n  FieldElement,\n  FieldParentTreeName,\n} from '../../../../../components/typeEvalutors/Base';\nimport {\n  geo,\n  REQUIRED_FIELD_MSG,\n  REQUIRED_SYMBOL,\n} from '../../../../../constants';\nimport {\n  addErrorInputId,\n  assignFieldValueAction,\n  getEvaluatedExpression,\n  getEvaluatedExpressionForSelect,\n  getFieldValue,\n  isPresentInError,\n  removeErrorInputId,\n} from '../../../../../store/ducks/formState';\nimport {\n  getConstraintLabelText,\n  getFieldLabelText,\n  isInputRequired,\n  shouldComponentBeRelevant,\n  shouldInputViolatesConstraint,\n} from '../../../../../utils/helpers';\n\n/** props interface for the SelectAll Dropdown component */\nexport interface SelectAllDropDownProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n  fieldValue: string[];\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\n  getEvaluatedExpressionSelector: any;\n  getEvaluatedExpressionSelectorForSelect: any;\n  isComponentRender: boolean;\n  isPresentInErrorSelector: any;\n  addErrorInputIdActionCreator: typeof addErrorInputId;\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\n  defaultLanguage: string;\n}\n\nexport interface Options {\n  label: any;\n  value: string;\n}\n\nclass SelectAllDropDown extends React.Component<SelectAllDropDownProps> {\n  public render() {\n    const {\n      fieldElement,\n      fieldParentTreeName,\n      fieldValue,\n      isComponentRender,\n      getEvaluatedExpressionSelector,\n      isPresentInErrorSelector,\n      defaultLanguage,\n    } = this.props;\n    const isRequired = isInputRequired(fieldElement);\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === []);\n    const isConstraintViolated =\n      fieldValue &&\n      fieldValue !== [] &&\n      shouldInputViolatesConstraint(\n        fieldElement,\n        fieldParentTreeName,\n        getEvaluatedExpressionSelector\n      );\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\n    const constraintLabel = getConstraintLabelText(\n      fieldElement,\n      defaultLanguage\n    );\n    if (isComponentRender) {\n      if (fieldValue == null && 'default' in fieldElement) {\n        this.props.assignFieldValueActionCreator(\n          fieldParentTreeName + fieldElement.name,\n          fieldElement.default\n        );\n      }\n\n      if (\n        (isRequiredViolated || isConstraintViolated) &&\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\n      ) {\n        this.props.addErrorInputIdActionCreator(\n          fieldParentTreeName + fieldElement.name\n        );\n      } else if (\n        !isRequiredViolated &&\n        !isConstraintViolated &&\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\n      ) {\n        this.props.removeErrorInputIdActionCreator(\n          fieldParentTreeName + fieldElement.name\n        );\n      }\n\n      let resultOptions: any[] = [];\n      const options: Options[] = [];\n\n      if (fieldElement.control && fieldElement.control.appearance) {\n        const updatedFieldElement: any = fieldElement.control.appearance\n          .toString()\n          .replace('minimal', '');\n        if (/search\\([^\\)|(]+\\)/i.test(updatedFieldElement)) {\n          const processedStringArray = updatedFieldElement.match(\n            /search\\([^\\)|(]+\\)/i\n          ) || [''];\n          resultOptions = this.getProcessedString(processedStringArray[0]);\n        }\n      }\n\n      if (resultOptions.length > 0) {\n        resultOptions.map(elem =>\n          options.push({ label: elem.label, value: elem.name })\n        );\n      } else {\n        if (fieldElement.children) {\n          fieldElement.children.map(elem => {\n            const childrenLabel: string = getFieldLabelText(\n              elem,\n              defaultLanguage\n            );\n            options.push({ label: childrenLabel, value: elem.name });\n          });\n        }\n      }\n\n      const tmpValueArray: any = [];\n      let isNotIncluded: boolean = false;\n      if (fieldValue && fieldValue.length > 0) {\n        const optionsValueArray: any = [];\n        options.map(elem => {\n          if (elem.value) {\n            optionsValueArray.push(elem.value);\n          }\n        });\n\n        for (const row of fieldValue) {\n          if (!optionsValueArray.includes(row)) {\n            isNotIncluded = true;\n          } else {\n            tmpValueArray.push(row);\n          }\n        }\n      }\n\n      if (fieldValue && fieldValue.length > 0 && isNotIncluded) {\n        this.props.assignFieldValueActionCreator(\n          this.props.fieldParentTreeName + fieldElement.name,\n          tmpValueArray || []\n        );\n      }\n\n      const selectedValues: any[] = [];\n      if (fieldValue && fieldValue.length > 0) {\n        options.map(elem => {\n          for (const row of fieldValue) {\n            if (elem.value === row) {\n              selectedValues.push(elem);\n            }\n          }\n        });\n      }\n\n      return (\n        <FormGroup>\n          <Label>{fieldLabel}</Label>\n          {isRequired && <Label>{REQUIRED_SYMBOL}</Label>}\n          <Select\n            isMulti={true}\n            name={fieldElement.name}\n            options={options}\n            onChange={this.onChangeHandler(fieldElement.name)}\n            value={selectedValues || []}\n          />\n          {isRequiredViolated && <Label>{REQUIRED_FIELD_MSG}</Label>}\n          {isConstraintViolated && <Label>{constraintLabel}</Label>}\n        </FormGroup>\n      );\n    } else {\n      if (fieldValue != null) {\n        this.props.assignFieldValueActionCreator(\n          fieldParentTreeName + fieldElement.name,\n          null\n        );\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\n          this.props.removeErrorInputIdActionCreator(\n            fieldParentTreeName + fieldElement.name\n          );\n        }\n      }\n      return null;\n    }\n  }\n  /** sets the value of field element in store\n   * @param {any} values - the onchange input values\n   * @param {any} fieldName - the input name\n   */\n  private onChangeHandler = (fieldName: any) => (values: any) => {\n    const selectedValues: any = [];\n    let i = 0;\n    if (values) {\n      values.map(() => {\n        if (!selectedValues.includes(values[i].value)) {\n          selectedValues.push(values[i].value);\n        }\n        i++;\n      });\n      this.props.assignFieldValueActionCreator(\n        this.props.fieldParentTreeName + fieldName,\n        selectedValues\n      );\n    } else {\n      this.props.assignFieldValueActionCreator(\n        this.props.fieldParentTreeName + fieldName,\n        null\n      );\n    }\n  };\n\n  /** converts apeearance text into array and pass them to further process\n   * @param {string} stringWithSearchKeyWord - the fieldElement children appearance text (partial)\n   */\n  private getProcessedString = (stringWithSearchKeyWord: string) => {\n    const processedStringArray = stringWithSearchKeyWord.match(\n      /\\([^\\)]+\\)/i\n    ) || [''];\n    let params = processedStringArray[0];\n\n    if (params.length > 2) {\n      params = params.substring(1, params.length - 1);\n      const resultArray = params.split(',');\n      let criteriaParams = [...resultArray];\n      criteriaParams = criteriaParams.splice(2, criteriaParams.length);\n      return this.extractAndFilterOptions(\n        resultArray[0],\n        resultArray[1] || null,\n        criteriaParams || []\n      );\n    }\n    return [];\n  };\n\n  /** generates unique dropdown options using CSV\n   * @param {string} csvName - the CSV file name\n   * @param {string | null} criteriaType - criteria to match with previous user input\n   * @param {any} filterCriterias - previous user input collections\n   */\n  private extractAndFilterOptions = (\n    csvName: string,\n    criteriaType: string | null,\n    filterCriterias: any\n  ) => {\n    if (criteriaType) {\n      criteriaType = criteriaType.trim();\n      criteriaType = criteriaType.substring(1, criteriaType.length - 1).trim();\n    }\n\n    let options: any[] = [];\n    const distinctOptions: any[] = [];\n    const finalRes: any[] = [];\n\n    if (csvName) {\n      options = [...geo];\n    }\n\n    if (criteriaType && criteriaType.trim() === 'matches') {\n      let i = 0;\n      while (i < filterCriterias.length) {\n        let nameOfKey = filterCriterias[i].trim();\n        nameOfKey = nameOfKey.substring(1, nameOfKey.length - 1).trim();\n        const interConnectedValue = filterCriterias[i + 1];\n        const tempOptions = [...options];\n\n        tempOptions.forEach(elm => {\n          const filterResult = this.props.getEvaluatedExpressionSelectorForSelect(\n            interConnectedValue,\n            this.props.fieldParentTreeName + this.props.fieldElement.name,\n            elm\n          );\n\n          let j = 0;\n          filterResult.map(() => {\n            options.map(option => {\n              if (option[nameOfKey] === filterResult[j]) {\n                finalRes.push(option);\n              }\n            });\n            j = j + 1;\n          });\n        });\n\n        i = i + 2;\n      }\n\n      options = [...Array.from(new Set(finalRes))];\n    }\n\n    if (options.length !== 0) {\n      let labelColumnName: string = '';\n      let valueColumnName: string = '';\n      if (\n        this.props.fieldElement.children &&\n        this.props.fieldElement.children[0] &&\n        this.props.fieldElement.children[0].name &&\n        this.props.fieldElement.children[0].label\n      ) {\n        labelColumnName = getFieldLabelText(\n          this.props.fieldElement.children[0],\n          this.props.defaultLanguage\n        );\n        valueColumnName = this.props.fieldElement.children[0].name;\n      }\n\n      options.forEach(elem => {\n        const tmpOpt: any = {};\n        const label: string = 'label';\n        const name: string = 'name';\n        tmpOpt[label] = elem[labelColumnName].trim();\n        tmpOpt[name] = elem[valueColumnName].trim();\n        distinctOptions.push(tmpOpt);\n      });\n\n      return _.uniqBy(distinctOptions, 'name');\n    }\n    return [];\n  };\n}\n\n/** connect the component to the store */\n\n/** Interface to describe props from mapStateToProps */\ninterface DispatchedStateProps {\n  fieldValue: string[];\n  getEvaluatedExpressionSelector: any;\n  getEvaluatedExpressionSelectorForSelect: any;\n  isComponentRender: boolean;\n  isPresentInErrorSelector: any;\n}\n\n/** Interface to describe props from parent */\ninterface ParentProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n  defaultLanguage: string;\n}\n\n/** Map props to state  */\nconst mapStateToProps = (\n  state: Partial<Store>,\n  parentProps: ParentProps\n): DispatchedStateProps => {\n  const { fieldElement, fieldParentTreeName } = parentProps;\n  const getEvaluatedExpressionSelector = (\n    expression: string,\n    fieldTreeName: string\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\n  const getEvaluatedExpressionSelectorForSelect = (\n    expression: string,\n    fieldTreeName: string,\n    options: any\n  ) =>\n    getEvaluatedExpressionForSelect(state, expression, options, fieldTreeName);\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\n    isPresentInError(state, fieldTreeName);\n  const result = {\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\n    getEvaluatedExpressionSelector,\n    getEvaluatedExpressionSelectorForSelect,\n    isComponentRender: shouldComponentBeRelevant(\n      fieldElement,\n      fieldParentTreeName,\n      getEvaluatedExpressionSelector\n    ),\n    isPresentInErrorSelector,\n  };\n  return result;\n};\n\n/** map props to actions */\nconst mapDispatchToProps = {\n  addErrorInputIdActionCreator: addErrorInputId,\n  assignFieldValueActionCreator: assignFieldValueAction,\n  removeErrorInputIdActionCreator: removeErrorInputId,\n};\n\n/** connect SelectOne Dropdown component to the redux store */\nconst ConnectedSelectAllDropDown = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectAllDropDown);\n\nexport default ConnectedSelectAllDropDown;\n","import _ from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport { Store } from 'redux';\nimport {\n  FieldElement,\n  FieldParentTreeName,\n} from '../../../../../components/typeEvalutors/Base';\nimport {\n  geo,\n  REQUIRED_FIELD_MSG,\n  REQUIRED_SYMBOL,\n} from '../../../../../constants';\nimport {\n  addErrorInputId,\n  assignFieldValueAction,\n  getEvaluatedExpression,\n  getEvaluatedExpressionForSelect,\n  getFieldValue,\n  isPresentInError,\n  removeErrorInputId,\n} from '../../../../../store/ducks/formState';\nimport {\n  getConstraintLabelText,\n  getFieldLabelText,\n  isInputRequired,\n  shouldComponentBeReadOnly,\n  shouldComponentBeRelevant,\n  shouldInputViolatesConstraint,\n} from '../../../../../utils/helpers';\n\n/** props interface for the SelectAll Radio component */\nexport interface SelectAllRadioProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n  fieldValue: string[];\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\n  getEvaluatedExpressionSelector: any;\n  getEvaluatedExpressionSelectorForSelect: any;\n  isComponentRender: boolean;\n  isPresentInErrorSelector: any;\n  addErrorInputIdActionCreator: typeof addErrorInputId;\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\n  defaultLanguage: string;\n}\n\nexport interface Options {\n  label: any;\n  value: string;\n}\n\nclass SelectAllRadio extends React.Component<SelectAllRadioProps> {\n  public render() {\n    const {\n      fieldElement,\n      fieldParentTreeName,\n      fieldValue,\n      isComponentRender,\n      getEvaluatedExpressionSelector,\n      isPresentInErrorSelector,\n      defaultLanguage,\n    } = this.props;\n    const isRequired = isInputRequired(fieldElement);\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === []);\n    const isConstraintViolated =\n      fieldValue &&\n      fieldValue !== [] &&\n      shouldInputViolatesConstraint(\n        fieldElement,\n        fieldParentTreeName,\n        getEvaluatedExpressionSelector\n      );\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\n    const constraintLabel = getConstraintLabelText(\n      fieldElement,\n      defaultLanguage\n    );\n    if (isComponentRender) {\n      if (fieldValue == null && 'default' in fieldElement) {\n        this.props.assignFieldValueActionCreator(\n          fieldParentTreeName + fieldElement.name,\n          fieldElement.default\n        );\n      }\n      const isReadonly = shouldComponentBeReadOnly(\n        fieldElement,\n        fieldParentTreeName,\n        getEvaluatedExpressionSelector\n      );\n      if (\n        (isRequiredViolated || isConstraintViolated) &&\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\n      ) {\n        this.props.addErrorInputIdActionCreator(\n          fieldParentTreeName + fieldElement.name\n        );\n      } else if (\n        !isRequiredViolated &&\n        !isConstraintViolated &&\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\n      ) {\n        this.props.removeErrorInputIdActionCreator(\n          fieldParentTreeName + fieldElement.name\n        );\n      }\n\n      let resultOptions: any[] = [];\n      const options: Options[] = [];\n\n      if (fieldElement.control && fieldElement.control.appearance) {\n        const updatedFieldElement: any = fieldElement.control.appearance\n          .toString()\n          .replace('minimal', '');\n        if (/search\\([^\\)|(]+\\)/i.test(updatedFieldElement)) {\n          const processedStringArray = updatedFieldElement.match(\n            /search\\([^\\)|(]+\\)/i\n          ) || [''];\n          resultOptions = this.getProcessedString(processedStringArray[0]);\n        }\n      }\n\n      if (resultOptions.length > 0) {\n        resultOptions.map(elem =>\n          options.push({ label: elem.label, value: elem.name })\n        );\n\n        const tmpValueArray: any = [];\n        let isNotIncluded: boolean = false;\n        if (fieldValue && fieldValue.length > 0) {\n          const optionsValueArray: any = [];\n          options.map(elem => {\n            if (elem.value) {\n              optionsValueArray.push(elem.value);\n            }\n          });\n\n          for (const row of fieldValue) {\n            if (!optionsValueArray.includes(row)) {\n              isNotIncluded = true;\n            } else {\n              tmpValueArray.push(row);\n            }\n          }\n        }\n\n        if (fieldValue && fieldValue.length > 0 && isNotIncluded) {\n          this.props.assignFieldValueActionCreator(\n            this.props.fieldParentTreeName + fieldElement.name,\n            tmpValueArray || []\n          );\n        }\n\n        const selectedValues: any[] = [];\n        if (fieldValue && fieldValue.length > 0) {\n          options.map(elem => {\n            for (const row of fieldValue) {\n              if (elem.value === row) {\n                selectedValues.push(elem.value);\n              }\n            }\n          });\n        }\n\n        return (\n          <FormGroup>\n            <Label>{fieldLabel}</Label>\n            {isRequired && <Label>{REQUIRED_SYMBOL}</Label>}\n            {resultOptions.map((elem, index) => (\n              <div key={index} className=\"col-md-12\">\n                <Input\n                  key={fieldElement.name + '-' + index}\n                  type=\"checkbox\"\n                  name={fieldElement.name}\n                  value={elem.name || []}\n                  onChange={this.onChangeHandlerCheckBox}\n                  readOnly={isReadonly}\n                  checked={selectedValues.includes(elem.name)}\n                />{' '}\n                {elem.label}\n              </div>\n            ))}\n            {isRequiredViolated && <Label>{REQUIRED_FIELD_MSG}</Label>}\n            {isConstraintViolated && <Label>{constraintLabel}</Label>}\n          </FormGroup>\n        );\n      } else {\n        if (fieldElement.children) {\n          return (\n            <FormGroup>\n              <Label>{fieldLabel}</Label>\n              {isRequired && <Label>{REQUIRED_SYMBOL}</Label>}\n              {fieldElement.children.map((elem, index) => (\n                <div key={index} className=\"col-md-12\">\n                  <Input\n                    key={fieldElement.name + '-' + index}\n                    type=\"checkbox\"\n                    name={fieldElement.name}\n                    value={elem.name || []}\n                    onChange={this.onChangeHandlerCheckBox}\n                    readOnly={isReadonly}\n                  />{' '}\n                  {elem.name}\n                </div>\n              ))}\n              {isRequiredViolated && <Label>{REQUIRED_FIELD_MSG}</Label>}\n              {isConstraintViolated && <Label>{constraintLabel}</Label>}\n            </FormGroup>\n          );\n        } else {\n          return null;\n        }\n      }\n    } else {\n      if (fieldValue != null) {\n        this.props.assignFieldValueActionCreator(\n          fieldParentTreeName + fieldElement.name,\n          null\n        );\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\n          this.props.removeErrorInputIdActionCreator(\n            fieldParentTreeName + fieldElement.name\n          );\n        }\n      }\n      return null;\n    }\n  }\n\n  /** sets the value of field element in store\n   * @param {any} event - the onchange event\n   */\n\n  private onChangeHandlerCheckBox = (event: any) => {\n    const { fieldValue, fieldElement, fieldParentTreeName } = this.props;\n    const fieldName = fieldParentTreeName + fieldElement.name;\n    if (event.target.checked) {\n      if (\n        fieldValue &&\n        fieldValue.length > 0 &&\n        !fieldValue.includes(event.target.value)\n      ) {\n        this.props.assignFieldValueActionCreator(fieldName, [\n          ...fieldValue,\n          event.target.value,\n        ]);\n      } else {\n        this.props.assignFieldValueActionCreator(fieldName, [\n          event.target.value,\n        ]);\n      }\n    } else {\n      if (\n        fieldValue &&\n        fieldValue.length > 0 &&\n        fieldValue.includes(event.target.value)\n      ) {\n        const newValue = fieldValue.filter(elm => elm !== event.target.value);\n\n        this.props.assignFieldValueActionCreator(\n          fieldName,\n          newValue.length ? newValue : null\n        );\n      }\n    }\n  };\n\n  /** converts apeearance text into array and pass them to further process\n   * @param {string} stringWithSearchKeyWord - the fieldElement children appearance text (partial)\n   */\n  private getProcessedString = (stringWithSearchKeyWord: string) => {\n    const processedStringArray = stringWithSearchKeyWord.match(\n      /\\([^\\)]+\\)/i\n    ) || [''];\n    let params = processedStringArray[0];\n\n    if (params.length > 2) {\n      params = params.substring(1, params.length - 1);\n      const resultArray = params.split(',');\n      let criteriaParams = [...resultArray];\n      criteriaParams = criteriaParams.splice(2, criteriaParams.length);\n      return this.extractAndFilterOptions(\n        resultArray[0],\n        resultArray[1] || null,\n        criteriaParams || []\n      );\n    }\n    return [];\n  };\n\n  /** generates unique dropdown options using CSV\n   * @param {string} csvName - the CSV file name\n   * @param {string | null} criteriaType - criteria to match with previous user input\n   * @param {any} filterCriterias - previous user input collections\n   */\n  private extractAndFilterOptions = (\n    csvName: string,\n    criteriaType: string | null,\n    filterCriterias: any\n  ) => {\n    if (criteriaType) {\n      criteriaType = criteriaType.trim();\n      criteriaType = criteriaType.substring(1, criteriaType.length - 1).trim();\n    }\n\n    let options: any[] = [];\n    const distinctOptions: any[] = [];\n    const finalRes: any[] = [];\n\n    if (csvName) {\n      options = [...geo];\n    }\n\n    if (criteriaType && criteriaType.trim() === 'matches') {\n      let i = 0;\n      while (i < filterCriterias.length) {\n        let nameOfKey = filterCriterias[i].trim();\n        nameOfKey = nameOfKey.substring(1, nameOfKey.length - 1).trim();\n        const interConnectedValue = filterCriterias[i + 1];\n        const tempOptions = [...options];\n\n        tempOptions.forEach(elm => {\n          const filterResult = this.props.getEvaluatedExpressionSelectorForSelect(\n            interConnectedValue,\n            this.props.fieldParentTreeName + this.props.fieldElement.name,\n            elm\n          );\n\n          let j = 0;\n          filterResult.map(() => {\n            options.map(option => {\n              if (option[nameOfKey] === filterResult[j]) {\n                finalRes.push(option);\n              }\n            });\n            j = j + 1;\n          });\n        });\n\n        i = i + 2;\n      }\n\n      options = [...Array.from(new Set(finalRes))];\n    }\n\n    if (options.length !== 0) {\n      let labelColumnName: string = '';\n      let valueColumnName: string = '';\n      if (\n        this.props.fieldElement.children &&\n        this.props.fieldElement.children[0] &&\n        this.props.fieldElement.children[0].name &&\n        this.props.fieldElement.children[0].label\n      ) {\n        labelColumnName = getFieldLabelText(\n          this.props.fieldElement.children[0],\n          this.props.defaultLanguage\n        );\n        valueColumnName = this.props.fieldElement.children[0].name;\n      }\n\n      options.forEach(elem => {\n        const tmpOpt: any = {};\n        const label: string = 'label';\n        const name: string = 'name';\n        tmpOpt[label] = elem[labelColumnName].trim();\n        tmpOpt[name] = elem[valueColumnName].trim();\n        distinctOptions.push(tmpOpt);\n      });\n\n      return _.uniqBy(distinctOptions, 'name');\n    }\n    return [];\n  };\n}\n\n/** connect the component to the store */\n\n/** Interface to describe props from mapStateToProps */\ninterface DispatchedStateProps {\n  fieldValue: string[];\n  getEvaluatedExpressionSelector: any;\n  getEvaluatedExpressionSelectorForSelect: any;\n  isComponentRender: boolean;\n  isPresentInErrorSelector: any;\n}\n\n/** Interface to describe props from parent */\ninterface ParentProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n}\n\n/** Map props to state  */\nconst mapStateToProps = (\n  state: Partial<Store>,\n  parentProps: ParentProps\n): DispatchedStateProps => {\n  const { fieldElement, fieldParentTreeName } = parentProps;\n  const getEvaluatedExpressionSelector = (\n    expression: string,\n    fieldTreeName: string\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\n  const getEvaluatedExpressionSelectorForSelect = (\n    expression: string,\n    fieldTreeName: string,\n    options: any\n  ) =>\n    getEvaluatedExpressionForSelect(state, expression, options, fieldTreeName);\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\n    isPresentInError(state, fieldTreeName);\n  const result = {\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\n    getEvaluatedExpressionSelector,\n    getEvaluatedExpressionSelectorForSelect,\n    isComponentRender: shouldComponentBeRelevant(\n      fieldElement,\n      fieldParentTreeName,\n      getEvaluatedExpressionSelector\n    ),\n    isPresentInErrorSelector,\n  };\n\n  return result;\n};\n\n/** map props to actions */\nconst mapDispatchToProps = {\n  addErrorInputIdActionCreator: addErrorInputId,\n  assignFieldValueActionCreator: assignFieldValueAction,\n  removeErrorInputIdActionCreator: removeErrorInputId,\n};\n\n/** connect SelectOne Radio component to the redux store */\nconst ConnectedSelectAllRadio = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectAllRadio);\n\nexport default ConnectedSelectAllRadio;\n","import * as React from 'react';\nimport { shouldComponentBeMinimal } from '../../../../../src/utils/helpers';\nimport {\n  FieldElement,\n  FieldParentTreeName,\n} from '../../../../components/typeEvalutors/Base';\nimport Dropdown from './Dropdown';\nimport Radio from './Radio';\n\n/** props interface for the SelectOne component */\nexport interface SelectAllProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n  defaultLanguage: string;\n}\n\nclass SelectAll extends React.Component<SelectAllProps> {\n  public render() {\n    const { fieldElement } = this.props;\n\n    if (shouldComponentBeMinimal(fieldElement)) {\n      return <Dropdown {...this.props} />;\n    }\n    return <Radio {...this.props} />;\n  }\n}\n\nexport default SelectAll;\n","import _ from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\nimport { FormGroup, Label } from 'reactstrap';\nimport { Store } from 'redux';\nimport {\n  FieldElement,\n  FieldParentTreeName,\n} from '../../../../../components/typeEvalutors/Base';\nimport {\n  geo,\n  REQUIRED_FIELD_MSG,\n  REQUIRED_SYMBOL,\n} from '../../../../../constants';\nimport {\n  addErrorInputId,\n  assignFieldValueAction,\n  getEvaluatedExpression,\n  getEvaluatedExpressionForSelect,\n  getFieldValue,\n  isPresentInError,\n  removeErrorInputId,\n} from '../../../../../store/ducks/formState';\nimport {\n  getConstraintLabelText,\n  getFieldLabelText,\n  isInputRequired,\n  shouldComponentBeRelevant,\n  shouldInputViolatesConstraint,\n} from '../../../../../utils/helpers';\n\n/** props interface for the SelectOne component */\nexport interface SelectOneDropDownProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n  fieldValue: string;\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\n  getEvaluatedExpressionSelector: any;\n  getEvaluatedExpressionSelectorForSelect: any;\n  isComponentRender: boolean;\n  isPresentInErrorSelector: any;\n  addErrorInputIdActionCreator: typeof addErrorInputId;\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\n  defaultLanguage: string;\n}\n\nexport interface Options {\n  label: any;\n  value: string;\n}\n\nclass SelectOneDropDown extends React.Component<SelectOneDropDownProps> {\n  public render() {\n    const {\n      fieldElement,\n      fieldParentTreeName,\n      fieldValue,\n      isComponentRender,\n      getEvaluatedExpressionSelector,\n      isPresentInErrorSelector,\n      defaultLanguage,\n    } = this.props;\n    const isRequired = isInputRequired(fieldElement);\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\n    const isConstraintViolated =\n      fieldValue &&\n      fieldValue !== '' &&\n      shouldInputViolatesConstraint(\n        fieldElement,\n        fieldParentTreeName,\n        getEvaluatedExpressionSelector\n      );\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\n    const constraintLabel = getConstraintLabelText(\n      fieldElement,\n      defaultLanguage\n    );\n\n    if (isComponentRender) {\n      if (fieldValue == null && 'default' in fieldElement) {\n        this.props.assignFieldValueActionCreator(\n          fieldParentTreeName + fieldElement.name,\n          fieldElement.default\n        );\n      }\n\n      if (\n        (isRequiredViolated || isConstraintViolated) &&\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\n      ) {\n        this.props.addErrorInputIdActionCreator(\n          fieldParentTreeName + fieldElement.name\n        );\n      } else if (\n        !isRequiredViolated &&\n        !isConstraintViolated &&\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\n      ) {\n        this.props.removeErrorInputIdActionCreator(\n          fieldParentTreeName + fieldElement.name\n        );\n      }\n\n      let resultOptions: any[] = [];\n      const options: Options[] = [];\n\n      if (fieldElement.control && fieldElement.control.appearance) {\n        const updatedFieldElement: any = fieldElement.control.appearance\n          .toString()\n          .replace('minimal', '');\n        if (/search\\([^\\)|(]+\\)/i.test(updatedFieldElement)) {\n          const processedStringArray = updatedFieldElement.match(\n            /search\\([^\\)|(]+\\)/i\n          ) || [''];\n          resultOptions = this.getProcessedString(processedStringArray[0]);\n        }\n      }\n\n      if (resultOptions.length > 0) {\n        resultOptions.map(elem =>\n          options.push({ label: elem.label, value: elem.name })\n        );\n      } else {\n        if (fieldElement.children) {\n          fieldElement.children.map(elem => {\n            const childrenLabel: string = getFieldLabelText(\n              elem,\n              defaultLanguage\n            );\n            options.push({ label: childrenLabel, value: elem.name });\n          });\n        }\n      }\n\n      if (fieldValue) {\n        const optionsValueArray: any = [];\n        options.map(elem => {\n          if (elem.value) {\n            optionsValueArray.push(elem.value);\n          }\n        });\n\n        if (!optionsValueArray.includes(fieldValue)) {\n          this.props.assignFieldValueActionCreator(\n            this.props.fieldParentTreeName + fieldElement.name,\n            ''\n          );\n        }\n      }\n\n      let selectedValue: any;\n      options.map(elem => {\n        if (elem.value === fieldValue) {\n          selectedValue = elem;\n        }\n      });\n\n      return (\n        <FormGroup>\n          <Label>{fieldLabel}</Label>\n          {isRequired && <Label>{REQUIRED_SYMBOL}</Label>}\n          <Select\n            multi={false}\n            name={fieldElement.name}\n            options={options}\n            value={selectedValue || ''}\n            onChange={this.onChangeHandler(fieldElement.name)}\n          />\n          {isRequiredViolated && <Label>{REQUIRED_FIELD_MSG}</Label>}\n          {isConstraintViolated && <Label>{constraintLabel}</Label>}\n        </FormGroup>\n      );\n    } else {\n      if (fieldValue != null) {\n        this.props.assignFieldValueActionCreator(\n          fieldParentTreeName + fieldElement.name,\n          null\n        );\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\n          this.props.removeErrorInputIdActionCreator(\n            fieldParentTreeName + fieldElement.name\n          );\n        }\n      }\n      return null;\n    }\n  }\n\n  /** sets the value of field element in store\n   * @param {any} event - the onchange input event\n   * @param {any} fieldName - the input name\n   */\n  private onChangeHandler = (fieldName: any) => (event: any) => {\n    this.props.assignFieldValueActionCreator(\n      this.props.fieldParentTreeName + fieldName,\n      event.value || ''\n    );\n  };\n\n  /** converts apeearance text into array and pass them to further process\n   * @param {string} stringWithSearchKeyWord - the fieldElement children appearance text (partial)\n   */\n  private getProcessedString = (stringWithSearchKeyWord: string) => {\n    const processedStringArray = stringWithSearchKeyWord.match(\n      /\\([^\\)]+\\)/i\n    ) || [''];\n    let params = processedStringArray[0];\n\n    if (params.length > 2) {\n      params = params.substring(1, params.length - 1);\n      const resultArray = params.split(',');\n      let criteriaParams = [...resultArray];\n      criteriaParams = criteriaParams.splice(2, criteriaParams.length);\n      return this.extractAndFilterOptions(\n        resultArray[0],\n        resultArray[1] || null,\n        criteriaParams || []\n      );\n    }\n    return [];\n  };\n\n  /** generates unique dropdown options using CSV\n   * @param {string} csvName - the CSV file name\n   * @param {string | null} criteriaType - criteria to match with previous user input\n   * @param {any} filterCriterias - previous user input collections\n   */\n  private extractAndFilterOptions = (\n    csvName: string,\n    criteriaType: string | null,\n    filterCriterias: any\n  ) => {\n    if (criteriaType) {\n      criteriaType = criteriaType.trim();\n      criteriaType = criteriaType.substring(1, criteriaType.length - 1).trim();\n    }\n\n    let options: any[] = [];\n    const distinctOptions: any[] = [];\n    if (csvName) {\n      options = [...geo];\n    }\n\n    if (criteriaType && criteriaType.trim() === 'matches') {\n      let i = 0;\n      while (i < filterCriterias.length) {\n        let nameOfKey = filterCriterias[i].trim();\n        nameOfKey = nameOfKey.substring(1, nameOfKey.length - 1).trim();\n        const interConnectedValue = filterCriterias[i + 1];\n        const tempOptions = [...options];\n        tempOptions.forEach(elm => {\n          const filterResult = this.props.getEvaluatedExpressionSelectorForSelect(\n            interConnectedValue,\n            this.props.fieldParentTreeName + this.props.fieldElement.name,\n            elm\n          );\n          options = options.filter(\n            option => option[nameOfKey] === filterResult\n          );\n        });\n\n        i = i + 2;\n      }\n    }\n\n    if (options.length !== 0) {\n      let labelColumnName: string = '';\n      let valueColumnName: string = '';\n      if (\n        this.props.fieldElement.children &&\n        this.props.fieldElement.children[0] &&\n        this.props.fieldElement.children[0].name &&\n        this.props.fieldElement.children[0].label\n      ) {\n        labelColumnName = getFieldLabelText(\n          this.props.fieldElement.children[0],\n          this.props.defaultLanguage\n        );\n        valueColumnName = this.props.fieldElement.children[0].name;\n      }\n\n      options.forEach(elem => {\n        const tmpOpt: any = {};\n        const label: string = 'label';\n        const name: string = 'name';\n        tmpOpt[label] = elem[labelColumnName].trim();\n        tmpOpt[name] = elem[valueColumnName].trim();\n        distinctOptions.push(tmpOpt);\n      });\n\n      return _.uniqBy(distinctOptions, 'name');\n    }\n    return [];\n  };\n}\n\n/** connect the component to the store */\n\n/** Interface to describe props from mapStateToProps */\ninterface DispatchedStateProps {\n  fieldValue: string;\n  getEvaluatedExpressionSelector: any;\n  getEvaluatedExpressionSelectorForSelect: any;\n  isComponentRender: boolean;\n  isPresentInErrorSelector: any;\n}\n\n/** Interface to describe props from parent */\ninterface ParentProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n  defaultLanguage: string;\n}\n\n/** Map props to state  */\nconst mapStateToProps = (\n  state: Partial<Store>,\n  parentProps: ParentProps\n): DispatchedStateProps => {\n  const { fieldElement, fieldParentTreeName } = parentProps;\n  const getEvaluatedExpressionSelector = (\n    expression: string,\n    fieldTreeName: string\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\n\n  const getEvaluatedExpressionSelectorForSelect = (\n    expression: string,\n    fieldTreeName: string,\n    options: any\n  ) =>\n    getEvaluatedExpressionForSelect(state, expression, options, fieldTreeName);\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\n    isPresentInError(state, fieldTreeName);\n  const result = {\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\n    getEvaluatedExpressionSelector,\n    getEvaluatedExpressionSelectorForSelect,\n    isComponentRender: shouldComponentBeRelevant(\n      fieldElement,\n      fieldParentTreeName,\n      getEvaluatedExpressionSelector\n    ),\n    isPresentInErrorSelector,\n  };\n  return result;\n};\n\n/** map props to actions */\nconst mapDispatchToProps = {\n  addErrorInputIdActionCreator: addErrorInputId,\n  assignFieldValueActionCreator: assignFieldValueAction,\n  removeErrorInputIdActionCreator: removeErrorInputId,\n};\n\n/** connect SelectOne component to the redux store */\nconst ConnectedSelectOneDropDown = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectOneDropDown);\n\nexport default ConnectedSelectOneDropDown;\n","import _ from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport { Store } from 'redux';\nimport {\n  FieldElement,\n  FieldParentTreeName,\n} from '../../../../../components/typeEvalutors/Base';\nimport {\n  geo,\n  REQUIRED_FIELD_MSG,\n  REQUIRED_SYMBOL,\n} from '../../../../../constants';\nimport {\n  addErrorInputId,\n  assignFieldValueAction,\n  getEvaluatedExpression,\n  getEvaluatedExpressionForSelect,\n  getFieldValue,\n  isPresentInError,\n  removeErrorInputId,\n} from '../../../../../store/ducks/formState';\nimport {\n  getConstraintLabelText,\n  getFieldLabelText,\n  isInputRequired,\n  shouldComponentBeReadOnly,\n  shouldComponentBeRelevant,\n  shouldInputViolatesConstraint,\n} from '../../../../../utils/helpers';\n\n/** props interface for the SelectOne component */\nexport interface SelectOneRadioProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n  fieldValue: string;\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\n  getEvaluatedExpressionSelector: any;\n  getEvaluatedExpressionSelectorForSelect: any;\n  isComponentRender: boolean;\n  isPresentInErrorSelector: any;\n  addErrorInputIdActionCreator: typeof addErrorInputId;\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\n  defaultLanguage: string;\n}\n\nexport interface Options {\n  label: any;\n  value: string;\n}\n\nclass SelectOneRadio extends React.Component<SelectOneRadioProps> {\n  public render() {\n    const {\n      fieldElement,\n      fieldParentTreeName,\n      fieldValue,\n      isComponentRender,\n      getEvaluatedExpressionSelector,\n      isPresentInErrorSelector,\n      defaultLanguage,\n    } = this.props;\n    const isRequired = isInputRequired(fieldElement);\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\n    const isConstraintViolated =\n      fieldValue &&\n      fieldValue !== '' &&\n      shouldInputViolatesConstraint(\n        fieldElement,\n        fieldParentTreeName,\n        getEvaluatedExpressionSelector\n      );\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\n    const constraintLabel = getConstraintLabelText(\n      fieldElement,\n      defaultLanguage\n    );\n    if (isComponentRender) {\n      if (fieldValue == null && 'default' in fieldElement) {\n        this.props.assignFieldValueActionCreator(\n          fieldParentTreeName + fieldElement.name,\n          fieldElement.default\n        );\n      }\n      const isReadonly = shouldComponentBeReadOnly(\n        fieldElement,\n        fieldParentTreeName,\n        getEvaluatedExpressionSelector\n      );\n      if (\n        (isRequiredViolated || isConstraintViolated) &&\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\n      ) {\n        this.props.addErrorInputIdActionCreator(\n          fieldParentTreeName + fieldElement.name\n        );\n      } else if (\n        !isRequiredViolated &&\n        !isConstraintViolated &&\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\n      ) {\n        this.props.removeErrorInputIdActionCreator(\n          fieldParentTreeName + fieldElement.name\n        );\n      }\n\n      let resultOptions: any[] = [];\n\n      if (fieldElement.control && fieldElement.control.appearance) {\n        if (/search\\([^\\)|(]+\\)/i.test(fieldElement.control.appearance)) {\n          const processedStringArray = fieldElement.control.appearance.match(\n            /search\\([^\\)|(]+\\)/i\n          ) || [''];\n\n          resultOptions = this.getProcessedString(processedStringArray[0]);\n        }\n      }\n\n      if (resultOptions.length > 0) {\n        if (fieldValue) {\n          const optionsValueArray: any = [];\n          resultOptions.map(elem => {\n            if (elem.name) {\n              optionsValueArray.push(elem.name);\n            }\n          });\n\n          if (!optionsValueArray.includes(fieldValue)) {\n            this.props.assignFieldValueActionCreator(\n              this.props.fieldParentTreeName + fieldElement.name,\n              ''\n            );\n          }\n        }\n        return (\n          <FormGroup>\n            <Label>{fieldLabel}</Label>\n            {isRequired && <Label>{REQUIRED_SYMBOL}</Label>}\n            {resultOptions.map((elem, index) => (\n              <div key={index} className=\"col-md-12\">\n                <Input\n                  key={fieldElement.name + '-' + index}\n                  type=\"radio\"\n                  name={fieldElement.name}\n                  value={elem.name}\n                  onChange={this.onChangeHandlerRadio(fieldElement.name)}\n                  readOnly={isReadonly}\n                  checked={elem.name === fieldValue}\n                />{' '}\n                {elem.label}\n              </div>\n            ))}\n            {isRequiredViolated && <Label>{REQUIRED_FIELD_MSG}</Label>}\n            {isConstraintViolated && <Label>{constraintLabel}</Label>}\n          </FormGroup>\n        );\n      } else {\n        if (fieldElement.children) {\n          return (\n            <FormGroup>\n              <Label>{fieldLabel}</Label>\n              {isRequired && <Label>{REQUIRED_SYMBOL}</Label>}\n              {fieldElement.children.map((elem, index) => (\n                <div key={index} className=\"col-md-12\">\n                  <Input\n                    key={fieldElement.name + '-' + index}\n                    type=\"radio\"\n                    name={fieldElement.name}\n                    value={elem.name}\n                    onChange={this.onChangeHandlerRadio(fieldElement.name)}\n                    readOnly={isReadonly}\n                  />{' '}\n                  {elem.name}\n                </div>\n              ))}\n              {isRequiredViolated && <Label>{REQUIRED_FIELD_MSG}</Label>}\n              {isConstraintViolated && <Label>{constraintLabel}</Label>}\n            </FormGroup>\n          );\n        } else {\n          return null;\n        }\n      }\n    } else {\n      if (fieldValue != null) {\n        this.props.assignFieldValueActionCreator(\n          fieldParentTreeName + fieldElement.name,\n          null\n        );\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\n          this.props.removeErrorInputIdActionCreator(\n            fieldParentTreeName + fieldElement.name\n          );\n        }\n      }\n      return null;\n    }\n  }\n  /** sets the value of Radio Button field element in store\n   * @param {any} event - the onchange input event\n   * @param {any} fieldName - the input name\n   */\n  private onChangeHandlerRadio = (fieldName: any) => (event: any) => {\n    this.props.assignFieldValueActionCreator(\n      this.props.fieldParentTreeName + fieldName,\n      event.target.value || ''\n    );\n  };\n\n  /** converts apeearance text into array and pass them to further process\n   * @param {string} stringWithSearchKeyWord - the fieldElement children appearance text (partial)\n   */\n  private getProcessedString = (stringWithSearchKeyWord: string) => {\n    const processedStringArray = stringWithSearchKeyWord.match(\n      /\\([^\\)]+\\)/i\n    ) || [''];\n    let params = processedStringArray[0];\n\n    if (params.length > 2) {\n      params = params.substring(1, params.length - 1);\n      const resultArray = params.split(',');\n      let criteriaParams = [...resultArray];\n      criteriaParams = criteriaParams.splice(2, criteriaParams.length);\n      return this.extractAndFilterOptions(\n        resultArray[0],\n        resultArray[1] || null,\n        criteriaParams || []\n      );\n    }\n    return [];\n  };\n\n  /** generates unique radio button options using CSV\n   * @param {string} csvName - the CSV file name\n   * @param {string | null} criteriaType - criteria to match with previous user input\n   * @param {any} filterCriterias - previous user input collections\n   */\n  private extractAndFilterOptions = (\n    csvName: string,\n    criteriaType: string | null,\n    filterCriterias: any\n  ) => {\n    if (criteriaType) {\n      criteriaType = criteriaType.trim();\n      criteriaType = criteriaType.substring(1, criteriaType.length - 1).trim();\n    }\n\n    let options: any[] = [];\n    const distinctOptions: any[] = [];\n    if (csvName) {\n      options = [...geo];\n    }\n\n    if (criteriaType && criteriaType.trim() === 'matches') {\n      let i = 0;\n      while (i < filterCriterias.length) {\n        let nameOfKey = filterCriterias[i].trim();\n        nameOfKey = nameOfKey.substring(1, nameOfKey.length - 1).trim();\n        const interConnectedValue = filterCriterias[i + 1];\n        const tempOptions = [...options];\n        tempOptions.forEach(elm => {\n          const filterResult = this.props.getEvaluatedExpressionSelectorForSelect(\n            interConnectedValue,\n            this.props.fieldParentTreeName + this.props.fieldElement.name,\n            elm\n          );\n          options = options.filter(\n            option => option[nameOfKey] === filterResult\n          );\n        });\n\n        i = i + 2;\n      }\n    }\n\n    if (options.length !== 0) {\n      let labelColumnName: string = '';\n      let valueColumnName: string = '';\n      if (\n        this.props.fieldElement.children &&\n        this.props.fieldElement.children[0] &&\n        this.props.fieldElement.children[0].name &&\n        this.props.fieldElement.children[0].label\n      ) {\n        labelColumnName = getFieldLabelText(\n          this.props.fieldElement.children[0],\n          this.props.defaultLanguage\n        );\n        valueColumnName = this.props.fieldElement.children[0].name;\n      }\n\n      options.forEach(elem => {\n        const tmpOpt: any = {};\n        const label: string = 'label';\n        const name: string = 'name';\n        tmpOpt[label] = elem[labelColumnName].trim();\n        tmpOpt[name] = elem[valueColumnName].trim();\n        distinctOptions.push(tmpOpt);\n      });\n      return _.uniqBy(distinctOptions, 'name');\n    }\n    return [];\n  };\n}\n\n/** connect the component to the store */\n\n/** Interface to describe props from mapStateToProps */\ninterface DispatchedStateProps {\n  fieldValue: string;\n  getEvaluatedExpressionSelector: any;\n  getEvaluatedExpressionSelectorForSelect: any;\n  isComponentRender: boolean;\n  isPresentInErrorSelector: any;\n}\n\n/** Interface to describe props from parent */\ninterface ParentProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n  defaultLanguage: string;\n}\n\n/** Map props to state  */\nconst mapStateToProps = (\n  state: Partial<Store>,\n  parentProps: ParentProps\n): DispatchedStateProps => {\n  const { fieldElement, fieldParentTreeName } = parentProps;\n  const getEvaluatedExpressionSelector = (\n    expression: string,\n    fieldTreeName: string\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\n  const getEvaluatedExpressionSelectorForSelect = (\n    expression: string,\n    fieldTreeName: string,\n    options: any\n  ) =>\n    getEvaluatedExpressionForSelect(state, expression, options, fieldTreeName);\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\n    isPresentInError(state, fieldTreeName);\n  const result = {\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\n    getEvaluatedExpressionSelector,\n    getEvaluatedExpressionSelectorForSelect,\n    isComponentRender: shouldComponentBeRelevant(\n      fieldElement,\n      fieldParentTreeName,\n      getEvaluatedExpressionSelector\n    ),\n    isPresentInErrorSelector,\n  };\n  return result;\n};\n\n/** map props to actions */\nconst mapDispatchToProps = {\n  addErrorInputIdActionCreator: addErrorInputId,\n  assignFieldValueActionCreator: assignFieldValueAction,\n  removeErrorInputIdActionCreator: removeErrorInputId,\n};\n\n/** connect SelectOne Radio component to the redux store */\nconst ConnectedSelectOneRadio = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectOneRadio);\n\nexport default ConnectedSelectOneRadio;\n","import * as React from 'react';\nimport { shouldComponentBeMinimal } from '../../../../../src/utils/helpers';\nimport {\n  FieldElement,\n  FieldParentTreeName,\n} from '../../../../components/typeEvalutors/Base';\nimport Dropdown from './Dropdown';\nimport Radio from './Radio';\n\n/** props interface for the SelectOne component */\nexport interface SelectOneProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n  defaultLanguage: string;\n}\n\nclass SelectOne extends React.Component<SelectOneProps> {\n  public render() {\n    const { fieldElement } = this.props;\n    if (shouldComponentBeMinimal(fieldElement)) {\n      return <Dropdown {...this.props} />;\n    }\n    return <Radio {...this.props} />;\n  }\n}\n\nexport default SelectOne;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport { Store } from 'redux';\nimport {\n  FieldElement,\n  FieldParentTreeName,\n} from '../../../../components/typeEvalutors/Base';\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\nimport {\n  addErrorInputId,\n  assignFieldValueAction,\n  getEvaluatedExpression,\n  getFieldValue,\n  isPresentInError,\n  removeErrorInputId,\n} from '../../../../store/ducks/formState';\nimport {\n  getConstraintLabelText,\n  getFieldLabelText,\n  isInputRequired,\n  shouldComponentBeReadOnly,\n  shouldComponentBeRelevant,\n  shouldInputViolatesConstraint,\n} from '../../../../utils/helpers';\n\n/** props interface for the text component */\nexport interface TextProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n  fieldValue: string;\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\n  getEvaluatedExpressionSelector: any;\n  isPresentInErrorSelector: any;\n  isComponentRender: boolean;\n  addErrorInputIdActionCreator: typeof addErrorInputId;\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\n  defaultLanguage: string;\n}\n\nclass Text extends React.Component<TextProps> {\n  public render() {\n    const {\n      fieldElement,\n      fieldParentTreeName,\n      fieldValue,\n      isComponentRender,\n      getEvaluatedExpressionSelector,\n      isPresentInErrorSelector,\n      defaultLanguage,\n    } = this.props;\n    const isRequired = isInputRequired(fieldElement);\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\n    const isConstraintViolated =\n      fieldValue &&\n      fieldValue !== '' &&\n      shouldInputViolatesConstraint(\n        fieldElement,\n        fieldParentTreeName,\n        getEvaluatedExpressionSelector\n      );\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\n    const constraintLabel = getConstraintLabelText(\n      fieldElement,\n      defaultLanguage\n    );\n    if (isComponentRender) {\n      if (fieldValue == null && 'default' in fieldElement) {\n        this.props.assignFieldValueActionCreator(\n          fieldParentTreeName + fieldElement.name,\n          fieldElement.default\n        );\n      }\n      const isReadonly = shouldComponentBeReadOnly(\n        fieldElement,\n        fieldParentTreeName,\n        getEvaluatedExpressionSelector\n      );\n      if (\n        (isRequiredViolated || isConstraintViolated) &&\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\n      ) {\n        this.props.addErrorInputIdActionCreator(\n          fieldParentTreeName + fieldElement.name\n        );\n      } else if (\n        !isRequiredViolated &&\n        !isConstraintViolated &&\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\n      ) {\n        this.props.removeErrorInputIdActionCreator(\n          fieldParentTreeName + fieldElement.name\n        );\n      }\n      return (\n        <FormGroup>\n          <Label>{fieldLabel}</Label>\n          {isRequired && <Label>{REQUIRED_SYMBOL}</Label>}\n          <Input\n            type=\"text\"\n            name={fieldElement.name}\n            onChange={this.onChangeHandler}\n            value={fieldValue || ''}\n            readOnly={isReadonly}\n          />\n          {isRequiredViolated && <Label>{REQUIRED_FIELD_MSG}</Label>}\n          {isConstraintViolated && <Label>{constraintLabel}</Label>}\n        </FormGroup>\n      );\n    } else {\n      if (fieldValue != null) {\n        this.props.assignFieldValueActionCreator(\n          fieldParentTreeName + fieldElement.name,\n          null\n        );\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\n          this.props.removeErrorInputIdActionCreator(\n            fieldParentTreeName + fieldElement.name\n          );\n        }\n      }\n      return null;\n    }\n  }\n\n  /** sets the value of field element in store\n   * @param {React.FormEvent<HTMLInputElement>} event - the onchange input event\n   */\n  private onChangeHandler = (event: React.FormEvent<HTMLInputElement>) => {\n    this.props.assignFieldValueActionCreator(\n      this.props.fieldParentTreeName + event.currentTarget.name,\n      event.currentTarget.value || ''\n    );\n  };\n}\n\n/** connect the component to the store */\n\n/** Interface to describe props from mapStateToProps */\ninterface DispatchedStateProps {\n  fieldValue: string;\n  getEvaluatedExpressionSelector: any;\n  isComponentRender: boolean;\n  isPresentInErrorSelector: any;\n}\n\n/** Interface to describe props from parent */\ninterface ParentProps {\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n}\n\n/** Map props to state  */\nconst mapStateToProps = (\n  state: Partial<Store>,\n  parentProps: ParentProps\n): DispatchedStateProps => {\n  const { fieldElement, fieldParentTreeName } = parentProps;\n  const getEvaluatedExpressionSelector = (\n    expression: string,\n    fieldTreeName: string\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\n    isPresentInError(state, fieldTreeName);\n  const result = {\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\n    getEvaluatedExpressionSelector,\n    isComponentRender: shouldComponentBeRelevant(\n      fieldElement,\n      fieldParentTreeName,\n      getEvaluatedExpressionSelector\n    ),\n    isPresentInErrorSelector,\n  };\n  return result;\n};\n\n/** map props to actions */\nconst mapDispatchToProps = {\n  addErrorInputIdActionCreator: addErrorInputId,\n  assignFieldValueActionCreator: assignFieldValueAction,\n  removeErrorInputIdActionCreator: removeErrorInputId,\n};\n\n/** connect Text component to the redux store */\nconst ConnectedText = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Text);\n\nexport default ConnectedText;\n","import * as React from 'react';\nimport {\n  DATE_FIELD_TYPE,\n  DATE_TIME_FIELD_TYPE,\n  DECIMAL_FIELD_TYPE,\n  INTEGER_FIELD_TYPE,\n  NOTE_FIELD_TYPE,\n  PHOTO_FIELD_TYPE,\n  SELECT_ALL_FIELD_TYPE,\n  SELECT_ONE_FIELD_TYPE,\n  TEXT_FIELD_TYPE,\n} from '../../../constants';\nimport KbDate from '../../../containers/fields/base/Date';\nimport DateTime from '../../../containers/fields/base/Date Time';\nimport Decimal from '../../../containers/fields/base/Decimal';\nimport Integer from '../../../containers/fields/base/Integer';\nimport Note from '../../../containers/fields/base/Note';\nimport Photo from '../../../containers/fields/base/Photo';\nimport SelectAll from '../../../containers/fields/base/Select All';\nimport SelectOne from '../../../containers/fields/base/Select One';\nimport Text from '../../../containers/fields/base/Text';\n\n/** type of fieldParentTreeName */\nexport type FieldParentTreeName = string;\n\n/** interface for bind property */\ninterface BindProperty {\n  calculate?: string;\n  relevant?: string;\n  readonly?: string;\n  appearance?: string;\n  required?: string;\n  constraint?: string;\n  'jr:constraintMsg'?: { [key: string]: string } | string;\n}\n\n/** interface for kobo field element */\nexport interface FieldElement {\n  name: string;\n  type: string;\n  children?: any[];\n  bind?: BindProperty;\n  label?: { [key: string]: string } | string;\n  default?: any;\n  control?: any;\n  hint?: any;\n}\n\n/** props interface for BaseTypeEvaluator component */\nexport interface BaseTypeEvaluatorProps {\n  defaultLanguage: string;\n  fieldElement: FieldElement;\n  fieldParentTreeName: FieldParentTreeName;\n}\n\nclass BaseTypeEvaluator extends React.Component<BaseTypeEvaluatorProps> {\n  public render() {\n    const { fieldElement, fieldParentTreeName, defaultLanguage } = this.props;\n    return this.typeEvaluator(\n      fieldElement,\n      fieldParentTreeName,\n      defaultLanguage\n    );\n  }\n\n  /** returns jsx components based on field types\n   * @param {FieldElement} fieldElement - the field element object\n   * @param {FieldParentTreeName} fieldParentTreeName - the field parent hierchical name\n   * @return {React.ReactElement} - jsx base components\n   */\n  private typeEvaluator(\n    fieldElement: FieldElement,\n    fieldParentTreeName: FieldParentTreeName,\n    defaultLanguage: string\n  ): React.ReactElement {\n    switch (fieldElement.type) {\n      case TEXT_FIELD_TYPE:\n        return (\n          <Text\n            fieldElement={fieldElement}\n            fieldParentTreeName={fieldParentTreeName}\n            defaultLanguage={defaultLanguage}\n          />\n        );\n      case DATE_FIELD_TYPE:\n        return (\n          <KbDate\n            fieldElement={fieldElement}\n            fieldParentTreeName={fieldParentTreeName}\n            defaultLanguage={defaultLanguage}\n          />\n        );\n      case DATE_TIME_FIELD_TYPE:\n        return (\n          <DateTime\n            fieldElement={fieldElement}\n            fieldParentTreeName={fieldParentTreeName}\n            defaultLanguage={defaultLanguage}\n          />\n        );\n      case INTEGER_FIELD_TYPE:\n        return (\n          <Integer\n            fieldElement={fieldElement}\n            fieldParentTreeName={fieldParentTreeName}\n            defaultLanguage={defaultLanguage}\n          />\n        );\n      case DECIMAL_FIELD_TYPE:\n        return (\n          <Decimal\n            fieldElement={fieldElement}\n            fieldParentTreeName={fieldParentTreeName}\n            defaultLanguage={defaultLanguage}\n          />\n        );\n      case NOTE_FIELD_TYPE:\n        return (\n          <Note\n            fieldElement={fieldElement}\n            fieldParentTreeName={fieldParentTreeName}\n            defaultLanguage={defaultLanguage}\n          />\n        );\n      case SELECT_ONE_FIELD_TYPE:\n        return (\n          <SelectOne\n            fieldElement={fieldElement}\n            fieldParentTreeName={fieldParentTreeName}\n            defaultLanguage={defaultLanguage}\n          />\n        );\n      case SELECT_ALL_FIELD_TYPE:\n        return (\n          <SelectAll\n            fieldElement={fieldElement}\n            fieldParentTreeName={fieldParentTreeName}\n            defaultLanguage={defaultLanguage}\n          />\n        );\n      case PHOTO_FIELD_TYPE:\n        return (\n          <Photo\n            fieldElement={fieldElement}\n            defaultLanguage={defaultLanguage}\n          />\n        );\n      default:\n        return (\n          <div>\n            Other {fieldElement.type} {fieldElement.name}\n          </div>\n        );\n    }\n  }\n}\n\nexport default BaseTypeEvaluator;\n","import * as React from 'react';\nimport { GROUP_FIELD_TYPE, REPEAT_FIELD_TYPE } from '../../../constants';\nimport Group from '../../../containers/fields/group/Group';\nimport Repeat from '../../../containers/fields/group/Repeat';\nimport BaseTypeEvaluator, { FieldElement, FieldParentTreeName } from '../Base';\n\n/** props Interface for the GroupTypeEvaluator component */\nexport interface GroupTypeEvaluatorProps {\n  defaultLanguage: string;\n  fieldElements: FieldElement[];\n  fieldParentTreeName: string;\n}\n\nclass GroupTypeEvaluator extends React.Component<GroupTypeEvaluatorProps> {\n  public render() {\n    const { fieldElements, fieldParentTreeName, defaultLanguage } = this.props;\n    return (\n      <div>\n        {fieldElements.map(fieldElement => (\n          <div key={'group_' + fieldElement.name}>\n            {this.typeEvaluator(\n              fieldElement,\n              fieldParentTreeName,\n              defaultLanguage\n            )}\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  /** returns jsx components based on field types\n   * @param {FieldElement} fieldElement - the field element object\n   * @param {FieldParentTreeName} - the field parent hierarchical name\n   * @return {React.ReactElement} - jsx group components/ base evaluator component\n   */\n  private typeEvaluator(\n    fieldElement: FieldElement,\n    fieldParentTreeName: FieldParentTreeName,\n    defaultLanguage: string\n  ): React.ReactElement {\n    switch (fieldElement.type) {\n      case GROUP_FIELD_TYPE:\n        return (\n          <div>\n            <Group\n              fieldElement={fieldElement}\n              fieldParentTreeName={fieldParentTreeName}\n              defaultLanguage={defaultLanguage}\n            />\n          </div>\n        );\n      case REPEAT_FIELD_TYPE:\n        return (\n          <div>\n            <Repeat\n              fieldElement={fieldElement}\n              fieldParentTreeName={fieldParentTreeName}\n              defaultLanguage={defaultLanguage}\n            />\n          </div>\n        );\n      default:\n        return (\n          <BaseTypeEvaluator\n            fieldElement={fieldElement}\n            fieldParentTreeName={fieldParentTreeName}\n            defaultLanguage={defaultLanguage}\n          />\n        );\n    }\n  }\n}\n\nexport default GroupTypeEvaluator;\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { faMinusCircle, faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport * as React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport GroupTypeEvaluator from '../components/typeEvalutors/Group';\nimport { DEMO_FORM_JSON } from '../constants';\n\nlibrary.add(faPlusCircle, faMinusCircle);\n\nclass App extends React.Component {\n  public render() {\n    const props = {\n      defaultLanguage: 'English',\n      fieldElements: DEMO_FORM_JSON.children,\n      fieldParentTreeName: '',\n    };\n    return (\n      <Container className=\"form-container\">\n        <Row className=\"welcome-box\">\n          <Col>\n            <h3>Welcome to Odk Form Renderer</h3>\n          </Col>\n        </Row>\n        <GroupTypeEvaluator {...props} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, Store } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer, { FormState } from './ducks/formState';\n\n/** The initial store */\nconst store: Store & FormState = createStore(reducer, composeWithDevTools());\n\nexport default store;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport * as React from 'react';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nclass OdkFormRenderer extends React.Component {\n  public render() {\n    return (\n      <Provider store={store}>\n        <App />\n      </Provider>\n    );\n  }\n}\n\nexport default OdkFormRenderer;\n"],"names":["actualExpression","REQUIRED_FIELD_MSG","DEMO_FORM_JSON","geo","district_code","district_name","division_code","division_name","union_code","union_name","upazila_code","upazila_name","currentHierarchicalName","formItemProperty","userInput","tokenizeCharacter","type","value","input","current","tokenizers","test","undefined","consumedChars","char","TypeError","matchQuote","pattern","tokenizePattern","kbSelected","funcName","params","_paramsTokens","tmp","Array","isArray","forEach","element","kbToday","_params","d","Date","setHours","kbRound","toFixed","parseFloat","kbRegex","RegExp","kbCountSelected","length","kbInt","parseInt","kbCoalesce","kbPosition","tmpName","split","kbSum","paramsTokens","sumValue","sumValuesOverJsn","sum","jsnObj","variableName","i","key","kbConcat","concatStr","kbSubstr","substring","outerScopedVariables","variableValue","tmpUserInput","nodeNames","parseMostClosestScopedVariable","tmpHierchicalName","parent","index","parseDot","path","push","getIn","parseLiterals","_tmpOutput","tokens","toLowerCase","parseFunction","_output","possibleFunctions","arrayOfParams","arrayOfOriginalTokens","tmpQueue","tmpTokens","pop","tmpVal","parser","parsedFn","parsedVal","functionFn","parseAnd","output","newOutput","parseParen","terminatingTokens","indexOf","parseDivide","parsed","ct","parseMinus","parserFn","consumedTokens","preOutput","preParsed","parseMultiply","preParseFn","Object","prototype","toString","call","isNaN","getTime","NaN","Math","ceil","parsers","j","flagLessThanOrEqual","flagGreaterThanOrEqual","leftOutput","pos","console","log","evaluater","expression","tmpFormItemProperty","tmpCurrentHierarchicalName","tokenized","tokenizerFn","token","tokenizer","getTextFromProperty","property","languageIdentifier","getFieldLabelText","fieldElement","label","getConstraintLabelText","bind","isInputRequired","isRequired","required","shouldComponentBeRelevant","fieldParentTreeName","evaluateExpression","relevant","name","shouldComponentBeReadOnly","readonly","shouldInputViolatesConstraint","constraint","shouldComponentBeMinimal","isMinimal","control","appearance","includes","FIELD_VALUE_ASSIGNED","RESET_STORE","ADD_ERROR_INPUT_ID","REMOVE_ERROR_INPUT_ID","EMPTY_GROUP_FIELDS","REMOVE_GROUP_FIELDS_FROM_ERRORS","assignFieldValueAction","fieldTreeName","fieldValue","addErrorInputId","removeErrorInputId","emptyGroupFields","removeGroupFieldsFromErrors","initialState","SeamlessImmutable","errors","reducer","state","action","modifiedUserInputObj","userInputObj","treeNodes","modifiedObj","getModifiedUserInputObject","asMutable","deep","stateM","updateIn","arr","concat","filter","elm","mUserInputObj","groupTreeName","keys","objKey","startsWith","emptyGroupedValues","mState","getFieldValue","getValueFromUserInputObj","getEvaluatedExpression","getEvaluatedExpressionForSelect","options","isPresentInError","isGroupFieldsEmpty","isEmpty","checkGroupedValuesForEmpty","isErrorsIncludeGroupFields","isPresent","fTName","Group","render","this","props","defaultLanguage","isComponentRender","fieldLabel","React","FormGroup","Label","children","GroupTypeEvaluator","fieldElements","isErrorsIncludeGroupFieldsSelector","removeGroupFieldsFromErrorsActionCreator","isGroupFieldsEmptySelector","emptyGroupFieldsActionCreator","ConnectedGroup","connect","parentProps","getEvaluatedExpressionSelector","SingleRepeat","_event","_this","repeatIndex","assignmentHandler","removeHandler","newFieldValue","_elem","onClick","handleChange","FontAwesomeIcon","icon","Component","Repeat","assignFieldValueActionCreator","map","_elm","className","addAnotherRepeat","ConnectedRepeat","KbDate","event","currentTarget","isPresentInErrorSelector","isRequiredViolated","isConstraintViolated","constraintLabel","isReadonly","removeErrorInputIdActionCreator","addErrorInputIdActionCreator","defaultValue","toISOString","slice","Input","onChange","onChangeHandler","readOnly","ConnectedDate","DateTime","ConnectedDateTime","Decimal","step","ConnectedDecimal","Integer","ConnectedInteger","Note","fieldHint","hint","getFieldHintText","FormText","ConnectedNote","Photo","accept","ConnectedPhoto","SelectAllDropDown","fieldName","values","selectedValues","stringWithSearchKeyWord","match","resultArray","criteriaParams","splice","extractAndFilterOptions","csvName","criteriaType","filterCriterias","trim","distinctOptions","finalRes","nameOfKey","interConnectedValue","filterResult","getEvaluatedExpressionSelectorForSelect","option","from","Set","labelColumnName","valueColumnName","elem","tmpOpt","_","uniqBy","resultOptions","updatedFieldElement","replace","processedStringArray","getProcessedString","childrenLabel","tmpValueArray","isNotIncluded","optionsValueArray","row","Select","isMulti","ConnectedSelectAllDropDown","SelectAllRadio","target","checked","newValue","_this2","onChangeHandlerCheckBox","ConnectedSelectAllRadio","SelectAll","Dropdown","Radio","SelectOneDropDown","selectedValue","multi","ConnectedSelectOneDropDown","SelectOneRadio","onChangeHandlerRadio","ConnectedSelectOneRadio","SelectOne","Text","ConnectedText","BaseTypeEvaluator","typeEvaluator","library","add","faPlusCircle","faMinusCircle","App","Container","Row","Col","store","createStore","composeWithDevTools","Provider"],"mappings":"0xBACO,ICDHA,EDyBSC,EAAqB,yBAMrBC,EAAiB,kBACR,mBACR,CACV,MACU,aACA,SAEV,MACU,WACA,OAEV,MACU,gBACA,YAEV,MACU,wBACC,QACG,4BACC,0BAEL,QAEV,SACa,YACK,gBAEJ,CACV,SACa,YACK,WAER,YACA,oBACc,QACR,yBACC,2BAED,iBACE,oBAEP,QACG,gBACC,aAEL,QAEV,SACa,YACK,WAER,kBACA,UACM,aAEL,QACG,sBACC,qBAEL,QAEV,SACa,YACK,uBAEJ,CACV,MACU,UACC,QACG,kBACC,YAGf,MACU,UACC,QACG,kBACC,YAGf,MACU,UACC,QACG,kBACC,kBAIT,kBACA,UACM,aAEL,QACG,iBACC,cAEL,cAEV,SACa,YACK,WAER,eACA,UACM,aAEL,QACG,gBACC,gBAEL,QAEV,SACa,YACK,mBAER,cACA,oBACc,QACR,+BACC,2BAEC,iCAEP,QACG,yBACC,sBAEL,cAGJ,mBACC,QACG,4BACC,0BAEL,SAEV,SACa,YACK,WAER,0BACC,QACG,8BACC,4BAEL,QAEV,SACa,YACK,gBAEJ,CACV,SACa,YACK,uBAEJ,CACV,MACU,UACC,QACG,kBACC,YAGf,MACU,UACC,QACG,cACC,QAGf,MACU,UACC,QACG,iBACC,WAGf,MACU,UACC,QACG,cACC,QAGf,MACU,UACC,QACG,eACC,SAGf,MACU,UACC,QACG,gBACC,UAGf,MACU,UACC,QACG,cACC,QAGf,MACU,UACC,QACG,gBACC,UAGf,MACU,WACC,QACG,kBACC,YAGf,MACU,WACC,QACG,eACC,SAGf,MACU,WACC,QACG,gBACC,UAGf,MACU,WACC,QACG,iBACC,WAGf,MACU,WACC,QACG,iBACC,WAGf,MACU,WACC,QACG,gBACC,UAGf,MACU,WACC,QACG,iBACC,WAGf,MACU,WACC,QACG,gBACC,gBAIT,eACA,UACM,aAEL,QACG,yBACC,gBAEL,cAEV,MACU,qBACA,WACO,iDAEN,QACG,sBAEJ,aAEV,SACa,YACK,WAER,qBACA,UACM,yBACA,aAEL,QACG,oCACC,wBAEL,QAEV,MACU,2BACA,WACO,+DAEN,QACG,4BAEJ,aAEV,MACU,qBACA,WACO,ocAEN,QACG,sBAEJ,aAEV,SACa,YACK,uBAEJ,CACV,MACU,UACC,QACG,iBACC,WAGf,MACU,UACC,QACG,eACC,eAIT,0BACA,UACM,yBACA,aAEL,QACG,sBACC,kBAEL,cAEV,SACa,YACK,WAER,oBACA,UACM,eACC,iJAEN,QACG,yBACC,wBAEJ,OACE,2BAEH,aAEV,SACa,YACK,sBAEL,0BACH,0BACA,UACM,yCACA,oBAEG,4BACR,QACG,sBACC,4BAEL,cAEV,SACa,YACK,uBAEJ,CACV,MACU,UACC,QACG,eACC,SAGf,MACU,UACC,QACG,eACC,SAGf,MACU,UACC,QACG,kBACC,YAGf,MACU,UACC,QACG,gBACC,UAGf,MACU,UACC,QACG,qBACC,eAGf,MACU,UACC,QACG,wBACC,wBAIT,+BACA,UACM,6BACA,aAEL,QACG,2CACC,yCAEL,cAEV,SACa,YACK,WAER,iBACA,UACM,6BACA,YAEL,QACG,gDACC,6CAEL,WAEV,SACa,YACK,WAER,gBACA,UACM,6BACA,YAEL,QACG,mDACC,4CAEL,WAEV,SACa,YACK,uBAEJ,CACV,MACU,UACC,QACG,gBACC,SAGf,MACU,UACC,QACG,gBACC,iBAIT,WACA,UACM,6BACA,YAEL,QACG,4CACC,qCAEL,cAEV,SACa,YACK,WAER,yBACA,UACM,aAEL,QACG,iDACC,+DAEL,WAEV,SACa,YACK,WAER,mBACA,UACM,aAEL,QACG,sDACC,gDAEL,WAEV,SACa,YACK,WAER,mBACA,UACM,aAEL,QACG,iDACC,gDAEL,WAEV,SACa,YACK,WAER,uBACA,UACM,YAEL,QACG,uBACC,wBAEL,QAEV,SACa,YACK,sBAEL,qBACH,qBACA,UACM,qBAEG,iCACR,QACG,sBACC,sBAEL,yBAEV,MACU,2BACA,UACM,2CACA,aAEL,QACG,iCACC,8BAEL,cAGJ,qBACC,QACG,8BACC,4BAEL,SAEV,SACa,YACK,WAER,yBACC,QACG,sBACC,oBAEL,QAEV,SACa,YACK,gBAEJ,CACV,SACa,YACK,+BAEJ,CACV,MACU,UACC,QACG,sBACC,gBAGf,MACU,UACC,QACG,qBACC,eAGf,MACU,UACC,QACG,iCACC,iCAIT,iBACA,UACM,aAEL,QACG,oBACC,kBAEL,yBAEV,SACa,YACK,8BAEL,mBACH,mBACA,UACM,sCACA,qBAEG,iCACR,QACG,sBACC,oBAEL,yBAEV,MACU,4BACA,WACO,6CAEP,aAEV,UACc,CACV,MACU,sBACA,WACO,wBAEP,aAEV,MACU,sBACA,WACO,qBAEP,aAEV,SACa,YACK,sBAEL,8BACH,8BACA,UACM,wCACA,qBAEG,oFACR,QACG,qCACC,oCAEL,cAEV,SACa,YACK,WAER,oCACA,UACM,oDACA,aAEL,QACG,8CACC,4CAEL,QAEV,SACa,YACK,uBAEJ,CACV,MACU,UACC,QACG,YACC,MAGf,MACU,UACC,QACG,aACC,OAGf,MACU,UACC,QACG,cACC,cAIT,wCACA,UACM,aAEL,QACG,oBACC,kBAEL,oBAGJ,aACA,UACM,sCAEL,QACG,4BACC,0BAEL,UAEV,MACU,+BACA,WACO,gDAEP,aAEV,UACc,CACV,MACU,yBACA,WACO,qBAEP,aAEV,SACa,YACK,sBAEL,iCACH,iCACA,UACM,wCACA,qBAEG,wDACR,QACG,uCACC,6CAEL,cAEV,SACa,YACK,WAER,uCACA,UACM,uDACA,aAEL,QACG,uDACC,qDAEL,QAEV,SACa,YACK,uBAEJ,CACV,MACU,UACC,QACG,YACC,MAGf,MACU,UACC,QACG,aACC,OAGf,MACU,UACC,QACG,cACC,cAIT,2CACA,UACM,aAEL,QACG,oBACC,kBAEL,oBAGJ,gBACA,UACM,sCAEL,QACG,qCACC,mCAEL,UAEV,MACU,2BACA,WACO,4CAEP,aAEV,UACc,CACV,MACU,qBACA,WACO,qBAEP,aAEV,SACa,YACK,sBAEL,6BACH,6BACA,UACM,wCACA,qBAEG,mDACR,QACG,gDACC,kCAEL,cAEV,SACa,YACK,WAER,mCACA,UACM,mDACA,aAEL,QACG,4CACC,0CAEL,QAEV,SACa,YACK,uBAEJ,CACV,MACU,UACC,QACG,mBACC,aAGf,MACU,UACC,QACG,mBACC,mBAIT,8BACA,UACM,aAEL,QACG,iBACC,eAEL,oBAGJ,YACA,UACM,sCAEL,QACG,2BACC,yBAEL,UAEV,MACU,4BACA,WACO,6CAEP,aAEV,UACc,CACV,MACU,sBACA,WACO,qBAEP,aAEV,MACU,oBACA,WACO,+JAEP,aAEV,SACa,YACK,sBAEL,8BACH,8BACA,UACM,8CAEG,oDACR,QACG,qCACC,mCAEL,cAEV,SACa,YACK,uBAEJ,CACV,MACU,UACC,QACG,YACC,MAGf,MACU,UACC,QACG,aACC,OAGf,MACU,UACC,QACG,cACC,cAIT,4BACA,UACM,aAEL,QACG,oBACC,kBAEL,oBAGJ,aACA,UACM,sCAEL,QACG,4BACC,0BAEL,UAEV,MACU,0BACA,WACO,2CAEP,aAEV,UACc,CACV,MACU,oBACA,WACO,qBAEP,aAEV,SACa,YACK,sBAEL,4BACH,4BACA,UACM,8CAEG,kDACR,QACG,wCACC,iCAEL,cAEV,SACa,YACK,uBAEJ,CACV,MACU,UACC,QACG,cACC,QAGf,MACU,UACC,QACG,aACC,aAIT,uBACA,UACM,iDACA,aAEL,QACG,0BACC,wBAEL,cAEV,SACa,YACK,uBAEJ,CACV,MACU,UACC,QACG,mBACC,aAGf,MACU,UACC,QACG,mBACC,mBAIT,6BACA,UACM,iVACA,aAEL,QACG,iBACC,eAEL,oBAGJ,WACA,UACM,sCAEL,QACG,0BACC,wBAEL,UAEV,MACU,kCACA,WACO,mDAEP,aAEV,UACc,CACV,MACU,4BACA,WACO,qBAEP,aAEV,SACa,YACK,sBAEL,oCACH,oCACA,UACM,8CAEG,0DACR,QACG,4BACC,0BAEL,cAEV,SACa,YACK,uBAEJ,CACV,MACU,UACC,QACG,mBACC,aAGf,MACU,UACC,QACG,mBACC,mBAIT,0CACA,UACM,aAEL,QACG,iBACC,eAEL,cAEV,SACa,YACK,uBAEJ,CACV,MACU,UACC,QACG,YACC,MAGf,MACU,UACC,QACG,aACC,OAGf,MACU,UACC,QACG,cACC,cAIT,kCACA,UACM,mDACA,aAEL,QACG,oBACC,kBAEL,oBAGJ,mBACA,UACM,sCAEL,QACG,2BACC,yBAEL,UAEV,SACa,YACK,uBAEJ,CACV,MACU,UACC,QACG,6BACC,uBAGf,MACU,UACC,QACG,2BACC,qBAGf,MACU,UACC,QACG,wBACC,kBAGf,MACU,UACC,QACG,8BACC,wBAGf,MACU,UACC,QACG,iCACC,2BAGf,MACU,UACC,QACG,qDACC,+CAGf,MACU,UACC,QACG,uBACC,iBAGf,MACU,UACC,QACG,8BACC,wBAGf,MACU,UACC,QACG,6BACC,6BAIT,kBACA,UACM,4DACA,aAEL,QACG,qBACC,gCAEL,yBAEV,SACa,YACK,uBAEJ,CACV,MACU,UACC,QACG,cACC,QAGf,MACU,UACC,QACG,oBACC,uBAGf,MACU,UACC,QACG,mBACC,cAGf,MACU,UACC,QACG,uBACC,aAGf,MACU,UACC,QACG,qCACC,+BAGf,MACU,UACC,QACG,oBACC,cAGf,MACU,UACC,QACG,4BACC,sBAGf,MACU,UACC,QACG,uBACC,iBAGf,MACU,UACC,QACG,6BACC,iBAGf,MACU,WACC,QACG,6BACC,uBAGf,MACU,WACC,QACG,gBACC,UAGf,MACU,UACC,QACG,kBACC,YAGf,MACU,UACC,QACG,kBACC,YAGf,MACU,UACC,QACG,kBACC,kBAIT,wBACA,UACM,4DACA,aAEL,QACG,gBACC,cAEL,yBAEV,SACa,YACK,WAER,yBACA,UACM,0DAEL,QACG,8BACC,4BAEL,QAEV,SACa,YACK,sBAEL,gCACH,gCACA,UACM,kEAEG,yCACR,QACG,qCACC,mCAEL,yBAEV,SACa,YACK,uBAEJ,CACV,MACU,UACC,QACG,YACC,MAGf,MACU,UACC,QACG,YACC,YAIT,kCACA,UACM,0DAEL,QACG,uCACC,qCAEL,yBAEV,MACU,iCACA,WACO,iCAEP,aAEV,UACc,CACV,MACU,wBACA,WACO,wBAEP,aAEV,MACU,2BACA,WACO,qBAEP,aAEV,SACa,YACK,sBAEL,uBACH,kBACA,UACM,sCACA,qBAEG,0FACR,QACG,qBACC,mBAEL,cAEV,SACa,YACK,WAER,wBACA,UACM,wCACA,aAEL,QACG,6BACC,oCAEL,QAEV,SACa,YACK,uBAEJ,CACV,MACU,UACC,QACG,mBACC,aAGf,MACU,UACC,QACG,mBACC,mBAIT,yBACA,UACM,sCACA,aAEL,QACG,iCACC,0BAEL,oBAGJ,aACA,UACM,oCAEL,QACG,qBACC,mBAEL,gBAGJ,mBACC,QACG,sBACC,oBAEL,SAEV,MACU,iCACC,QACG,kCACC,gCAEL,QAEV,SACa,YACK,gBAEJ,CACV,SACa,YACK,sBAEL,2BACH,oCACS,kCACR,QACG,uBACC,4BAEL,yBAEV,SACa,YACK,WAER,iCACA,UACM,+CAEL,QACG,kCACC,oCAEL,QAEV,SACa,YACK,uBAEJ,CACV,MACU,UACC,QACG,YACC,MAGf,MACU,UACC,QACG,YACC,MAGf,MACU,UACC,QACG,YACC,MAGf,MACU,WACC,QACG,gBACC,gBAIT,kBACC,QACG,kBACC,kBAEL,yBAEV,SACa,YACK,WAER,uBACA,UACM,qCAEL,QACG,6BACC,0BAEL,QAEV,SACa,YACK,uBAEJ,CACV,MACU,UACC,QACG,cACC,QAGf,MACU,UACC,QACG,aACC,aAIT,wBACC,QACG,mCACC,kCAEL,oBAGJ,4BACC,QACG,kCACC,gCAEL,SAEV,SACa,WACG,YAEF,CACV,MACU,kBACA,UACM,mBACC,gCAEP,mBAGJ,YACA,gBAGH,qBACE,aACH,cACA,+BACO,yBACN,2BACE,KACF,CACL,MACU,UACC,QACG,gBACC,SAGf,MACU,UACC,QACG,gBACC,+BAIK,CACpB,MACU,UACC,QACG,iBACC,WAGf,MACU,UACC,QACG,eACC,oBAIJ,CACX,MACU,UACC,QACG,YACC,MAGf,MACU,UACC,QACG,aACC,OAGf,MACU,UACC,QACG,cACC,+BAIQ,CACvB,MACU,UACC,QACG,gBACC,UAGf,MACU,UACC,QACG,eACC,SAGf,MACU,WACC,QACG,gBACC,wCAIe,CAC9B,MACU,UACC,QACG,qBACC,eAGf,MACU,UACC,QACG,gBACC,UAGf,MACU,UACC,QACG,kBACC,YAGf,MACU,UACC,QACG,kBACC,YAGf,MACU,UACC,QACG,qBACC,eAGf,MACU,UACC,QACG,kBACC,YAGf,MACU,UACC,QACG,kBACC,YAGf,MACU,UACC,QACG,uBACC,iBAGf,MACU,WACC,QACG,iBACC,sBAIJ,CACX,MACU,UACC,QACG,sBACC,gBAGf,MACU,UACC,QACG,qBACC,eAGf,MACU,UACC,QACG,iCACC,oCAIN,CACT,MACU,UACC,QACG,kBACC,YAGf,MACU,UACC,QACG,cACC,QAGf,MACU,UACC,QACG,iBACC,WAGf,MACU,UACC,QACG,cACC,QAGf,MACU,UACC,QACG,eACC,SAGf,MACU,UACC,QACG,gBACC,UAGf,MACU,UACC,QACG,cACC,QAGf,MACU,UACC,QACG,gBACC,UAGf,MACU,WACC,QACG,kBACC,YAGf,MACU,WACC,QACG,eACC,SAGf,MACU,WACC,QACG,gBACC,UAGf,MACU,WACC,QACG,iBACC,WAGf,MACU,WACC,QACG,iBACC,WAGf,MACU,WACC,QACG,gBACC,UAGf,MACU,WACC,QACG,iBACC,WAGf,MACU,WACC,QACG,gBACC,uBAIF,CACb,UACc,SACJ,UACC,QACG,4BACC,sBAGf,UACc,SACJ,UACC,QACG,sCACC,gCAGf,UACc,SACJ,UACC,QACG,2BACC,qBAGf,UACc,SACJ,UACC,QACG,4BACC,sBAGf,UACc,SACJ,UACC,QACG,sCACC,gCAGf,UACc,SACJ,UACC,QACG,2BACC,qBAGf,UACc,SACJ,UACC,QACG,0BACC,oBAGf,UACc,SACJ,UACC,QACG,4BACC,sBAGf,UACc,SACJ,UACC,QACG,2BACC,gCAIJ,CACX,MACU,UACC,QACG,YACC,MAGf,MACU,UACC,QACG,YACC,MAGf,MACU,UACC,QACG,YACC,MAGf,MACU,WACC,QACG,gBACC,sBAIH,CACZ,MACU,UACC,QACG,6BACC,uBAGf,MACU,UACC,QACG,2BACC,qBAGf,MACU,UACC,QACG,wBACC,kBAGf,MACU,UACC,QACG,8BACC,wBAGf,MACU,UACC,QACG,iCACC,2BAGf,MACU,UACC,QACG,qDACC,+CAGf,MACU,UACC,QACG,uBACC,iBAGf,MACU,UACC,QACG,8BACC,wBAGf,MACU,UACC,QACG,6BACC,kDAIY,CAC3B,MACU,UACC,QACG,oBACC,cAGf,MACU,UACC,QACG,kBACC,YAGf,MACU,UACC,QACG,uBACC,iBAGf,MACU,UACC,QACG,wBACC,kBAGf,MACU,UACC,QACG,qBACC,eAGf,MACU,UACC,QACG,sBACC,gBAGf,MACU,UACC,QACG,sBACC,gBAGf,MACU,UACC,QACG,oBACC,cAGf,MACU,UACC,QACG,qBACC,eAGf,MACU,WACC,QACG,gBACC,kCAIS,CACxB,MACU,UACC,QACG,mBACC,aAGf,MACU,UACC,QACG,mBACC,aAGf,MACU,UACC,QACG,8BACC,wBAGf,MACU,UACC,QACG,iBACC,WAGf,MACU,UACC,QACG,eACC,SAGf,MACU,UACC,QACG,sBACC,gBAGf,MACU,UACC,QACG,yBACC,mBAGf,MACU,UACC,QACG,gBACC,UAGf,MACU,WACC,QACG,iBACC,8BAII,CACnB,MACU,UACC,QACG,mBACC,aAGf,MACU,UACC,QACG,mBACC,mCAIO,CACtB,MACU,UACC,QACG,+BACC,yBAGf,MACU,UACC,QACG,mBACC,aAGf,MACU,UACC,QACG,qCACC,+BAGf,MACU,UACC,QACG,eACC,SAGf,MACU,UACC,QACG,eACC,SAGf,MACU,UACC,QACG,2CACC,qCAGf,MACU,UACC,QACG,eACC,SAGf,MACU,UACC,QACG,oCACC,8BAGf,MACU,WACC,QACG,iBACC,0BAIA,CACf,UACc,SACJ,UACC,QACG,yBACC,mBAGf,UACc,SACJ,UACC,QACG,sCACC,gCAGf,UACc,SACJ,UACC,QACG,uCACC,iCAGf,UACc,SACJ,UACC,QACG,sCACC,gCAGf,UACc,SACJ,UACC,QACG,kBACC,YAGf,UACc,SACJ,UACC,QACG,yBACC,mBAGf,UACc,SACJ,UACC,QACG,kBACC,YAGf,UACc,SACJ,UACC,QACG,wBACC,kBAGf,UACc,SACJ,UACC,QACG,sBACC,gBAGf,UACc,SACJ,WACC,QACG,qBACC,eAGf,UACc,SACJ,WACC,QACG,yCACC,mCAGf,UACc,SACJ,WACC,QACG,8BACC,wBAGf,UACc,SACJ,WACC,QACG,gBACC,UAGf,UACc,SACJ,WACC,QACG,wBACC,kBAGf,UACc,SACJ,WACC,QACG,mCACC,6BAGf,UACc,SACJ,WACC,QACG,sBACC,gBAGf,UACc,SACJ,WACC,QACG,qBACC,eAGf,UACc,SACJ,WACC,QACG,qBACC,eAGf,UACc,SACJ,WACC,QACG,6BACC,sBAGf,UACc,SACJ,WACC,QACG,6BACC,sBAGf,UACc,SACJ,WACC,QACG,+BACC,yBAGf,UACc,SACJ,WACC,QACG,8BACC,wBAGf,UACc,SACJ,WACC,QACG,gCACC,0BAGf,UACc,SACJ,WACC,QACG,iCACC,2BAGf,UACc,SACJ,WACC,QACG,8BACC,wBAGf,UACc,SACJ,WACC,QACG,gBACC,UAGf,UACc,SACJ,WACC,QACG,8BACC,wBAGf,UACc,SACJ,WACC,QACG,uBACC,iBAGf,UACc,SACJ,WACC,QACG,oCACC,8BAGf,UACc,SACJ,WACC,QACG,mBACC,aAGf,UACc,SACJ,WACC,QACG,4CACC,sCAGf,UACc,SACJ,WACC,QACG,qCACC,+BAGf,UACc,SACJ,WACC,QACG,oBACC,cAGf,UACc,SACJ,WACC,QACG,qCACC,+BAGf,UACc,SACJ,WACC,QACG,iCACC,2BAGf,UACc,SACJ,WACC,QACG,mBACC,aAGf,UACc,SACJ,WACC,QACG,mBACC,aAGf,UACc,SACJ,WACC,QACG,6BACC,uBAGf,UACc,SACJ,WACC,QACG,wBACC,kBAGf,UACc,SACJ,WACC,QACG,2BACC,qBAGf,UACc,SACJ,WACC,QACG,kCACC,4BAGf,UACc,SACJ,WACC,QACG,yBACC,mBAGf,UACc,SACJ,WACC,QACG,0BACC,oBAGf,UACc,SACJ,WACC,QACG,yBACC,mBAGf,UACc,SACJ,WACC,QACG,gDACC,0CAGf,UACc,SACJ,WACC,QACG,uBACC,iBAGf,UACc,SACJ,WACC,QACG,sDACC,gDAGf,UACc,SACJ,WACC,QACG,oBACC,cAGf,UACc,SACJ,WACC,QACG,4BACC,sBAGf,UACc,SACJ,WACC,QACG,sBACC,gBAGf,UACc,SACJ,WACC,QACG,2BACC,qBAGf,UACc,SACJ,WACC,QACG,+BACC,yBAGf,UACc,SACJ,WACC,QACG,0CACC,oCAGf,UACc,SACJ,WACC,QACG,6BACC,uBAGf,UACc,SACJ,WACC,QACG,+BACC,yBAGf,UACc,SACJ,WACC,QACG,0BACC,oBAGf,UACc,SACJ,WACC,QACG,qBACC,eAGf,UACc,SACJ,WACC,QACG,qCACC,+BAGf,UACc,SACJ,WACC,QACG,oBACC,cAGf,UACc,SACJ,WACC,QACG,kCACC,4BAGf,UACc,SACJ,WACC,QACG,qBACC,eAGf,UACc,SACJ,WACC,QACG,gCACC,0BAGf,UACc,SACJ,WACC,QACG,uBACC,iBAGf,UACc,SACJ,WACC,QACG,uDACC,iDAGf,UACc,SACJ,WACC,QACG,oCACC,8BAGf,UACc,SACJ,WACC,QACG,8BACC,wBAGf,UACc,SACJ,WACC,QACG,iCACC,2BAGf,UACc,SACJ,WACC,QACG,4BACC,sBAGf,UACc,SACJ,WACC,QACG,oBACC,cAGf,UACc,SACJ,WACC,QACG,kBACC,YAGf,UACc,SACJ,WACC,QACG,2BACC,qBAGf,UACc,SACJ,WACC,QACG,yBACC,mBAGf,UACc,SACJ,WACC,QACG,mCACC,6BAGf,UACc,SACJ,WACC,QACG,wBACC,kBAGf,UACc,SACJ,WACC,QACG,yBACC,mBAGf,UACc,SACJ,WACC,QACG,4BACC,sBAGf,UACc,SACJ,WACC,QACG,yCACC,mCAGf,UACc,SACJ,WACC,QACG,mBACC,aAGf,UACc,SACJ,WACC,QACG,sBACC,gBAGf,UACc,SACJ,WACC,QACG,mCACC,6BAGf,UACc,SACJ,WACC,QACG,wBACC,kBAGf,UACc,SACJ,WACC,QACG,wBACC,kBAGf,UACc,SACJ,WACC,QACG,yBACC,mBAGf,UACc,SACJ,WACC,QACG,wBACC,kBAGf,UACc,SACJ,WACC,QACG,gBACC,UAGf,UACc,SACJ,UACC,QACG,wBACC,kBAGf,UACc,SACJ,UACC,QACG,kBACC,YAGf,UACc,SACJ,UACC,QACG,iBACC,WAGf,UACc,SACJ,WACC,QACG,yCACC,mCAGf,UACc,SACJ,UACC,QACG,4BACC,sBAGf,UACc,SACJ,UACC,QACG,yBACC,mBAGf,UACc,SACJ,WACC,QACG,qBACC,eAGf,UACc,SACJ,WACC,QACG,6BACC,sBAGf,UACc,SACJ,WACC,QACG,6BACC,sBAGf,UACc,SACJ,WACC,QACG,+BACC,yBAGf,UACc,SACJ,WACC,QACG,8BACC,wBAGf,UACc,SACJ,WACC,QACG,gCACC,0BAGf,UACc,SACJ,UACC,QACG,kCACC,4BAGf,UACc,SACJ,UACC,QACG,kBACC,YAGf,UACc,SACJ,UACC,QACG,qCACC,+BAGf,UACc,SACJ,UACC,QACG,gCACC,0BAGf,UACc,SACJ,WACC,QACG,uBACC,iBAGf,UACc,SACJ,WACC,QACG,oCACC,8BAGf,UACc,SACJ,WACC,QACG,+BACC,yBAGf,UACc,SACJ,WACC,QACG,sBACC,gBAGf,UACc,SACJ,WACC,QACG,oCACC,8BAGf,UACc,SACJ,WACC,QACG,qCACC,+BAGf,UACc,SACJ,WACC,QACG,2BACC,qBAGf,UACc,SACJ,WACC,QACG,4BACC,sBAGf,UACc,SACJ,WACC,QACG,uBACC,iBAGf,UACc,SACJ,WACC,QACG,gCACC,0BAGf,UACc,SACJ,WACC,QACG,2BACC,qBAGf,UACc,SACJ,WACC,QACG,mBACC,aAGf,UACc,SACJ,WACC,QACG,oBACC,cAGf,UACc,SACJ,WACC,QACG,oBACC,cAGf,UACc,SACJ,WACC,QACG,uBACC,iBAGf,UACc,SACJ,WACC,QACG,2BACC,qBAGf,UACc,SACJ,WACC,QACG,qCACC,+BAGf,UACc,SACJ,YACC,QACG,sBACC,gBAGf,UACc,SACJ,WACC,QACG,qBACC,eAGf,UACc,SACJ,WACC,QACG,gBACC,4BAIG,CAClB,MACU,UACC,QACG,cACC,QAGf,MACU,UACC,QACG,oBACC,uBAGf,MACU,UACC,QACG,mBACC,cAGf,MACU,UACC,QACG,uBACC,aAGf,MACU,UACC,QACG,qCACC,+BAGf,MACU,UACC,QACG,oBACC,cAGf,MACU,UACC,QACG,4BACC,sBAGf,MACU,UACC,QACG,uBACC,iBAGf,MACU,UACC,QACG,6BACC,iBAGf,MACU,WACC,QACG,6BACC,uBAGf,MACU,WACC,QACG,gBACC,UAGf,MACU,UACC,QACG,kBACC,YAGf,MACU,UACC,QACG,kBACC,YAGf,MACU,UACC,QACG,kBACC,wBAIH,CACZ,MACU,UACC,QACG,kBACC,YAGf,MACU,UACC,QACG,kBACC,YAGf,MACU,UACC,QACG,kBACC,sCAIW,CAC1B,UACc,SACJ,UACC,QACG,qCACC,+BAGf,UACc,SACJ,UACC,QACG,kCACC,4BAGf,UACc,SACJ,UACC,QACG,qCACC,+BAGf,UACc,SACJ,UACC,QACG,6CACC,uCAGf,UACc,SACJ,UACC,QACG,uBACC,iBAGf,UACc,SACJ,UACC,QACG,+BACC,yBAGf,UACc,SACJ,WACC,QACG,iBACC,WAGf,UACc,SACJ,UACC,QACG,kCACC,4BAGf,UACc,SACJ,UACC,QACG,kCACC,4BAGf,UACc,SACJ,UACC,QACG,sCACC,gCAGf,UACc,SACJ,WACC,QACG,4CACC,sCAGf,UACc,SACJ,WACC,QACG,yCACC,mCAGf,UACc,SACJ,WACC,QACG,6BACC,uBAGf,UACc,SACJ,WACC,QACG,6BACC,uBAGf,UACc,SACJ,WACC,QACG,uCACC,iCAGf,UACc,SACJ,WACC,QACG,uCACC,iCAGf,UACc,SACJ,WACC,QACG,gCACC,0BAGf,UACc,SACJ,WACC,QACG,gCACC,0BAGf,UACc,SACJ,WACC,QACG,oCACC,8BAGf,UACc,SACJ,WACC,QACG,wCACC,kCAGf,UACc,SACJ,WACC,QACG,wCACC,kCAGf,UACc,SACJ,WACC,QACG,yDACC,mDAGf,UACc,SACJ,WACC,QACG,uDACC,iDAGf,UACc,SACJ,WACC,QACG,+CACC,yCAGf,UACc,SACJ,WACC,QACG,4CACC,sCAGf,UACc,SACJ,WACC,QACG,uCACC,iCAGf,UACc,SACJ,WACC,QACG,qDACC,+CAGf,UACc,SACJ,WACC,QACG,uEACC,iEAGf,UACc,SACJ,WACC,QACG,8BACC,wBAGf,UACc,SACJ,WACC,QACG,8BACC,wBAGf,UACc,SACJ,WACC,QACG,yBACC,mBAGf,UACc,SACJ,WACC,QACG,qCACC,+BAGf,UACc,SACJ,WACC,QACG,qCACC,+BAGf,UACc,SACJ,WACC,QACG,uBACC,iBAGf,UACc,SACJ,WACC,QACG,8BACC,wBAGf,UACc,SACJ,WACC,QACG,8BACC,wBAGf,UACc,SACJ,WACC,QACG,4BACC,sBAGf,UACc,SACJ,WACC,QACG,sCACC,gCAGf,UACc,SACJ,WACC,QACG,8CACC,wCAGf,UACc,SACJ,WACC,QACG,+BACC,yBAGf,UACc,SACJ,WACC,QACG,wBACC,kBAGf,UACc,SACJ,WACC,QACG,qBACC,eAGf,UACc,SACJ,WACC,QACG,qCACC,+BAGf,UACc,SACJ,WACC,QACG,qCACC,+BAGf,UACc,SACJ,WACC,QACG,+BACC,yBAGf,UACc,SACJ,WACC,QACG,+BACC,yBAGf,UACc,SACJ,WACC,QACG,uBACC,iBAGf,UACc,SACJ,WACC,QACG,oBACC,cAGf,UACc,SACJ,WACC,QACG,6BACC,uBAGf,UACc,SACJ,WACC,QACG,iCACC,2BAGf,UACc,SACJ,WACC,QACG,iCACC,2BAGf,UACc,SACJ,WACC,QACG,+BACC,yBAGf,UACc,SACJ,WACC,QACG,gCACC,0BAGf,UACc,SACJ,WACC,QACG,+BACC,yBAGf,UACc,SACJ,WACC,QACG,6CACC,uCAGf,UACc,SACJ,WACC,QACG,2CACC,qCAGf,UACc,SACJ,WACC,QACG,qCACC,+BAGf,UACc,SACJ,WACC,QACG,8BACC,wBAGf,UACc,SACJ,WACC,QACG,kCACC,4BAGf,UACc,SACJ,WACC,QACG,iBACC,WAGf,UACc,SACJ,WACC,QACG,4CACC,sCAGf,UACc,SACJ,WACC,QACG,2CACC,qCAGf,UACc,SACJ,WACC,QACG,wCACC,kCAGf,UACc,SACJ,WACC,QACG,0CACC,oCAGf,UACc,SACJ,WACC,QACG,gCACC,0BAGf,UACc,SACJ,WACC,QACG,yBACC,mBAGf,UACc,SACJ,WACC,QACG,sCACC,gCAGf,UACc,SACJ,WACC,QACG,sCACC,gCAGf,UACc,SACJ,WACC,QACG,6CACC,uCAGf,UACc,SACJ,WACC,QACG,kCACC,4BAGf,UACc,SACJ,WACC,QACG,iBACC,WAGf,UACc,SACJ,WACC,QACG,8BACC,wBAGf,UACc,SACJ,WACC,QACG,uBACC,iBAGf,UACc,SACJ,WACC,QACG,2BACC,qBAGf,UACc,SACJ,WACC,QACG,+BACC,yBAGf,UACc,SACJ,WACC,QACG,mBACC,aAGf,UACc,SACJ,WACC,QACG,wBACC,kBAGf,UACc,SACJ,WACC,QACG,6BACC,uBAGf,UACc,SACJ,WACC,QACG,iCACC,2BAGf,UACc,SACJ,WACC,QACG,0BACC,oBAGf,UACc,SACJ,WACC,QACG,+BACC,yBAGf,UACc,SACJ,WACC,QACG,mCACC,6BAGf,UACc,SACJ,WACC,QACG,iBACC,WAGf,UACc,SACJ,WACC,QACG,sCACC,gCAGf,UACc,SACJ,WACC,QACG,sCACC,gCAGf,UACc,SACJ,WACC,QACG,qCACC,+BAGf,UACc,SACJ,WACC,QACG,qCACC,+BAGf,UACc,SACJ,WACC,QACG,iBACC,WAGf,UACc,SACJ,WACC,QACG,uCACC,iCAGf,UACc,SACJ,WACC,QACG,0BACC,oBAGf,UACc,SACJ,WACC,QACG,0BACC,oBAGf,UACc,SACJ,WACC,QACG,iBACC,WAGf,UACc,SACJ,WACC,QACG,+BACC,yBAGf,UACc,SACJ,WACC,QACG,+BACC,yBAGf,UACc,SACJ,WACC,QACG,4BACC,sBAGf,UACc,SACJ,WACC,QACG,mCACC,6BAGf,UACc,SACJ,WACC,QACG,iCACC,2BAGf,UACc,SACJ,WACC,QACG,yBACC,mBAGf,UACc,SACJ,WACC,QACG,sBACC,gBAGf,UACc,SACJ,WACC,QACG,iBACC,WAGf,UACc,SACJ,WACC,QACG,0BACC,oBAGf,UACc,SACJ,WACC,QACG,8BACC,wBAGf,UACc,SACJ,WACC,QACG,6BACC,uBAGf,UACc,SACJ,WACC,QACG,2BACC,qBAGf,UACc,SACJ,WACC,QACG,4BACC,sBAGf,UACc,SACJ,WACC,QACG,gCACC,0BAGf,UACc,SACJ,YACC,QACG,6BACC,uBAGf,UACc,SACJ,YACC,QACG,yCACC,mCAGf,UACc,SACJ,YACC,QACG,8BACC,wBAGf,UACc,SACJ,WACC,QACG,iBACC,WAGf,UACc,SACJ,YACC,QACG,6BACC,uBAGf,UACc,SACJ,YACC,QACG,6BACC,uBAGf,UACc,SACJ,YACC,QACG,oCACC,8BAGf,UACc,SACJ,YACC,QACG,2BACC,qBAGf,UACc,SACJ,YACC,QACG,iCACC,2BAGf,UACc,SACJ,YACC,QACG,gCACC,0BAGf,UACc,SACJ,YACC,QACG,gCACC,0BAGf,UACc,SACJ,YACC,QACG,0CACC,oCAGf,UACc,SACJ,YACC,QACG,6BACC,uBAGf,UACc,SACJ,YACC,QACG,kCACC,4BAGf,UACc,SACJ,YACC,QACG,gCACC,0BAGf,UACc,SACJ,YACC,QACG,gCACC,0BAGf,UACc,SACJ,YACC,QACG,uCACC,iCAGf,UACc,SACJ,YACC,QACG,wBACC,kBAGf,UACc,SACJ,YACC,QACG,8CACC,wCAGf,UACc,SACJ,YACC,QACG,yCACC,mCAGf,UACc,SACJ,WACC,QACG,gBACC,kCAIS,CACxB,UACc,SACJ,UACC,QACG,iCACC,2BAGf,UACc,SACJ,UACC,QACG,8BACC,wBAGf,UACc,SACJ,UACC,QACG,sBACC,gBAGf,UACc,SACJ,UACC,QACG,gCACC,0BAGf,UACc,SACJ,UACC,QACG,qBACC,eAGf,UACc,SACJ,UACC,QACG,mBACC,aAGf,UACc,SACJ,UACC,QACG,iCACC,2BAGf,UACc,SACJ,UACC,QACG,0BACC,oBAGf,UACc,SACJ,UACC,QACG,uCACC,iCAGf,UACc,SACJ,WACC,QACG,qCACC,+BAGf,UACc,SACJ,WACC,QACG,mBACC,aAGf,UACc,SACJ,WACC,QACG,qBACC,eAGf,UACc,SACJ,WACC,QACG,gCACC,0BAGf,UACc,SACJ,WACC,QACG,gBACC,UAGf,UACc,SACJ,UACC,QACG,8BACC,wBAGf,UACc,SACJ,UACC,QACG,qBACC,eAGf,UACc,SACJ,UACC,QACG,mBACC,aAGf,UACc,SACJ,UACC,QACG,oBACC,cAGf,UACc,SACJ,WACC,QACG,gBACC,sCAIa,CAC5B,MACU,UACC,QACG,YACC,MAGf,MACU,UACC,QACG,YACC,cAIP,CACR,MACU,UACC,QACG,cACC,QAGf,MACU,UACC,QACG,aACC,0BAII,CACnB,MACU,UACC,QACG,mBACC,aAGf,MACU,UACC,QACG,mBACC,iCAIK,CACpB,UACc,SACJ,UACC,QACG,gBACC,UAGf,UACc,SACJ,UACC,QACG,gBACC,UAGf,UACc,SACJ,UACC,QACG,iBACC,WAGf,UACc,UACJ,UACC,QACG,kBACC,YAGf,UACc,UACJ,UACC,QACG,gBACC,UAGf,UACc,UACJ,UACC,QACG,iBACC,WAGf,UACc,UACJ,UACC,QACG,gBACC,+BAIM,CACrB,MACU,UACC,QACG,YACC,MAGf,MACU,UACC,QACG,YACC,MAGf,MACU,UACC,QACG,YACC,MAGf,MACU,WACC,QACG,gBACC,UAGf,UACc,SACJ,UACC,QACG,wBACC,kBAGf,UACc,SACJ,UACC,QACG,wBACC,kBAGf,UACc,SACJ,UACC,QACG,0BACC,oBAGf,UACc,SACJ,UACC,QACG,yBACC,mBAGf,UACc,SACJ,UACC,QACG,uBACC,iBAGf,UACc,SACJ,WACC,QACG,4CACC,sCAGf,UACc,SACJ,WACC,QACG,sBACC,gBAGf,UACc,SACJ,WACC,QACG,6CACC,uCAGf,UACc,SACJ,WACC,QACG,uBACC,iBAGf,UACc,SACJ,WACC,QACG,6CACC,uCAGf,UACc,SACJ,WACC,QACG,kCACC,4BAGf,UACc,SACJ,WACC,QACG,uBACC,iBAGf,UACc,SACJ,WACC,QACG,mBACC,aAGf,UACc,SACJ,WACC,QACG,gCACC,0BAGf,UACc,SACJ,WACC,QACG,0CACC,oCAGf,UACc,SACJ,WACC,QACG,4BACC,sBAGf,UACc,SACJ,WACC,QACG,mDACC,6CAGf,UACc,SACJ,WACC,QACG,2BACC,qBAGf,UACc,SACJ,WACC,QACG,uBACC,iBAGf,UACc,SACJ,WACC,QACG,0BACC,oBAGf,UACc,SACJ,WACC,QACG,2BACC,qBAGf,UACc,SACJ,WACC,QACG,wBACC,kBAGf,UACc,SACJ,WACC,QACG,6BACC,uBAGf,UACc,SACJ,WACC,QACG,4BACC,sBAGf,UACc,SACJ,WACC,QACG,wBACC,kBAGf,UACc,SACJ,WACC,QACG,2BACC,qBAGf,UACc,SACJ,WACC,QACG,iBACC,WAGf,UACc,UACJ,UACC,QACG,uBACC,iBAGf,UACc,UACJ,UACC,QACG,kBACC,YAGf,UACc,UACJ,UACC,QACG,qBACC,eAGf,UACc,UACJ,UACC,QACG,6BACC,uBAGf,UACc,UACJ,WACC,QACG,8BACC,wBAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,0BACC,oBAGf,UACc,UACJ,WACC,QACG,0BACC,oBAGf,UACc,UACJ,WACC,QACG,uCACC,iCAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,sCACC,gCAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,6CACC,uCAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,qBACC,eAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,iBACC,WAGf,UACc,UACJ,WACC,QACG,qCACC,+BAGf,UACc,UACJ,WACC,QACG,qBACC,eAGf,UACc,UACJ,WACC,QACG,iCACC,2BAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,kBACC,YAGf,UACc,UACJ,WACC,QACG,uBACC,iBAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,gBACC,UAGf,UACc,UACJ,UACC,QACG,uBACC,iBAGf,UACc,UACJ,UACC,QACG,kBACC,YAGf,UACc,UACJ,UACC,QACG,qBACC,eAGf,UACc,UACJ,UACC,QACG,6BACC,uBAGf,UACc,UACJ,WACC,QACG,8BACC,wBAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,qBACC,eAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,0BACC,oBAGf,UACc,UACJ,WACC,QACG,0BACC,oBAGf,UACc,UACJ,WACC,QACG,uCACC,iCAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,sCACC,gCAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,6CACC,uCAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,qBACC,eAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,iBACC,WAGf,UACc,UACJ,WACC,QACG,qCACC,+BAGf,UACc,UACJ,WACC,QACG,qBACC,eAGf,UACc,UACJ,WACC,QACG,iCACC,2BAGf,UACc,UACJ,WACC,QACG,qBACC,eAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,kBACC,YAGf,UACc,UACJ,WACC,QACG,uBACC,iBAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,gBACC,UAGf,UACc,UACJ,UACC,QACG,uBACC,iBAGf,UACc,UACJ,UACC,QACG,kBACC,YAGf,UACc,UACJ,UACC,QACG,qBACC,eAGf,UACc,UACJ,UACC,QACG,6BACC,uBAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,6CACC,uCAGf,UACc,UACJ,WACC,QACG,0BACC,oBAGf,UACc,UACJ,WACC,QACG,uCACC,iCAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,sCACC,gCAGf,UACc,UACJ,WACC,QACG,6CACC,uCAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,qCACC,+BAGf,UACc,UACJ,WACC,QACG,iBACC,WAGf,UACc,UACJ,WACC,QACG,qCACC,+BAGf,UACc,UACJ,WACC,QACG,qBACC,eAGf,UACc,UACJ,WACC,QACG,iCACC,2BAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,kBACC,YAGf,UACc,UACJ,WACC,QACG,uBACC,iBAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,gBACC,UAGf,UACc,UACJ,UACC,QACG,uBACC,iBAGf,UACc,UACJ,UACC,QACG,kBACC,YAGf,UACc,UACJ,UACC,QACG,qBACC,eAGf,UACc,UACJ,UACC,QACG,6BACC,uBAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,0BACC,oBAGf,UACc,UACJ,WACC,QACG,uCACC,iCAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,4CACC,sCAGf,UACc,UACJ,WACC,QACG,sCACC,gCAGf,UACc,UACJ,WACC,QACG,6CACC,uCAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,qCACC,+BAGf,UACc,UACJ,WACC,QACG,iBACC,WAGf,UACc,UACJ,WACC,QACG,qCACC,+BAGf,UACc,UACJ,WACC,QACG,qBACC,eAGf,UACc,UACJ,WACC,QACG,iCACC,2BAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,kBACC,YAGf,UACc,UACJ,WACC,QACG,uBACC,iBAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,gBACC,UAGf,UACc,UACJ,UACC,QACG,uBACC,iBAGf,UACc,UACJ,UACC,QACG,kBACC,YAGf,UACc,UACJ,UACC,QACG,qBACC,eAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,0BACC,oBAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,4CACC,sCAGf,UACc,UACJ,WACC,QACG,sCACC,gCAGf,UACc,UACJ,WACC,QACG,6CACC,uCAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,iBACC,WAGf,UACc,UACJ,WACC,QACG,qCACC,+BAGf,UACc,UACJ,WACC,QACG,qBACC,eAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,kBACC,YAGf,UACc,UACJ,WACC,QACG,uBACC,iBAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,gBACC,UAGf,UACc,UACJ,UACC,QACG,uBACC,iBAGf,UACc,UACJ,UACC,QACG,qBACC,eAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,0BACC,oBAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,iBACC,WAGf,UACc,UACJ,WACC,QACG,qCACC,+BAGf,UACc,UACJ,WACC,QACG,qBACC,eAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,kBACC,YAGf,UACc,UACJ,WACC,QACG,uBACC,iBAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,gBACC,UAGf,UACc,UACJ,UACC,QACG,uBACC,iBAGf,UACc,UACJ,UACC,QACG,qBACC,eAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,0BACC,oBAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,iBACC,WAGf,UACc,UACJ,WACC,QACG,qCACC,+BAGf,UACc,UACJ,WACC,QACG,qBACC,eAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,kBACC,YAGf,UACc,UACJ,WACC,QACG,uBACC,iBAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,gBACC,UAGf,UACc,UACJ,UACC,QACG,uBACC,iBAGf,UACc,UACJ,UACC,QACG,kBACC,YAGf,UACc,UACJ,UACC,QACG,qBACC,eAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,0BACC,oBAGf,UACc,UACJ,WACC,QACG,uCACC,iCAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,sCACC,gCAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,sBACC,gBAGf,UACc,UACJ,WACC,QACG,mBACC,aAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,iBACC,WAGf,UACc,UACJ,WACC,QACG,qCACC,+BAGf,UACc,UACJ,WACC,QACG,qBACC,eAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,oBACC,cAGf,UACc,UACJ,WACC,QACG,kBACC,YAGf,UACc,UACJ,WACC,QACG,uBACC,iBAGf,UACc,UACJ,WACC,QACG,2BACC,qBAGf,UACc,UACJ,WACC,QACG,iBACC,WAGf,UACc,eACJ,UACC,QACG,uBACC,iBAGf,UACc,eACJ,UACC,QACG,kBACC,YAGf,UACc,eACJ,UACC,QACG,qBACC,eAGf,UACc,eACJ,UACC,QACG,6BACC,uBAGf,UACc,eACJ,WACC,QACG,8BACC,wBAGf,UACc,eACJ,WACC,QACG,sBACC,gBAGf,UACc,eACJ,WACC,QACG,qBACC,eAGf,UACc,eACJ,WACC,QACG,sBACC,gBAGf,UACc,eACJ,WACC,QACG,6CACC,uCAGf,UACc,eACJ,WACC,QACG,0BACC,oBAGf,UACc,eACJ,WACC,QACG,0BACC,oBAGf,UACc,eACJ,WACC,QACG,uCACC,iCAGf,UACc,eACJ,WACC,QACG,mBACC,aAGf,UACc,eACJ,WACC,QACG,mBACC,aAGf,UACc,eACJ,WACC,QACG,4CACC,sCAGf,UACc,eACJ,WACC,QACG,mBACC,aAGf,UACc,eACJ,WACC,QACG,sCACC,gCAGf,UACc,eACJ,WACC,QACG,oBACC,cAGf,UACc,eACJ,WACC,QACG,6CACC,uCAGf,UACc,eACJ,WACC,QACG,2BACC,qBAGf,UACc,eACJ,WACC,QACG,sBACC,gBAGf,UACc,eACJ,WACC,QACG,mBACC,aAGf,UACc,eACJ,WACC,QACG,qBACC,eAGf,UACc,eACJ,WACC,QACG,2BACC,qBAGf,UACc,eACJ,WACC,QACG,oBACC,cAGf,UACc,eACJ,WACC,QACG,qCACC,+BAGf,UACc,eACJ,WACC,QACG,iBACC,WAGf,UACc,eACJ,WACC,QACG,qCACC,+BAGf,UACc,eACJ,WACC,QACG,qBACC,eAGf,UACc,eACJ,WACC,QACG,iCACC,2BAGf,UACc,eACJ,WACC,QACG,oBACC,cAGf,UACc,eACJ,WACC,QACG,qBACC,eAGf,UACc,eACJ,WACC,QACG,oBACC,cAGf,UACc,eACJ,WACC,QACG,oBACC,cAGf,UACc,eACJ,WACC,QACG,kBACC,YAGf,UACc,eACJ,WACC,QACG,uBACC,iBAGf,UACc,eACJ,WACC,QACG,2BACC,qBAGf,UACc,eACJ,WACC,QACG,iBACC,4BAIE,CACjB,UACc,SACJ,UACC,QACG,0BACC,oBAGf,UACc,SACJ,UACC,QACG,cACC,QAGf,UACc,SACJ,WACC,QACG,gBACC,UAGf,UACc,SACJ,UACC,QACG,qBACC,eAGf,UACc,SACJ,UACC,QACG,4BACC,sBAGf,UACc,SACJ,WACC,QACG,gBACC,mCAIU,CACzB,MACU,UACC,QACG,eACC,SAGf,MACU,UACC,QACG,eACC,SAGf,MACU,UACC,QACG,kBACC,YAGf,MACU,UACC,QACG,gBACC,UAGf,MACU,UACC,QACG,qBACC,eAGf,MACU,UACC,QACG,wBACC,0CAIS,CACxB,MACU,UACC,QACG,+BACC,yBAGf,MACU,UACC,QACG,qCACC,+BAGf,MACU,UACC,QACG,eACC,SAGf,MACU,UACC,QACG,eACC,SAGf,MACU,UACC,QACG,2CACC,qCAGf,MACU,UACC,QACG,eACC,SAGf,MACU,UACC,QACG,oCACC,8BAGf,MACU,WACC,QACG,iBACC,uBAKN,oBAGFC,EAAM,CACjB,CACEC,cAAe,OACfC,cAAe,WACfC,cAAe,KACfC,cAAe,UACfC,WAAY,WACZC,WAAY,SACZC,aAAc,SACdC,aAAc,UAEhB,CACEP,cAAe,OACfC,cAAe,WACfC,cAAe,KACfC,cAAe,UACfC,WAAY,WACZC,WAAY,cACZC,aAAc,SACdC,aAAc,UAEhB,CACEP,cAAe,OACfC,cAAe,YACfC,cAAe,KACfC,cAAe,aACfC,WAAY,WACZC,WAAY,WACZC,aAAc,SACdC,aAAc,YAEhB,CACEP,cAAe,OACfC,cAAe,YACfC,cAAe,KACfC,cAAe,aACfC,WAAY,WACZC,WAAY,WACZC,aAAc,SACdC,aAAc,aClnOdC,EAAkC,GAClCC,EAAwB,GACxBC,EAAiB,GAErB,SAASC,EAAkBC,EAAWC,EAAYC,EAAYC,UACrDF,IAAUC,EAAMC,GAAW,CAAC,EAAG,CAAEH,KAAAA,EAAMC,MAAAA,IAAW,CAAC,EAAG,MAuQ/D,IAAMG,EAAa,CAJnB,SAAwBF,EAAYC,SAC3B,KAAKE,KAAKH,EAAMC,IAAY,CAAC,EAAG,MAAQ,CAAC,EAAG,OAjQrD,SAA2BD,EAAYC,UAC9BJ,EAAkB,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"}