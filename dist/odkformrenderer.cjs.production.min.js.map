{"version":3,"file":"odkformrenderer.cjs.production.min.js","sources":["../src/constants.tsx","../src/store/ducks/formState.ts","../src/containers/fields/base/Text/index.tsx","../src/components/typeEvalutors/Base/index.tsx","../src/components/typeEvalutors/Group/index.tsx","../src/App/index.tsx","../src/store/index.tsx","../src/index.tsx"],"sourcesContent":["// Field Types\nexport const GROUP_FIELD_TYPE = 'group';\nexport type GROUP_FIELD_TYPE = typeof GROUP_FIELD_TYPE;\nexport const TEXT_FIELD_TYPE = 'text';\nexport type TEXT_FIELD_TYPE = typeof TEXT_FIELD_TYPE;\n\n/* tslint:disable */\nexport const DEMO_FORM_JSON = {\n  default_language: 'English',\n  id_string: 'capacity_building',\n  children: [\n    { name: 'start', type: 'start' },\n    { name: 'end', type: 'end' },\n    { name: 'username', type: 'username' },\n    {\n      name: 'note',\n      label: { English: 'Capacity Building Entry Field' },\n      type: 'note',\n    },\n    {\n      name: 'event_name',\n      bind: { required: 'Yes' },\n      label: { English: 'Name of the event' },\n      type: 'text',\n    },\n    {\n      children: [\n        { name: '1', label: { English: 'Training' } },\n        { name: '2', label: { English: 'Workshop' } },\n        { name: '3', label: { English: 'Conference' } },\n        { name: '4', label: { English: 'Seminar' } },\n      ],\n      name: 'event_type',\n      bind: { required: 'Yes' },\n      label: { English: 'Event Type' },\n      type: 'select one',\n    },\n    {\n      children: [\n        { name: '1', label: { English: 'In house Training' } },\n        { name: '2', label: { English: 'Out of Office' } },\n        { name: '3', label: { English: 'Training in Abroad' } },\n      ],\n      name: 'training_type',\n      bind: { required: 'Yes' },\n      label: { English: 'Training Type' },\n      type: 'select one',\n    },\n    {\n      children: [\n        { name: '1', label: { English: 'Life skills / Social Skills' } },\n        { name: '2', label: { English: 'Gender Issues' } },\n        { name: '3', label: { English: 'Legal Issues' } },\n        { name: '4', label: { English: 'Skill based training' } },\n        { name: '5', label: { English: \"Survivor'r rights\" } },\n        { name: '6', label: { English: 'Burn Care Training' } },\n        { name: '7', label: { English: 'Mental health' } },\n        { name: '8', label: { English: 'Organization Development' } },\n        { name: '9', label: { English: 'HR management' } },\n        { name: '99', label: { English: 'Others' } },\n      ],\n      name: 'capacity_building_subject',\n      label: { English: 'Subject of capacity building' },\n      type: 'select one',\n    },\n    {\n      name: 'capacity_building_subject_other',\n      bind: { relevant: '${capacity_building_subject}=99', required: 'Yes' },\n      label: { English: 'Specify the Subject of capacity building' },\n      type: 'text',\n    },\n    { name: 'duration', label: { English: 'Duration' }, type: 'note' },\n    {\n      name: 'event_start_date',\n      bind: { required: 'Yes' },\n      label: { English: 'Start Date' },\n      type: 'date',\n    },\n    {\n      name: 'event_end_date',\n      bind: { required: 'Yes' },\n      label: { English: 'End Date' },\n      type: 'date',\n    },\n    { name: 'location', label: { English: 'Location' }, type: 'note' },\n    {\n      control: { appearance: \"search('geo')\" },\n      children: [\n        {\n          name: 'division_code',\n          label: { Bangla: 'division_name', English: 'division_name' },\n        },\n      ],\n      name: 'division',\n      bind: { required: 'Yes' },\n      label: { English: 'Division' },\n      type: 'select one',\n    },\n    {\n      control: {\n        appearance: \"search('geo', 'matches', 'division_code', ${division})\",\n      },\n      children: [\n        {\n          name: 'district_code',\n          label: { Bangla: 'district_name', English: 'district_name' },\n        },\n      ],\n      name: 'district',\n      bind: { relevant: '${division}', required: 'Yes' },\n      label: { English: 'District' },\n      type: 'select one',\n    },\n    {\n      control: {\n        appearance: \"search('geo', 'matches', 'district_code', ${district})\",\n      },\n      children: [\n        {\n          name: 'upazila_code',\n          label: { Bangla: 'upazila_name', English: 'upazila_name' },\n        },\n      ],\n      name: 'upazila',\n      bind: { relevant: '${district}', required: 'Yes' },\n      label: { English: 'Upazila' },\n      type: 'select one',\n    },\n    {\n      control: {\n        appearance: \"search('geo', 'matches', 'upazila_code', ${upazila})\",\n      },\n      children: [\n        {\n          name: 'union_code',\n          label: { Bangla: 'union_name', English: 'union_name' },\n        },\n      ],\n      name: 'union',\n      bind: { relevant: '${upazila}', required: 'Yes' },\n      label: { English: 'Union' },\n      type: 'select one',\n    },\n    {\n      children: [\n        { name: '1', label: { English: '1' } },\n        { name: '2', label: { English: '2' } },\n        { name: '3', label: { English: '3' } },\n        { name: '4', label: { English: '4' } },\n        { name: '5', label: { English: '5' } },\n        { name: '6', label: { English: '6' } },\n        { name: '7', label: { English: '7' } },\n        { name: '8', label: { English: '8' } },\n        { name: '9', label: { English: '9' } },\n      ],\n      name: 'ward',\n      bind: { relevant: '${union}', required: 'Yes' },\n      label: { English: 'Ward' },\n      type: 'select one',\n    },\n    { name: 'participant', label: { English: 'Participants' }, type: 'note' },\n    {\n      name: 'participant_male',\n      bind: {\n        'jr:constraintMsg': { English: 'Negative value not allowed' },\n        required: 'Yes',\n        constraint: '.>=0',\n      },\n      label: { English: 'Male' },\n      type: 'integer',\n    },\n    {\n      name: 'participant_female',\n      bind: {\n        'jr:constraintMsg': { English: 'Negative value not allowed' },\n        required: 'Yes',\n        constraint: '.>=0',\n      },\n      label: { English: 'Female' },\n      type: 'integer',\n    },\n    {\n      name: 'participant_girl',\n      bind: {\n        'jr:constraintMsg': { English: 'Negative value not allowed' },\n        required: 'Yes',\n        constraint: '.>=0',\n      },\n      label: { English: 'Girls' },\n      type: 'integer',\n    },\n    {\n      name: 'participant_boy',\n      bind: {\n        'jr:constraintMsg': { English: 'Negative value not allowed' },\n        required: 'Yes',\n        constraint: '.>=0',\n      },\n      label: { English: 'Boys' },\n      type: 'integer',\n    },\n    {\n      name: 'participant_trangender',\n      bind: {\n        'jr:constraintMsg': { English: 'Negative value not allowed' },\n        required: 'Yes',\n        constraint: '.>=0',\n      },\n      label: { English: 'Transgender' },\n      type: 'integer',\n    },\n    {\n      name: 'particiapnt_total',\n      bind: {\n        readonly: 'TRUE',\n        required: 'Yes',\n        calculate:\n          '${participant_male}+${participant_female}+${participant_girl}+${participant_boy}+${participant_trangender}',\n      },\n      label: { English: 'Total' },\n      type: 'text',\n    },\n    {\n      children: [\n        { name: '1', label: { English: 'ASF' } },\n        { name: '99', label: { English: 'Others' } },\n      ],\n      name: 'organized_by',\n      bind: { required: 'Yes' },\n      label: { English: 'Organized by' },\n      type: 'select one',\n    },\n    {\n      name: 'organized_by_other',\n      bind: { relevant: '${organized_by}=99', required: 'Yes' },\n      label: { English: 'Specify the organizer' },\n      type: 'text',\n    },\n    {\n      name: 'funding_source',\n      bind: { required: 'Yes' },\n      label: { English: 'Funding Source' },\n      type: 'text',\n    },\n    {\n      name: 'reporting_attachment',\n      bind: { required: 'No' },\n      label: { English: 'Report Attachment' },\n      type: 'photo',\n    },\n    {\n      control: { bodyless: true },\n      children: [\n        {\n          name: 'instanceID',\n          bind: { readonly: 'true()', calculate: \"concat('uuid:', uuid())\" },\n          type: 'calculate',\n        },\n      ],\n      name: 'meta',\n      type: 'group',\n    },\n  ],\n  version: '1.0.1',\n  type: 'survey',\n  name: 'capacity_building',\n  sms_keyword: 'capacity_building',\n  title: 'Capacity Building',\n};\n/* tslint:enable */\nexport type DEMO_FORM_JSON = typeof DEMO_FORM_JSON;\n","import { AnyAction, Store } from 'redux';\nimport SeamlessImmutable from 'seamless-immutable';\n\n/** interface for the store state */\nexport interface FormState {\n  userInput: object;\n  errors: string[];\n}\n\n// actions\n\n/** FIELD_VALUE_ASSIGNED action type */\nexport const FIELD_VALUE_ASSIGNED = 'odk/reducer/form/FIELD_VALUE_ASSIGNED';\n/** RESET_STORE action type */\nexport const RESET_STORE = 'odk/reducer/form/RESET_STORE';\n\n/** interface for ASSIGN_FIELD_VALUE action */\nexport interface AssignFieldValueAction extends AnyAction {\n  fieldTreeName: string;\n  fieldValue: any;\n  type: typeof FIELD_VALUE_ASSIGNED;\n}\n\n/** interface for RESET_STORE action */\nexport interface ResetStoreAction extends AnyAction {\n  type: typeof RESET_STORE;\n}\n\n/** Assigns the value to the proper field name\n * @param {string} fieldTreeName - the extended field name\n * @param {any} fieldValue - the value that will be assigned\n * @return {AssignFieldValueAction} - an action to assign value to a field in the redux store\n */\nexport const assignFieldValueAction = (\n  fieldTreeName: string,\n  fieldValue: any\n): AssignFieldValueAction => ({\n  fieldTreeName,\n  fieldValue,\n  type: FIELD_VALUE_ASSIGNED,\n});\n\n/** Resets the redux store state to initial state\n * @return {ResetStoreAction} - an action to reset the redux store state\n */\nexport const resetStoreAction = (): ResetStoreAction => ({\n  type: RESET_STORE,\n});\n\n/** Create type for forms reducer actions */\nexport type FormActionTypes =\n  | AssignFieldValueAction\n  | ResetStoreAction\n  | AnyAction;\n\n/** Create an immutable form state */\nexport type ImmutableFormState = SeamlessImmutable.ImmutableObject<FormState>;\n\n/** initial form state */\nexport const initialState: ImmutableFormState = SeamlessImmutable({\n  errors: [],\n  userInput: {},\n});\n\n/** the form reducer function */\nexport default function reducer(\n  state: ImmutableFormState = initialState,\n  action: FormActionTypes\n): ImmutableFormState {\n  switch (action.type) {\n    case FIELD_VALUE_ASSIGNED:\n      const tmpUserInput = { [action.fieldTreeName]: action.fieldValue };\n      return SeamlessImmutable({\n        ...state,\n        userInput: { ...state.userInput, ...tmpUserInput },\n      });\n    case RESET_STORE:\n      return initialState;\n    default:\n      return state;\n  }\n}\n\n// selectors\n\n/** get the value by their respective element tree name\n * @param {Partial<Store>} state - the redux store\n * @return {any | null} value if the element name is found else null\n */\nexport function getFieldValue(\n  state: Partial<Store>,\n  fieldTreeName: string\n): any {\n  return (state as any).userInput[fieldTreeName] || null;\n}\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { FormGroup, Input } from 'reactstrap';\nimport { Store } from 'redux';\nimport { FieldElement } from '../../../../components/typeEvalutors/Base';\nimport {\n  assignFieldValueAction,\n  getFieldValue,\n} from '../../../../store/ducks/formState';\n\n/** props interface for the text component */\nexport interface TextProps {\n  fieldElement: FieldElement;\n  fieldValue: string;\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\n}\n\nclass Text extends React.Component<TextProps> {\n  public render() {\n    const { fieldElement, fieldValue } = this.props;\n    return (\n      <FormGroup>\n        <Input\n          type=\"text\"\n          name={fieldElement.name}\n          onChange={this.onChangeHandler}\n          value={fieldValue}\n        />\n      </FormGroup>\n    );\n  }\n\n  /** sets the value of field element in store\n   * @param {React.FormEvent<HTMLInputElement>} event - the onchange input event\n   */\n  private onChangeHandler = (event: React.FormEvent<HTMLInputElement>) => {\n    this.props.assignFieldValueActionCreator(\n      event.currentTarget.name,\n      event.currentTarget.value\n    );\n  };\n}\n\n/** connect the component to the store */\n\n/** Interface to describe props from mapStateToProps */\ninterface DispatchedStateProps {\n  fieldValue: string;\n}\n\n/** Interface to describe props from parent */\ninterface ParentProps {\n  fieldElement: FieldElement;\n}\n\n/** Map props to state  */\nconst mapStateToProps = (\n  state: Partial<Store>,\n  parentProps: ParentProps\n): DispatchedStateProps => {\n  const { fieldElement } = parentProps;\n  const result = {\n    fieldValue: getFieldValue(state, fieldElement.name) || '',\n  };\n  return result;\n};\n\n/** map props to actions */\nconst mapDispatchToProps = {\n  assignFieldValueActionCreator: assignFieldValueAction,\n};\n\n/** connect Text component to the redux store */\nconst ConnectedText = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Text);\n\nexport default ConnectedText;\n","import * as React from 'react';\nimport { TEXT_FIELD_TYPE } from '../../../constants';\nimport Text from '../../../containers/fields/base/Text';\n\n/** interface for kobo field element */\nexport interface FieldElement {\n  name: string;\n  type: string;\n  children?: any[];\n  bind?: object;\n  label?: string | object;\n}\n\n/** props interface for BaseTypeEvaluator component */\nexport interface BaseTypeEvaluatorProps {\n  fieldElement: FieldElement;\n}\n\nclass BaseTypeEvaluator extends React.Component<BaseTypeEvaluatorProps> {\n  public render() {\n    const { fieldElement } = this.props;\n    return this.typeEvaluator(fieldElement);\n  }\n\n  /** returns jsx components based on field types\n   * @param {FieldElement} fieldElement - the field element object\n   * @return {React.ReactElement} - jsx base components\n   */\n  private typeEvaluator(fieldElement: FieldElement): React.ReactElement {\n    switch (fieldElement.type) {\n      case TEXT_FIELD_TYPE:\n        return <Text fieldElement={fieldElement} />;\n      default:\n        return (\n          <div>\n            Other {fieldElement.type} {fieldElement.name}\n          </div>\n        );\n    }\n  }\n}\n\nexport default BaseTypeEvaluator;\n","import * as React from 'react';\nimport { GROUP_FIELD_TYPE } from '../../../constants';\nimport BaseTypeEvaluator, { FieldElement } from '../Base';\n\n/** props Interface for the GroupTypeEvaluator component */\nexport interface GroupTypeEvaluatorProps {\n  fieldElements: FieldElement[];\n}\n\nclass GroupTypeEvaluator extends React.Component<GroupTypeEvaluatorProps> {\n  public render() {\n    const { fieldElements } = this.props;\n    return (\n      <div>\n        {fieldElements.map(fieldElement => (\n          <div key={'group_' + fieldElement.name}>\n            {this.typeEvaluator(fieldElement)}\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  /** returns jsx components based on field types\n   * @param {FieldElement} fieldElement - the field element object\n   * @return {React.ReactElement} - jsx group components/ base evaluator component\n   */\n  private typeEvaluator(fieldElement: FieldElement): React.ReactElement {\n    switch (fieldElement.type) {\n      case GROUP_FIELD_TYPE:\n        return (\n          <div>\n            GROUP {fieldElement.type} {fieldElement.name}\n          </div>\n        );\n      default:\n        return <BaseTypeEvaluator fieldElement={fieldElement} />;\n    }\n  }\n}\n\nexport default GroupTypeEvaluator;\n","import * as React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport GroupTypeEvaluator from '../components/typeEvalutors/Group';\nimport { DEMO_FORM_JSON } from '../constants';\n\nclass App extends React.Component {\n  public render() {\n    const props = { fieldElements: DEMO_FORM_JSON.children };\n    return (\n      <Container className=\"form-container\">\n        <Row className=\"welcome-box\">\n          <Col>\n            <h3>Welcome to Odk Form Renderer</h3>\n          </Col>\n        </Row>\n        <GroupTypeEvaluator {...props} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, Store } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer, { FormState } from './ducks/formState';\n\n/** The initial store */\nconst store: Store & FormState = createStore(reducer, composeWithDevTools());\n\nexport default store;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport * as React from 'react';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nclass OdkFormRenderer extends React.Component {\n  public render() {\n    return (\n      <Provider store={store}>\n        <App />\n      </Provider>\n    );\n  }\n}\n\nexport default OdkFormRenderer;\n"],"names":["DEMO_FORM_JSON","default_language","id_string","children","name","type","label","English","bind","required","relevant","control","appearance","Bangla","constraint","readonly","calculate","bodyless","version","sms_keyword","title","FIELD_VALUE_ASSIGNED","RESET_STORE","initialState","SeamlessImmutable","errors","userInput","reducer","state","action","tmpUserInput","fieldTreeName","fieldValue","getFieldValue","Text","event","props","assignFieldValueActionCreator","currentTarget","value","render","this","React","FormGroup","Input","fieldElement","onChange","onChangeHandler","ConnectedText","connect","parentProps","BaseTypeEvaluator","typeEvaluator","GroupTypeEvaluator","fieldElements","map","key","_this","App","Container","className","Row","Col","store","createStore","composeWithDevTools","Provider"],"mappings":"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"}