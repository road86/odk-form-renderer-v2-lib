{"version":3,"file":"odkformrenderer.cjs.development.js","sources":["../src/utils/Theme.ts","../src/components/Alert/index.tsx","../src/components/DropDown/index.tsx","../src/constants.tsx","../src/store/index.tsx","../src/utils/compiler.ts","../src/utils/helpers.ts","../src/store/ducks/formState.ts","../src/containers/fields/group/Group/styles.ts","../src/containers/fields/group/Group/index.tsx","../src/containers/fields/group/Repeat/Single Repeat/index.tsx","../src/containers/fields/group/Repeat/Controlled Repeat/index.tsx","../src/containers/fields/group/Repeat/Uncontrolled Repeat/index.tsx","../src/containers/fields/group/Repeat/index.tsx","../src/containers/fields/base/Calculate/index.tsx","../src/containers/fields/base/Date/index.tsx","../src/containers/fields/base/Date Time/index.tsx","../src/containers/fields/base/Decimal/index.tsx","../src/containers/fields/base/File/FilePreview/FilePreview.tsx","../src/containers/fields/base/File/index.tsx","../src/containers/fields/base/Integer/index.tsx","../src/containers/fields/base/Note/index.tsx","../src/containers/fields/base/Select All/Dropdown/index.tsx","../src/containers/fields/base/Select All/Radio/index.tsx","../src/containers/fields/base/Select All/index.tsx","../src/containers/fields/base/Select One/Dropdown/index.tsx","../src/containers/fields/base/Select One/Radio/index.tsx","../src/containers/fields/base/Select One/index.tsx","../src/containers/fields/base/Text/index.tsx","../src/containers/fields/base/Time/index.tsx","../src/components/typeEvalutors/Base/index.tsx","../src/components/typeEvalutors/Group/index.tsx","../src/App/index.tsx","../src/index.tsx"],"sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#649A6A',\r\n      dark: '#8ac390',\r\n    },\r\n    secondary: {\r\n      main: '#D2AB16',\r\n      light: '#EBFDED',\r\n      dark: '#AD8C0F',\r\n    },\r\n    // error: {\r\n    //   main: '#f44336',\r\n    // },\r\n    // warning: {\r\n    //   main: '#ff9800',\r\n    // },\r\n    //table stripe\r\n    info: {\r\n      dark: '#F5F4F4',\r\n      main: '#EBFDED',\r\n      light: '#F9F9F9',\r\n    },\r\n    // success: {\r\n    //   main: '#4caf50',\r\n    // },\r\n    text: {\r\n      primary: '#EBFDED',\r\n      secondary: '#000000',\r\n      disabled: 'rgba(0, 0, 0, 0.38)',\r\n      hint: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n    // divider: 'rgba(0, 0, 0, 0.12)',\r\n    // background: {\r\n    //   paper: '#fff',\r\n    //   default: '#fff',\r\n    // },\r\n    // action: {\r\n    //   active: '#EEEEEE',\r\n    //   hover: '#888888',\r\n    //   hoverOpacity: 0.04,\r\n    //   selected: '#FFFFFF',\r\n    //   disabled: '#666666',\r\n    // },\r\n  },\r\n  typography: {\r\n    h1: {\r\n      fontWeight: 700,\r\n      // lineHeight: 0.35,\r\n      fontSize: 30,\r\n      // color: '#FFFFFF',\r\n    },\r\n    h2: {\r\n      fontWeight: 500,\r\n      fontSize: 20,\r\n      // lineHeight: 0.23,\r\n    },\r\n    h3: {\r\n      fontWeight: 400,\r\n      fontSize: 18,\r\n      // lineHeight: 0.21,\r\n      // color: '#FFFFFF',\r\n    },\r\n    h4: {\r\n      fontWeight: 700,\r\n      // lineHeight: 0.35,\r\n      fontSize: 26,\r\n    },\r\n    body1: {\r\n      fontFamily: 'Roboto',\r\n      fontWeight: 400,\r\n      // lineHeight: 1.18,\r\n      fontSize: 16,\r\n    },\r\n    caption: {\r\n      fontFamily: 'Roboto',\r\n      fontWeight: 600,\r\n      // lineHeight: 0.18,\r\n      fontSize: 16,\r\n    },\r\n    subtitle1: {\r\n      fontFamily: 'Roboto',\r\n      fontWeight: 400,\r\n      // lineHeight: 0.18,\r\n      fontSize: 16,\r\n    },\r\n    subtitle2: {\r\n      fontFamily: 'Roboto',\r\n      fontWeight: 500,\r\n      // lineHeight: 0.18,\r\n      fontSize: 16,\r\n    },\r\n  },\r\n  //menu\r\n  overrides: {\r\n    MuiPaper: {\r\n      root: {\r\n        color: '#222222 !important',\r\n      },\r\n    },\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport { Alert } from 'reactstrap';\r\n\r\nexport interface KbAlertProps {\r\n  headerText: string;\r\n  bodyText: string;\r\n  handleToggle: any;\r\n  isOpen: boolean;\r\n  color: string;\r\n}\r\n\r\nclass KbAlert extends React.Component<KbAlertProps> {\r\n  public render() {\r\n    const { headerText, bodyText, handleToggle, isOpen, color } = this.props;\r\n    return (\r\n      <Alert color={color} isOpen={isOpen} toggle={handleToggle}>\r\n        <h4 className=\"alert-heading\">{headerText}</h4>\r\n        <p>{bodyText}</p>\r\n      </Alert>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KbAlert;\r\n","import * as React from 'react';\r\nimport Select from 'react-select';\r\n\r\nexport interface DropDownProps {\r\n  languages: any;\r\n  onChangeSelect: any;\r\n  defaultLanguage: string;\r\n}\r\n\r\nexport interface Options {\r\n  label: any;\r\n  value: string;\r\n}\r\n\r\nclass DropDown extends React.Component<DropDownProps> {\r\n  public render() {\r\n    const options: Options[] = [];\r\n    const languageOptions = [...this.props.languages];\r\n    languageOptions.map((elem: any) => {\r\n      options.push({ label: elem.label, value: elem.value });\r\n    });\r\n\r\n    let selectedValue: any;\r\n    options.map(elem => {\r\n      if (elem.value === this.props.defaultLanguage) {\r\n        selectedValue = elem;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <Select\r\n        multi={false}\r\n        options={options}\r\n        className={'col-md-2 dropDown'}\r\n        placeholder=\"Language\"\r\n        onChange={this.onChangeHandler}\r\n        value={selectedValue || ''}\r\n      />\r\n    );\r\n  }\r\n\r\n  /** pass the selected value to the parent class\r\n   * @param {any} event - the onchange input event\r\n   */\r\n  private onChangeHandler = (event: any) => {\r\n    this.props.onChangeSelect(event.value);\r\n  };\r\n}\r\n\r\nexport default DropDown;\r\n","// Field Types\r\nexport const GROUP_FIELD_TYPE = 'group';\r\nexport type GROUP_FIELD_TYPE = typeof GROUP_FIELD_TYPE;\r\nexport const REPEAT_FIELD_TYPE = 'repeat';\r\nexport type REPEAT_FIELD_TYPE = typeof REPEAT_FIELD_TYPE;\r\nexport const TEXT_FIELD_TYPE = 'text';\r\nexport type TEXT_FIELD_TYPE = typeof TEXT_FIELD_TYPE;\r\nexport const DATE_FIELD_TYPE = 'date';\r\nexport type DATE_FIELD_TYPE = typeof DATE_FIELD_TYPE;\r\nexport const DATE_TIME_FIELD_TYPE = 'dateTime';\r\nexport type TIME_FIELD_TYPE = typeof TIME_FIELD_TYPE;\r\nexport const TIME_FIELD_TYPE = 'time';\r\nexport type DATE_TIME_FIELD_TYPE = typeof DATE_TIME_FIELD_TYPE;\r\nexport const INTEGER_FIELD_TYPE = 'integer';\r\nexport type INTEGER_FIELD_TYPE = typeof INTEGER_FIELD_TYPE;\r\nexport const DECIMAL_FIELD_TYPE = 'decimal';\r\nexport type DECIMAL_FIELD_TYPE = typeof DECIMAL_FIELD_TYPE;\r\nexport const PHOTO_FIELD_TYPE = 'photo';\r\nexport type PHOTO_FIELD_TYPE = typeof PHOTO_FIELD_TYPE;\r\nexport const FILE_FIELD_TYPE = 'file';\r\nexport type FILE_FIELD_TYPE = typeof FILE_FIELD_TYPE;\r\nexport const NOTE_FIELD_TYPE = 'note';\r\nexport type NOTE_FIELD_TYPE = typeof NOTE_FIELD_TYPE;\r\nexport const SELECT_ONE_FIELD_TYPE = 'select one';\r\nexport type SELECT_ONE_FIELD_TYPE = typeof SELECT_ONE_FIELD_TYPE;\r\nexport const SELECT_ALL_FIELD_TYPE = 'select all that apply';\r\nexport type SELECT_ALL_FIELD_TYPE = typeof SELECT_ALL_FIELD_TYPE;\r\nexport const CALCULATE_FIELD_TYPE = 'calculate';\r\nexport type CALCULATE_FIELD_TYPE = typeof CALCULATE_FIELD_TYPE;\r\n\r\n// Required Properties\r\nexport const REQUIRED_FIELD_MSG = 'This field is required';\r\nexport type REQUIRED_FIELD_MSG = typeof REQUIRED_FIELD_MSG;\r\nexport const REQUIRED_SYMBOL = '*';\r\nexport type REQUIRED_SYMBOL = typeof REQUIRED_SYMBOL;\r\n","import { createStore, Store } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer, { FormState } from './ducks/formState';\r\n\r\n/** The initial store */\r\nconst store: Store & FormState = createStore(reducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import store from '../store';\r\n\r\nlet actualExpression: string;\r\nlet currentHierarchicalName: string = '';\r\nlet formItemProperty: any = {};\r\nlet userInput: any = {};\r\n\r\n/**\r\n * tokenizeCharacter is a type of util method\r\n * @param {any} type - the type that will be returned if matches\r\n * @param {any} value - the actual value of the tokenize character\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeCharacter(type: any, value: any, input: any, current: any) {\r\n  return value === input[current] ? [1, { type, value }] : [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeParenOpen returns tokenizeReturnObject for character (\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeParenOpen(input: any, current: any) {\r\n  return tokenizeCharacter('paren', '(', input, current);\r\n}\r\n\r\n/**\r\n * tokenizeBrakeOpen returns tokenizeReturnObject for character [\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeBrakeOpen(input: any, current: any) {\r\n  return tokenizeCharacter('brac', '[', input, current);\r\n}\r\n\r\n/**\r\n * tokenizeBrakeClose returns tokenizeReturnObject for character ]\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeBrakeClose(input: any, current: any) {\r\n  return tokenizeCharacter('brac', ']', input, current);\r\n}\r\n\r\n/**\r\n * tokenizeParenClose returns tokenizeReturnObject for character )\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeParenClose(input: any, current: any) {\r\n  return tokenizeCharacter('paren', ')', input, current);\r\n}\r\n\r\n/**\r\n * tokenizeEqual returns tokenizeReturnObject for character =\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeEqual(input: any, current: any) {\r\n  return tokenizeCharacter('equal', '=', input, current);\r\n}\r\n\r\n/**\r\n * tokenizePlus returns tokenizeReturnObject for character +\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizePlus(input: any, current: any) {\r\n  return tokenizeCharacter('plus', '+', input, current);\r\n}\r\n\r\n/**\r\n * tokenizeMinus returns tokenizeReturnObject for character -\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeMinus(input: any, current: any) {\r\n  return tokenizeCharacter('minus', '-', input, current);\r\n}\r\n\r\n/**\r\n * tokenizeMultiply returns tokenizeReturnObject for character *\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeMultiply(input: any, current: any) {\r\n  return tokenizeCharacter('multiply', '*', input, current);\r\n}\r\n\r\n/**\r\n * tokenizeDivide returns tokenizeReturnObject for character /\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeDivide(input: any, current: any) {\r\n  return tokenizeCharacter('divide', '/', input, current);\r\n}\r\n\r\n/**\r\n * tokenizeLessThan returns tokenizeReturnObject for character <\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeLessThan(input: any, current: any) {\r\n  return tokenizeCharacter('lessThan', '<', input, current);\r\n}\r\n\r\n/**\r\n * tokenizeGreaterThan returns tokenizeReturnObject for character >\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeGreaterThan(input: any, current: any) {\r\n  return tokenizeCharacter('greaterThan', '>', input, current);\r\n}\r\n\r\n/**\r\n * tokenizeNot returns tokenizeReturnObject for character !\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeNot(input: any, current: any) {\r\n  if (input[current] == '!') {\r\n    return tokenizeCharacter('not', '!', input, current);\r\n  } else if (input[current] == 'n') {\r\n    if (\r\n      input[current + 1] &&\r\n      input[current + 1] == 'o' &&\r\n      (input[current + 2] && input[current + 2] == 't')\r\n    ) {\r\n      const type = 'not';\r\n      const value = '!';\r\n      return [3, { type, value }];\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeComma returns tokenizeReturnObject for character ,\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeComma(input: any, current: any) {\r\n  return tokenizeCharacter('comma', ',', input, current);\r\n}\r\n\r\n/**\r\n * tokenizeDot returns tokenizeReturnObject for character .\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeDot(input: any, current: any) {\r\n  return tokenizeCharacter('dot', '.', input, current);\r\n}\r\n\r\n/**\r\n * tokenizePattern is a type of util method\r\n * @param {any} type - the type that will be returned if matches\r\n * @param {any} pattern - the pattern that will be matched for tokenization\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizePattern(type: any, pattern: any, input: any, current: any) {\r\n  let char = input[current];\r\n  let consumedChars = 0;\r\n  if (pattern.test(char)) {\r\n    let value = '';\r\n    while (char && pattern.test(char)) {\r\n      value += char;\r\n      consumedChars += 1;\r\n      char = input[current + consumedChars];\r\n    }\r\n    return [consumedChars, { type, value }];\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeString returns tokenizeReturnObject for strings. example: 'abc12' , \"test1\", \"afgkj dafgk\"\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeString(input: any, current: any) {\r\n  if (input[current] === '\"' || input[current] === \"'\") {\r\n    const matchQuote = input[current];\r\n    let value = '';\r\n    let consumedChars = 0;\r\n    consumedChars += 1;\r\n    let char = input[current + consumedChars];\r\n    while (char !== matchQuote) {\r\n      if (char === undefined) {\r\n        throw new TypeError('unterminated string ');\r\n      }\r\n      value += char;\r\n      consumedChars += 1;\r\n      char = input[current + consumedChars];\r\n    }\r\n    return [consumedChars + 1, { type: 'string', value }];\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeFunction returns tokenizeReturnObject for functions. Example: round( , substring(\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns tokenizeReturnObject; value contains function name if matched\r\n */\r\nfunction tokenizeFunction(input: any, current: any) {\r\n  if (/[a-z_]/i.test(input[current])) {\r\n    let value = '';\r\n    let consumedChars = 0;\r\n    // consumedChars ++;\r\n    let char = input[current + consumedChars];\r\n    while (char && /[:a-z0-9_-]/i.test(char)) {\r\n      if (char === undefined) {\r\n        throw new TypeError('unterminated string ');\r\n      }\r\n      value += char;\r\n      consumedChars += 1;\r\n      char = input[current + consumedChars];\r\n    }\r\n    while (char && /\\s/.test(char)) {\r\n      consumedChars += 1;\r\n      char = input[current + consumedChars];\r\n    }\r\n    if (value == 'not') {\r\n      return [0, null];\r\n    }\r\n    if (char && char === '(') {\r\n      return [consumedChars, { type: 'function', value }];\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeNumber returns tokenizeReturnObject for discrete numbers. Example: 123 , 02113\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns tokenizeReturnObject\r\n */\r\nfunction tokenizeNumber(input: any, current: any) {\r\n  if (/[0-9]/i.test(input[current])) {\r\n    let value = '';\r\n    let consumedChars = 0;\r\n    // consumedChars ++;\r\n    let char = input[current + consumedChars];\r\n    while (/[0-9]/i.test(char)) {\r\n      if (char === undefined) {\r\n        throw new TypeError('unterminated string ');\r\n      }\r\n      value += char;\r\n      consumedChars += 1;\r\n      char = input[current + consumedChars];\r\n    }\r\n    if (char !== '.') {\r\n      return [consumedChars, { type: 'number', value }];\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeDecimal returns tokenizeReturnObject for decimal numbers. Example: 12.3 , 0.2113\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns tokenizeReturnObject\r\n */\r\nfunction tokenizeDecimal(input: any, current: any) {\r\n  if (/[0-9.]/i.test(input[current])) {\r\n    let value = '';\r\n    let consumedChars = 0;\r\n    // consumedChars ++;\r\n    let char = input[current + consumedChars];\r\n    while (/[0-9]/i.test(char)) {\r\n      if (char === undefined) {\r\n        throw new TypeError('unterminated string ');\r\n      }\r\n      value += char;\r\n      consumedChars += 1;\r\n      char = input[current + consumedChars];\r\n    }\r\n    if (char === '.') {\r\n      value += char;\r\n      consumedChars += 1;\r\n      char = input[current + consumedChars];\r\n      if (/[0-9]/i.test(char)) {\r\n        while (/[0-9]/i.test(char)) {\r\n          if (char === undefined) {\r\n            throw new TypeError('unterminated string ');\r\n          }\r\n          value += char;\r\n          consumedChars += 1;\r\n          char = input[current + consumedChars];\r\n        }\r\n        return [consumedChars, { type: 'decimal', value }];\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeVariable returns tokenizeReturnObject for variables. Example syntax: ${Iamvariable} , #{urvariable}\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns tokenizeReturnObject\r\n */\r\nfunction tokenizeVariable(input: any, current: any) {\r\n  if (input[current] === '#' || input[current] === '$') {\r\n    if (input[current + 1] && input[current + 1] === '{') {\r\n      let value = '';\r\n      let consumedChars = 1;\r\n      consumedChars += 1;\r\n      let char = input[current + consumedChars];\r\n      while (char !== '}') {\r\n        if (char === undefined) {\r\n          throw new TypeError('unterminated string ');\r\n        }\r\n        value += char;\r\n        consumedChars += 1;\r\n        char = input[current + consumedChars];\r\n      }\r\n      return [consumedChars + 1, { type: 'variable', value }];\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeOr returns tokenizeReturnObject for syntax or\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns tokenizeReturnObject\r\n */\r\nfunction tokenizeOr(input: any, current: any) {\r\n  if (input[current] === 'o') {\r\n    if (input[current + 1] && input[current + 1] === 'r') {\r\n      if (\r\n        input[current + 2] === undefined ||\r\n        /[0-9\\s]/.test(input[current + 2])\r\n      ) {\r\n        return [2, { type: 'or', value: 'or' }];\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeIf returns tokenizeReturnObject for word if\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns tokenizeReturnObject\r\n */\r\nfunction tokenizeIf(input: any, current: any) {\r\n  if (input[current] === 'i') {\r\n    if (input[current + 1] && input[current + 1] === 'f') {\r\n      if (\r\n        input[current + 2] === undefined ||\r\n        !/[a-z]i/.test(input[current + 2])\r\n      ) {\r\n        return [2, { type: 'if', value: 'if' }];\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeAnd returns tokenizeReturnObject for word and\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns tokenizeReturnObject\r\n */\r\nfunction tokenizeAnd(input: any, current: any) {\r\n  if (input[current] === 'a') {\r\n    if (input[current + 1] && input[current + 1] === 'n') {\r\n      if (input[current + 2] && input[current + 2] === 'd') {\r\n        if (\r\n          input[current + 3] === undefined ||\r\n          /[0-9\\s]/.test(input[current + 3])\r\n        ) {\r\n          return [3, { type: 'and', value: 'and' }];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeDiv returns tokenizeReturnObject of type divide for word div\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns tokenizeReturnObject\r\n */\r\nfunction tokenizeDiv(input: any, current: any) {\r\n  if (input[current] === 'd') {\r\n    if (input[current + 1] && input[current + 1] === 'i') {\r\n      if (input[current + 2] && input[current + 2] === 'v') {\r\n        if (\r\n          input[current + 3] === undefined ||\r\n          /[0-9\\s]/.test(input[current + 3])\r\n        ) {\r\n          return [3, { type: 'divide', value: '/' }];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeName returns tokenizeReturnObject of type name for regex [a-z_]+\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns tokenizeReturnObject\r\n */\r\nfunction tokenizeName(input: any, current: any) {\r\n  return tokenizePattern('name', /[a-z_]/i, input, current);\r\n}\r\n\r\n/**\r\n * skipWhiteSpace removes space and iterates the position of compiler\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns tokenizeReturnObject that consumes characters without returning type\r\n */\r\nfunction skipWhiteSpace(input: any, current: any) {\r\n  return /\\s/.test(input[current]) ? [1, null] : [0, null];\r\n}\r\n\r\n/**\r\n * Precedence of the tokenizer methods\r\n * If new tokenizer method is created, please add inside tokenizers with correct precedence\r\n */\r\nconst tokenizers = [\r\n  skipWhiteSpace,\r\n  tokenizeParenOpen,\r\n  tokenizeParenClose,\r\n  tokenizeIf,\r\n  tokenizeOr,\r\n  tokenizeAnd,\r\n  tokenizeVariable,\r\n  tokenizeString,\r\n  tokenizeFunction,\r\n  tokenizeEqual,\r\n  tokenizePlus,\r\n  tokenizeMinus,\r\n  tokenizeMultiply,\r\n  tokenizeDivide,\r\n  tokenizeDiv,\r\n  tokenizeLessThan,\r\n  tokenizeGreaterThan,\r\n  tokenizeNot,\r\n  tokenizeBrakeOpen,\r\n  tokenizeBrakeClose,\r\n  tokenizeDot,\r\n  tokenizeComma,\r\n  tokenizeNumber,\r\n  tokenizeDecimal,\r\n  tokenizeName,\r\n];\r\n\r\n/**\r\n * tokenizer is primary method that takes the expression and convert them to appropiate tokens.\r\n * Throws syntax error if expression is not appropiate or could not be tokenized properly\r\n * @param {string} input - should be of string for valid cases\r\n * @returns array of tokens\r\n */\r\nfunction tokenizer(input: any) {\r\n  let current: number = 0;\r\n  const tokens: any = [];\r\n  while (current < input.length) {\r\n    let tokenized = false;\r\n    tokenizers.forEach(tokenizerFn => {\r\n      if (tokenized) {\r\n        return;\r\n      }\r\n      const [consumedChars, token]: any = tokenizerFn(input, current);\r\n      if (consumedChars !== 0) {\r\n        tokenized = true;\r\n        current += consumedChars;\r\n      }\r\n      if (token) {\r\n        tokens.push(token);\r\n      }\r\n    });\r\n    if (!tokenized) {\r\n      throw new TypeError(\r\n        `I dont know what this character is: ${input[current]}`\r\n      );\r\n    }\r\n  }\r\n  return tokens;\r\n}\r\n\r\n/**\r\n * kbSelected parses the function selected and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbSelected(funcName: any, params: any, _paramsTokens: any) {\r\n  if (funcName === 'selected') {\r\n    let tmp = false;\r\n    if (Array.isArray(params[0])) {\r\n      params[0].forEach((element: any) => {\r\n        // tslint:disable-next-line: triple-equals\r\n        tmp = tmp || element == params[1];\r\n      });\r\n      return [true, tmp];\r\n    }\r\n    // tslint:disable-next-line: triple-equals\r\n    return [true, params[0] == params[1]];\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n// tslint:disable-next-line: variable-name\r\nfunction kbChoice(funcName: any, params: any, _paramsTokens: any) {\r\n  if (funcName === 'jr:choice-name') {\r\n    const tmpHierchicalName = currentHierarchicalName.split('/');\r\n    let i;\r\n    let parent = '';\r\n    for (i = 0; i < tmpHierchicalName.length - 1; ) {\r\n      // tslint:disable-next-line: triple-equals\r\n      if (tmpHierchicalName[i] == 'repeat') {\r\n        i += 3;\r\n      } else {\r\n        // path.push(parent + tmpHierchicalName[i + 1]);\r\n        parent = parent + tmpHierchicalName[i + 1] + '/';\r\n        i += 2;\r\n      }\r\n    }\r\n    const state = store.getState();\r\n    const variableName =\r\n      parent + params[params.length - 1].replace(/[^a-zA-Z ]/g, '');\r\n    if (variableName in state.optionList) {\r\n      for (const key in state.optionList[variableName]) {\r\n        if (state.optionList[variableName][key].name === params[0]) {\r\n          return [\r\n            true,\r\n            state.optionList[variableName][key].label[state.language],\r\n          ];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * kbToday parses the function today and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbToday(funcName: any, _params: any, _paramsTokens: any) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'today') {\r\n    const d = new Date();\r\n    d.setHours(0, 0, 0, 0);\r\n    return [true, d];\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * kbRound parses the function round and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbRound(funcName: any, params: any, _paramsTokens: any) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'round') {\r\n    if (params[0] && params[1]) {\r\n      if (typeof params[0] === 'number' && typeof params[1] === 'number') {\r\n        return [true, params[0].toFixed(params[1])];\r\n      }\r\n      if (typeof params[0] === 'string' && typeof params[1] === 'number') {\r\n        return [true, parseFloat(params[0]).toFixed(params[1])];\r\n      }\r\n    }\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * kbRegex parses the function regex and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbRegex(funcName: any, params: any, _paramsTokens: any) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'regex') {\r\n    const regex = RegExp(params[1]);\r\n    return [true, regex.test(params[0])];\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * kbCountSelected parses the function count-selected and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbCountSelected(funcName: any, params: any, _paramsTokens: any) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'count-selected') {\r\n    if (params[0] && Array.isArray(params[0])) {\r\n      return [true, params[0].length];\r\n    }\r\n    if (params[0] && typeof params[0] !== 'object') {\r\n      return [true, 1];\r\n    }\r\n    return [true, 0];\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * kbInt parses the function int and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbInt(funcName: any, params: any, _paramsTokens: any) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'int') {\r\n    if (typeof params[0] === 'string') {\r\n      return [true, parseInt(params[0], 10)];\r\n    }\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * kbCoalesce parses the function coalesce and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbCoalesce(funcName: any, params: any, _paramsTokens: any) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'coalesce') {\r\n    if (!params[0] && params[0] !== 0) {\r\n      return [true, params[1]];\r\n    }\r\n    return [true, params[0]];\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * kbPosition parses the function position and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbPosition(funcName: any, _params: any, _paramsTokens: any) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'position') {\r\n    if (currentHierarchicalName) {\r\n      const tmpName = currentHierarchicalName.split('/');\r\n      if (tmpName.length > 2) {\r\n        return [true, parseInt(tmpName[tmpName.length - 2], 10) + 1];\r\n      }\r\n    }\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * sumValuesOverJsn is a utility method for kbSum\r\n * @param sum - initial sum value\r\n * @param jsnObj - variable name and value in json object\r\n * @param variableName - variable name\r\n * @returns the calculated sum\r\n */\r\nfunction sumValuesOverJsn(sum: any, jsnObj: any, variableName: any) {\r\n  if (Array.isArray(jsnObj)) {\r\n    let i;\r\n    for (i = 0; i < jsnObj.length; i += 1) {\r\n      sum = sumValuesOverJsn(sum, jsnObj[i], variableName);\r\n    }\r\n  } else if (typeof jsnObj === 'object') {\r\n    for (const key in jsnObj) {\r\n      if (typeof jsnObj[key] === 'object') {\r\n        sum = sumValuesOverJsn(sum, jsnObj[key], variableName);\r\n      } else if (key === variableName) {\r\n        if (typeof jsnObj[key] === 'string') {\r\n          sum += parseFloat(jsnObj[key]);\r\n        }\r\n        if (typeof jsnObj[key] === 'number') {\r\n          sum += jsnObj[key];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\n/**\r\n * kbSum parses the function sum and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbSum(funcName: any, _params: any, paramsTokens: any) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'sum') {\r\n    let sumValue = null;\r\n    if (\r\n      paramsTokens &&\r\n      paramsTokens.length > 0 &&\r\n      paramsTokens[0] &&\r\n      paramsTokens[0].length > 0 &&\r\n      paramsTokens[0][0].type === 'variable'\r\n    ) {\r\n      sumValue = sumValuesOverJsn(0, userInput, paramsTokens[0][0].value);\r\n    }\r\n    return [true, sumValue];\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * kbConcat parses the function concat and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbConcat(funcName: any, params: any, _paramsTokens: any) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'concat') {\r\n    if (params && params.length > 0) {\r\n      let concatStr = '';\r\n      // tslint:disable-next-line: prefer-for-of\r\n      for (let i = 0; i < params.length; i += 1) {\r\n        if (params[i] == null) {\r\n          // continue;\r\n          // return [false, null];\r\n          concatStr += '';\r\n        } else {\r\n          concatStr += params[i];\r\n        }\r\n      }\r\n      return [true, concatStr];\r\n    }\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * kbSubstr parses the function substr and returns functionParseReturnObject\r\n * @param {any} funcName - the function name of the token\r\n * @param {any} params - calculated value of the params tokens\r\n * @param {any} _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbSubstr(funcName: any, params: any, _paramsTokens: any) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'substr') {\r\n    if (params && params.length > 0) {\r\n      if (params[0] && params[1] !== null) {\r\n        if (params[2] !== null && params[2] < params[0].length) {\r\n          const subStr = params[0].substring(params[1], params[2]);\r\n          return [true, subStr];\r\n        }\r\n        return [true, params[0].substring(params[1])];\r\n      }\r\n    }\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * outerScopedVariables is a utility method that returns same variable values based on outerscope\r\n * @param {any} variableName - variable name\r\n * @param {any} variableValue - variable value upto now\r\n * @param {any} tmpUserInput - variable key-value storage\r\n * @returns parsed scoped variable value\r\n */\r\nfunction outerScopedVariables(\r\n  variableName: any,\r\n  variableValue: any,\r\n  tmpUserInput: any\r\n): any {\r\n  // tslint:disable-next-line: forin\r\n  for (const key in tmpUserInput) {\r\n    const nodeNames = key.split('/');\r\n    const variableNameFromKey = nodeNames[nodeNames.length - 1];\r\n    if (variableNameFromKey === variableName) {\r\n      return tmpUserInput[key];\r\n    }\r\n    if (typeof tmpUserInput[key] === 'object') {\r\n      if (variableValue == null) {\r\n        variableValue = outerScopedVariables(\r\n          variableName,\r\n          variableValue,\r\n          tmpUserInput[key]\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return variableValue;\r\n}\r\n\r\n/**\r\n * parseMostClosestScopedVariable returns the closest scoped parsed variable value\r\n * @param {any} variableName - the variable name\r\n * @returns the parsed variable value\r\n */\r\nfunction parseMostClosestScopedVariable(variableName: any) {\r\n  const tmpHierchicalName = currentHierarchicalName.split('/');\r\n  let i;\r\n  const tmpUserInput = userInput;\r\n  let variableValue = null;\r\n  variableValue = outerScopedVariables(\r\n    variableName,\r\n    variableValue,\r\n    tmpUserInput\r\n  );\r\n  let parent = '';\r\n  for (i = 0; i < tmpHierchicalName.length - 1; ) {\r\n    // tslint:disable-next-line: triple-equals\r\n    if (tmpHierchicalName[i] == 'repeat') {\r\n      i += 1;\r\n      const index = parseInt(tmpHierchicalName[i + 1], 10);\r\n      variableValue = outerScopedVariables(\r\n        variableName,\r\n        variableValue,\r\n        tmpUserInput[parent + tmpHierchicalName[i]][index]\r\n      );\r\n      i += 2;\r\n    } else {\r\n      parent = parent + tmpHierchicalName[i + 1] + '/';\r\n      i += 2;\r\n    }\r\n  }\r\n  return variableValue;\r\n}\r\n\r\n/**\r\n * parseDot parses the dot\r\n * @returns parsed value\r\n */\r\nfunction parseDot() {\r\n  const tmpHierchicalName = currentHierarchicalName.split('/');\r\n  let i;\r\n  let tmpUserInput = userInput;\r\n  let parent = '';\r\n  const path = [];\r\n  for (i = 0; i < tmpHierchicalName.length - 1; ) {\r\n    // tslint:disable-next-line: triple-equals\r\n    if (tmpHierchicalName[i] == 'repeat') {\r\n      i += 1;\r\n      path.push(parent + tmpHierchicalName[i]);\r\n      path.push(parseInt(tmpHierchicalName[i + 1], 10));\r\n      parent = parent + tmpHierchicalName[i] + '/';\r\n      i += 2;\r\n    } else {\r\n      // path.push(parent + tmpHierchicalName[i + 1]);\r\n      parent = parent + tmpHierchicalName[i + 1] + '/';\r\n      i += 2;\r\n    }\r\n  }\r\n  path.push(parent + tmpHierchicalName[tmpHierchicalName.length - 1]);\r\n  tmpUserInput = userInput.getIn(path);\r\n  return tmpUserInput;\r\n}\r\n\r\n/**\r\n * parseLiterals parse a set of tokens, starting from number, string, decimal, variable, name, dot\r\n * @param {any} _tmpOutput - the parsed value of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the position of parser\r\n * @returns parserReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction parseLiterals(_tmpOutput: any, tokens: any, current: any) {\r\n  if (tokens[current].type === 'number') {\r\n    return [1, parseInt(tokens[current].value, 10)];\r\n  }\r\n  if (tokens[current].type === 'string') {\r\n    return [1, tokens[current].value];\r\n  }\r\n  if (tokens[current].type === 'decimal') {\r\n    return [1, parseFloat(tokens[current].value)];\r\n  }\r\n  if (tokens[current].type === 'variable') {\r\n    return [1, parseMostClosestScopedVariable(tokens[current].value)];\r\n  }\r\n  if (tokens[current].type === 'name') {\r\n    if (tokens[current].value.toLowerCase() === 'true') {\r\n      return [1, true];\r\n    }\r\n    if (tokens[current].value.toLowerCase() === 'false') {\r\n      return [1, false];\r\n    }\r\n    if (formItemProperty && tokens[current].value in formItemProperty) {\r\n      return [1, formItemProperty[tokens[current].value]];\r\n    }\r\n    return [1, null];\r\n  }\r\n  if (tokens[current].type === 'dot') {\r\n    return [1, parseDot()];\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseFuntion parses the functions present in expression\r\n * @param {any} _output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction parseFunction(_output: any, tokens: any, current: any) {\r\n  // precedence of functions\r\n  const possibleFunctions = [\r\n    kbSelected,\r\n    kbCountSelected,\r\n    kbChoice,\r\n    kbToday,\r\n    kbRegex,\r\n    kbInt,\r\n    kbCoalesce,\r\n    kbPosition,\r\n    kbSum,\r\n    kbConcat,\r\n    kbSubstr,\r\n    kbRound,\r\n  ];\r\n  if (tokens[current].type === 'function') {\r\n    const funcName = tokens[current].value;\r\n    const arrayOfParams: any = [];\r\n    const arrayOfOriginalTokens: any = [];\r\n    let i = 1;\r\n    if (\r\n      tokens[current + i].type === 'paren' &&\r\n      tokens[current + i].value === '('\r\n    ) {\r\n      const tmpQueue = [];\r\n      tmpQueue.push(1);\r\n      i += 1;\r\n      let tmpTokens = [];\r\n      while (tokens[current + i] && tmpQueue.length) {\r\n        tmpTokens.push(tokens[current + i]);\r\n        if (\r\n          tokens[current + i].type === 'paren' &&\r\n          tokens[current + i].value === ')'\r\n        ) {\r\n          tmpQueue.pop();\r\n        }\r\n        if (\r\n          tokens[current + i].type === 'paren' &&\r\n          tokens[current + i].value === '('\r\n        ) {\r\n          tmpQueue.push(1);\r\n        }\r\n        if (tokens[current + i].type === 'comma' && tmpQueue.length === 1) {\r\n          tmpTokens.pop();\r\n          const tmpVal = parser(null, tmpTokens, 0);\r\n          arrayOfParams.push(tmpVal);\r\n          arrayOfOriginalTokens.push(tmpTokens);\r\n          tmpTokens = [];\r\n        }\r\n        i += 1;\r\n      }\r\n      i -= 1;\r\n\r\n      if (\r\n        tokens[current + i].type === 'paren' &&\r\n        tokens[current + i].value === ')'\r\n      ) {\r\n        tmpTokens.pop();\r\n        const tmpVal = parser(null, tmpTokens, 0);\r\n        arrayOfParams.push(tmpVal);\r\n        arrayOfOriginalTokens.push(tmpTokens);\r\n        let parsedFn = false;\r\n        let parsedVal = null;\r\n        possibleFunctions.forEach(functionFn => {\r\n          if (parsedFn) {\r\n            return;\r\n          }\r\n          [parsedFn, parsedVal] = functionFn(\r\n            funcName,\r\n            arrayOfParams,\r\n            arrayOfOriginalTokens\r\n          );\r\n        });\r\n        if (parsedFn) {\r\n          return [i + 1, parsedVal];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseIf parses the if present in expression\r\n * @param {any} _output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction parseIf(_output: any, tokens: any, current: any) {\r\n  if (tokens[current].type === 'if') {\r\n    const arrayOfParams = [];\r\n    let i = 1;\r\n    if (\r\n      tokens[current + i].type === 'paren' &&\r\n      tokens[current + i].value === '('\r\n    ) {\r\n      const tmpQueue = [];\r\n      tmpQueue.push(1);\r\n      i += 1;\r\n      let tmpTokens = [];\r\n      while (tokens[current + i] && tmpQueue.length) {\r\n        tmpTokens.push(tokens[current + i]);\r\n        if (\r\n          tokens[current + i].type === 'paren' &&\r\n          tokens[current + i].value === ')'\r\n        ) {\r\n          tmpQueue.pop();\r\n        }\r\n        if (\r\n          tokens[current + i].type === 'paren' &&\r\n          tokens[current + i].value === '('\r\n        ) {\r\n          tmpQueue.push(1);\r\n        }\r\n        if (tokens[current + i].type === 'comma' && tmpQueue.length === 1) {\r\n          tmpTokens.pop();\r\n          const tmpVal = parser(null, tmpTokens, 0);\r\n          // console.log(tmpTokens, tmpVal);\r\n          arrayOfParams.push(tmpVal);\r\n          tmpTokens = [];\r\n        }\r\n        i += 1;\r\n      }\r\n      i -= 1;\r\n\r\n      if (\r\n        tokens[current + i].type === 'paren' &&\r\n        tokens[current + i].value === ')'\r\n      ) {\r\n        tmpTokens.pop();\r\n        const tmpVal = parser(null, tmpTokens, 0);\r\n        arrayOfParams.push(tmpVal);\r\n        if (arrayOfParams.length % 2 === 0) {\r\n          let j;\r\n          for (j = 0; j < arrayOfParams.length; j += 2) {\r\n            if (arrayOfParams[j]) {\r\n              return [i + 1, arrayOfParams[j + 1]];\r\n            }\r\n          }\r\n        } else {\r\n          let j;\r\n          for (j = 0; j < arrayOfParams.length - 1; j += 2) {\r\n            if (arrayOfParams[j]) {\r\n              return [i + 1, arrayOfParams[j + 1]];\r\n            }\r\n          }\r\n          return [i + 1, arrayOfParams[arrayOfParams.length - 1]];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseNot parses the not present in expression\r\n * @param {any} output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\nfunction parseNot(output: any, tokens: any, current: any) {\r\n  if (tokens[current].type === 'not') {\r\n    let tmpTokens;\r\n    let i = 1;\r\n    if (tokens[current + i].type === 'equal' && output != null) {\r\n      tmpTokens = [];\r\n      i += 1;\r\n      const terminatingTokens = ['and', 'or'];\r\n      while (\r\n        tokens[current + i] &&\r\n        terminatingTokens.indexOf(tokens[current + i].type) === -1\r\n      ) {\r\n        tmpTokens.push(tokens[current + i]);\r\n        i += 1;\r\n      }\r\n      let newOutput;\r\n      if (tmpTokens.length) {\r\n        newOutput = parser(null, tmpTokens, 0);\r\n        // tslint:disable-next-line: triple-equals\r\n        return [i, output != newOutput];\r\n      }\r\n    } else {\r\n      let parsed = false;\r\n      const possibleParsers = [\r\n        parseLiterals,\r\n        parseMinus,\r\n        parseParen,\r\n        parseFunction,\r\n      ];\r\n      let consumedTokens;\r\n      let newOutput;\r\n      possibleParsers.forEach(parserFn => {\r\n        if (parsed) {\r\n          return;\r\n        }\r\n        if (parserFn === parseMinus) {\r\n          [consumedTokens, newOutput] = parserFn(null, tokens, current + 1);\r\n        } else {\r\n          [consumedTokens, newOutput] = parserFn(output, tokens, current + 1);\r\n        }\r\n        if (consumedTokens !== 0) {\r\n          parsed = true;\r\n          i += consumedTokens;\r\n        }\r\n      });\r\n      if (parsed) {\r\n        return [i, !newOutput];\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseAnd parses the and present in expression\r\n * @param {any} output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\nfunction parseAnd(output: any, tokens: any, current: any): any {\r\n  if (tokens[current].type === 'and' && output != null) {\r\n    const tmpTokens = [];\r\n    let i = 1;\r\n    let newOutput = null;\r\n    if (\r\n      tokens[current + i].type === 'paren' &&\r\n      tokens[current + i].value === '('\r\n    ) {\r\n      let consumedChars;\r\n      [consumedChars, newOutput] = parseParen(null, tokens, current + i);\r\n      i += consumedChars;\r\n    } else {\r\n      const terminatingTokens = ['and', 'or'];\r\n      while (\r\n        tokens[current + i] &&\r\n        terminatingTokens.indexOf(tokens[current + i].type) === -1\r\n      ) {\r\n        tmpTokens.push(tokens[current + i]);\r\n        i += 1;\r\n      }\r\n      if (tmpTokens.length) {\r\n        newOutput = parser(null, tmpTokens, 0);\r\n      }\r\n    }\r\n    if (newOutput != null) {\r\n      newOutput = output && newOutput;\r\n      if (tokens[current + i] && tokens[current + i].type === 'and') {\r\n        let consumedChars = 0;\r\n        [consumedChars, newOutput] = parseAnd(newOutput, tokens, current + i);\r\n        i += consumedChars;\r\n      }\r\n      return [i, newOutput];\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseOr parses the or present in expression\r\n * @param {any} output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\nfunction parseOr(output: any, tokens: any, current: any) {\r\n  if (tokens[current].type === 'or' && output != null) {\r\n    const tmpTokens = [];\r\n    let i = 1;\r\n    let newOutput = null;\r\n    if (\r\n      tokens[current + i].type === 'paren' &&\r\n      tokens[current + i].value === '('\r\n    ) {\r\n      let consumedChars;\r\n      [consumedChars, newOutput] = parseParen(null, tokens, current + i);\r\n      i += consumedChars;\r\n    } else {\r\n      const terminatingTokens = ['and', 'or'];\r\n      while (\r\n        tokens[current + i] &&\r\n        terminatingTokens.indexOf(tokens[current + i].type) === -1\r\n      ) {\r\n        tmpTokens.push(tokens[current + i]);\r\n        i += 1;\r\n      }\r\n      if (tmpTokens.length) {\r\n        newOutput = parser(null, tmpTokens, 0);\r\n      }\r\n    }\r\n    if (newOutput != null || output != null) {\r\n      if (tokens[current + i] && tokens[current + i].type === 'and') {\r\n        let consumedChars = 0;\r\n        [consumedChars, newOutput] = parseAnd(newOutput, tokens, current + i);\r\n        i += consumedChars;\r\n      }\r\n      return [i, output || newOutput];\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseEqual parses the equal present in expression\r\n * @param {any} output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\nfunction parseEqual(output: any, tokens: any, current: any) {\r\n  if (tokens[current].type === 'equal' && output != null) {\r\n    const tmpTokens = [];\r\n    let i = 1;\r\n    const terminatingTokens = ['and', 'or'];\r\n    while (\r\n      tokens[current + i] &&\r\n      terminatingTokens.indexOf(tokens[current + i].type) === -1\r\n    ) {\r\n      tmpTokens.push(tokens[current + i]);\r\n      i += 1;\r\n    }\r\n    let newOutput;\r\n    if (tmpTokens.length) {\r\n      newOutput = parser(null, tmpTokens, 0);\r\n      // tslint:disable-next-line: triple-equals\r\n      return [i, output == newOutput];\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseLessThan parses the less than or equal present in expression\r\n * @param {any} output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\nfunction parseLessThan(output: any, tokens: any, current: any) {\r\n  if (tokens[current].type === 'lessThan' && output != null) {\r\n    let flagLessThanOrEqual = false;\r\n    const tmpTokens = [];\r\n    let i = 1;\r\n    if (tokens[current + i].type === 'equal') {\r\n      i += 1;\r\n      flagLessThanOrEqual = true;\r\n    }\r\n    const terminatingTokens = ['and', 'or'];\r\n    while (\r\n      tokens[current + i] &&\r\n      terminatingTokens.indexOf(tokens[current + i].type) === -1\r\n    ) {\r\n      tmpTokens.push(tokens[current + i]);\r\n      i += 1;\r\n    }\r\n    let newOutput;\r\n    if (tmpTokens.length) {\r\n      newOutput = parser(null, tmpTokens, 0);\r\n      if (flagLessThanOrEqual) {\r\n        return [i, output <= newOutput];\r\n      }\r\n      return [i, output < newOutput];\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseGreaterThan parses the greater than or equal present in expression\r\n * @param {any} output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\nfunction parseGreaterThan(output: any, tokens: any, current: any) {\r\n  if (tokens[current].type === 'greaterThan' && output != null) {\r\n    let flagGreaterThanOrEqual = false;\r\n    const tmpTokens = [];\r\n    let i = 1;\r\n    if (tokens[current + i].type === 'equal') {\r\n      i += 1;\r\n      flagGreaterThanOrEqual = true;\r\n    }\r\n    const terminatingTokens = ['and', 'or'];\r\n    while (\r\n      tokens[current + i] &&\r\n      terminatingTokens.indexOf(tokens[current + i].type) === -1\r\n    ) {\r\n      tmpTokens.push(tokens[current + i]);\r\n      i += 1;\r\n    }\r\n    let newOutput;\r\n    if (tmpTokens.length) {\r\n      newOutput = parser(null, tmpTokens, 0);\r\n\r\n      if (flagGreaterThanOrEqual) {\r\n        return [i, output >= newOutput];\r\n      }\r\n      return [i, output > newOutput];\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseParen parses the paren present in expression\r\n * @param {any} output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction parseParen(_output: any, tokens: any, current: any) {\r\n  if (tokens[current].type === 'paren' && tokens[current].value === '(') {\r\n    const tmpQueue = [];\r\n    tmpQueue.push(1);\r\n    let i = 1;\r\n    const tmpTokens = [];\r\n    while (tokens[current + i] && tmpQueue.length) {\r\n      tmpTokens.push(tokens[current + i]);\r\n      if (\r\n        tokens[current + i].type === 'paren' &&\r\n        tokens[current + i].value === ')'\r\n      ) {\r\n        tmpQueue.pop();\r\n      }\r\n      if (\r\n        tokens[current + i].type === 'paren' &&\r\n        tokens[current + i].value === '('\r\n      ) {\r\n        tmpQueue.push(1);\r\n      }\r\n      i += 1;\r\n    }\r\n    i -= 1;\r\n\r\n    if (\r\n      tokens[current + i].type === 'paren' &&\r\n      tokens[current + i].value === ')'\r\n    ) {\r\n      tmpTokens.pop();\r\n      const tmpVal = parser(null, tmpTokens, 0);\r\n      return [i + 1, tmpVal];\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseDivide parses the divide present in expression\r\n * @param {any} output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\nfunction parseDivide(output: any, tokens: any, current: any) {\r\n  if (output != null && tokens[current].type === 'divide') {\r\n    const possibleTokens = [\r\n      'number',\r\n      'decimal',\r\n      'minus',\r\n      'paren',\r\n      'variable',\r\n      'function',\r\n    ];\r\n    if (\r\n      current < tokens.length &&\r\n      possibleTokens.indexOf(tokens[current + 1].type) !== -1\r\n    ) {\r\n      let parsed = false;\r\n      let ct: any = null;\r\n      const possibleParsers = [\r\n        parseLiterals,\r\n        parseMinus,\r\n        parseParen,\r\n        parseFunction,\r\n      ];\r\n      possibleParsers.forEach(parserFn => {\r\n        if (parsed) {\r\n          return;\r\n        }\r\n        let consumedTokens;\r\n        let newOutput: any;\r\n        if (parserFn === parseMinus) {\r\n          [consumedTokens, newOutput] = parserFn(null, tokens, current + 1);\r\n        } else {\r\n          [consumedTokens, newOutput] = parserFn(output, tokens, current + 1);\r\n        }\r\n        if (consumedTokens !== 0) {\r\n          parsed = true;\r\n          consumedTokens += 1;\r\n          current += consumedTokens;\r\n          ct = consumedTokens;\r\n        }\r\n        const precedentParsers = [parseDivide, parseMultiply];\r\n        let preParsed = false;\r\n        let preOutput;\r\n        precedentParsers.forEach(preParseFn => {\r\n          if (preParsed) {\r\n            return;\r\n          }\r\n          if (tokens[current]) {\r\n            [consumedTokens, preOutput] = preParseFn(\r\n              newOutput,\r\n              tokens,\r\n              current\r\n            );\r\n            ct += consumedTokens;\r\n            if (consumedTokens !== 0) {\r\n              preParsed = true;\r\n              newOutput = preOutput;\r\n            }\r\n          }\r\n        });\r\n\r\n        if (newOutput != null) {\r\n          output /= newOutput;\r\n        }\r\n      });\r\n      if (parsed) {\r\n        return [ct, output];\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseMultiply parses the multiply present in expression\r\n * @param {any} output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\nfunction parseMultiply(output: any, tokens: any, current: any) {\r\n  if (output != null && tokens[current].type === 'multiply') {\r\n    const possibleTokens = [\r\n      'number',\r\n      'decimal',\r\n      'minus',\r\n      'paren',\r\n      'variable',\r\n      'function',\r\n    ];\r\n    if (\r\n      current < tokens.length &&\r\n      possibleTokens.indexOf(tokens[current + 1].type) !== -1\r\n    ) {\r\n      let parsed = false;\r\n      let ct: any = null;\r\n      const possibleParsers = [\r\n        parseLiterals,\r\n        parseMinus,\r\n        parseParen,\r\n        parseFunction,\r\n      ];\r\n      possibleParsers.forEach(parserFn => {\r\n        if (parsed) {\r\n          return;\r\n        }\r\n        let consumedTokens;\r\n        let newOutput: any;\r\n        if (parserFn === parseMinus) {\r\n          [consumedTokens, newOutput] = parserFn(null, tokens, current + 1);\r\n        } else {\r\n          [consumedTokens, newOutput] = parserFn(output, tokens, current + 1);\r\n        }\r\n        if (consumedTokens !== 0) {\r\n          parsed = true;\r\n          consumedTokens += 1;\r\n          current += consumedTokens;\r\n          ct = consumedTokens;\r\n        }\r\n        const precedentParsers = [parseDivide, parseMultiply];\r\n        let preParsed = false;\r\n        let preOutput;\r\n        precedentParsers.forEach(preParseFn => {\r\n          if (preParsed) {\r\n            return;\r\n          }\r\n          if (tokens[current]) {\r\n            [consumedTokens, preOutput] = preParseFn(\r\n              newOutput,\r\n              tokens,\r\n              current\r\n            );\r\n            ct += consumedTokens;\r\n            if (consumedTokens !== 0) {\r\n              preParsed = true;\r\n              newOutput = preOutput;\r\n            }\r\n          }\r\n        });\r\n\r\n        if (newOutput != null) {\r\n          output *= newOutput;\r\n        }\r\n      });\r\n      if (parsed) {\r\n        return [ct, output];\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parsePlus parses the addition present in expression\r\n * @param {any} output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\nfunction parsePlus(output: any, tokens: any, current: any) {\r\n  if (output != null && tokens[current].type === 'plus') {\r\n    const possibleTokens = [\r\n      'number',\r\n      'decimal',\r\n      'string',\r\n      'minus',\r\n      'paren',\r\n      'variable',\r\n      'function',\r\n    ];\r\n    if (\r\n      current < tokens.length &&\r\n      possibleTokens.indexOf(tokens[current + 1].type) !== -1\r\n    ) {\r\n      let parsed = false;\r\n      let ct: any = null;\r\n      const possibleParsers = [\r\n        parseLiterals,\r\n        parseMinus,\r\n        parseParen,\r\n        parseFunction,\r\n      ];\r\n      possibleParsers.forEach(parserFn => {\r\n        if (parsed) {\r\n          return;\r\n        }\r\n        let consumedTokens;\r\n        let newOutput: any;\r\n        if (parserFn === parseMinus) {\r\n          [consumedTokens, newOutput] = parserFn(null, tokens, current + 1);\r\n        } else {\r\n          [consumedTokens, newOutput] = parserFn(output, tokens, current + 1);\r\n        }\r\n        if (consumedTokens !== 0) {\r\n          parsed = true;\r\n          consumedTokens += 1;\r\n          current += consumedTokens;\r\n          ct = consumedTokens;\r\n          const precedentParsers = [parseDivide, parseMultiply];\r\n          let preParsed = false;\r\n          let preOutput;\r\n          precedentParsers.forEach(preParseFn => {\r\n            if (preParsed) {\r\n              return;\r\n            }\r\n            if (tokens[current]) {\r\n              [consumedTokens, preOutput] = preParseFn(\r\n                newOutput,\r\n                tokens,\r\n                current\r\n              );\r\n              ct += consumedTokens;\r\n              if (consumedTokens !== 0) {\r\n                preParsed = true;\r\n                newOutput = preOutput;\r\n              }\r\n            }\r\n          });\r\n        }\r\n        if (newOutput != null) {\r\n          output += newOutput;\r\n        }\r\n      });\r\n      if (parsed) {\r\n        return [ct, output];\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseMinus parses the minus present in expression\r\n * @param {any} output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\nfunction parseMinus(output: any, tokens: any, current: any) {\r\n  if (tokens[current].type === 'minus') {\r\n    const possibleTokens = [\r\n      'number',\r\n      'decimal',\r\n      'paren',\r\n      'variable',\r\n      'function',\r\n    ];\r\n    if (\r\n      current < tokens.length &&\r\n      possibleTokens.indexOf(tokens[current + 1].type) !== -1\r\n    ) {\r\n      let parsed = false;\r\n      let ct: any = null;\r\n      const possibleParsers = [parseLiterals, parseParen, parseFunction];\r\n      possibleParsers.forEach(parserFn => {\r\n        if (parsed) {\r\n          return;\r\n        }\r\n        let [consumedTokens, newOutput] = parserFn(output, tokens, current + 1);\r\n        if (consumedTokens !== 0) {\r\n          parsed = true;\r\n          consumedTokens += 1;\r\n          current += consumedTokens;\r\n          ct = consumedTokens;\r\n          const precedentParsers = [parseDivide, parseMultiply];\r\n          let preParsed = false;\r\n          let preOutput;\r\n          precedentParsers.forEach(preParseFn => {\r\n            if (preParsed) {\r\n              return;\r\n            }\r\n            if (tokens[current]) {\r\n              [consumedTokens, preOutput] = preParseFn(\r\n                newOutput,\r\n                tokens,\r\n                current\r\n              );\r\n              ct += consumedTokens;\r\n              if (consumedTokens !== 0) {\r\n                preParsed = true;\r\n                newOutput = preOutput;\r\n              }\r\n            }\r\n          });\r\n        }\r\n        if (newOutput) {\r\n          if (output) {\r\n            if (\r\n              Object.prototype.toString.call(newOutput) === '[object Date]' &&\r\n              Object.prototype.toString.call(output) === '[object Date]'\r\n            ) {\r\n              if (!isNaN(output.getTime()) && !isNaN(newOutput.getTime())) {\r\n                output -= newOutput;\r\n                output = Math.ceil(output / (1000 * 60 * 60 * 24));\r\n              } else {\r\n                output = NaN;\r\n              }\r\n            } else if (\r\n              Object.prototype.toString.call(newOutput) === '[object Date]' ||\r\n              Object.prototype.toString.call(output) === '[object Date]'\r\n            ) {\r\n              output = NaN;\r\n            } else if (newOutput === '' || output === '') {\r\n              output = NaN;\r\n            } else {\r\n              output -= newOutput;\r\n            }\r\n          } else {\r\n            if (Object.prototype.toString.call(newOutput) === '[object Date]') {\r\n              output = NaN;\r\n            } else {\r\n              output = -newOutput;\r\n            }\r\n          }\r\n        } else {\r\n          output = NaN;\r\n        }\r\n      });\r\n      if (parsed) {\r\n        if (output === '') {\r\n          output = NaN;\r\n        }\r\n        return [ct, output];\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n// precedence of the parser methods\r\nconst parsers = [\r\n  parseIf,\r\n  parseParen,\r\n  parseLiterals,\r\n  parseDivide,\r\n  parseMultiply,\r\n  parsePlus,\r\n  parseMinus,\r\n  parseLessThan,\r\n  parseGreaterThan,\r\n  parseEqual,\r\n  parseAnd,\r\n  parseOr,\r\n  parseNot,\r\n  parseFunction,\r\n];\r\n\r\n/**\r\n * the main parser that parses the series of tokens generated by the tokenizer.\r\n * Throws syntax error if not parsed\r\n * @param {any} leftOutput - the initial output or output of previous left side tokens\r\n * @param {any} tokens - the set or array of tokens need to be parsed\r\n * @param {any} pos - the start position of the parser\r\n * @returns parsed value of the set of tokens\r\n */\r\nfunction parser(leftOutput: any, tokens: any, pos: any) {\r\n  let current = pos;\r\n  let output = leftOutput;\r\n  while (current < tokens.length) {\r\n    let parsed = false;\r\n    parsers.forEach(parserFn => {\r\n      if (parsed) {\r\n        return;\r\n      }\r\n      const [consumedTokens, newOutput] = parserFn(output, tokens, current);\r\n      if (consumedTokens !== 0) {\r\n        parsed = true;\r\n        current += consumedTokens;\r\n      }\r\n      // console.log(current);\r\n      if (newOutput != null) {\r\n        output = newOutput;\r\n      }\r\n    });\r\n    if (!parsed) {\r\n      // throw new TypeError('syntax error');\r\n      // tslint:disable-next-line: no-console\r\n      console.log('syntax error');\r\n      // tslint:disable-next-line: no-console\r\n      console.log(actualExpression);\r\n      return null;\r\n    }\r\n  }\r\n  return output;\r\n}\r\n\r\n/**\r\n * odk wrapper evaluator, default method that will be exported, parses expressions\r\n * @param {any} expression - expression that needs to be evaluated\r\n * @param {any} tmpUserInput - the variable key-value json, (current user input json)\r\n * @param {any} tmpFormItemProperty - the name key-value json (current option list)\r\n * @param {any} tmpCurrentHierarchicalName - the node at which the evaluater is called\r\n * @returns evaluated value\r\n */\r\nexport default function evaluater(\r\n  expression: string,\r\n  tmpUserInput: any,\r\n  tmpFormItemProperty: any,\r\n  tmpCurrentHierarchicalName: string\r\n) {\r\n  if (!tmpUserInput) {\r\n    tmpUserInput = {};\r\n  }\r\n  currentHierarchicalName = tmpCurrentHierarchicalName;\r\n  actualExpression = expression;\r\n  userInput = tmpUserInput;\r\n  formItemProperty = tmpFormItemProperty;\r\n  return parser(null, tokenizer(expression), 0);\r\n}\r\n","import { FieldElement } from '../components/typeEvalutors/Base';\r\n\r\n/**\r\n * get the text from multilang obj based on language identifier,\r\n * @param {FieldElement} property - field multilang property or string\r\n * @return {string} - text value of the property based on language identifier, empty if not present\r\n */\r\nexport default function getTextFromProperty(\r\n  property: string | { [key: string]: string },\r\n  languageIdentifier: string\r\n): string {\r\n  if (typeof property === 'string') {\r\n    return property || '';\r\n  }\r\n  return property[languageIdentifier] || '';\r\n}\r\n\r\n/**\r\n * get the label text of the fieldElement\r\n * @param {FieldElement} fieldElement - the fieldElement Object\r\n * @return {string} - field label text\r\n */\r\nexport function getFieldLabelText(\r\n  fieldElement: FieldElement,\r\n  languageIdentifier: string\r\n) {\r\n  if (fieldElement.label) {\r\n    return getTextFromProperty(fieldElement.label, languageIdentifier);\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * get the label hint of the fieldElement\r\n * @param {FieldElement} fieldElement - the fieldElement Object\r\n * @return {string} - field label text\r\n */\r\nexport function getHintLabelText(\r\n  fieldElement: FieldElement,\r\n  languageIdentifier: string\r\n) {\r\n  if (fieldElement.hint) {\r\n    return getTextFromProperty(fieldElement.hint, languageIdentifier);\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * get the customised label text with previous input of the fieldElement\r\n * @param {any} evaluator - the getEvaluatedExpressionSelector Function\r\n * @param {string} labelText - the current Label Text\r\n * @param {string} fieldTreeName - the field tree name\r\n * @return {string | null} - field label text or null\r\n */\r\nexport function customizeLabelsWithPreviousInputs(\r\n  evaluator: any,\r\n  labelText: string,\r\n  fieldTreeName: string\r\n): string | null {\r\n  if (labelText === null || labelText === undefined) {\r\n    return null;\r\n  }\r\n  const placesOfCustomizationsRequiredList = labelText.match(/\\[(.*?)\\]/g);\r\n\r\n  // to calculate - i.e, [${departure_date_from_bangladesh}]\r\n  if (placesOfCustomizationsRequiredList) {\r\n    placesOfCustomizationsRequiredList.forEach(tmpPlace => {\r\n      tmpPlace = tmpPlace.substring(1, tmpPlace.length - 1);\r\n      const customizedName = evaluator(tmpPlace, fieldTreeName);\r\n      const tmp = '[' + tmpPlace + ']';\r\n      if (customizedName != null && customizedName !== undefined) {\r\n        labelText = labelText.replace(tmp, customizedName);\r\n      } else {\r\n        labelText = labelText.replace(tmp, '');\r\n      }\r\n    });\r\n  } else {\r\n    // to calculate - i.e, ${departure_date_from_bangladesh}\r\n    const matchList = labelText.match(/\\${(.*[^}])[\\}?]$/g);\r\n    if (matchList) {\r\n      matchList.forEach(tmpPlace => {\r\n        const customizedName = evaluator(tmpPlace, fieldTreeName);\r\n        if (customizedName != null && customizedName !== undefined) {\r\n          labelText = labelText.replace(tmpPlace, customizedName);\r\n        } else {\r\n          labelText = labelText.replace(tmpPlace, '');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return labelText;\r\n}\r\n\r\n/**\r\n * get the hint text of the fieldElement\r\n * @param {FieldElement} fieldElement - the fieldElement Object\r\n * @return {string} - field hint text\r\n */\r\nexport function getFieldHintText(\r\n  fieldElement: FieldElement,\r\n  languageIdentifier: string\r\n) {\r\n  if (fieldElement.hint) {\r\n    return getTextFromProperty(fieldElement.hint, languageIdentifier);\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * get the label text of the fieldElement constraint msg\r\n * @param {FieldElement} fieldElement - the fieldElement Object\r\n * @return {string} - constraint label text\r\n */\r\nexport function getConstraintLabelText(\r\n  fieldElement: FieldElement,\r\n  languageIdentifier: string\r\n) {\r\n  if (fieldElement.bind && fieldElement.bind['jr:constraintMsg']) {\r\n    return getTextFromProperty(\r\n      fieldElement.bind['jr:constraintMsg'],\r\n      languageIdentifier\r\n    );\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * get the boolean result depending on the expression\r\n * @param {string} - required string\r\n * @returns {boolean} - true if required, otherwise false\r\n */\r\nfunction requiredEvaluator(expression: string): boolean {\r\n  if (\r\n    expression.toLowerCase() === 'yes' ||\r\n    expression === '1' ||\r\n    expression.toLowerCase() === 'true'\r\n  ) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * get the boolean result of fieldElement string\r\n * @param fieldElement\r\n * @return {boolean} - boolean value by calculating fieldElement required properties\r\n */\r\nexport function isInputRequired(fieldElement: FieldElement): boolean {\r\n  let isRequired = false;\r\n  if (fieldElement.bind) {\r\n    if (fieldElement.bind.required) {\r\n      if (\r\n        typeof fieldElement.bind.required === 'string' &&\r\n        requiredEvaluator(fieldElement.bind.required)\r\n      ) {\r\n        isRequired = true;\r\n      }\r\n    }\r\n  }\r\n  return isRequired;\r\n}\r\n\r\n/** interface for EvaluateExpression\r\n * @param {string} expression - the expression that needs to be evaluated\r\n * @param {fieldTreeName} - the field Tree name\r\n * @returns {any} - evaluated value\r\n */\r\nexport type EvaluateExpression = (\r\n  expression: string,\r\n  fieldTreeName: string\r\n) => any;\r\n\r\n/** evaluates whether a component be relevant or not\r\n * @param {FieldElement} fieldElement - the expression that needs to be evaluated\r\n * @param {string} fieldParentTreeName- the field Parent Tree name\r\n * @param {EvaluateExpression} evaluateExpression- an handler to evaluate the relevant expression\r\n * @returns {boolean} - true if relevant; otherwise, false;\r\n */\r\nexport function shouldComponentBeRelevant(\r\n  fieldElement: FieldElement,\r\n  fieldParentTreeName: string,\r\n  evaluateExpression: EvaluateExpression\r\n): boolean {\r\n  if (fieldElement && fieldElement.bind && fieldElement.bind.relevant) {\r\n    const isRelevant = evaluateExpression(\r\n      fieldElement.bind.relevant,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    if (isRelevant) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n/** evaluates whether a component be readonly or not\r\n * @param {FieldElement} fieldElement - the expression that needs to be evaluated\r\n * @param {string} fieldParentTreeName- the field Parent Tree name\r\n * @param {EvaluateExpression} evaluateExpression- an handler to evaluate the readonly expression\r\n * @returns {boolean} - true if readonly; otherwise, false;\r\n */\r\nexport function shouldComponentBeReadOnly(\r\n  fieldElement: FieldElement,\r\n  fieldParentTreeName: string,\r\n  evaluateExpression: EvaluateExpression\r\n): boolean {\r\n  if (fieldElement && fieldElement.bind && fieldElement.bind.readonly) {\r\n    const isReadOnly = evaluateExpression(\r\n      fieldElement.bind.readonly,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    if (isReadOnly) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  return false;\r\n}\r\n\r\n/** evaluates whether the input violates constraint or not\r\n * @param {FieldElement} fieldElement - the constraint expression\r\n * @param {string} fieldParentTreeName- the field Parent Tree name\r\n * @param {EvaluateExpression} evaluateExpression- an handler to evaluate the expression\r\n * @returns {boolean} - true if violates; otherwise, false;\r\n */\r\nexport function shouldInputViolatesConstraint(\r\n  fieldElement: FieldElement,\r\n  fieldParentTreeName: string,\r\n  evaluateExpression: EvaluateExpression\r\n): boolean {\r\n  if (fieldElement && fieldElement.bind && fieldElement.bind.constraint) {\r\n    const isConstraintViolated = !evaluateExpression(\r\n      fieldElement.bind.constraint,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    if (isConstraintViolated) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  return false;\r\n}\r\n\r\n/** returns the new user input object after assigning value of passed fieldTreeName\r\n * @param {any} userInputObj - the current user input object\r\n * @param {string} fieldTreeName - the field Tree name\r\n * @param {any} fieldValue - the value that needs to be assigned\r\n * @returns {any} - the new user input object after assignment\r\n */\r\nexport function getModifiedUserInputObject(\r\n  userInputObj: any,\r\n  fieldTreeName: string,\r\n  fieldValue: any\r\n): any {\r\n  const treeNodes = fieldTreeName.split('/');\r\n  let i;\r\n  let parent = '';\r\n  let modifiedObj = userInputObj;\r\n  for (i = 0; i < treeNodes.length - 1; ) {\r\n    if (treeNodes[i] === 'repeat') {\r\n      i += 1;\r\n      if (parent + treeNodes[i] in modifiedObj) {\r\n        modifiedObj = modifiedObj[parent + treeNodes[i]];\r\n      } else {\r\n        modifiedObj[parent + treeNodes[i]] = [];\r\n        modifiedObj = modifiedObj[parent + treeNodes[i]];\r\n      }\r\n      const index = parseInt(treeNodes[i + 1], 10);\r\n      if (modifiedObj[index]) {\r\n        modifiedObj = modifiedObj[index];\r\n      } else {\r\n        modifiedObj[index] = {};\r\n        modifiedObj = modifiedObj[index];\r\n      }\r\n      parent = parent + treeNodes[i] + '/';\r\n      i += 2;\r\n    } else {\r\n      parent = parent + treeNodes[i + 1] + '/';\r\n      i += 2;\r\n    }\r\n  }\r\n  modifiedObj[parent + treeNodes[treeNodes.length - 1]] = fieldValue;\r\n  return userInputObj;\r\n}\r\n\r\n/** Returns the filtered option list Array For Repeat property\r\n * @param {any} userInputObj - the current option list object\r\n * @param {string} fieldTreeName - the field Tree name\r\n * @param {any} repeatIndex - the repeat index to remove\r\n * @returns {any} - the new user filredred repear array after assignment\r\n */\r\nexport function getModifiedOptionListForRepeat(\r\n  userInputObj: any,\r\n  fieldTreeName: string,\r\n  repeatIndex: number\r\n): any {\r\n  const filteredRepeatArray: any = [];\r\n  const optionListobj: any = userInputObj;\r\n\r\n  Object.entries(optionListobj).forEach(key => {\r\n    const keyNameOptionListobj: any = key[0];\r\n    const keyValueOptionListobj: any = key[1];\r\n    if (keyNameOptionListobj === fieldTreeName) {\r\n      const repeatIndexString: string = String(repeatIndex);\r\n      Object.entries(keyValueOptionListobj).map(keyRepeat => {\r\n        const keyNameRepeatObject: any = keyRepeat[0];\r\n        const keyValueRepeatValue: any = keyRepeat[1];\r\n        if (keyNameRepeatObject !== repeatIndexString) {\r\n          filteredRepeatArray.push(keyValueRepeatValue);\r\n        }\r\n      });\r\n    }\r\n  });\r\n  return filteredRepeatArray;\r\n}\r\n\r\n/** returns the value from the user input object\r\n * @param {any} userInputObj - the user input object\r\n * @param {string} fieldTreeName - the field Tree name\r\n * @returns {any} - the value, present in user input object, of the fieldTreeName\r\n */\r\nexport function getValueFromUserInputObj(\r\n  userInputObj: any,\r\n  fieldTreeName: string\r\n): any {\r\n  const treeNodes = fieldTreeName.split('/');\r\n  let i;\r\n  let parent = '';\r\n  let modifiedObj = userInputObj;\r\n  for (i = 0; i < treeNodes.length - 1; ) {\r\n    if (treeNodes[i] === 'repeat') {\r\n      i += 1;\r\n      if (parent + treeNodes[i] in modifiedObj) {\r\n        modifiedObj = modifiedObj[parent + treeNodes[i]];\r\n      } else {\r\n        modifiedObj[parent + treeNodes[i]] = [];\r\n      }\r\n      const index = parseInt(treeNodes[i + 1], 10);\r\n      if (modifiedObj[index]) {\r\n        modifiedObj = modifiedObj[index];\r\n      } else {\r\n        modifiedObj[index] = {};\r\n        modifiedObj = modifiedObj[index];\r\n      }\r\n      parent = parent + treeNodes[i] + '/';\r\n      i += 2;\r\n    } else {\r\n      parent = parent + treeNodes[i + 1] + '/';\r\n      i += 2;\r\n    }\r\n  }\r\n  return modifiedObj[parent + treeNodes[treeNodes.length - 1]];\r\n}\r\n\r\n/** evaluates whether the component is minimal or not\r\n * @param {FieldElement} fieldElement - the constraint expression\r\n * @returns {boolean} - true if minimal; otherwise, false;\r\n */\r\nexport function shouldComponentBeMinimal(fieldElement: FieldElement): boolean {\r\n  let isMinimal = false;\r\n  if (fieldElement.control && fieldElement.control.appearance) {\r\n    fieldElement.control.appearance.toString().includes('minimal')\r\n      ? (isMinimal = true)\r\n      : (isMinimal = false);\r\n  }\r\n  return isMinimal;\r\n}\r\n\r\n/** returns the new user input object after emptying the desired grouped values\r\n * @param {any} userInputObj - the current user input object\r\n * @param {string} groupTreeName - the group Tree name\r\n * @returns {any} - the new user input object after emptying the grouped values\r\n */\r\nexport function emptyGroupedValues(\r\n  userInputObj: any,\r\n  groupTreeName: string\r\n): any {\r\n  const treeNodes = groupTreeName.split('/');\r\n  let i;\r\n  let parent = '';\r\n  let modifiedObj = userInputObj;\r\n  for (i = 0; i < treeNodes.length - 1; ) {\r\n    if (treeNodes[i] === 'repeat') {\r\n      i += 1;\r\n      if (parent + treeNodes[i] in modifiedObj) {\r\n        modifiedObj = modifiedObj[parent + treeNodes[i]];\r\n      } else {\r\n        modifiedObj[parent + treeNodes[i]] = [];\r\n      }\r\n      const index = parseInt(treeNodes[i + 1], 10);\r\n      if (modifiedObj[index]) {\r\n        modifiedObj = modifiedObj[index];\r\n      } else {\r\n        modifiedObj[index] = {};\r\n        modifiedObj = modifiedObj[index];\r\n      }\r\n      parent = parent + treeNodes[i] + '/';\r\n      i += 2;\r\n    } else {\r\n      parent = parent + treeNodes[i + 1] + '/';\r\n      i += 2;\r\n    }\r\n  }\r\n  Object.keys(modifiedObj).forEach(objKey => {\r\n    if (objKey.startsWith(parent + treeNodes[treeNodes.length - 1])) {\r\n      modifiedObj[objKey] = null;\r\n    }\r\n  });\r\n  return userInputObj;\r\n}\r\n\r\n/** returns whether the grouped values are empty or not\r\n * @param {any} userInputObj - the current user input object\r\n * @param {string} groupTreeName - the group Tree name\r\n * @returns {any} - true if empty; otherwise, false\r\n */\r\nexport function checkGroupedValuesForEmpty(\r\n  userInputObj: any,\r\n  groupTreeName: string\r\n): any {\r\n  const treeNodes = groupTreeName.split('/');\r\n  let i;\r\n  let parent = '';\r\n  let modifiedObj = userInputObj;\r\n  for (i = 0; i < treeNodes.length - 1; ) {\r\n    if (treeNodes[i] === 'repeat') {\r\n      i += 1;\r\n      if (parent + treeNodes[i] in modifiedObj) {\r\n        modifiedObj = modifiedObj[parent + treeNodes[i]];\r\n      } else {\r\n        modifiedObj[parent + treeNodes[i]] = [];\r\n      }\r\n      const index = parseInt(treeNodes[i + 1], 10);\r\n      if (modifiedObj[index]) {\r\n        modifiedObj = modifiedObj[index];\r\n      } else {\r\n        modifiedObj[index] = {};\r\n        modifiedObj = modifiedObj[index];\r\n      }\r\n      parent = parent + treeNodes[i] + '/';\r\n      i += 2;\r\n    } else {\r\n      parent = parent + treeNodes[i + 1] + '/';\r\n      i += 2;\r\n    }\r\n  }\r\n  let isEmpty: boolean = true;\r\n  Object.keys(modifiedObj).forEach(objKey => {\r\n    if (objKey.startsWith(parent + treeNodes[treeNodes.length - 1])) {\r\n      if (\r\n        modifiedObj[objKey] !== null &&\r\n        modifiedObj[objKey] !== undefined &&\r\n        isEmpty\r\n      ) {\r\n        isEmpty = false;\r\n      }\r\n    }\r\n  });\r\n  return isEmpty;\r\n}\r\n","import { AnyAction, Store } from 'redux';\r\nimport SeamlessImmutable from 'seamless-immutable';\r\nimport evaluater from '../../utils/compiler';\r\nimport {\r\n  checkGroupedValuesForEmpty,\r\n  emptyGroupedValues,\r\n  getModifiedOptionListForRepeat,\r\n  getModifiedUserInputObject,\r\n  getValueFromUserInputObj,\r\n} from '../../utils/helpers';\r\n\r\n/** interface for the store state */\r\nexport interface FormState {\r\n  userInput: object;\r\n  errors: string[];\r\n  optionList: object;\r\n  isFormSubmitted: boolean;\r\n  mediaList: object;\r\n  language: string;\r\n}\r\n\r\n// actions\r\n\r\n/** FIELD_VALUE_ASSIGNED action type */\r\nexport const FIELD_VALUE_ASSIGNED = 'odk/reducer/form/FIELD_VALUE_ASSIGNED';\r\n/** OPTION_LIST_ASSIGNED action type */\r\nexport const OPTION_LIST_ASSIGNED = 'odk/reducer/form/OPTION_LIST_ASSIGNED';\r\n/** MEDIA_LIST_ASSIGNED action type */\r\nexport const MEDIA_LIST_ADDED = 'odk/reducer/form/MEDIA_LIST_ADDED';\r\n/** REMOVE_FROM_MEDIA_LIST action type */\r\nexport const REMOVE_FROM_MEDIA_LIST = 'odk/reducer/form/REMOVE_FROM_MEDIA_LIST';\r\n/** REMOVE_FROM_OPTION_LIST action type */\r\nexport const REMOVE_FROM_OPTION_LIST_REPEAT =\r\n  'odk/reducer/form/REMOVE_FROM_OPTION_LIST_REPEAT';\r\n/** RESET_STORE action type */\r\nexport const RESET_STORE = 'odk/reducer/form/RESET_STORE';\r\n/** ADD_ERROR_INPUT_ID action type */\r\nexport const ADD_ERROR_INPUT_ID = 'odk/reducer/form/ADD_ERROR_INPUT_ID';\r\n/** REMOVE_ERROR_INPUT_ID action type */\r\nexport const REMOVE_ERROR_INPUT_ID = 'odk/reducer/form/REMOVE_ERROR_INPUT_ID';\r\n/** EMPTY_GROUP_FIELDS */\r\nexport const EMPTY_GROUP_FIELDS = 'odk/reducer/form/EMPTY_GROUP_FIELDS';\r\n/** REMOVE_GROUP_FIELDS_FROM_ERRORS */\r\nexport const REMOVE_GROUP_FIELDS_FROM_ERRORS =\r\n  'odk/reducer/form/REMOVE_GROUP_FIELDS_FROM_ERRORS';\r\nexport const SET_USER_INPUT_OBJ = 'odk/reducer/form/SET_USER_INPUT_OBJ';\r\nexport const SET_FORM_SUBMIT_STATUS = 'odk/reducer/form/SET_FORM_SUBMIT_STATUS';\r\nexport const SET_LANGUAGE = 'odk/reducer/form/SET_LANGUAGE';\r\n\r\n/** interface for ASSIGN_FIELD_VALUE action */\r\nexport interface AssignFieldValueAction extends AnyAction {\r\n  fieldTreeName: string;\r\n  fieldValue: any;\r\n  type: typeof FIELD_VALUE_ASSIGNED;\r\n}\r\n\r\n/** interface for OPTION_LIST_ASSIGNED action */\r\nexport interface AssignOptionListAction extends AnyAction {\r\n  fieldTreeName: string;\r\n  optionList: any;\r\n  type: typeof OPTION_LIST_ASSIGNED;\r\n}\r\n\r\n/** interface for MEDIA_LIST_ADDED action */\r\nexport interface AddMediaListAction extends AnyAction {\r\n  mediaObject: any;\r\n  type: typeof MEDIA_LIST_ADDED;\r\n}\r\n\r\n/** interface for REMOVE_FROM_MEDIA_LIST action */\r\nexport interface RemoveFromMediaListAction extends AnyAction {\r\n  fieldTreeName: string;\r\n  mediaList: any;\r\n  type: typeof REMOVE_FROM_MEDIA_LIST;\r\n}\r\n\r\n/** interface for REMOVE_FROM_OPTION_LIST action */\r\nexport interface RemoveFromOptionList extends AnyAction {\r\n  fieldTreeName: string;\r\n  repeatIndex: number;\r\n  type: typeof REMOVE_FROM_OPTION_LIST_REPEAT;\r\n}\r\n\r\n/** interface for RESET_STORE action */\r\nexport interface ResetStoreAction extends AnyAction {\r\n  type: typeof RESET_STORE;\r\n}\r\n\r\n/** interface for ADD_ERROR_INPUT_ID action */\r\nexport interface AddErrorInputId extends AnyAction {\r\n  fieldTreeName: string;\r\n  type: typeof ADD_ERROR_INPUT_ID;\r\n}\r\n\r\n/** interface for REMOVE_ERROR_INPUT_ID action */\r\nexport interface RemoveErrorInputId extends AnyAction {\r\n  fieldTreeName: string;\r\n  type: typeof REMOVE_ERROR_INPUT_ID;\r\n}\r\n\r\n/** interface for EMPTY_GROUP_FIELDS action */\r\nexport interface EmptyGroupFields extends AnyAction {\r\n  fieldTreeName: string;\r\n  type: typeof EMPTY_GROUP_FIELDS;\r\n}\r\n\r\n/** interface for REMOVE_GROUP_FIELDS_FROM_ERRORS action */\r\nexport interface RemoveGroupFieldsFromErrors extends AnyAction {\r\n  fieldTreeName: string;\r\n  type: typeof REMOVE_GROUP_FIELDS_FROM_ERRORS;\r\n}\r\n\r\n/** interface for SET_USER_INPUT_OBJ action */\r\nexport interface SetUserInputObj extends AnyAction {\r\n  userInputObj: any;\r\n  type: typeof SET_USER_INPUT_OBJ;\r\n}\r\n\r\n/** interface for SET_LANGUAGE action */\r\nexport interface SetLanguage extends AnyAction {\r\n  language: string;\r\n  type: typeof SET_LANGUAGE;\r\n}\r\n\r\n/** interface for SET_FORM_SUBMIT_STATUS action */\r\nexport interface SetFormSubmitStatus extends AnyAction {\r\n  isFormSubmitted: boolean;\r\n  type: typeof SET_FORM_SUBMIT_STATUS;\r\n}\r\n\r\n/** Assigns the value to the proper field name\r\n * @param {string} fieldTreeName - the extended field name\r\n * @param {any} fieldValue - the value that will be assigned\r\n * @return {AssignFieldValueAction} - an action to assign value to a field in the redux store\r\n */\r\nexport const assignFieldValueAction = (\r\n  fieldTreeName: string,\r\n  fieldValue: any\r\n): AssignFieldValueAction => ({\r\n  fieldTreeName,\r\n  fieldValue,\r\n  type: FIELD_VALUE_ASSIGNED,\r\n});\r\n\r\n/** Assigns option list to the proper field name\r\n * @param {string} fieldTreeName - the extended field name\r\n * @param {any} optionList - the option list that will be assigned\r\n * @return {AssignOptionListAction} - an action to assign option List to a field in the redux store\r\n */\r\nexport const assignOptionListAction = (\r\n  fieldTreeName: string,\r\n  optionList: any\r\n): AssignOptionListAction => ({\r\n  fieldTreeName,\r\n  optionList,\r\n  type: OPTION_LIST_ASSIGNED,\r\n});\r\n\r\n/** Remove option list from Redux Store\r\n * @param fieldTreeName - the field tree name\r\n * @returns {RemoveFromOptionList} - an action to remove input id for errors\r\n */\r\nexport const RemoveFromOptionList = (\r\n  fieldTreeName: string,\r\n  repeatIndex: number\r\n): RemoveFromOptionList => ({\r\n  fieldTreeName,\r\n  repeatIndex,\r\n  type: REMOVE_FROM_OPTION_LIST_REPEAT,\r\n});\r\n\r\n/** Adds media object to the proper field name\r\n * @param {any} mediaObject - the media object that will be added\r\n * @return {AddMediaListAction} - an action to assign media object to a field in the redux store\r\n */\r\nexport const addMediaListAction = (mediaObject: any): AddMediaListAction => ({\r\n  mediaObject,\r\n  type: MEDIA_LIST_ADDED,\r\n});\r\n\r\n/** Remove a media item in option list from Redux Store\r\n * @param fieldTreeName - the field tree name\r\n * @returns {RemoveFromMediaListAction} - an action to remove media info from redux store\r\n */\r\nexport const removeFromMediaListAction = (\r\n  fieldTreeName: string,\r\n  mediaList: any\r\n): RemoveFromMediaListAction => ({\r\n  fieldTreeName,\r\n  mediaList,\r\n  type: REMOVE_FROM_MEDIA_LIST,\r\n});\r\n\r\n/** Resets the redux store state to initial state\r\n * @return {ResetStoreAction} - an action to reset the redux store state\r\n */\r\nexport const resetStoreAction = (): ResetStoreAction => ({\r\n  type: RESET_STORE,\r\n});\r\n\r\n/** add the field tree name as error id to store in redux store that violates constraints\r\n * @param fieldTreeName - the field tree name\r\n * @returns {AddErrorInputId} - an action to add input id for errors\r\n */\r\nexport const addErrorInputId = (fieldTreeName: string): AddErrorInputId => ({\r\n  fieldTreeName,\r\n  type: ADD_ERROR_INPUT_ID,\r\n});\r\n\r\n/** remove the field tree name as error id to store in redux store that violates constraints\r\n * @param fieldTreeName - the field tree name\r\n * @returns {RemoveErrorInputId} - an action to remove input id for errors\r\n */\r\nexport const removeErrorInputId = (\r\n  fieldTreeName: string\r\n): RemoveErrorInputId => ({\r\n  fieldTreeName,\r\n  type: REMOVE_ERROR_INPUT_ID,\r\n});\r\n\r\n/** empties the values of the fields of the group\r\n * @param fieldTreeName - the group field tree name\r\n * @returns {RemoveErrorInputId} - an action to empty the group field values\r\n */\r\nexport const emptyGroupFields = (fieldTreeName: string): EmptyGroupFields => ({\r\n  fieldTreeName,\r\n  type: EMPTY_GROUP_FIELDS,\r\n});\r\n\r\n/** removes the group field names from store errors obj\r\n * @param {string} fieldTreeName - the group field tree name\r\n * @returns {RemoveGroupFieldsFromErrors} - an action to remove group field names from errors\r\n */\r\nexport const removeGroupFieldsFromErrors = (\r\n  fieldTreeName: string\r\n): RemoveGroupFieldsFromErrors => ({\r\n  fieldTreeName,\r\n  type: REMOVE_GROUP_FIELDS_FROM_ERRORS,\r\n});\r\n\r\n/** sets the user input object to redux store\r\n * @param {any} userInputObj - the user input obj\r\n * @returns {SetUserInputObj} - an action to set user input to redux store\r\n */\r\nexport const setUserInputObj = (userInputObj: any): SetUserInputObj => ({\r\n  type: SET_USER_INPUT_OBJ,\r\n  userInputObj,\r\n});\r\n\r\n/** sets the language to redux store\r\n * @param {string} language - the user input obj\r\n * @returns {SetLanguage} - an action to set user input to redux store\r\n */\r\nexport const setUserLanguage = (language: string): SetLanguage => ({\r\n  type: SET_LANGUAGE,\r\n  language,\r\n});\r\n\r\n/** sets the form submit info to redux store\r\n * @param {boolean} isFormSubmitted - the form submit info variable\r\n * @returns {SetFormSubmitInfo} - an action to set form submit info to redux store\r\n */\r\nexport const setFormSubmitStatus = (\r\n  isFormSubmitted: boolean\r\n): SetFormSubmitStatus => ({\r\n  isFormSubmitted,\r\n  type: SET_FORM_SUBMIT_STATUS,\r\n});\r\n\r\n/** Create type for forms reducer actions */\r\nexport type FormActionTypes =\r\n  | AssignFieldValueAction\r\n  | AssignOptionListAction\r\n  | RemoveFromOptionList\r\n  | AddMediaListAction\r\n  | RemoveFromMediaListAction\r\n  | ResetStoreAction\r\n  | AddErrorInputId\r\n  | RemoveErrorInputId\r\n  | EmptyGroupFields\r\n  | RemoveGroupFieldsFromErrors\r\n  | SetUserInputObj\r\n  | SetFormSubmitStatus\r\n  | AnyAction;\r\n\r\n/** Create an immutable form state */\r\nexport type ImmutableFormState = SeamlessImmutable.ImmutableObject<FormState>;\r\n\r\n/** initial form state */\r\nexport const initialState: ImmutableFormState = SeamlessImmutable({\r\n  errors: [],\r\n  isFormSubmitted: false,\r\n  mediaList: {},\r\n  optionList: {},\r\n  userInput: {},\r\n  language: 'English'\r\n});\r\n\r\n/** the form reducer function */\r\nexport default function reducer(\r\n  state: ImmutableFormState = initialState,\r\n  action: FormActionTypes\r\n): ImmutableFormState {\r\n  switch (action.type) {\r\n    case FIELD_VALUE_ASSIGNED:\r\n      const modifiedUserInputObj = getModifiedUserInputObject(\r\n        state.getIn(['userInput']).asMutable({ deep: true }),\r\n        action.fieldTreeName,\r\n        action.fieldValue\r\n      );\r\n      const stateM = state.asMutable({ deep: true });\r\n      return SeamlessImmutable({ ...stateM, userInput: modifiedUserInputObj });\r\n\r\n    case OPTION_LIST_ASSIGNED:\r\n      const modifiedUserInputObjList = getModifiedUserInputObject(\r\n        state.getIn(['optionList']).asMutable({ deep: true }),\r\n        action.fieldTreeName,\r\n        action.optionList != null ? { ...action.optionList } : null\r\n      );\r\n      const newState = state.asMutable({ deep: true });\r\n      return SeamlessImmutable({\r\n        ...newState,\r\n        optionList: modifiedUserInputObjList,\r\n      });\r\n\r\n    case REMOVE_FROM_OPTION_LIST_REPEAT:\r\n      let filteredRepeatArray: any = [];\r\n      if (\r\n        state\r\n          .getIn(['optionList'])\r\n          .asMutable({ deep: true })\r\n          .hasOwnProperty(action.fieldTreeName)\r\n      ) {\r\n        filteredRepeatArray = [\r\n          ...getModifiedOptionListForRepeat(\r\n            state.getIn(['optionList']).asMutable({ deep: true }),\r\n            action.fieldTreeName,\r\n            action.repeatIndex\r\n          ),\r\n        ];\r\n        const modifiedOptionListRepeat = getModifiedUserInputObject(\r\n          state.getIn(['optionList']).asMutable({ deep: true }),\r\n          action.fieldTreeName,\r\n          { ...filteredRepeatArray }\r\n        );\r\n        const newStateForRepeat = state.asMutable({ deep: true });\r\n        return SeamlessImmutable({\r\n          ...newStateForRepeat,\r\n          optionList: modifiedOptionListRepeat,\r\n        });\r\n      }\r\n      return state;\r\n\r\n    case MEDIA_LIST_ADDED:\r\n      const modifiedMediaList = {\r\n        ...state.getIn(['mediaList']).asMutable({ deep: true }),\r\n        [action.mediaObject.name]: action.mediaObject,\r\n      };\r\n      const newMediaState = state.asMutable({ deep: true });\r\n      return SeamlessImmutable({\r\n        ...newMediaState,\r\n        mediaList: modifiedMediaList,\r\n      });\r\n\r\n    case REMOVE_FROM_MEDIA_LIST:\r\n      if (\r\n        state\r\n          .getIn(['mediaList'])\r\n          .asMutable({ deep: true })\r\n          .hasOwnProperty(action.fieldTreeName)\r\n      ) {\r\n        // const tempMediaState = state.asMutable({ deep: true });\r\n        // return SeamlessImmutable({\r\n        //   ...tempMediaState,\r\n        //   mediaList: modifiedMediaObject,\r\n        // });\r\n      }\r\n      return state;\r\n\r\n    case RESET_STORE:\r\n      return initialState;\r\n\r\n    case ADD_ERROR_INPUT_ID:\r\n      if (!state.errors.includes(action.fieldTreeName)) {\r\n        return state.updateIn(['errors'], arr =>\r\n          arr.concat([action.fieldTreeName])\r\n        );\r\n      }\r\n      return state;\r\n\r\n    case REMOVE_ERROR_INPUT_ID:\r\n      if (state.errors.includes(action.fieldTreeName)) {\r\n        return state.updateIn(['errors'], arr =>\r\n          arr.filter(elm => elm !== action.fieldTreeName)\r\n        );\r\n      }\r\n      return state;\r\n\r\n    case EMPTY_GROUP_FIELDS:\r\n      const mUserInputObj = emptyGroupedValues(\r\n        state.getIn(['userInput']).asMutable({ deep: true }),\r\n        action.fieldTreeName\r\n      );\r\n      const mState = state.asMutable({ deep: true });\r\n      return SeamlessImmutable({ ...mState, userInput: mUserInputObj });\r\n\r\n    case REMOVE_GROUP_FIELDS_FROM_ERRORS:\r\n      return state.updateIn(['errors'], arr =>\r\n        arr.filter(elm => !elm.startsWith(action.fieldTreeName))\r\n      );\r\n\r\n    case SET_USER_INPUT_OBJ:\r\n      return SeamlessImmutable({\r\n        ...state,\r\n        userInput: (action as any).userInputObj,\r\n      });\r\n\r\n    case SET_FORM_SUBMIT_STATUS:\r\n      return SeamlessImmutable({\r\n        ...state,\r\n        isFormSubmitted: (action as any).isFormSubmitted,\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// selectors\r\n\r\n/** get the value by their respective element tree name\r\n * @param {Partial<Store>} state - the redux store\r\n * @param {string} fieldTreeName - the hierchical tree name of the field\r\n * @return {any | null} value if the element name is found else null\r\n */\r\nexport function getFieldValue(\r\n  state: Partial<Store>,\r\n  fieldTreeName: string\r\n): any {\r\n  return getValueFromUserInputObj(\r\n    (state as any) != undefined && (state as any).getIn(['userInput']).asMutable({ deep: true }),\r\n    fieldTreeName\r\n  );\r\n}\r\n\r\n/** get option list by their respective element tree name\r\n * @param {Partial<Store>} state - the redux store\r\n * @param {string} fieldTreeName - the hierchical tree name of the field\r\n * @return {any | null} value if the element name is found else null\r\n */\r\nexport function getOptionList(\r\n  state: Partial<Store>,\r\n  fieldTreeName: string\r\n): any {\r\n  return getValueFromUserInputObj(\r\n    (state as any) != undefined && (state as any).getIn(['optionList']).asMutable({ deep: true }),\r\n    fieldTreeName\r\n  );\r\n}\r\n\r\n/** get the value of the evaluated expression\r\n * @param {Partial<Store>} state - the redux store\r\n * @param {string} expression - the expression that needs to be evaluated\r\n * @param {string} fieldTreeName - the hierchical tree name of the field\r\n * @return {any | null} - the evaluated value or null if syntax error\r\n */\r\nexport function getEvaluatedExpression(\r\n  state: Partial<Store>,\r\n  expression: string,\r\n  fieldTreeName: string\r\n): any {\r\n  return evaluater(expression, (state as any) != undefined && (state as any).userInput, null, fieldTreeName);\r\n}\r\n\r\n/** get the value of the evaluated expression for Select One and Select All\r\n * @param {Partial<Store>} state - the redux store\r\n * @param {string} expression - the expression that needs to be evaluated\r\n * @param {any} options - the options that needs to be evaluated\r\n * @param {string} fieldTreeName - the hierchical tree name of the field\r\n * @return {any | null} - the evaluated value or null if syntax error\r\n */\r\nexport function getEvaluatedExpressionForSelect(\r\n  state: Partial<Store>,\r\n  expression: string,\r\n  options: any,\r\n  fieldTreeName: string\r\n): any {\r\n  return evaluater(\r\n    expression,\r\n    (state as any).userInput,\r\n    options,\r\n    fieldTreeName\r\n  );\r\n}\r\n\r\n/** check if the field element is present in the store\r\n * @param {Partial<Store>} state - the redux store\r\n * @param {string} fieldTreeName - the hierchical tree name of the field\r\n * @return {boolean} true if present; otherwise, false\r\n */\r\nexport function isPresentInError(\r\n  state: Partial<Store>,\r\n  fieldTreeName: string\r\n): any {\r\n  return  (state as any) != undefined && (state as any).errors.includes(fieldTreeName);\r\n}\r\n\r\n/** check if the field elements under group are empty or not\r\n * @param {Partial<Store>} state - the redux store\r\n * @param {string} fieldTreeName - the hierchical tree name of the group field\r\n * @return {boolean} true if empty; otherwise, false\r\n */\r\nexport function isGroupFieldsEmpty(\r\n  state: Partial<Store>,\r\n  fieldTreeName: string\r\n): any {\r\n  return checkGroupedValuesForEmpty( (state as any) != undefined && (state as any).userInput, fieldTreeName);\r\n}\r\n\r\n/** check if the field elements under group are present in errors or not\r\n * @param {Partial<Store>} state - the redux store\r\n * @param {string} fieldTreeName - the hierchical tree name of the group field\r\n * @return {boolean} true if present; otherwise, false\r\n */\r\nexport function isErrorsIncludeGroupFields(\r\n  state: Partial<Store>,\r\n  fieldTreeName: string\r\n): any {\r\n  let isPresent = false;\r\n  (state as any).errors.forEach((fTName: string) => {\r\n    if (fTName.startsWith(fieldTreeName) && !isPresent) {\r\n      isPresent = true;\r\n    }\r\n  });\r\n  return isPresent;\r\n}\r\n\r\n/** check if the errors array in store empty or not\r\n * @param {Partial<Store>} state - the redux store\r\n * @return {boolean} true if empty; otherwise, false\r\n */\r\nexport function isErrorsArrayEmpty(state: Partial<Store>): any {\r\n  return (state as any) != undefined && (state as any).errors && (state as any).errors.length ? false : true;\r\n}\r\n\r\n/** get the userInput object from store\r\n * @param {Partial<Store>} state - the redux store\r\n * @return {boolean} the current userInputObject\r\n */\r\nexport function getUserInputFromStore(state: Partial<Store>): any {\r\n  return (state as any) != undefined && (state as any).getIn(['userInput']).asMutable({ deep: true });\r\n}\r\n\r\n/** get the userInput object from store\r\n * @param {Partial<Store>} state - the redux store\r\n * @return {boolean} the current isFormSubmitted\r\n */\r\nexport function getFormSubmitStatus(state: Partial<Store>): any {\r\n  return (state as any) != undefined && (state as any).isFormSubmitted;\r\n}\r\n\r\n/** get the file if present in store\r\n * @param {Partial<Store>} state - the redux store\r\n * @param {string} fileName - the fileName\r\n * @return {any} - the file or null\r\n */\r\nexport function getFileObject(state: Partial<Store>, fileName: string): any {\r\n  const fileObject = (state as any).getIn(['mediaList', fileName]);\r\n  return fileObject ? (state as any).getIn(['mediaList', fileName]) : null;\r\n}\r\n\r\n/** get all the files\r\n * @param {Partial<Store>} state - the redux store\r\n * @return {any} - the files or empty object\r\n */\r\nexport function getAllFileObjects(state: Partial<Store>): any {\r\n  return (state as any) != undefined && (state as any).getIn(['mediaList']);\r\n}\r\n","import { createStyles, Theme } from '@material-ui/core';\n\nconst GroupStyle = (theme: Theme) =>\n  createStyles({\n    root: {\n      color: `${theme.palette.secondary.light} !important`,\n      '&.MuiAccordionSummary-root': {\n        borderTop: `5px solid ${theme.palette.primary.dark}`,\n        color: `${theme.palette.primary.dark} !important`,\n        '&:hover': {\n          backgroundColor: theme.palette.primary.dark,\n          color: theme.palette.secondary.light,\n        },\n        '&.Mui-expanded': {\n          backgroundColor: theme.palette.primary.dark,\n          color: theme.palette.secondary.light,\n        },\n      },\n    },\n    toolbarIcon: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n      '& button': {\n        color: '#FFF',\n      },\n    },\n    drawerPaperClose: {\n      overflowX: 'hidden',\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9),\n      },\n      background: theme.palette.primary.dark,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    listItem: {\n      width: '94%',\n      background: theme.palette.primary.main,\n      color: '#FFF',\n      marginTop: '2px',\n      marginLeft: '8px',\n      marginRight: '2px',\n      borderRadius: '3px',\n      '&:hover': {\n        background: theme.palette.primary.light,\n      },\n    },\n    listItemIcon: {\n      color: '#FFF',\n    },\n    listItemActive: {\n      width: '94%',\n      background: theme.palette.primary.light,\n      color: '#FFF',\n      marginTop: '2px',\n      marginLeft: '8px',\n      marginRight: '2px',\n      borderRadius: '3px',\n      '&:hover': {\n        background: theme.palette.primary.light,\n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n      color: '#FFF',\n    },\n    navlogo: {\n      width: '40%',\n      margin: '0 auto',\n      padding: 3,\n      backgroundColor: '#FFF',\n      borderRadius: 5,\n    },\n    listParent: {\n      color: theme.palette.common.white,\n      '&.MuiListItem-root': {\n        color: theme.palette.common.white,\n        '&.Mui-selected': { color: theme.palette.common.white, backgroundColor: theme.palette.primary.main },\n        '&:hover': {\n          color: theme.palette.common.white,\n          backgroundColor: theme.palette.primary.dark,\n        },\n      },\n    },\n    drawerClose: {\n      overflowX: 'hidden',\n      transition: theme.transitions.create('width', {\n        duration: theme.transitions.duration.leavingScreen,\n        easing: theme.transitions.easing.sharp,\n      }),\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(7) + 1,\n      },\n      background: theme.palette.primary.dark,\n    },\n    drawerOpen: {\n      '&:hover': {\n        overflowY: 'auto',\n      },\n      overflowY: 'hidden',\n      transition: theme.transitions.create('width', {\n        duration: theme.transitions.duration.enteringScreen,\n        easing: theme.transitions.easing.sharp,\n      }),\n    },\n  });\n\nexport default GroupStyle;\n","import { Accordion, AccordionDetails, AccordionSummary } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormGroup, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport GroupTypeEvaluator from '../../../../components/typeEvalutors/Group';\r\nimport {\r\n  emptyGroupFields,\r\n  getEvaluatedExpression,\r\n  isErrorsIncludeGroupFields,\r\n  isGroupFieldsEmpty,\r\n  removeGroupFieldsFromErrors,\r\n} from '../../../../store/ducks/formState';\r\nimport {\r\n  getFieldLabelText,\r\n  shouldComponentBeRelevant,\r\n} from '../../../../utils/helpers';\r\nimport GroupStyle from './styles';\r\n\r\nexport interface GroupProps {\r\n  choices: any;\r\n  csvList: any;\r\n  defaultLanguage: string;\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: string;\r\n  getEvaluatedExpressionSelector: any;\r\n  isComponentRender: boolean;\r\n  isGroupFieldsEmptySelector: any;\r\n  isErrorsIncludeGroupFieldsSelector: any;\r\n  emptyGroupFieldsActionCreator: typeof emptyGroupFields;\r\n  removeGroupFieldsFromErrorsActionCreator: typeof removeGroupFieldsFromErrors;\r\n}\r\n\r\nfunction Group(props: GroupProps) {\r\n  const {\r\n    choices,\r\n    csvList,\r\n    fieldElement,\r\n    fieldParentTreeName,\r\n    defaultLanguage,\r\n    isComponentRender,\r\n  } = props;\r\n  const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n  let isAppearanceApplicable = false;\r\n  if (fieldElement.control && fieldElement.control.appearance) {\r\n    if (/^w(\\d+)\\b/i.test(fieldElement.control.appearance)) {\r\n      isAppearanceApplicable = true;\r\n    }\r\n  }\r\n  const theme = useTheme();\r\n  const useStyles = makeStyles(GroupStyle(theme));\r\n  const classNames = useStyles();\r\n  if (\r\n    isComponentRender\r\n    && (fieldElement.control.bodyless\r\n      ? fieldElement.control.bodyless === false\r\n      : true)\r\n  ) {\r\n    return (\r\n      <Accordion defaultExpanded>\r\n        <AccordionSummary\r\n          className={classNames.root}\r\n          expandIcon={<ExpandMoreIcon />}\r\n        >\r\n          <Typography>{fieldLabel}</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <FormGroup>\r\n            <Label className=\"groupLabel\">{fieldLabel}</Label>\r\n            {fieldElement.children && (\r\n              <GroupTypeEvaluator\r\n                choices={choices}\r\n                fieldElements={fieldElement.children}\r\n                fieldParentTreeName={`${fieldParentTreeName}group/${fieldElement.name}/`}\r\n                defaultLanguage={defaultLanguage}\r\n                csvList={csvList}\r\n                isAppearanceApplicable={isAppearanceApplicable}\r\n              />\r\n            )}\r\n          </FormGroup>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    );\r\n  }\r\n\r\n  if (\r\n    props.isErrorsIncludeGroupFieldsSelector(\r\n      `${fieldParentTreeName}group/${fieldElement.name}/`\r\n    )\r\n  ) {\r\n    props.removeGroupFieldsFromErrorsActionCreator(\r\n      `${fieldParentTreeName}group/${fieldElement.name}/`\r\n    );\r\n  }\r\n  if (\r\n    !props.isGroupFieldsEmptySelector(fieldParentTreeName + fieldElement.name)\r\n  ) {\r\n    props.emptyGroupFieldsActionCreator(\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  getEvaluatedExpressionSelector: any;\r\n  isComponentRender: boolean;\r\n  isGroupFieldsEmptySelector: any;\r\n  isErrorsIncludeGroupFieldsSelector: any;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  defaultLanguage: string;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isGroupFieldsEmptySelector = (fieldTreeName: string) =>\r\n    isGroupFieldsEmpty(state, fieldTreeName);\r\n  const isErrorsIncludeGroupFieldsSelector = (fieldTreeName: string) =>\r\n    isErrorsIncludeGroupFields(state, fieldTreeName);\r\n  const result = {\r\n    getEvaluatedExpressionSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isErrorsIncludeGroupFieldsSelector,\r\n    isGroupFieldsEmptySelector,\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  emptyGroupFieldsActionCreator: emptyGroupFields,\r\n  removeGroupFieldsFromErrorsActionCreator: removeGroupFieldsFromErrors,\r\n};\r\n\r\n/** connect Group component to the redux store */\r\nconst ConnectedGroup = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Group);\r\n\r\nexport default ConnectedGroup;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../../components/typeEvalutors/Base';\r\nimport GroupTypeEvaluator from '../../../../../components/typeEvalutors/Group';\r\n\r\nexport interface SingleRepeatProps {\r\n  choices: any;\r\n  csvList: any;\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: any;\r\n  defaultLanguage: string;\r\n  repeatIndex: number;\r\n  assignmentHandler: any;\r\n  removeHandler: any;\r\n  removeOptionHandler: any;\r\n  unControlFlag: boolean;\r\n}\r\n\r\nclass SingleRepeat extends React.Component<SingleRepeatProps> {\r\n  public render() {\r\n    const {\r\n      choices,\r\n      csvList,\r\n      defaultLanguage,\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      repeatIndex,\r\n      unControlFlag,\r\n    } = this.props;\r\n    let isAppearanceApplicable = false;\r\n    if (fieldElement.control && fieldElement.control.appearance) {\r\n      if (/^w(\\d+)\\b/i.test(fieldElement.control.appearance)) {\r\n        isAppearanceApplicable = true;\r\n      }\r\n    }\r\n    return (\r\n      <div className={'groupFormFieldBody'}>\r\n        {fieldElement.children && (\r\n          <GroupTypeEvaluator\r\n            choices={choices}\r\n            fieldElements={fieldElement.children}\r\n            fieldParentTreeName={\r\n              fieldParentTreeName +\r\n              'repeat/' +\r\n              fieldElement.name +\r\n              '/' +\r\n              repeatIndex +\r\n              '/'\r\n            }\r\n            defaultLanguage={defaultLanguage}\r\n            csvList={csvList}\r\n            isAppearanceApplicable={isAppearanceApplicable}\r\n          />\r\n        )}\r\n\r\n        {unControlFlag === false ? (\r\n          <div className={'minusIconWrapper'}>\r\n            <span onClick={this.handleChange}>\r\n              <FontAwesomeIcon icon=\"minus-circle\" className={'minusIcon'} />\r\n            </span>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  private handleChange = (_event: React.MouseEvent<HTMLDivElement>) => {\r\n    const {\r\n      repeatIndex,\r\n      fieldValue,\r\n      assignmentHandler,\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      removeHandler,\r\n      removeOptionHandler,\r\n    } = this.props;\r\n    let newFieldValue: any[] = [...fieldValue];\r\n    newFieldValue = newFieldValue.filter(\r\n      // tslint:disable-next-line: variable-name\r\n      (_elem, index) => index !== repeatIndex\r\n    );\r\n    assignmentHandler(fieldParentTreeName + fieldElement.name, newFieldValue);\r\n    removeHandler(fieldParentTreeName + 'repeat/' + fieldElement.name + '/');\r\n    removeOptionHandler(fieldParentTreeName + fieldElement.name, repeatIndex);\r\n  };\r\n}\r\n\r\nexport default SingleRepeat;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormGroup, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../../components/typeEvalutors/Base';\r\nimport {\r\n  assignFieldValueAction,\r\n  emptyGroupFields,\r\n  getEvaluatedExpression,\r\n  getFieldValue,\r\n  isErrorsIncludeGroupFields,\r\n  isGroupFieldsEmpty,\r\n  RemoveFromOptionList,\r\n  removeGroupFieldsFromErrors,\r\n} from '../../../../../store/ducks/formState';\r\nimport {\r\n  getFieldLabelText,\r\n  shouldComponentBeRelevant,\r\n} from '../../../../../utils/helpers';\r\nimport SingleRepeat from '.././Single Repeat';\r\n\r\nexport interface ControlledRepeatProps {\r\n  choices: any;\r\n  csvList: any;\r\n  defaultLanguage: string;\r\n  fieldElement: FieldElement;\r\n  fieldValue: any;\r\n  fieldParentTreeName: string;\r\n  getEvaluatedExpressionSelector: any;\r\n  isComponentRender: boolean;\r\n  isGroupFieldsEmptySelector: any;\r\n  isErrorsIncludeGroupFieldsSelector: any;\r\n  emptyGroupFieldsActionCreator: typeof emptyGroupFields;\r\n  removeGroupFieldsFromErrorsActionCreator: typeof removeGroupFieldsFromErrors;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  removeOptionListFromActionCreator: typeof RemoveFromOptionList;\r\n}\r\n\r\nclass ControlledRepeat extends React.Component<ControlledRepeatProps> {\r\n  public render() {\r\n    const {\r\n      choices,\r\n      csvList,\r\n      fieldValue,\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      defaultLanguage,\r\n      isComponentRender,\r\n      assignFieldValueActionCreator,\r\n      removeGroupFieldsFromErrorsActionCreator,\r\n      removeOptionListFromActionCreator,\r\n    } = this.props;\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    if (isComponentRender) {\r\n      if (!fieldValue) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          [{}]\r\n        );\r\n      }\r\n\r\n      return (\r\n        <FormGroup className={'groupBody'}>\r\n          <Label>{fieldLabel}</Label>\r\n          {fieldValue &&\r\n            // tslint:disable-next-line: variable-name\r\n            fieldValue.map((_elm: any, index: any) => (\r\n              <div className=\"repeat-fields-body\" key={'repeat' + index}>\r\n                <SingleRepeat\r\n                  choices={choices}\r\n                  defaultLanguage={defaultLanguage}\r\n                  fieldElement={fieldElement}\r\n                  fieldParentTreeName={fieldParentTreeName}\r\n                  fieldValue={fieldValue}\r\n                  repeatIndex={index}\r\n                  assignmentHandler={assignFieldValueActionCreator}\r\n                  removeHandler={removeGroupFieldsFromErrorsActionCreator}\r\n                  removeOptionHandler={removeOptionListFromActionCreator}\r\n                  csvList={csvList}\r\n                  unControlFlag={false}\r\n                />\r\n              </div>\r\n            ))}\r\n          <div>\r\n            <span onClick={this.addAnotherRepeat}>\r\n              <FontAwesomeIcon icon=\"plus-circle\" className={'plusIcon'} />\r\n            </span>\r\n          </div>\r\n        </FormGroup>\r\n      );\r\n    } else {\r\n      if (\r\n        this.props.isErrorsIncludeGroupFieldsSelector(\r\n          fieldParentTreeName + 'repeat/' + fieldElement.name + '/'\r\n        )\r\n      ) {\r\n        this.props.removeGroupFieldsFromErrorsActionCreator(\r\n          fieldParentTreeName + 'repeat/' + fieldElement.name + '/'\r\n        );\r\n      }\r\n      if (fieldValue) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  private addAnotherRepeat = (_event: React.MouseEvent<HTMLDivElement>) => {\r\n    const { fieldValue, fieldParentTreeName, fieldElement } = this.props;\r\n    const newFieldValue = [...fieldValue];\r\n    newFieldValue.push({});\r\n    this.props.assignFieldValueActionCreator(\r\n      fieldParentTreeName + fieldElement.name,\r\n      newFieldValue\r\n    );\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: any;\r\n  getEvaluatedExpressionSelector: any;\r\n  isComponentRender: boolean;\r\n  isGroupFieldsEmptySelector: any;\r\n  isErrorsIncludeGroupFieldsSelector: any;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  defaultLanguage: string;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isGroupFieldsEmptySelector = (fieldTreeName: string) =>\r\n    isGroupFieldsEmpty(state, fieldTreeName);\r\n  const isErrorsIncludeGroupFieldsSelector = (fieldTreeName: string) =>\r\n    isErrorsIncludeGroupFields(state, fieldTreeName);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isErrorsIncludeGroupFieldsSelector,\r\n    isGroupFieldsEmptySelector,\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  emptyGroupFieldsActionCreator: emptyGroupFields,\r\n  removeGroupFieldsFromErrorsActionCreator: removeGroupFieldsFromErrors,\r\n  removeOptionListFromActionCreator: RemoveFromOptionList,\r\n};\r\n\r\n/** connect Group component to the redux store */\r\nconst ConnectedControlledRepeat = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ControlledRepeat);\r\n\r\nexport default ConnectedControlledRepeat;\r\n","import _ from 'lodash';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormGroup, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../../components/typeEvalutors/Base';\r\nimport {\r\n  assignFieldValueAction,\r\n  assignOptionListAction,\r\n  emptyGroupFields,\r\n  getEvaluatedExpression,\r\n  getFieldValue,\r\n  getOptionList,\r\n  isErrorsIncludeGroupFields,\r\n  isGroupFieldsEmpty,\r\n  RemoveFromOptionList,\r\n  removeGroupFieldsFromErrors,\r\n} from '../../../../../store/ducks/formState';\r\nimport {\r\n  getFieldLabelText,\r\n  shouldComponentBeRelevant,\r\n} from '../../../../../utils/helpers';\r\nimport SingleRepeat from '.././Single Repeat';\r\n\r\nexport interface UncontrolledRepeatProps {\r\n  choices: any;\r\n  csvList: any;\r\n  defaultLanguage: string;\r\n  fieldElement: FieldElement;\r\n  fieldValue: any;\r\n  fieldParentTreeName: string;\r\n  getEvaluatedExpressionSelector: any;\r\n  isComponentRender: boolean;\r\n  isGroupFieldsEmptySelector: any;\r\n  isErrorsIncludeGroupFieldsSelector: any;\r\n  optionList: object;\r\n  emptyGroupFieldsActionCreator: typeof emptyGroupFields;\r\n  removeGroupFieldsFromErrorsActionCreator: typeof removeGroupFieldsFromErrors;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  assignOptionListActionCreator: typeof assignOptionListAction;\r\n  removeOptionListFromActionCreator: typeof RemoveFromOptionList;\r\n}\r\n\r\nclass UncontrolledRepeat extends React.Component<UncontrolledRepeatProps> {\r\n  public render() {\r\n    const {\r\n      choices,\r\n      csvList,\r\n      fieldValue,\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      defaultLanguage,\r\n      isComponentRender,\r\n      optionList,\r\n      assignFieldValueActionCreator,\r\n      removeGroupFieldsFromErrorsActionCreator,\r\n      removeOptionListFromActionCreator,\r\n    } = this.props;\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    if (isComponentRender) {\r\n      if (!fieldValue) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          []\r\n        );\r\n      }\r\n\r\n      let noOfJrCount: number = 0;\r\n\r\n      if (fieldElement.control) {\r\n        const jrCount: string = 'jr:count';\r\n        const res: any = fieldElement.control[jrCount];\r\n\r\n        if (/^[0-9]*$/i.test(res)) {\r\n          noOfJrCount = parseInt(res, 10);\r\n        } else {\r\n          const value: any = this.props.getEvaluatedExpressionSelector(\r\n            res,\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n          if (value) {\r\n            noOfJrCount = parseInt(value, 10);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (\r\n        fieldValue &&\r\n        fieldValue.length === 0 &&\r\n        noOfJrCount === 0 &&\r\n        this.props.isErrorsIncludeGroupFieldsSelector(\r\n          fieldParentTreeName + 'repeat/' + fieldElement.name + '/'\r\n        )\r\n      ) {\r\n        this.props.removeGroupFieldsFromErrorsActionCreator(\r\n          fieldParentTreeName + 'repeat/' + fieldElement.name + '/'\r\n        );\r\n      }\r\n\r\n      if (fieldValue && fieldValue.length > 0 && noOfJrCount === 0) {\r\n        this.removeFromError();\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          []\r\n        );\r\n      }\r\n\r\n      if (optionList && _.size(optionList) > noOfJrCount && noOfJrCount === 0) {\r\n        this.props.assignOptionListActionCreator(\r\n          this.props.fieldParentTreeName + this.props.fieldElement.name,\r\n          []\r\n        );\r\n      }\r\n\r\n      if (noOfJrCount > 0) {\r\n        const newFieldValue = [...fieldValue];\r\n\r\n        if (fieldValue && fieldValue.length < noOfJrCount) {\r\n          const iterate = noOfJrCount - fieldValue.length;\r\n          for (let j = 0; j < iterate; j++) {\r\n            newFieldValue.push({});\r\n          }\r\n        }\r\n\r\n        if (fieldValue && fieldValue.length > noOfJrCount) {\r\n          const iterate = fieldValue.length - noOfJrCount;\r\n          for (let i = 0; i < iterate; i++) {\r\n            newFieldValue.pop();\r\n          }\r\n          this.props.assignFieldValueActionCreator(\r\n            fieldParentTreeName + fieldElement.name,\r\n            newFieldValue\r\n          );\r\n          this.removeFromError();\r\n        }\r\n\r\n        if (optionList && _.size(optionList) > noOfJrCount) {\r\n          const iterate = _.size(optionList) - noOfJrCount;\r\n          this.props.assignOptionListActionCreator(\r\n            this.props.fieldParentTreeName + this.props.fieldElement.name,\r\n            Array.prototype.slice.call(optionList, iterate)\r\n          );\r\n          this.removeFromError();\r\n        }\r\n\r\n        return (\r\n          <FormGroup className={'groupBodyUnControlled'}>\r\n            <Label>{fieldLabel}</Label>\r\n            {newFieldValue &&\r\n              // tslint:disable-next-line: variable-name\r\n              newFieldValue.map((_elm: any, index: any) => (\r\n                <div className=\"repeat-fields-body\" key={'repeat' + index}>\r\n                  <SingleRepeat\r\n                    choices={choices}\r\n                    defaultLanguage={defaultLanguage}\r\n                    fieldElement={fieldElement}\r\n                    fieldParentTreeName={fieldParentTreeName}\r\n                    fieldValue={fieldValue}\r\n                    repeatIndex={index}\r\n                    assignmentHandler={assignFieldValueActionCreator}\r\n                    removeHandler={removeGroupFieldsFromErrorsActionCreator}\r\n                    removeOptionHandler={removeOptionListFromActionCreator}\r\n                    csvList={csvList}\r\n                    unControlFlag={true}\r\n                  />\r\n                </div>\r\n              ))}\r\n          </FormGroup>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    } else {\r\n      this.removeFromError();\r\n      if (fieldValue) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private removeFromError() {\r\n    if (\r\n      this.props.isErrorsIncludeGroupFieldsSelector(\r\n        this.props.fieldParentTreeName +\r\n          'repeat/' +\r\n          this.props.fieldElement.name +\r\n          '/'\r\n      )\r\n    ) {\r\n      this.props.removeGroupFieldsFromErrorsActionCreator(\r\n        this.props.fieldParentTreeName +\r\n          'repeat/' +\r\n          this.props.fieldElement.name +\r\n          '/'\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: any;\r\n  getEvaluatedExpressionSelector: any;\r\n  isComponentRender: boolean;\r\n  isGroupFieldsEmptySelector: any;\r\n  isErrorsIncludeGroupFieldsSelector: any;\r\n  optionList: object;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  defaultLanguage: string;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isGroupFieldsEmptySelector = (fieldTreeName: string) =>\r\n    isGroupFieldsEmpty(state, fieldTreeName);\r\n  const isErrorsIncludeGroupFieldsSelector = (fieldTreeName: string) =>\r\n    isErrorsIncludeGroupFields(state, fieldTreeName);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isErrorsIncludeGroupFieldsSelector,\r\n    isGroupFieldsEmptySelector,\r\n    optionList: getOptionList(state, fieldParentTreeName + fieldElement.name),\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  assignOptionListActionCreator: assignOptionListAction,\r\n  emptyGroupFieldsActionCreator: emptyGroupFields,\r\n  removeGroupFieldsFromErrorsActionCreator: removeGroupFieldsFromErrors,\r\n  removeOptionListFromActionCreator: RemoveFromOptionList,\r\n};\r\n\r\n/** connect Repeat component to the redux store */\r\nconst ConnectedUncontrolledRepeat = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UncontrolledRepeat);\r\n\r\nexport default ConnectedUncontrolledRepeat;\r\n","import * as React from 'react';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport ControlledRepeat from './Controlled Repeat';\r\nimport UncontrolledRepeat from './Uncontrolled Repeat';\r\n\r\n/** props interface for the Repeat component */\r\nexport interface RepeatProps {\r\n  choices: any;\r\n  csvList: any;\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  defaultLanguage: string;\r\n}\r\n\r\nclass Repeat extends React.Component<RepeatProps> {\r\n  public render() {\r\n    const { fieldElement } = this.props;\r\n    if (fieldElement.control && fieldElement.control['jr:count']) {\r\n      return <UncontrolledRepeat {...this.props} />;\r\n    }\r\n    return <ControlledRepeat {...this.props} />;\r\n  }\r\n}\r\n\r\nexport default Repeat;\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Input } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\n\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  getEvaluatedExpression,\r\n  getFieldValue,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../store/ducks/formState';\r\nimport {\r\n  isInputRequired,\r\n  shouldComponentBeReadOnly,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../utils/helpers';\r\n\r\n/** props interface for the calculate component */\r\nexport interface CalculateProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: any;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\n\r\nclass Calculate extends React.Component<CalculateProps> {\r\n  public render() {\r\n    const {\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      isPresentInErrorSelector,\r\n    } = this.props;\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\r\n    const isConstraintViolated =\r\n      fieldValue &&\r\n      fieldValue !== '' &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n      const isReadonly = shouldComponentBeReadOnly(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n      let calculatedValue: any = '';\r\n      if (fieldElement.bind && fieldElement.bind.calculate) {\r\n        calculatedValue = this.props.getEvaluatedExpressionSelector(\r\n          fieldElement.bind.calculate,\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      if (calculatedValue && fieldValue !== calculatedValue) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          calculatedValue\r\n        );\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          <Input\r\n            type=\"hidden\"\r\n            name={fieldElement.name}\r\n            value={calculatedValue || ''}\r\n            readOnly={isReadonly}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: any;\r\n  getEvaluatedExpressionSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect Calculate component to the redux store */\r\nconst ConnectedCalculate = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Calculate);\r\n\r\nexport default ConnectedCalculate;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  getEvaluatedExpression,\r\n  getFieldValue,\r\n  getFormSubmitStatus,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeReadOnly,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../utils/helpers';\r\n\r\n/** props interface for the KbDate component */\r\nexport interface DateProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: any;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: boolean;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\n\r\nclass KbDate extends React.Component<DateProps> {\r\n  public render() {\r\n    const {\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      getFormSubmitStatusSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isFormSubmitted: boolean = getFormSubmitStatusSelector;\r\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\r\n    const isConstraintViolated =\r\n      fieldValue &&\r\n      fieldValue !== '' &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const modifiedFieldLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      fieldLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n    const modifiedConstraintLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      constraintLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const hintLabel = getHintLabelText(fieldElement, defaultLanguage);\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n      const isReadonly = shouldComponentBeReadOnly(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n      let defaultValue: string = '';\r\n      if (fieldValue && fieldValue !== '') {\r\n        const modifiedDate = new Date(fieldValue);\r\n        defaultValue = modifiedDate.toISOString().slice(0, 10);\r\n      }\r\n      const isError = isPresentInErrorSelector(\r\n        fieldParentTreeName + fieldElement.name\r\n      );\r\n      return (\r\n        <FormGroup>\r\n          <Label>\r\n            {modifiedFieldLabel}{' '}\r\n            {isRequired && (\r\n              <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n            )}\r\n          </Label>\r\n          <Input\r\n            type=\"date\"\r\n            name={fieldElement.name}\r\n            onChange={this.onChangeHandler}\r\n            value={defaultValue}\r\n            readOnly={isReadonly}\r\n          />\r\n          {isFormSubmitted && isError && (\r\n            <FontAwesomeIcon icon=\"exclamation-circle\" className=\"errorSign\" />\r\n          )}\r\n          {fieldElement.hint && <Label className=\"hintText\">{hintLabel}</Label>}\r\n          {isFormSubmitted && isRequiredViolated && (\r\n            <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n          )}\r\n          {isConstraintViolated && (\r\n            <Label className=\"constraintText\">{modifiedConstraintLabel}</Label>\r\n          )}\r\n        </FormGroup>\r\n      );\r\n    } else {\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /** sets the value of field element in store\r\n   * @param {React.FormEvent<HTMLInputElement>} event - the onchange input event\r\n   */\r\n  private onChangeHandler = (event: React.FormEvent<HTMLInputElement>) => {\r\n    this.props.assignFieldValueActionCreator(\r\n      this.props.fieldParentTreeName + event.currentTarget.name,\r\n      event.currentTarget.value !== ''\r\n        ? new Date(event.currentTarget.value)\r\n        : null\r\n    );\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: any;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const getFormSubmitStatusSelector = getFormSubmitStatus(state);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    getFormSubmitStatusSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect KbDate component to the redux store */\r\nconst ConnectedDate = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(KbDate);\r\n\r\nexport default ConnectedDate;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport { connect } from 'react-redux';\r\nimport { FormGroup, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  getEvaluatedExpression,\r\n  getFieldValue,\r\n  getFormSubmitStatus,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeReadOnly,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../utils/helpers';\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\n/** props interface for the date Time component */\r\nexport interface DateTimeProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: any;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: boolean;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\n\r\nclass DateTime extends React.Component<DateTimeProps> {\r\n  public render() {\r\n    const {\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      getFormSubmitStatusSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isFormSubmitted: boolean = getFormSubmitStatusSelector;\r\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\r\n    const isConstraintViolated =\r\n      fieldValue &&\r\n      fieldValue !== '' &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const modifiedFieldLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      fieldLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n    const modifiedConstraintLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      constraintLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const hintLabel = getHintLabelText(fieldElement, defaultLanguage);\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n      const isReadonly = shouldComponentBeReadOnly(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      const isError = isPresentInErrorSelector(\r\n        fieldParentTreeName + fieldElement.name\r\n      );\r\n\r\n      let modifiedDate: any = null;\r\n      if (fieldValue) {\r\n        modifiedDate = new Date(fieldValue);\r\n        const timeZoneOffset = modifiedDate.getTimezoneOffset() / 60;\r\n        modifiedDate.setHours(modifiedDate.getHours() - timeZoneOffset);\r\n      }\r\n\r\n      return (\r\n        <FormGroup>\r\n          <Label>\r\n            {modifiedFieldLabel}{' '}\r\n            {isRequired && (\r\n              <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n            )}\r\n          </Label>\r\n          <br />\r\n          <DatePicker\r\n            name={fieldElement.name}\r\n            selected={fieldValue ? modifiedDate : null}\r\n            onChange={this.handleChange(fieldElement.name)}\r\n            showTimeSelect={true}\r\n            timeFormat=\"h:m aa\"\r\n            timeIntervals={15}\r\n            timeCaption=\"time\"\r\n            dateFormat=\"MM/dd/yyyy h:mm aa\"\r\n            placeholderText=\"mm/dd/yyyy h:m aa\"\r\n            className=\"form-control\"\r\n            readOnly={isReadonly}\r\n          />\r\n          <br />\r\n          {isFormSubmitted && isError && (\r\n            <FontAwesomeIcon icon=\"exclamation-circle\" className=\"errorSign\" />\r\n          )}\r\n          {fieldElement.hint && <Label className=\"hintText\">{hintLabel}</Label>}\r\n          {isFormSubmitted && isRequiredViolated && (\r\n            <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n          )}\r\n          {isConstraintViolated && (\r\n            <Label className=\"constraintText\">{modifiedConstraintLabel}</Label>\r\n          )}\r\n        </FormGroup>\r\n      );\r\n    } else {\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private handleChange = (name: any) => (value: any) => {\r\n    const modifiedDate: any = new Date(value);\r\n    const timeZoneOffset = modifiedDate.getTimezoneOffset() / 60;\r\n    modifiedDate.setHours(modifiedDate.getHours() + timeZoneOffset);\r\n    this.props.assignFieldValueActionCreator(\r\n      this.props.fieldParentTreeName + name,\r\n      value !== '' ? modifiedDate : null\r\n    );\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: string;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const getFormSubmitStatusSelector = getFormSubmitStatus(state);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    getFormSubmitStatusSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect Date Time component to the redux store */\r\nconst ConnectedDateTime = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DateTime);\r\n\r\nexport default ConnectedDateTime;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  getEvaluatedExpression,\r\n  getFieldValue,\r\n  getFormSubmitStatus,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeReadOnly,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../utils/helpers';\r\n\r\n/** props interface for the decimal component */\r\nexport interface DecimalProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: any;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: boolean;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\n\r\nexport interface DecimalState {\r\n  fieldValue: string;\r\n  isFocused: boolean;\r\n}\r\n\r\nclass Decimal extends React.Component<DecimalProps, DecimalState> {\r\n  constructor(props: DecimalProps) {\r\n    super(props);\r\n    this.state = { fieldValue: '', isFocused: false };\r\n  }\r\n  public render() {\r\n    const {\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      getFormSubmitStatusSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isFormSubmitted: boolean = getFormSubmitStatusSelector;\r\n    const isRequiredViolated =\r\n      isRequired &&\r\n      (fieldValue === null || fieldValue === '' || fieldValue === undefined);\r\n    const isConstraintViolated =\r\n      fieldValue !== '' &&\r\n      fieldValue !== null &&\r\n      fieldValue !== undefined &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const modifiedFieldLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      fieldLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n    const modifiedConstraintLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      constraintLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n\r\n    const hintLabel = getHintLabelText(fieldElement, defaultLanguage);\r\n\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n      const isReadonly = shouldComponentBeReadOnly(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      if (typeof this.props.fieldValue === 'string') {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          parseFloat(this.props.fieldValue)\r\n        );\r\n      }\r\n\r\n      let modifiedValue: any;\r\n      {\r\n        fieldValue === 0 ? (modifiedValue = '0') : (modifiedValue = fieldValue);\r\n      }\r\n\r\n      const isError = isPresentInErrorSelector(\r\n        fieldParentTreeName + fieldElement.name\r\n      );\r\n\r\n      if (fieldElement.bind && fieldElement.bind.calculate) {\r\n        let calculatedValue: any = '';\r\n        calculatedValue = this.props.getEvaluatedExpressionSelector(\r\n          fieldElement.bind.calculate,\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n\r\n        if (fieldValue && calculatedValue !== fieldValue) {\r\n          this.props.assignFieldValueActionCreator(\r\n            fieldParentTreeName + fieldElement.name,\r\n            calculatedValue\r\n          );\r\n        }\r\n        modifiedValue = calculatedValue;\r\n      }\r\n\r\n      return (\r\n        <FormGroup>\r\n          <Label>\r\n            {modifiedFieldLabel}{' '}\r\n            {isRequired && (\r\n              <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n            )}\r\n          </Label>\r\n          <Input\r\n            type=\"number\"\r\n            step=\"any\"\r\n            name={fieldElement.name}\r\n            onChange={this.onChangeHandler}\r\n            onBlur={this.onBlurHandler}\r\n            value={\r\n              this.state.isFocused\r\n                ? this.state.fieldValue || ''\r\n                : modifiedValue || ''\r\n            }\r\n            readOnly={isReadonly}\r\n          />\r\n          {isFormSubmitted && isError && (\r\n            <FontAwesomeIcon icon=\"exclamation-circle\" className=\"errorSign\" />\r\n          )}\r\n          {fieldElement.hint && <Label className=\"hintText\">{hintLabel}</Label>}\r\n          {isFormSubmitted && isRequiredViolated && (\r\n            <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n          )}\r\n          {isConstraintViolated && (\r\n            <Label className=\"constraintText\">{modifiedConstraintLabel}</Label>\r\n          )}\r\n        </FormGroup>\r\n      );\r\n    } else {\r\n      if (this.state.isFocused) {\r\n        this.setState({ ...this.state, isFocused: false });\r\n      }\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /** sets the value of field element in store\r\n   * @param {React.FormEvent<HTMLInputElement>} event - the onchange input event\r\n   */\r\n  private onChangeHandler = (event: React.FormEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      ...this.state,\r\n      fieldValue: event.currentTarget.value || '',\r\n      isFocused: true,\r\n    });\r\n  };\r\n\r\n  private onBlurHandler = (event: React.FormEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      ...this.state,\r\n      fieldValue: event.currentTarget.value || '',\r\n      isFocused: false,\r\n    });\r\n    this.props.assignFieldValueActionCreator(\r\n      this.props.fieldParentTreeName + event.currentTarget.name,\r\n      event.currentTarget.value !== ''\r\n        ? parseFloat(event.currentTarget.value)\r\n        : null\r\n    );\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: any;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const getFormSubmitStatusSelector = getFormSubmitStatus(state);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    getFormSubmitStatusSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect Decimal component to the redux store */\r\nconst ConnectedDecimal = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Decimal);\r\n\r\nexport default ConnectedDecimal;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  assignFieldValueAction,\r\n  getFileObject,\r\n} from '../../../../../store/ducks/formState';\r\n\r\ninterface FilePreviewProps {\r\n  fieldName: string;\r\n  fieldValue: any;\r\n  fileObject: any;\r\n  assignFieldValueActionCreator: any;\r\n}\r\n\r\nclass FilePreview extends React.Component<FilePreviewProps> {\r\n  public render() {\r\n    const { fieldName, fieldValue, assignFieldValueActionCreator } = this.props;\r\n    const removeHandler = () => {\r\n      assignFieldValueActionCreator(fieldName, null);\r\n    };\r\n    return (\r\n      <>\r\n        <p className=\"text-muted\">\r\n          Uploaded File Name: <strong className=\"text-primary\"> {fieldValue} </strong>\r\n        </p>\r\n        <Button size=\"sm\" color=\"danger\" onClick={removeHandler}>\r\n          Remove File\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fileObject: any;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldName: string;\r\n  fieldValue: any;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldValue } = parentProps;\r\n  const result = {\r\n    fileObject: getFileObject(state, fieldValue),\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n};\r\n\r\n/** connect FilePreview component to the redux store */\r\nconst ConnectedFilePreview = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FilePreview);\r\n\r\nexport default ConnectedFilePreview;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\r\nimport { PHOTO_FIELD_TYPE } from '../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  addMediaListAction,\r\n  assignFieldValueAction,\r\n  getEvaluatedExpression,\r\n  getFieldValue,\r\n  getFormSubmitStatus,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeReadOnly,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../utils/helpers';\r\nimport FilePreview from './FilePreview/FilePreview';\r\n\r\n/** props interface for the file component */\r\nexport interface FileProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: any;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  addMediaListActionCreator: typeof addMediaListAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: boolean;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\n\r\nclass File extends React.Component<FileProps> {\r\n  public render() {\r\n    const {\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      getFormSubmitStatusSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isFormSubmitted: boolean = getFormSubmitStatusSelector;\r\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\r\n    const isConstraintViolated =\r\n      fieldValue &&\r\n      fieldValue !== '' &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const modifiedFieldLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      fieldLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n    const modifiedConstraintLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      constraintLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n\r\n    const hintLabel = getHintLabelText(fieldElement, defaultLanguage);\r\n\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n      const isReadonly = shouldComponentBeReadOnly(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      const isError = isPresentInErrorSelector(\r\n        fieldParentTreeName + fieldElement.name\r\n      );\r\n\r\n      return (\r\n        <FormGroup>\r\n          <Label>\r\n            {modifiedFieldLabel}{' '}\r\n            {isRequired && (\r\n              <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n            )}\r\n          </Label>\r\n          {fieldValue ? (\r\n            <FilePreview\r\n              fieldName={fieldParentTreeName + fieldElement.name}\r\n              fieldValue={fieldValue}\r\n            />\r\n          ) : fieldElement.type === PHOTO_FIELD_TYPE ? (\r\n            <Input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              name={fieldElement.name}\r\n              onChange={this.onChangeHandler}\r\n              readOnly={isReadonly}\r\n            />\r\n          ) : (\r\n            <Input\r\n              type=\"file\"\r\n              name={fieldElement.name}\r\n              onChange={this.onChangeHandler}\r\n              readOnly={isReadonly}\r\n            />\r\n          )}\r\n          {isFormSubmitted && isError && (\r\n            <FontAwesomeIcon icon=\"exclamation-circle\" className=\"errorSign\" />\r\n          )}\r\n          {fieldElement.hint && <Label className=\"hintText\">{hintLabel}</Label>}\r\n          {isFormSubmitted && isRequiredViolated && (\r\n            <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n          )}\r\n          {isConstraintViolated && (\r\n            <Label className=\"constraintText\">{modifiedConstraintLabel}</Label>\r\n          )}\r\n        </FormGroup>\r\n      );\r\n    } else {\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /** sets the value of field element in store\r\n   * @param event - the onchange input event\r\n   */\r\n  private onChangeHandler = (event: any) => {\r\n    if (event.target.files[0]) {\r\n      this.props.assignFieldValueActionCreator(\r\n        this.props.fieldParentTreeName + event.target.name,\r\n        event.target.files[0].name\r\n      );\r\n      this.props.addMediaListActionCreator(event.target.files[0]);\r\n    } else {\r\n      this.props.assignFieldValueActionCreator(\r\n        this.props.fieldParentTreeName + event.target.name,\r\n        null\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: any;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const getFormSubmitStatusSelector = getFormSubmitStatus(state);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    getFormSubmitStatusSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  addMediaListActionCreator: addMediaListAction,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect File component to the redux store */\r\nconst ConnectedFile = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(File);\r\n\r\nexport default ConnectedFile;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  getEvaluatedExpression,\r\n  getFieldValue,\r\n  getFormSubmitStatus,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeReadOnly,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../utils/helpers';\r\n\r\n/** props interface for the integer component */\r\nexport interface IntegerProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: any;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: boolean;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\nexport interface IntegerState {\r\n  fieldValue: string;\r\n  isFocused: boolean;\r\n}\r\nclass Integer extends React.Component<IntegerProps, IntegerState> {\r\n  constructor(props: IntegerProps) {\r\n    super(props);\r\n    this.state = { fieldValue: '', isFocused: false };\r\n  }\r\n  public render() {\r\n    const {\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      getFormSubmitStatusSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isFormSubmitted: boolean = getFormSubmitStatusSelector;\r\n    const isRequiredViolated =\r\n      isRequired &&\r\n      (fieldValue === null || fieldValue === '' || fieldValue === undefined);\r\n\r\n    const isConstraintViolated =\r\n      fieldValue !== '' &&\r\n      fieldValue !== null &&\r\n      fieldValue !== undefined &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const modifiedFieldLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      fieldLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n    const modifiedConstraintLabel =\r\n      customizeLabelsWithPreviousInputs(\r\n        getEvaluatedExpressionSelector,\r\n        constraintLabel,\r\n        fieldParentTreeName + fieldElement.name\r\n      ) || '';\r\n    const hintLabel = getHintLabelText(fieldElement, defaultLanguage);\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n      const isReadonly = shouldComponentBeReadOnly(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n      if (typeof this.props.fieldValue === 'string') {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          parseInt(this.props.fieldValue, 10)\r\n        );\r\n      }\r\n\r\n      let modifiedValue: any;\r\n      {\r\n        fieldValue === 0 ? (modifiedValue = '0') : (modifiedValue = fieldValue);\r\n      }\r\n\r\n      const isError = isPresentInErrorSelector(\r\n        fieldParentTreeName + fieldElement.name\r\n      );\r\n\r\n      if (fieldElement.bind && fieldElement.bind.calculate) {\r\n        let calculatedValue: any = '';\r\n        calculatedValue = this.props.getEvaluatedExpressionSelector(\r\n          fieldElement.bind.calculate,\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n\r\n        if (fieldValue && calculatedValue !== fieldValue) {\r\n          this.props.assignFieldValueActionCreator(\r\n            fieldParentTreeName + fieldElement.name,\r\n            calculatedValue\r\n          );\r\n        }\r\n        modifiedValue = calculatedValue;\r\n      }\r\n\r\n      return (\r\n        <FormGroup>\r\n          <Label>\r\n            {modifiedFieldLabel}{' '}\r\n            {isRequired && (\r\n              <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n            )}\r\n          </Label>\r\n          <Input\r\n            type=\"number\"\r\n            name={fieldElement.name}\r\n            onChange={this.onChangeHandler}\r\n            onBlur={this.onBlurHandler}\r\n            value={\r\n              this.state.isFocused\r\n                ? this.state.fieldValue || ''\r\n                : modifiedValue || ''\r\n            }\r\n            readOnly={isReadonly}\r\n          />\r\n          {isFormSubmitted && isError && (\r\n            <FontAwesomeIcon icon=\"exclamation-circle\" className=\"errorSign\" />\r\n          )}\r\n          {fieldElement.hint && <Label className=\"hintText\">{hintLabel}</Label>}\r\n          {isFormSubmitted && isRequiredViolated && (\r\n            <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n          )}\r\n          {isConstraintViolated && (\r\n            <Label className=\"constraintText\">{modifiedConstraintLabel}</Label>\r\n          )}\r\n        </FormGroup>\r\n      );\r\n    } else {\r\n      if (this.state.isFocused) {\r\n        this.setState({ ...this.state, isFocused: false });\r\n      }\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n  /** sets the value of field element in store\r\n   * @param {React.FormEvent<HTMLInputElement>} event - the onchange input event\r\n   */\r\n  private onChangeHandler = (event: React.FormEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      ...this.state,\r\n      fieldValue: event.currentTarget.value || '',\r\n      isFocused: true,\r\n    });\r\n  };\r\n\r\n  private onBlurHandler = (event: React.FormEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      ...this.state,\r\n      fieldValue: event.currentTarget.value || '',\r\n      isFocused: false,\r\n    });\r\n    this.props.assignFieldValueActionCreator(\r\n      this.props.fieldParentTreeName + event.currentTarget.name,\r\n      event.currentTarget.value !== ''\r\n        ? parseInt(event.currentTarget.value, 10)\r\n        : null\r\n    );\r\n  };\r\n}\r\n/** connect the component to the store */\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: any;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n}\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n}\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const getFormSubmitStatusSelector = getFormSubmitStatus(state);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    getFormSubmitStatusSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n  };\r\n  return result;\r\n};\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n/** connect Integer component to the redux store */\r\nconst ConnectedInteger = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Integer);\r\nexport default ConnectedInteger;\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormGroup, FormText, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  getEvaluatedExpression,\r\n  getFieldValue,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../utils/helpers';\r\n\r\n/** props interface for the text component */\r\nexport interface NoteProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: string;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  isPresentInErrorSelector: any;\r\n  isComponentRender: boolean;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\n\r\nclass Note extends React.Component<NoteProps> {\r\n  public render() {\r\n    const {\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\r\n    const isConstraintViolated =\r\n      fieldValue &&\r\n      fieldValue !== '' &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n    const modifiedConstraintLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      constraintLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n      const fieldHint = getHintLabelText(fieldElement, defaultLanguage);\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n      return (\r\n        <FormGroup>\r\n          <Label>{fieldLabel}</Label>\r\n          {isRequired && (\r\n            <Label className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</Label>\r\n          )}\r\n          {fieldElement.hint && (\r\n            <FormText className=\"hintText\">{fieldHint}</FormText>\r\n          )}\r\n\r\n          {isRequiredViolated && (\r\n            <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n          )}\r\n          {isConstraintViolated && (\r\n            <Label className=\"constraintText\">{modifiedConstraintLabel}</Label>\r\n          )}\r\n        </FormGroup>\r\n      );\r\n    } else {\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: string;\r\n  getEvaluatedExpressionSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect Note component to the redux store */\r\nconst ConnectedNote = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Note);\r\n\r\nexport default ConnectedNote;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport _ from 'lodash';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport { FormGroup, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  assignOptionListAction,\r\n  getEvaluatedExpression,\r\n  getEvaluatedExpressionForSelect,\r\n  getFieldValue,\r\n  getFormSubmitStatus,\r\n  getOptionList,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../../utils/helpers';\r\n\r\n/** props interface for the SelectAll Dropdown component */\r\nexport interface SelectAllDropDownProps {\r\n  choices: any;\r\n  csvList: any;\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: any;\r\n  optionList: object;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  assignOptionListActionCreator: typeof assignOptionListAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  getEvaluatedExpressionSelectorForSelect: any;\r\n  getFormSubmitStatusSelector: boolean;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\n\r\nexport interface Options {\r\n  label: any;\r\n  value: string;\r\n}\r\n\r\nclass SelectAllDropDown extends React.Component<SelectAllDropDownProps> {\r\n  public render() {\r\n    const {\r\n      choices,\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      getFormSubmitStatusSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isFormSubmitted: boolean = getFormSubmitStatusSelector;\r\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === []);\r\n    const isConstraintViolated =\r\n      fieldValue &&\r\n      fieldValue !== [] &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const modifiedFieldLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      fieldLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n    const modifiedConstraintLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      constraintLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const hintLabel = getHintLabelText(fieldElement, defaultLanguage);\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      let resultOptions: any[] = [];\r\n      const options: Options[] = [];\r\n\r\n      if (fieldElement.control && fieldElement.control.appearance) {\r\n        const updatedFieldElement: any = fieldElement.control.appearance\r\n          .toString()\r\n          .replace('minimal', '');\r\n        if (/search\\([^\\)|(]+\\)/i.test(updatedFieldElement)) {\r\n          const processedStringArray = updatedFieldElement.match(\r\n            /search\\([^\\)|(]+\\)/i\r\n          ) || [''];\r\n          resultOptions = this.getProcessedString(processedStringArray[0]);\r\n        }\r\n      }\r\n\r\n      if (\r\n        fieldElement.control &&\r\n        fieldElement.control.appearance &&\r\n        /search\\([^\\)|(]+\\)/i.test(fieldElement.control.appearance)\r\n      ) {\r\n        resultOptions.map(elem =>\r\n          options.push({ label: elem.label, value: elem.name })\r\n        );\r\n        this.setOptionList(resultOptions);\r\n      } else if (fieldElement.itemset) {\r\n        if (choices && choices[fieldElement.itemset.trim()]) {\r\n          _.forEach(choices[fieldElement.itemset.trim()], (elem: any) => {\r\n            if (\r\n              fieldElement.choice_filter &&\r\n              this.props.getEvaluatedExpressionSelectorForSelect(\r\n                fieldElement.choice_filter,\r\n                fieldParentTreeName + fieldElement.name,\r\n                elem\r\n              )\r\n            ) {\r\n              const childrenLabel: string = getFieldLabelText(\r\n                elem,\r\n                defaultLanguage\r\n              );\r\n              options.push({ label: childrenLabel, value: elem.name });\r\n            }\r\n          });\r\n\r\n          const optionsArray: any = [];\r\n          if (options) {\r\n            options.map(elem => {\r\n              const elemObj: any = {};\r\n              const name: string = 'name';\r\n              const label: string = 'label';\r\n              elemObj[name] = elem.value;\r\n              elemObj[label] = elem.label;\r\n              optionsArray.push(elemObj);\r\n            });\r\n          }\r\n          this.setOptionList(optionsArray);\r\n        }\r\n      } else {\r\n        if (fieldElement.children) {\r\n          fieldElement.children.map(elem => {\r\n            const childrenLabel: string = getFieldLabelText(\r\n              elem,\r\n              defaultLanguage\r\n            );\r\n\r\n            options.push({ label: childrenLabel, value: elem.name });\r\n          });\r\n          this.setOptionList(fieldElement.children);\r\n        }\r\n      }\r\n\r\n      const tmpValueArray: any = [];\r\n      let isNotIncluded: boolean = false;\r\n      if (fieldValue && fieldValue.length > 0) {\r\n        const optionsValueArray: any = [];\r\n        options.map(elem => {\r\n          if (elem.value) {\r\n            optionsValueArray.push(elem.value);\r\n          }\r\n        });\r\n\r\n        for (const row of fieldValue) {\r\n          if (!optionsValueArray.includes(row)) {\r\n            isNotIncluded = true;\r\n          } else {\r\n            tmpValueArray.push(row);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (fieldValue && fieldValue.length > 0 && isNotIncluded) {\r\n        this.props.assignFieldValueActionCreator(\r\n          this.props.fieldParentTreeName + fieldElement.name,\r\n          tmpValueArray || []\r\n        );\r\n      }\r\n\r\n      const selectedValues: any[] = [];\r\n      if (fieldValue && fieldValue.length > 0) {\r\n        options.map(elem => {\r\n          for (const row of fieldValue) {\r\n            if (elem.value === row) {\r\n              selectedValues.push(elem);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      if (typeof this.props.fieldValue === 'string') {\r\n        const seperatedValues: string[] = fieldValue.split(' ');\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          seperatedValues\r\n        );\r\n      }\r\n\r\n      const isError = isPresentInErrorSelector(\r\n        fieldParentTreeName + fieldElement.name\r\n      );\r\n\r\n      return (\r\n        <FormGroup>\r\n          <Label>\r\n            {modifiedFieldLabel}{' '}\r\n            {isRequired && (\r\n              <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n            )}\r\n          </Label>\r\n          <div key={fieldElement.name} className=\"selectAllDropDown\">\r\n            <Select\r\n              isMulti={true}\r\n              name={fieldElement.name}\r\n              options={options}\r\n              onChange={this.onChangeHandler(fieldElement.name)}\r\n              value={selectedValues || []}\r\n            />\r\n          </div>\r\n          {isFormSubmitted && isError && (\r\n            <FontAwesomeIcon icon=\"exclamation-circle\" className=\"errorSign\" />\r\n          )}\r\n          {fieldElement.hint && <Label className=\"hintText\">{hintLabel}</Label>}\r\n          {isFormSubmitted && isRequiredViolated && (\r\n            <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n          )}\r\n          {isConstraintViolated && (\r\n            <Label className=\"constraintText\">{modifiedConstraintLabel}</Label>\r\n          )}\r\n        </FormGroup>\r\n      );\r\n    } else {\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      if (this.props.optionList != null) {\r\n        this.props.assignOptionListActionCreator(\r\n          this.props.fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /** Sets the option list to the Redux Store\r\n   * @param {any} optionObject - the option object to be processed\r\n   */\r\n  private setOptionList = (optionObject: any) => {\r\n    const tempObjArray: any = [];\r\n    optionObject.map((elem: { name: any; label: any }) => {\r\n      const elemObj: any = {};\r\n      const name: string = 'name';\r\n      const label: string = 'label';\r\n      elemObj[name] = elem.name;\r\n      elemObj[label] = elem.label;\r\n      tempObjArray.push(elemObj);\r\n    });\r\n\r\n    if (!_.isEqual(this.props.optionList, { ...tempObjArray })) {\r\n      this.props.assignOptionListActionCreator(\r\n        this.props.fieldParentTreeName + this.props.fieldElement.name,\r\n        tempObjArray\r\n      );\r\n    }\r\n  };\r\n\r\n  /** sets the value of field element in store\r\n   * @param {any} values - the onchange input values\r\n   * @param {any} fieldName - the input name\r\n   */\r\n  private onChangeHandler = (fieldName: any) => (values: any) => {\r\n    const selectedValues: any = [];\r\n    let i = 0;\r\n    if (values && values.length > 0) {\r\n      values.map(() => {\r\n        if (!selectedValues.includes(values[i].value)) {\r\n          selectedValues.push(values[i].value);\r\n        }\r\n        i++;\r\n      });\r\n\r\n      this.props.assignFieldValueActionCreator(\r\n        this.props.fieldParentTreeName + fieldName,\r\n        selectedValues\r\n      );\r\n    } else {\r\n      this.props.assignFieldValueActionCreator(\r\n        this.props.fieldParentTreeName + fieldName,\r\n        null\r\n      );\r\n    }\r\n  };\r\n\r\n  /** converts apeearance text into array and pass them to further process\r\n   * @param {string} stringWithSearchKeyWord - the fieldElement children appearance text (partial)\r\n   */\r\n  private getProcessedString = (stringWithSearchKeyWord: string) => {\r\n    const processedStringArray = stringWithSearchKeyWord.match(\r\n      /\\([^\\)]+\\)/i\r\n    ) || [''];\r\n    let params = processedStringArray[0];\r\n\r\n    if (params.length > 2) {\r\n      params = params.substring(1, params.length - 1);\r\n      const resultArray = params.split(',');\r\n      let criteriaParams = [...resultArray];\r\n      criteriaParams = criteriaParams.splice(2, criteriaParams.length);\r\n      return this.extractAndFilterOptions(\r\n        resultArray[0],\r\n        resultArray[1] || null,\r\n        criteriaParams || []\r\n      );\r\n    }\r\n    return [];\r\n  };\r\n\r\n  /** generates unique dropdown options using CSV\r\n   * @param {string} csvName - the CSV file name\r\n   * @param {string | null} criteriaType - criteria to match with previous user input\r\n   * @param {any} filterCriterias - previous user input collections\r\n   */\r\n  private extractAndFilterOptions = (\r\n    csvName: string,\r\n    criteriaType: string | null,\r\n    filterCriterias: any\r\n  ) => {\r\n    if (criteriaType) {\r\n      criteriaType = criteriaType.trim();\r\n      criteriaType = criteriaType.substring(1, criteriaType.length - 1).trim();\r\n    }\r\n\r\n    let options: any[] = [];\r\n    const distinctOptions: any[] = [];\r\n    const finalRes: any[] = [];\r\n    const csv: any = this.props.csvList;\r\n    csvName = csvName.substring(1, csvName.length - 1) + '.csv';\r\n\r\n    if (csv[csvName]) {\r\n      const modifiedName = csvName.replace(/'/g, '');\r\n      options = this.props.csvList[modifiedName] || [];\r\n    }\r\n\r\n    if (criteriaType && criteriaType.trim() === 'matches') {\r\n      let i = 0;\r\n      while (i < filterCriterias.length) {\r\n        let nameOfKey = filterCriterias[i].trim();\r\n        nameOfKey = nameOfKey.substring(1, nameOfKey.length - 1).trim();\r\n        const interConnectedValue = filterCriterias[i + 1];\r\n        const tempOptions = [...options];\r\n\r\n        let filterResult: any = [];\r\n        tempOptions.forEach(elm => {\r\n          filterResult = this.props.getEvaluatedExpressionSelectorForSelect(\r\n            interConnectedValue,\r\n            this.props.fieldParentTreeName + this.props.fieldElement.name,\r\n            elm\r\n          );\r\n        });\r\n\r\n        let j = 0;\r\n        filterResult.map(() => {\r\n          options.map(option => {\r\n            if (option[nameOfKey] === filterResult[j]) {\r\n              finalRes.push(option);\r\n            }\r\n          });\r\n          j = j + 1;\r\n        });\r\n\r\n        i = i + 2;\r\n      }\r\n\r\n      options = [...Array.from(new Set(finalRes))];\r\n    }\r\n\r\n    if (options.length !== 0) {\r\n      let labelColumnName: string = '';\r\n      let valueColumnName: string = '';\r\n      if (\r\n        this.props.fieldElement.children &&\r\n        this.props.fieldElement.children[0] &&\r\n        this.props.fieldElement.children[0].name &&\r\n        this.props.fieldElement.children[0].label\r\n      ) {\r\n        labelColumnName = getFieldLabelText(\r\n          this.props.fieldElement.children[0],\r\n          this.props.defaultLanguage\r\n        );\r\n        valueColumnName = this.props.fieldElement.children[0].name;\r\n      }\r\n\r\n      options.forEach(elem => {\r\n        const tmpOpt: any = {};\r\n        const label: string = 'label';\r\n        const name: string = 'name';\r\n        tmpOpt[label] = elem[labelColumnName].trim();\r\n        tmpOpt[name] = elem[valueColumnName].trim();\r\n        distinctOptions.push(tmpOpt);\r\n      });\r\n\r\n      return _.uniqBy(distinctOptions, 'name');\r\n    }\r\n    return [];\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: string[];\r\n  getEvaluatedExpressionSelector: any;\r\n  getEvaluatedExpressionSelectorForSelect: any;\r\n  getFormSubmitStatusSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  optionList: object;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  defaultLanguage: string;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const getEvaluatedExpressionSelectorForSelect = (\r\n    expression: string,\r\n    fieldTreeName: string,\r\n    options: any\r\n  ) =>\r\n    getEvaluatedExpressionForSelect(state, expression, options, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const getFormSubmitStatusSelector = getFormSubmitStatus(state);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    getEvaluatedExpressionSelectorForSelect,\r\n    getFormSubmitStatusSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n    optionList: getOptionList(state, fieldParentTreeName + fieldElement.name),\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  assignOptionListActionCreator: assignOptionListAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect SelectOne Dropdown component to the redux store */\r\nconst ConnectedSelectAllDropDown = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SelectAllDropDown);\r\n\r\nexport default ConnectedSelectAllDropDown;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport _ from 'lodash';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  assignOptionListAction,\r\n  getEvaluatedExpression,\r\n  getEvaluatedExpressionForSelect,\r\n  getFieldValue,\r\n  getFormSubmitStatus,\r\n  getOptionList,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeReadOnly,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../../utils/helpers';\r\n\r\n/** props interface for the SelectAll Radio component */\r\nexport interface SelectAllRadioProps {\r\n  choices: any;\r\n  csvList: any;\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: any;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  assignOptionListActionCreator: typeof assignOptionListAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  getEvaluatedExpressionSelectorForSelect: any;\r\n  getFormSubmitStatusSelector: boolean;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n  optionList: object;\r\n}\r\n\r\nexport interface Options {\r\n  label: any;\r\n  value: string;\r\n}\r\n\r\nclass SelectAllRadio extends React.Component<SelectAllRadioProps> {\r\n  public render() {\r\n    const {\r\n      choices,\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      getFormSubmitStatusSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isFormSubmitted: boolean = getFormSubmitStatusSelector;\r\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === []);\r\n    const isConstraintViolated =\r\n      fieldValue &&\r\n      fieldValue !== [] &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const modifiedFieldLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      fieldLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n    const modifiedConstraintLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      constraintLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const hintLabel = getHintLabelText(fieldElement, defaultLanguage);\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n      const isReadonly = shouldComponentBeReadOnly(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      let resultOptions: any[] = [];\r\n      let options: Options[] = [];\r\n\r\n      if (fieldElement.control && fieldElement.control.appearance) {\r\n        const updatedFieldElement: any = fieldElement.control.appearance\r\n          .toString()\r\n          .replace('minimal', '');\r\n        if (/search\\([^\\)|(]+\\)/i.test(updatedFieldElement)) {\r\n          const processedStringArray = updatedFieldElement.match(\r\n            /search\\([^\\)|(]+\\)/i\r\n          ) || [''];\r\n          resultOptions = this.getProcessedString(processedStringArray[0]);\r\n        }\r\n      }\r\n\r\n      const childrenArray: any = [];\r\n      if (fieldElement.children) {\r\n        fieldElement.children.map(elem => {\r\n          const elemObj: any = {};\r\n          const name: string = 'name';\r\n          const label: string = 'label';\r\n          elemObj[name] = elem.name;\r\n          elemObj[label] = elem.label;\r\n          childrenArray.push(elemObj);\r\n        });\r\n      }\r\n\r\n      let values: any = [];\r\n\r\n      if (\r\n        fieldElement.control &&\r\n        fieldElement.control.appearance &&\r\n        /search\\([^\\)|(]+\\)/i.test(fieldElement.control.appearance)\r\n      ) {\r\n        values = [];\r\n        options = [];\r\n        const tmpValueArray: any = [];\r\n        let isNotIncluded: boolean = false;\r\n\r\n        resultOptions.map(elem =>\r\n          options.push({ label: elem.label, value: elem.name })\r\n        );\r\n\r\n        if (fieldValue && fieldValue.length > 0) {\r\n          const optionsValueArray: any = [];\r\n          options.map(elem => {\r\n            if (elem.value) {\r\n              optionsValueArray.push(elem.value);\r\n            }\r\n          });\r\n\r\n          for (const row of fieldValue) {\r\n            if (!optionsValueArray.includes(row)) {\r\n              isNotIncluded = true;\r\n            } else {\r\n              tmpValueArray.push(row);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (fieldValue && fieldValue.length > 0 && isNotIncluded) {\r\n          this.props.assignFieldValueActionCreator(\r\n            this.props.fieldParentTreeName + fieldElement.name,\r\n            tmpValueArray || []\r\n          );\r\n        }\r\n\r\n        if (!_.isEqual(this.props.optionList, { ...resultOptions })) {\r\n          this.props.assignOptionListActionCreator(\r\n            this.props.fieldParentTreeName + fieldElement.name,\r\n            resultOptions\r\n          );\r\n        }\r\n        values = [...resultOptions];\r\n      } else if (fieldElement.itemset) {\r\n        values = [];\r\n        options = [];\r\n        const tmpValueArray: any = [];\r\n        const optionsArray: any = [];\r\n        let isNotIncluded: boolean = false;\r\n\r\n        if (choices && choices[fieldElement.itemset.trim()]) {\r\n          _.forEach(choices[fieldElement.itemset.trim()], (elem: any) => {\r\n            if (\r\n              fieldElement.choice_filter &&\r\n              this.props.getEvaluatedExpressionSelectorForSelect(\r\n                fieldElement.choice_filter,\r\n                fieldParentTreeName + fieldElement.name,\r\n                elem\r\n              )\r\n            ) {\r\n              const childrenLabel: string = getFieldLabelText(\r\n                elem,\r\n                defaultLanguage\r\n              );\r\n              options.push({ label: childrenLabel, value: elem.name });\r\n            }\r\n          });\r\n        }\r\n\r\n        if (fieldValue && fieldValue.length > 0) {\r\n          const optionsValueArray: any = [];\r\n          options.map((elem: any) => {\r\n            if (elem.value) {\r\n              optionsValueArray.push(elem.value);\r\n            }\r\n          });\r\n\r\n          for (const row of fieldValue) {\r\n            if (!optionsValueArray.includes(row)) {\r\n              isNotIncluded = true;\r\n            } else {\r\n              tmpValueArray.push(row);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (fieldValue && fieldValue.length > 0 && isNotIncluded) {\r\n          this.props.assignFieldValueActionCreator(\r\n            this.props.fieldParentTreeName + fieldElement.name,\r\n            tmpValueArray || []\r\n          );\r\n        }\r\n\r\n        if (options) {\r\n          options.map(elem => {\r\n            const elemObj: any = {};\r\n            const name: string = 'name';\r\n            const label: string = 'label';\r\n            elemObj[name] = elem.value;\r\n            elemObj[label] = elem.label;\r\n            optionsArray.push(elemObj);\r\n          });\r\n        }\r\n\r\n        if (!_.isEqual(this.props.optionList, { ...optionsArray })) {\r\n          this.props.assignOptionListActionCreator(\r\n            this.props.fieldParentTreeName + fieldElement.name,\r\n            optionsArray\r\n          );\r\n        }\r\n\r\n        values = [...optionsArray];\r\n      } else {\r\n        values = [];\r\n        options = [];\r\n        if (fieldElement.children) {\r\n          fieldElement.children.map(elem =>\r\n            options.push({ label: elem.label, value: elem.name })\r\n          );\r\n        }\r\n\r\n        if (!_.isEqual(this.props.optionList, { ...childrenArray })) {\r\n          this.props.assignOptionListActionCreator(\r\n            this.props.fieldParentTreeName + fieldElement.name,\r\n            childrenArray\r\n          );\r\n        }\r\n        values = [...childrenArray];\r\n      }\r\n\r\n      const selectedValues: any[] = [];\r\n      if (fieldValue && fieldValue.length > 0) {\r\n        options.map(elem => {\r\n          for (const row of fieldValue) {\r\n            if (elem.value === row) {\r\n              selectedValues.push(elem.value);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      let flagInline = false;\r\n      if (fieldElement.control && fieldElement.control.appearance) {\r\n        fieldElement.control.appearance.split(' ').forEach((tmpStyle: any) => {\r\n          if (!flagInline && tmpStyle === 'horizontal-compact') {\r\n            flagInline = true;\r\n          }\r\n        });\r\n      }\r\n\r\n      if (typeof this.props.fieldValue === 'string') {\r\n        const seperatedValues: string[] = fieldValue.split(' ');\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          seperatedValues\r\n        );\r\n      }\r\n\r\n      const isError = isPresentInErrorSelector(\r\n        fieldParentTreeName + fieldElement.name\r\n      );\r\n\r\n      return (\r\n        <div>\r\n          <Label>\r\n            {modifiedFieldLabel}{' '}\r\n            {isRequired && (\r\n              <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n            )}\r\n          </Label>\r\n          <Form key=\"selectAll\">\r\n            {values.map((elem: any, index: any) => (\r\n              <FormGroup key={index} check={true} inline={flagInline}>\r\n                <Label check={true}>\r\n                  <Input\r\n                    key={fieldElement.name + '-' + index}\r\n                    type=\"checkbox\"\r\n                    name={fieldElement.name}\r\n                    value={elem.name || []}\r\n                    onChange={this.onChangeHandlerCheckBox}\r\n                    readOnly={isReadonly}\r\n                    checked={selectedValues.includes(elem.name)}\r\n                  />{' '}\r\n                  {getFieldLabelText(elem, defaultLanguage)}\r\n                </Label>\r\n              </FormGroup>\r\n            ))}\r\n          </Form>\r\n          {isFormSubmitted && isError && (\r\n            <FontAwesomeIcon icon=\"exclamation-circle\" className=\"errorSign\" />\r\n          )}\r\n          {fieldElement.hint && <Label className=\"hintText\">{hintLabel}</Label>}\r\n          {isFormSubmitted && isRequiredViolated && (\r\n            <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n          )}\r\n          {isConstraintViolated && (\r\n            <Label className=\"constraintText\">{modifiedConstraintLabel}</Label>\r\n          )}\r\n        </div>\r\n      );\r\n    } else {\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n\r\n      if (this.props.optionList != null) {\r\n        this.props.assignOptionListActionCreator(\r\n          this.props.fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n      }\r\n\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /** sets the value of field element in store\r\n   * @param {any} event - the onchange event\r\n   */\r\n\r\n  private onChangeHandlerCheckBox = (event: any) => {\r\n    const { fieldValue, fieldElement, fieldParentTreeName } = this.props;\r\n    const fieldName = fieldParentTreeName + fieldElement.name;\r\n    if (event.target.checked) {\r\n      if (\r\n        fieldValue &&\r\n        fieldValue.length > 0 &&\r\n        !fieldValue.includes(event.target.value)\r\n      ) {\r\n        this.props.assignFieldValueActionCreator(fieldName, [\r\n          ...fieldValue,\r\n          event.target.value,\r\n        ]);\r\n      } else {\r\n        this.props.assignFieldValueActionCreator(fieldName, [\r\n          event.target.value,\r\n        ]);\r\n      }\r\n    } else {\r\n      if (\r\n        fieldValue &&\r\n        fieldValue.length > 0 &&\r\n        fieldValue.includes(event.target.value)\r\n      ) {\r\n        const newValue = fieldValue.filter(\r\n          (elm: any) => elm !== event.target.value\r\n        );\r\n\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldName,\r\n          newValue.length ? newValue : null\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  /** converts apeearance text into array and pass them to further process\r\n   * @param {string} stringWithSearchKeyWord - the fieldElement children appearance text (partial)\r\n   */\r\n  private getProcessedString = (stringWithSearchKeyWord: string) => {\r\n    const processedStringArray = stringWithSearchKeyWord.match(\r\n      /\\([^\\)]+\\)/i\r\n    ) || [''];\r\n    let params = processedStringArray[0];\r\n\r\n    if (params.length > 2) {\r\n      params = params.substring(1, params.length - 1);\r\n      const resultArray = params.split(',');\r\n      let criteriaParams = [...resultArray];\r\n      criteriaParams = criteriaParams.splice(2, criteriaParams.length);\r\n      return this.extractAndFilterOptions(\r\n        resultArray[0],\r\n        resultArray[1] || null,\r\n        criteriaParams || []\r\n      );\r\n    }\r\n    return [];\r\n  };\r\n\r\n  /** generates unique dropdown options using CSV\r\n   * @param {string} csvName - the CSV file name\r\n   * @param {string | null} criteriaType - criteria to match with previous user input\r\n   * @param {any} filterCriterias - previous user input collections\r\n   */\r\n  private extractAndFilterOptions = (\r\n    csvName: string,\r\n    criteriaType: string | null,\r\n    filterCriterias: any\r\n  ) => {\r\n    if (criteriaType) {\r\n      criteriaType = criteriaType.trim();\r\n      criteriaType = criteriaType.substring(1, criteriaType.length - 1).trim();\r\n    }\r\n\r\n    let options: any[] = [];\r\n    const distinctOptions: any[] = [];\r\n    const finalRes: any[] = [];\r\n    const csv: any = this.props.csvList;\r\n    csvName = csvName.substring(1, csvName.length - 1) + '.csv';\r\n\r\n    if (csv[csvName]) {\r\n      const modifiedName = csvName.replace(/'/g, '');\r\n      options = this.props.csvList[modifiedName] || [];\r\n    }\r\n\r\n    if (criteriaType && criteriaType.trim() === 'matches') {\r\n      let i = 0;\r\n      while (i < filterCriterias.length) {\r\n        let nameOfKey = filterCriterias[i].trim();\r\n        nameOfKey = nameOfKey.substring(1, nameOfKey.length - 1).trim();\r\n        const interConnectedValue = filterCriterias[i + 1];\r\n        const tempOptions = [...options];\r\n\r\n        let filterResult: any = [];\r\n        tempOptions.forEach(elm => {\r\n          filterResult = this.props.getEvaluatedExpressionSelectorForSelect(\r\n            interConnectedValue,\r\n            this.props.fieldParentTreeName + this.props.fieldElement.name,\r\n            elm\r\n          );\r\n        });\r\n\r\n        let j = 0;\r\n        filterResult.map(() => {\r\n          options.map(option => {\r\n            if (option[nameOfKey] === filterResult[j]) {\r\n              finalRes.push(option);\r\n            }\r\n          });\r\n          j = j + 1;\r\n        });\r\n\r\n        i = i + 2;\r\n      }\r\n\r\n      options = [...Array.from(new Set(finalRes))];\r\n    }\r\n\r\n    if (options.length !== 0) {\r\n      let labelColumnName: string = '';\r\n      let valueColumnName: string = '';\r\n      if (\r\n        this.props.fieldElement.children &&\r\n        this.props.fieldElement.children[0] &&\r\n        this.props.fieldElement.children[0].name &&\r\n        this.props.fieldElement.children[0].label\r\n      ) {\r\n        labelColumnName = getFieldLabelText(\r\n          this.props.fieldElement.children[0],\r\n          this.props.defaultLanguage\r\n        );\r\n        valueColumnName = this.props.fieldElement.children[0].name;\r\n      }\r\n\r\n      options.forEach(elem => {\r\n        const tmpOpt: any = {};\r\n        const label: string = 'label';\r\n        const name: string = 'name';\r\n        tmpOpt[label] = elem[labelColumnName].trim();\r\n        tmpOpt[name] = elem[valueColumnName].trim();\r\n        distinctOptions.push(tmpOpt);\r\n      });\r\n\r\n      return _.uniqBy(distinctOptions, 'name');\r\n    }\r\n    return [];\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: string[];\r\n  getEvaluatedExpressionSelector: any;\r\n  getEvaluatedExpressionSelectorForSelect: any;\r\n  getFormSubmitStatusSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  optionList: object;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const getEvaluatedExpressionSelectorForSelect = (\r\n    expression: string,\r\n    fieldTreeName: string,\r\n    options: any\r\n  ) =>\r\n    getEvaluatedExpressionForSelect(state, expression, options, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const getFormSubmitStatusSelector = getFormSubmitStatus(state);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    getEvaluatedExpressionSelectorForSelect,\r\n    getFormSubmitStatusSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n    optionList: getOptionList(state, fieldParentTreeName + fieldElement.name),\r\n  };\r\n\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  assignOptionListActionCreator: assignOptionListAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect SelectOne Radio component to the redux store */\r\nconst ConnectedSelectAllRadio = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SelectAllRadio);\r\n\r\nexport default ConnectedSelectAllRadio;\r\n","import * as React from 'react';\r\nimport { shouldComponentBeMinimal } from '../../../../../src/utils/helpers';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport Dropdown from './Dropdown';\r\nimport Radio from './Radio';\r\n\r\n/** props interface for the SelectOne component */\r\nexport interface SelectAllProps {\r\n  choices: any;\r\n  csvList: any;\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  defaultLanguage: string;\r\n}\r\n\r\nclass SelectAll extends React.Component<SelectAllProps> {\r\n  public render() {\r\n    const { fieldElement } = this.props;\r\n    if (shouldComponentBeMinimal(fieldElement)) {\r\n      return <Dropdown {...this.props} />;\r\n    }\r\n    return <Radio {...this.props} />;\r\n  }\r\n}\r\n\r\nexport default SelectAll;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport _ from 'lodash';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport { FormGroup, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  assignOptionListAction,\r\n  getEvaluatedExpression,\r\n  getEvaluatedExpressionForSelect,\r\n  getFieldValue,\r\n  getFormSubmitStatus,\r\n  getOptionList,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../../utils/helpers';\r\n\r\n/** props interface for the SelectOne component */\r\nexport interface SelectOneDropDownProps {\r\n  choices: any;\r\n  csvList: any;\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: string;\r\n  optionList: object;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  assignOptionListActionCreator: typeof assignOptionListAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: boolean;\r\n  getEvaluatedExpressionSelectorForSelect: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\n\r\nexport interface Options {\r\n  label: any;\r\n  value: string;\r\n}\r\n\r\nclass SelectOneDropDown extends React.Component<SelectOneDropDownProps> {\r\n  public render() {\r\n    const {\r\n      choices,\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      getFormSubmitStatusSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isFormSubmitted: boolean = getFormSubmitStatusSelector;\r\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\r\n    const isConstraintViolated =\r\n      fieldValue &&\r\n      fieldValue !== '' &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const modifiedFieldLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      fieldLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n\r\n    const modifiedConstraintLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      constraintLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const hintLabel = getHintLabelText(fieldElement, defaultLanguage);\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      let resultOptions: any[] = [];\r\n      const options: Options[] = [];\r\n\r\n      if (fieldElement.control && fieldElement.control.appearance) {\r\n        const updatedFieldElement: any = fieldElement.control.appearance\r\n          .toString()\r\n          .replace('minimal', '');\r\n        if (/search\\([^\\)|(]+\\)/i.test(updatedFieldElement)) {\r\n          const processedStringArray = updatedFieldElement.match(\r\n            /search\\([^\\)|(]+\\)/i\r\n          ) || [''];\r\n          resultOptions = this.getProcessedString(processedStringArray[0]);\r\n        }\r\n      }\r\n\r\n      if (\r\n        fieldElement.control &&\r\n        fieldElement.control.appearance &&\r\n        /search\\([^\\)|(]+\\)/i.test(fieldElement.control.appearance)\r\n      ) {\r\n        resultOptions.map(elem =>\r\n          options.push({ label: elem.label, value: elem.name })\r\n        );\r\n\r\n        this.setOptionList(resultOptions);\r\n      } else if (fieldElement.itemset) {\r\n        if (choices && choices[fieldElement.itemset.trim()]) {\r\n          _.forEach(choices[fieldElement.itemset.trim()], (elem: any) => {\r\n            if (\r\n              fieldElement.choice_filter &&\r\n              this.props.getEvaluatedExpressionSelectorForSelect(\r\n                fieldElement.choice_filter,\r\n                fieldParentTreeName + fieldElement.name,\r\n                elem\r\n              )\r\n            ) {\r\n              const childrenLabel: string = getFieldLabelText(\r\n                elem,\r\n                defaultLanguage\r\n              );\r\n              options.push({ label: childrenLabel, value: elem.name });\r\n            }\r\n          });\r\n          this.setOptionList(choices[fieldElement.itemset.trim()]);\r\n        }\r\n      } else {\r\n        if (fieldElement.children) {\r\n          fieldElement.children.map(elem => {\r\n            const childrenLabel: string = getFieldLabelText(\r\n              elem,\r\n              defaultLanguage\r\n            );\r\n            options.push({ label: childrenLabel, value: elem.name });\r\n          });\r\n\r\n          this.setOptionList(fieldElement.children);\r\n        }\r\n      }\r\n\r\n      if (fieldValue) {\r\n        const optionsValueArray: any = [];\r\n        options.map(elem => {\r\n          if (elem.value) {\r\n            optionsValueArray.push(elem.value);\r\n          }\r\n        });\r\n\r\n        if (!optionsValueArray.includes(fieldValue)) {\r\n          this.props.assignFieldValueActionCreator(\r\n            this.props.fieldParentTreeName + fieldElement.name,\r\n            ''\r\n          );\r\n        }\r\n      }\r\n\r\n      let selectedValue: any;\r\n      options.map(elem => {\r\n        if (elem.value === fieldValue) {\r\n          selectedValue = elem;\r\n        }\r\n      });\r\n\r\n      const isError = isPresentInErrorSelector(\r\n        fieldParentTreeName + fieldElement.name\r\n      );\r\n\r\n      return (\r\n        <FormGroup>\r\n          <Label>\r\n            {modifiedFieldLabel}{' '}\r\n            {isRequired && (\r\n              <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n            )}\r\n          </Label>\r\n          <div key={fieldElement.name} className=\"selectOneDropDown\">\r\n            <Select\r\n              multi={false}\r\n              name={fieldElement.name}\r\n              options={options}\r\n              value={selectedValue || ''}\r\n              onChange={this.onChangeHandler(fieldElement.name)}\r\n            />\r\n          </div>\r\n          {isFormSubmitted && isError && (\r\n            <FontAwesomeIcon icon=\"exclamation-circle\" className=\"errorSign\" />\r\n          )}\r\n          {fieldElement.hint && <Label className=\"hintText\">{hintLabel}</Label>}\r\n          {isFormSubmitted && isRequiredViolated && (\r\n            <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n          )}\r\n          {isConstraintViolated && (\r\n            <Label className=\"constraintText\">{modifiedConstraintLabel}</Label>\r\n          )}\r\n        </FormGroup>\r\n      );\r\n    } else {\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /** Sets the option list to the Redux Store\r\n   * @param {any} optionObject - the option object to be processed\r\n   */\r\n  private setOptionList = (optionObject: any) => {\r\n    const tempObjArray: any = [];\r\n    optionObject.map((elem: { name: any; label: any }) => {\r\n      const elemObj: any = {};\r\n      const name: string = 'name';\r\n      const label: string = 'label';\r\n      elemObj[name] = elem.name;\r\n      elemObj[label] = elem.label;\r\n      tempObjArray.push(elemObj);\r\n    });\r\n\r\n    if (!_.isEqual(this.props.optionList, { ...tempObjArray })) {\r\n      this.props.assignOptionListActionCreator(\r\n        this.props.fieldParentTreeName + this.props.fieldElement.name,\r\n        tempObjArray\r\n      );\r\n    }\r\n  };\r\n\r\n  /** sets the value of field element in store\r\n   * @param {any} event - the onchange input event\r\n   * @param {any} fieldName - the input name\r\n   */\r\n  private onChangeHandler = (fieldName: any) => (event: any) => {\r\n    this.props.assignFieldValueActionCreator(\r\n      this.props.fieldParentTreeName + fieldName,\r\n      event.value || ''\r\n    );\r\n  };\r\n\r\n  /** converts apeearance text into array and pass them to further process\r\n   * @param {string} stringWithSearchKeyWord - the fieldElement children appearance text (partial)\r\n   */\r\n  private getProcessedString = (stringWithSearchKeyWord: string) => {\r\n    const processedStringArray = stringWithSearchKeyWord.match(\r\n      /\\([^\\)]+\\)/i\r\n    ) || [''];\r\n    let params = processedStringArray[0];\r\n\r\n    if (params.length > 2) {\r\n      params = params.substring(1, params.length - 1);\r\n      const resultArray = params.split(',');\r\n      let criteriaParams = [...resultArray];\r\n      criteriaParams = criteriaParams.splice(2, criteriaParams.length);\r\n      return this.extractAndFilterOptions(\r\n        resultArray[0],\r\n        resultArray[1] || null,\r\n        criteriaParams || []\r\n      );\r\n    }\r\n    return [];\r\n  };\r\n\r\n  /** generates unique dropdown options using CSV\r\n   * @param {string} csvName - the CSV file name\r\n   * @param {string | null} criteriaType - criteria to match with previous user input\r\n   * @param {any} filterCriterias - previous user input collections\r\n   */\r\n  private extractAndFilterOptions = (\r\n    csvName: string,\r\n    criteriaType: string | null,\r\n    filterCriterias: any\r\n  ) => {\r\n    if (criteriaType) {\r\n      criteriaType = criteriaType.trim();\r\n      criteriaType = criteriaType.substring(1, criteriaType.length - 1).trim();\r\n    }\r\n\r\n    let options: any[] = [];\r\n    const distinctOptions: any[] = [];\r\n    const csv: any = this.props.csvList;\r\n    csvName = csvName.substring(1, csvName.length - 1) + '.csv';\r\n\r\n    if (csv[csvName]) {\r\n      const modifiedName = csvName.replace(/'/g, '');\r\n      options = this.props.csvList[modifiedName] || [];\r\n    }\r\n\r\n    if (criteriaType && criteriaType.trim() === 'matches') {\r\n      let i = 0;\r\n      while (i < filterCriterias.length) {\r\n        let nameOfKey = filterCriterias[i].trim();\r\n        nameOfKey = nameOfKey.substring(1, nameOfKey.length - 1).trim();\r\n        const interConnectedValue = filterCriterias[i + 1];\r\n        const tempOptions = [...options];\r\n        let filterResult: any = '';\r\n        tempOptions.forEach(elm => {\r\n          filterResult = this.props.getEvaluatedExpressionSelectorForSelect(\r\n            interConnectedValue,\r\n            this.props.fieldParentTreeName + this.props.fieldElement.name,\r\n            elm\r\n          );\r\n        });\r\n        options = options.filter(option => option[nameOfKey] === filterResult);\r\n        i = i + 2;\r\n      }\r\n    }\r\n\r\n    if (options.length !== 0) {\r\n      let labelColumnName: string = '';\r\n      let valueColumnName: string = '';\r\n      if (\r\n        this.props.fieldElement.children &&\r\n        this.props.fieldElement.children[0] &&\r\n        this.props.fieldElement.children[0].name &&\r\n        this.props.fieldElement.children[0].label\r\n      ) {\r\n        labelColumnName = getFieldLabelText(\r\n          this.props.fieldElement.children[0],\r\n          this.props.defaultLanguage\r\n        );\r\n        valueColumnName = this.props.fieldElement.children[0].name;\r\n      }\r\n\r\n      options.forEach(elem => {\r\n        const tmpOpt: any = {};\r\n        const label: string = 'label';\r\n        const name: string = 'name';\r\n        tmpOpt[label] = elem[labelColumnName].trim();\r\n        tmpOpt[name] = elem[valueColumnName].trim();\r\n        distinctOptions.push(tmpOpt);\r\n      });\r\n\r\n      return _.uniqBy(distinctOptions, 'name');\r\n    }\r\n    return [];\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: string;\r\n  getEvaluatedExpressionSelector: any;\r\n  getEvaluatedExpressionSelectorForSelect: any;\r\n  getFormSubmitStatusSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  optionList: object;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  defaultLanguage: string;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n\r\n  const getEvaluatedExpressionSelectorForSelect = (\r\n    expression: string,\r\n    fieldTreeName: string,\r\n    options: any\r\n  ) =>\r\n    getEvaluatedExpressionForSelect(state, expression, options, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const getFormSubmitStatusSelector = getFormSubmitStatus(state);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    getEvaluatedExpressionSelectorForSelect,\r\n    getFormSubmitStatusSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n    optionList: getOptionList(state, fieldParentTreeName + fieldElement.name),\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  assignOptionListActionCreator: assignOptionListAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect SelectOne component to the redux store */\r\nconst ConnectedSelectOneDropDown = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SelectOneDropDown);\r\n\r\nexport default ConnectedSelectOneDropDown;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport _ from 'lodash';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  assignOptionListAction,\r\n  getEvaluatedExpression,\r\n  getEvaluatedExpressionForSelect,\r\n  getFieldValue,\r\n  getFormSubmitStatus,\r\n  getOptionList,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeReadOnly,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../../utils/helpers';\r\n\r\n/** props interface for the SelectOne component */\r\nexport interface SelectOneRadioProps {\r\n  choices: any;\r\n  csvList: any;\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: string;\r\n  optionList: object;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  assignOptionListActionCreator: typeof assignOptionListAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  getEvaluatedExpressionSelectorForSelect: any;\r\n  getFormSubmitStatusSelector: boolean;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\n\r\nexport interface Options {\r\n  label: any;\r\n  value: string;\r\n}\r\n\r\nclass SelectOneRadio extends React.Component<SelectOneRadioProps> {\r\n  public render() {\r\n    const {\r\n      choices,\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      getFormSubmitStatusSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isFormSubmitted: boolean = getFormSubmitStatusSelector;\r\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\r\n    const isConstraintViolated =\r\n      fieldValue &&\r\n      fieldValue !== '' &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const modifiedFieldLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      fieldLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n    const modifiedConstraintLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      constraintLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const hintLabel = getHintLabelText(fieldElement, defaultLanguage);\r\n\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n      const isReadonly = shouldComponentBeReadOnly(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      let resultOptions: any[] = [];\r\n\r\n      if (fieldElement.control && fieldElement.control.appearance) {\r\n        if (/search\\([^\\)|(]+\\)/i.test(fieldElement.control.appearance)) {\r\n          const processedStringArray = fieldElement.control.appearance.match(\r\n            /search\\([^\\)|(]+\\)/i\r\n          ) || [''];\r\n\r\n          resultOptions = this.getProcessedString(processedStringArray[0]);\r\n        }\r\n      }\r\n\r\n      const childrenArray: any = [];\r\n      if (fieldElement.children) {\r\n        fieldElement.children.map(elem => {\r\n          const elemObj: any = {};\r\n          const name: string = 'name';\r\n          const label: string = 'label';\r\n          elemObj[name] = elem.name;\r\n          elemObj[label] = elem.label;\r\n          childrenArray.push(elemObj);\r\n        });\r\n      }\r\n\r\n      let values: any = [];\r\n\r\n      if (\r\n        fieldElement.control &&\r\n        fieldElement.control.appearance &&\r\n        /search\\([^\\)|(]+\\)/i.test(fieldElement.control.appearance)\r\n      ) {\r\n        values = [];\r\n        if (fieldValue) {\r\n          const optionsValueArray: any = [];\r\n          resultOptions.map(elem => {\r\n            if (elem.name) {\r\n              optionsValueArray.push(elem.name);\r\n            }\r\n          });\r\n\r\n          if (!optionsValueArray.includes(fieldValue)) {\r\n            this.props.assignFieldValueActionCreator(\r\n              this.props.fieldParentTreeName + fieldElement.name,\r\n              ''\r\n            );\r\n          }\r\n        }\r\n\r\n        if (!_.isEqual(this.props.optionList, { ...resultOptions })) {\r\n          this.props.assignOptionListActionCreator(\r\n            this.props.fieldParentTreeName + fieldElement.name,\r\n            resultOptions\r\n          );\r\n        }\r\n        values = [...resultOptions];\r\n      } else if (fieldElement.itemset) {\r\n        const choiceOptions: any = [];\r\n        values = [];\r\n        if (choices && choices[fieldElement.itemset.trim()]) {\r\n          _.forEach(choices[fieldElement.itemset.trim()], (elem: any) => {\r\n            if (\r\n              fieldElement.choice_filter &&\r\n              this.props.getEvaluatedExpressionSelectorForSelect(\r\n                fieldElement.choice_filter,\r\n                fieldParentTreeName + fieldElement.name,\r\n                elem\r\n              )\r\n            ) {\r\n              const childrenLabel: string = getFieldLabelText(\r\n                elem,\r\n                defaultLanguage\r\n              );\r\n              choiceOptions.push({ label: childrenLabel, name: elem.name });\r\n            }\r\n          });\r\n\r\n          if (fieldValue) {\r\n            const optionsValueArray: any = [];\r\n            choiceOptions.map((elem: any) => {\r\n              if (elem.name) {\r\n                optionsValueArray.push(elem.name);\r\n              }\r\n            });\r\n            if (!optionsValueArray.includes(fieldValue)) {\r\n              this.props.assignFieldValueActionCreator(\r\n                this.props.fieldParentTreeName + fieldElement.name,\r\n                ''\r\n              );\r\n            }\r\n          }\r\n          if (!_.isEqual(this.props.optionList, { ...choiceOptions })) {\r\n            this.props.assignOptionListActionCreator(\r\n              this.props.fieldParentTreeName + fieldElement.name,\r\n              choiceOptions\r\n            );\r\n          }\r\n          values = [...choiceOptions];\r\n        }\r\n      } else {\r\n        values = [];\r\n        if (!_.isEqual(this.props.optionList, { ...childrenArray })) {\r\n          this.props.assignOptionListActionCreator(\r\n            this.props.fieldParentTreeName + fieldElement.name,\r\n            childrenArray\r\n          );\r\n        }\r\n        values = [...childrenArray];\r\n      }\r\n\r\n      let flagInline = false;\r\n      if (fieldElement.control && fieldElement.control.appearance) {\r\n        fieldElement.control.appearance.split(' ').forEach((tmpStyle: any) => {\r\n          if (!flagInline && tmpStyle === 'horizontal-compact') {\r\n            flagInline = true;\r\n          }\r\n        });\r\n      }\r\n\r\n      const isError = isPresentInErrorSelector(\r\n        fieldParentTreeName + fieldElement.name\r\n      );\r\n\r\n      return (\r\n        <div>\r\n          <Label>\r\n            {modifiedFieldLabel}{' '}\r\n            {isRequired && (\r\n              <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n            )}\r\n          </Label>\r\n          <Form key=\"selectOne\">\r\n            {values.map((elem: any, index: any) => (\r\n              <FormGroup key={index} check={true} inline={flagInline}>\r\n                <Label check={true}>\r\n                  <Input\r\n                    key={fieldElement.name + '-' + index}\r\n                    type=\"radio\"\r\n                    name={fieldElement.name}\r\n                    value={elem.name}\r\n                    onChange={this.onChangeHandlerRadio(fieldElement.name)}\r\n                    readOnly={isReadonly}\r\n                    checked={elem.name === fieldValue}\r\n                  />{' '}\r\n                  {getFieldLabelText(elem, defaultLanguage)}\r\n                </Label>\r\n              </FormGroup>\r\n            ))}\r\n          </Form>\r\n          {isFormSubmitted && isError && (\r\n            <FontAwesomeIcon icon=\"exclamation-circle\" className=\"errorSign\" />\r\n          )}\r\n          {fieldElement.hint && <Label className=\"hintText\">{hintLabel}</Label>}\r\n          {isFormSubmitted && isRequiredViolated && (\r\n            <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n          )}\r\n          {isConstraintViolated && (\r\n            <Label className=\"constraintText\">{modifiedConstraintLabel}</Label>\r\n          )}\r\n        </div>\r\n      );\r\n    } else {\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n  /** sets the value of Radio Button field element in store\r\n   * @param {any} event - the onchange input event\r\n   * @param {any} fieldName - the input name\r\n   */\r\n  private onChangeHandlerRadio = (fieldName: any) => (event: any) => {\r\n    this.props.assignFieldValueActionCreator(\r\n      this.props.fieldParentTreeName + fieldName,\r\n      event.target.value || ''\r\n    );\r\n  };\r\n\r\n  /** converts apeearance text into array and pass them to further process\r\n   * @param {string} stringWithSearchKeyWord - the fieldElement children appearance text (partial)\r\n   */\r\n  private getProcessedString = (stringWithSearchKeyWord: string) => {\r\n    const processedStringArray = stringWithSearchKeyWord.match(\r\n      /\\([^\\)]+\\)/i\r\n    ) || [''];\r\n    let params = processedStringArray[0];\r\n\r\n    if (params.length > 2) {\r\n      params = params.substring(1, params.length - 1);\r\n      const resultArray = params.split(',');\r\n      let criteriaParams = [...resultArray];\r\n      criteriaParams = criteriaParams.splice(2, criteriaParams.length);\r\n      return this.extractAndFilterOptions(\r\n        resultArray[0],\r\n        resultArray[1] || null,\r\n        criteriaParams || []\r\n      );\r\n    }\r\n    return [];\r\n  };\r\n\r\n  /** generates unique radio button options using CSV\r\n   * @param {string} csvName - the CSV file name\r\n   * @param {string | null} criteriaType - criteria to match with previous user input\r\n   * @param {any} filterCriterias - previous user input collections\r\n   */\r\n  private extractAndFilterOptions = (\r\n    csvName: string,\r\n    criteriaType: string | null,\r\n    filterCriterias: any\r\n  ) => {\r\n    if (criteriaType) {\r\n      criteriaType = criteriaType.trim();\r\n      criteriaType = criteriaType.substring(1, criteriaType.length - 1).trim();\r\n    }\r\n\r\n    let options: any[] = [];\r\n    const distinctOptions: any[] = [];\r\n    const csv: any = this.props.csvList;\r\n    csvName = csvName.substring(1, csvName.length - 1) + '.csv';\r\n    if (csv[csvName]) {\r\n      const modifiedName = csvName.replace(/'/g, '');\r\n      options = this.props.csvList[modifiedName] || [];\r\n    }\r\n\r\n    if (criteriaType && criteriaType.trim() === 'matches') {\r\n      let i = 0;\r\n      while (i < filterCriterias.length) {\r\n        let nameOfKey = filterCriterias[i].trim();\r\n        nameOfKey = nameOfKey.substring(1, nameOfKey.length - 1).trim();\r\n        const interConnectedValue = filterCriterias[i + 1];\r\n        const tempOptions = [...options];\r\n        let filterResult: any = '';\r\n        tempOptions.forEach(elm => {\r\n          filterResult = this.props.getEvaluatedExpressionSelectorForSelect(\r\n            interConnectedValue,\r\n            this.props.fieldParentTreeName + this.props.fieldElement.name,\r\n            elm\r\n          );\r\n        });\r\n        options = options.filter(option => option[nameOfKey] === filterResult);\r\n        i = i + 2;\r\n      }\r\n    }\r\n    if (options.length !== 0) {\r\n      let labelColumnName: string = '';\r\n      let valueColumnName: string = '';\r\n      if (\r\n        this.props.fieldElement.children &&\r\n        this.props.fieldElement.children[0] &&\r\n        this.props.fieldElement.children[0].name &&\r\n        this.props.fieldElement.children[0].label\r\n      ) {\r\n        labelColumnName = getFieldLabelText(\r\n          this.props.fieldElement.children[0],\r\n          this.props.defaultLanguage\r\n        );\r\n        valueColumnName = this.props.fieldElement.children[0].name;\r\n      }\r\n      options.forEach(elem => {\r\n        const tmpOpt: any = {};\r\n        const label: string = 'label';\r\n        const name: string = 'name';\r\n        tmpOpt[label] = elem[labelColumnName].trim();\r\n        tmpOpt[name] = elem[valueColumnName].trim();\r\n        distinctOptions.push(tmpOpt);\r\n      });\r\n      return _.uniqBy(distinctOptions, 'name');\r\n    }\r\n    return [];\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: string;\r\n  getEvaluatedExpressionSelector: any;\r\n  getEvaluatedExpressionSelectorForSelect: any;\r\n  getFormSubmitStatusSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  optionList: object;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  defaultLanguage: string;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const getEvaluatedExpressionSelectorForSelect = (\r\n    expression: string,\r\n    fieldTreeName: string,\r\n    options: any\r\n  ) =>\r\n    getEvaluatedExpressionForSelect(state, expression, options, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const getFormSubmitStatusSelector = getFormSubmitStatus(state);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    getEvaluatedExpressionSelectorForSelect,\r\n    getFormSubmitStatusSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n    optionList: getOptionList(state, fieldParentTreeName + fieldElement.name),\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  assignOptionListActionCreator: assignOptionListAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect SelectOne Radio component to the redux store */\r\nconst ConnectedSelectOneRadio = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SelectOneRadio);\r\n\r\nexport default ConnectedSelectOneRadio;\r\n","import * as React from 'react';\r\nimport { shouldComponentBeMinimal } from '../../../../../src/utils/helpers';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport Dropdown from './Dropdown';\r\nimport Radio from './Radio';\r\n\r\n/** props interface for the SelectOne component */\r\nexport interface SelectOneProps {\r\n  choices: any;\r\n  csvList: any;\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  defaultLanguage: string;\r\n}\r\n\r\nclass SelectOne extends React.Component<SelectOneProps> {\r\n  public render() {\r\n    const { fieldElement } = this.props;\r\n    if (shouldComponentBeMinimal(fieldElement)) {\r\n      return <Dropdown {...this.props} />;\r\n    }\r\n    return <Radio {...this.props} />;\r\n  }\r\n}\r\n\r\nexport default SelectOne;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  getEvaluatedExpression,\r\n  getFieldValue,\r\n  getFormSubmitStatus,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeReadOnly,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../utils/helpers';\r\n\r\n/** props interface for the text component */\r\nexport interface TextProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: string;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: boolean;\r\n  isPresentInErrorSelector: any;\r\n  isComponentRender: boolean;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\n\r\nexport interface TextState {\r\n  fieldValue: string;\r\n  isFocused: boolean;\r\n}\r\n\r\nclass Text extends React.Component<TextProps, TextState> {\r\n  constructor(props: TextProps) {\r\n    super(props);\r\n    this.state = { fieldValue: '', isFocused: false };\r\n  }\r\n\r\n  public render() {\r\n    const {\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      getFormSubmitStatusSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isFormSubmitted: boolean = getFormSubmitStatusSelector;\r\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\r\n    const isConstraintViolated =\r\n      fieldValue &&\r\n      fieldValue !== '' &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const modifiedFieldLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      fieldLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n    const modifiedConstraintLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      constraintLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n\r\n    const hintLabel = getHintLabelText(fieldElement, defaultLanguage);\r\n\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n      const isReadonly = shouldComponentBeReadOnly(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      const isError = isPresentInErrorSelector(\r\n        fieldParentTreeName + fieldElement.name\r\n      );\r\n\r\n      if (fieldElement.bind && fieldElement.bind.calculate) {\r\n        let calculatedValue: any = '';\r\n        calculatedValue = this.props.getEvaluatedExpressionSelector(\r\n          fieldElement.bind.calculate,\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n\r\n        if (calculatedValue && calculatedValue !== fieldValue) {\r\n          this.props.assignFieldValueActionCreator(\r\n            fieldParentTreeName + fieldElement.name,\r\n            calculatedValue\r\n          );\r\n        }\r\n\r\n        return (\r\n          <FormGroup>\r\n            <Label>\r\n              {modifiedFieldLabel}{' '}\r\n              {isRequired && (\r\n                <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n              )}\r\n            </Label>\r\n            <Input\r\n              type=\"text\"\r\n              name={fieldElement.name}\r\n              onChange={this.onChangeHandler}\r\n              onBlur={this.onBlurHandler}\r\n              value={\r\n                this.state.isFocused\r\n                  ? this.state.fieldValue || ''\r\n                  : calculatedValue || ''\r\n              }\r\n              readOnly={isReadonly}\r\n            />\r\n            {isFormSubmitted && isError && (\r\n              <FontAwesomeIcon\r\n                icon=\"exclamation-circle\"\r\n                className=\"errorSign\"\r\n              />\r\n            )}\r\n            {fieldElement.hint && (\r\n              <Label className=\"hintText\">{hintLabel}</Label>\r\n            )}\r\n            {isFormSubmitted && isRequiredViolated && (\r\n              <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n            )}\r\n            {isConstraintViolated && (\r\n              <Label className=\"constraintText\">\r\n                {modifiedConstraintLabel}\r\n              </Label>\r\n            )}\r\n          </FormGroup>\r\n        );\r\n      } else {\r\n        return (\r\n          <FormGroup>\r\n            <Label>\r\n              {modifiedFieldLabel}{' '}\r\n              {isRequired && (\r\n                <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n              )}\r\n            </Label>\r\n            <Input\r\n              type=\"text\"\r\n              name={fieldElement.name}\r\n              onChange={this.onChangeHandler}\r\n              onBlur={this.onBlurHandler}\r\n              value={\r\n                this.state.isFocused\r\n                  ? this.state.fieldValue || ''\r\n                  : fieldValue || ''\r\n              }\r\n              readOnly={isReadonly}\r\n            />\r\n            {isFormSubmitted && isError && (\r\n              <FontAwesomeIcon\r\n                icon=\"exclamation-circle\"\r\n                className=\"errorSign\"\r\n              />\r\n            )}\r\n            {fieldElement.hint && (\r\n              <Label className=\"hintText\">{hintLabel}</Label>\r\n            )}\r\n            {isFormSubmitted && isRequiredViolated && (\r\n              <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n            )}\r\n            {isConstraintViolated && (\r\n              <Label className=\"constraintText\">\r\n                {modifiedConstraintLabel}\r\n              </Label>\r\n            )}\r\n          </FormGroup>\r\n        );\r\n      }\r\n    } else {\r\n      if (this.state.isFocused) {\r\n        this.setState({ ...this.state, isFocused: false });\r\n      }\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /** sets the value of field element in store\r\n   * @param {React.FormEvent<HTMLInputElement>} event - the onchange input event\r\n   */\r\n  private onChangeHandler = (event: React.FormEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      ...this.state,\r\n      fieldValue: event.currentTarget.value || '',\r\n      isFocused: true,\r\n    });\r\n  };\r\n\r\n  private onBlurHandler = (event: React.FormEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      ...this.state,\r\n      fieldValue: event.currentTarget.value || '',\r\n      isFocused: false,\r\n    });\r\n    this.props.assignFieldValueActionCreator(\r\n      this.props.fieldParentTreeName + event.currentTarget.name,\r\n      event.currentTarget.value || ''\r\n    );\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: string;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const getFormSubmitStatusSelector = getFormSubmitStatus(state);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    getFormSubmitStatusSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect Text component to the redux store */\r\nconst ConnectedText = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Text);\r\n\r\nexport default ConnectedText;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  getEvaluatedExpression,\r\n  getFieldValue,\r\n  getFormSubmitStatus,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeReadOnly,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../utils/helpers';\r\n\r\n/** props interface for the KbTime component */\r\nexport interface TimeProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: any;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: boolean;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\n\r\nclass KbTime extends React.Component<TimeProps> {\r\n  public render() {\r\n    const {\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      getFormSubmitStatusSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isFormSubmitted: boolean = getFormSubmitStatusSelector;\r\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\r\n    const isConstraintViolated =\r\n      fieldValue &&\r\n      fieldValue !== '' &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const modifiedFieldLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      fieldLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n    const modifiedConstraintLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      constraintLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const hintLabel = getHintLabelText(fieldElement, defaultLanguage);\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n      const isReadonly = shouldComponentBeReadOnly(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      const isError = isPresentInErrorSelector(\r\n        fieldParentTreeName + fieldElement.name\r\n      );\r\n\r\n      return (\r\n        <FormGroup>\r\n          <Label>\r\n            {modifiedFieldLabel}{' '}\r\n            {isRequired && (\r\n              <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n            )}\r\n          </Label>\r\n          <Input\r\n            type=\"time\"\r\n            name={fieldElement.name}\r\n            onChange={this.onChangeHandler}\r\n            value={fieldValue || ''}\r\n            readOnly={isReadonly}\r\n          />\r\n          {isFormSubmitted && isError && (\r\n            <FontAwesomeIcon icon=\"exclamation-circle\" className=\"errorSign\" />\r\n          )}\r\n          {fieldElement.hint && <Label className=\"hintText\">{hintLabel}</Label>}\r\n          {isFormSubmitted && isRequiredViolated && (\r\n            <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n          )}\r\n          {isConstraintViolated && (\r\n            <Label className=\"constraintText\">{modifiedConstraintLabel}</Label>\r\n          )}\r\n        </FormGroup>\r\n      );\r\n    } else {\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private onChangeHandler = (event: React.FormEvent<HTMLInputElement>) => {\r\n    this.props.assignFieldValueActionCreator(\r\n      this.props.fieldParentTreeName + event.currentTarget.name,\r\n      event.currentTarget.value !== '' ? event.currentTarget.value : null\r\n    );\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: any;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const getFormSubmitStatusSelector = getFormSubmitStatus(state);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    getFormSubmitStatusSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect KbTime component to the redux store */\r\nconst ConnectedTime = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(KbTime);\r\n\r\nexport default ConnectedTime;\r\n","import * as React from 'react';\r\nimport {\r\n  CALCULATE_FIELD_TYPE,\r\n  DATE_FIELD_TYPE,\r\n  DATE_TIME_FIELD_TYPE,\r\n  DECIMAL_FIELD_TYPE,\r\n  FILE_FIELD_TYPE,\r\n  INTEGER_FIELD_TYPE,\r\n  NOTE_FIELD_TYPE,\r\n  PHOTO_FIELD_TYPE,\r\n  SELECT_ALL_FIELD_TYPE,\r\n  SELECT_ONE_FIELD_TYPE,\r\n  TEXT_FIELD_TYPE,\r\n  TIME_FIELD_TYPE,\r\n} from '../../../constants';\r\nimport Calculate from '../../../containers/fields/base/Calculate';\r\nimport KbDate from '../../../containers/fields/base/Date';\r\nimport DateTime from '../../../containers/fields/base/Date Time';\r\nimport Decimal from '../../../containers/fields/base/Decimal';\r\nimport File from '../../../containers/fields/base/File';\r\nimport Integer from '../../../containers/fields/base/Integer';\r\nimport Note from '../../../containers/fields/base/Note';\r\nimport SelectAll from '../../../containers/fields/base/Select All';\r\nimport SelectOne from '../../../containers/fields/base/Select One';\r\nimport Text from '../../../containers/fields/base/Text';\r\nimport KbTime from '../../../containers/fields/base/Time';\r\n\r\n/** type of fieldParentTreeName */\r\nexport type FieldParentTreeName = string;\r\n\r\n/** interface for bind property */\r\ninterface BindProperty {\r\n  calculate?: string;\r\n  relevant?: string;\r\n  readonly?: string;\r\n  appearance?: string;\r\n  required?: string;\r\n  constraint?: string;\r\n  'jr:constraintMsg'?: { [key: string]: string } | string;\r\n}\r\n\r\n/** interface for kobo field element */\r\nexport interface FieldElement {\r\n  name: string;\r\n  type: string;\r\n  children?: any[];\r\n  bind?: BindProperty;\r\n  label?: { [key: string]: string } | string;\r\n  default?: any;\r\n  control?: any;\r\n  hint?: any;\r\n  itemset?: string;\r\n  choice_filter?: string;\r\n}\r\n\r\n/** props interface for BaseTypeEvaluator component */\r\nexport interface BaseTypeEvaluatorProps {\r\n  choices: any;\r\n  csvList: any;\r\n  defaultLanguage: string;\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n}\r\n\r\nclass BaseTypeEvaluator extends React.Component<BaseTypeEvaluatorProps> {\r\n  public render() {\r\n    const {\r\n      choices,\r\n      csvList,\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      defaultLanguage,\r\n    } = this.props;\r\n    return this.typeEvaluator(\r\n      choices,\r\n      csvList,\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      defaultLanguage\r\n    );\r\n  }\r\n\r\n  /** returns jsx components based on field types\r\n   * @param {any} choices - the choices of form definition\r\n   * @param {FieldElement} fieldElement - the field element object\r\n   * @param {FieldParentTreeName} fieldParentTreeName - the field parent hierchical name\r\n   * @return {React.ReactElement} - jsx base components\r\n   */\r\n  private typeEvaluator(\r\n    choices: any,\r\n    csvList: any,\r\n    fieldElement: FieldElement,\r\n    fieldParentTreeName: FieldParentTreeName,\r\n    defaultLanguage: string\r\n  ): React.ReactElement {\r\n    switch (fieldElement.type) {\r\n      case TEXT_FIELD_TYPE:\r\n        return (\r\n          <Text\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n          />\r\n        );\r\n      case DATE_FIELD_TYPE:\r\n        return (\r\n          <KbDate\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n          />\r\n        );\r\n      case TIME_FIELD_TYPE:\r\n        return (\r\n          <KbTime\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n          />\r\n        );\r\n      case DATE_TIME_FIELD_TYPE:\r\n        return (\r\n          <DateTime\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n          />\r\n        );\r\n      case INTEGER_FIELD_TYPE:\r\n        return (\r\n          <Integer\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n          />\r\n        );\r\n      case DECIMAL_FIELD_TYPE:\r\n        return (\r\n          <Decimal\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n          />\r\n        );\r\n      case NOTE_FIELD_TYPE:\r\n        return (\r\n          <Note\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n          />\r\n        );\r\n      case CALCULATE_FIELD_TYPE:\r\n        return (\r\n          <Calculate\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n          />\r\n        );\r\n      case SELECT_ONE_FIELD_TYPE:\r\n        return (\r\n          <SelectOne\r\n            choices={choices}\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n            csvList={csvList}\r\n          />\r\n        );\r\n      case SELECT_ALL_FIELD_TYPE:\r\n        return (\r\n          <SelectAll\r\n            choices={choices}\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n            csvList={csvList}\r\n          />\r\n        );\r\n      case PHOTO_FIELD_TYPE:\r\n        return (\r\n          <File\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n          />\r\n        );\r\n      case FILE_FIELD_TYPE:\r\n        return (\r\n          <File\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <div style={{ display: 'none' }}>\r\n            Other {fieldElement.type} {fieldElement.name}\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nexport default BaseTypeEvaluator;\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport { GROUP_FIELD_TYPE, REPEAT_FIELD_TYPE } from '../../../constants';\r\nimport Group from '../../../containers/fields/group/Group';\r\nimport Repeat from '../../../containers/fields/group/Repeat';\r\nimport { getEvaluatedExpression } from '../../../store/ducks/formState';\r\nimport { shouldComponentBeRelevant } from '../../../utils/helpers';\r\nimport BaseTypeEvaluator, { FieldElement, FieldParentTreeName } from '../Base';\r\n\r\n/** props Interface for the GroupTypeEvaluator component */\r\nexport interface GroupTypeEvaluatorProps {\r\n  choices: any;\r\n  csvList: any;\r\n  defaultLanguage: string;\r\n  fieldElements: FieldElement[];\r\n  fieldParentTreeName: string;\r\n  isAppearanceApplicable: boolean;\r\n  getEvaluatedExpressionSelector: any;\r\n}\r\n\r\nclass GroupTypeEvaluator extends React.Component<GroupTypeEvaluatorProps> {\r\n  public render() {\r\n    const {\r\n      choices,\r\n      csvList,\r\n      fieldElements,\r\n      fieldParentTreeName,\r\n      defaultLanguage,\r\n      isAppearanceApplicable,\r\n    } = this.props;\r\n    return (\r\n      <Row className=\"groupTypeEvaluatorRow\">\r\n        {fieldElements.map((fieldElement) => {\r\n          const value: number = this.getAppearanceValue(\r\n            fieldElement,\r\n            fieldParentTreeName,\r\n            isAppearanceApplicable,\r\n          );\r\n          return (\r\n            <Col\r\n              key={`group_${fieldElement.name}`}\r\n              className=\"groupTypeEvaluator\"\r\n              md={value}\r\n              hidden={value === 0}\r\n            >\r\n              {this.typeEvaluator(\r\n                choices,\r\n                csvList,\r\n                fieldElement,\r\n                fieldParentTreeName,\r\n                defaultLanguage,\r\n              )}\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  /** returns jsx components based on field types\r\n   * @param {any} choices - the form choices\r\n   * @param {FieldElement} fieldElement - the field element object\r\n   * @param {FieldParentTreeName} - the field parent hierarchical name\r\n   * @return {React.ReactElement} - jsx group components/ base evaluator component\r\n   */\r\n  private typeEvaluator(\r\n    choices: any,\r\n    csvList: any,\r\n    fieldElement: FieldElement,\r\n    fieldParentTreeName: FieldParentTreeName,\r\n    defaultLanguage: string,\r\n  ): React.ReactElement {\r\n    switch (fieldElement.type) {\r\n      case GROUP_FIELD_TYPE:\r\n        return (\r\n          <div>\r\n            <Group\r\n              choices={choices}\r\n              fieldElement={fieldElement}\r\n              fieldParentTreeName={fieldParentTreeName}\r\n              defaultLanguage={defaultLanguage}\r\n              csvList={csvList}\r\n            />\r\n          </div>\r\n        );\r\n      case REPEAT_FIELD_TYPE:\r\n        return (\r\n          <div>\r\n            <Repeat\r\n              choices={choices}\r\n              fieldElement={fieldElement}\r\n              fieldParentTreeName={fieldParentTreeName}\r\n              defaultLanguage={defaultLanguage}\r\n              csvList={csvList}\r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return (\r\n          <BaseTypeEvaluator\r\n            choices={choices}\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n            csvList={csvList}\r\n          />\r\n        );\r\n    }\r\n  }\r\n\r\n  private getAppearanceValue = (\r\n    fieldElement: FieldElement,\r\n    fieldParentTreeName: string,\r\n    isAppearanceApplicable: boolean,\r\n  ): number => {\r\n    const isRender: boolean = shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      this.props.getEvaluatedExpressionSelector,\r\n    );\r\n\r\n    if (!isRender) {\r\n      return 0;\r\n    } if (\r\n      isRender\r\n      && isAppearanceApplicable\r\n      && fieldElement.control\r\n      && fieldElement.control.appearance\r\n    ) {\r\n      if (/^w(\\d+)\\b/i.test(fieldElement.control.appearance)) {\r\n        const processedStringArray = fieldElement.control.appearance.match(\r\n          /^w(\\d+)\\b/i,\r\n        );\r\n        const processedString = processedStringArray[0].replace('w', '');\r\n        const result = isNaN(processedString)\r\n          ? 12\r\n          : parseInt(processedString, 10);\r\n        return result;\r\n      }\r\n    }\r\n    return 12;\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  getEvaluatedExpressionSelector: any;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (state: Partial<Store>): DispatchedStateProps => {\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string,\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n\r\n  const result = {\r\n    getEvaluatedExpressionSelector,\r\n  };\r\n  return result;\r\n};\r\n\r\n/** connect GroupTypeEvaluator component to the redux store */\r\nconst ConnectedGroupTypeEvaluator = connect(mapStateToProps)(\r\n  GroupTypeEvaluator,\r\n);\r\n\r\nexport default ConnectedGroupTypeEvaluator;\r\n","import { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faExclamationCircle,\r\n  faMinusCircle,\r\n  faPlusCircle,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Col, Container, Row } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport KbAlert from '../components/Alert';\r\nimport DropDown from '../components/DropDown';\r\nimport GroupTypeEvaluator from '../components/typeEvalutors/Group';\r\nimport {\r\n  getAllFileObjects,\r\n  getUserInputFromStore,\r\n  isErrorsArrayEmpty,\r\n  resetStoreAction,\r\n  setFormSubmitStatus,\r\n  setUserInputObj,\r\n  setUserLanguage,\r\n} from '../store/ducks/formState';\r\n\r\nlibrary.add(faPlusCircle, faMinusCircle, faExclamationCircle);\r\n\r\nexport interface AppProps {\r\n  choices: any;\r\n  csvList: any;\r\n  isNoErrors: any;\r\n  userInputObj: any;\r\n  userInputJson: any;\r\n  defaultLanguage: string;\r\n  formTitle: string;\r\n  fieldElements: any;\r\n  setUserInputAction: typeof setUserInputObj;\r\n  setUserLanguageAction: typeof setUserLanguage;\r\n  languageOptions: any;\r\n  setFormSubmitStatusAction: typeof setFormSubmitStatus;\r\n  resetStoreActionCreator: typeof resetStoreAction;\r\n  mediaList: any;\r\n  handleSubmit(userInput: any, mediaList: any): any;\r\n}\r\n\r\nexport interface AppState {\r\n  defaultLanguage: string;\r\n  isSubmissionError: boolean;\r\n}\r\n\r\nclass App extends React.Component<AppProps, AppState> {\r\n  constructor(props: AppProps) {\r\n    super(props);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    const { userInputJson, userInputObj } = this.props;\r\n    this.props.resetStoreActionCreator();\r\n    if (userInputJson && userInputJson !== userInputObj) {\r\n      this.props.setUserInputAction(userInputJson);\r\n    }\r\n    this.props.setUserLanguageAction(this.props.defaultLanguage);\r\n    this.setState({\r\n      defaultLanguage: this.props.defaultLanguage,\r\n      isSubmissionError: false,\r\n    });\r\n  }\r\n\r\n  public handleSelect = (languageName: string) => {\r\n    this.setState({ defaultLanguage: languageName });\r\n    this.props.setUserLanguageAction(this.props.defaultLanguage);\r\n  };\r\n\r\n  public render() {\r\n    const {\r\n      csvList,\r\n      fieldElements,\r\n      formTitle,\r\n      languageOptions,\r\n      choices,\r\n    } = this.props;\r\n    const { defaultLanguage } = this.state || this.props;\r\n\r\n    const props = {\r\n      choices,\r\n      csvList,\r\n      defaultLanguage,\r\n      fieldElements,\r\n      fieldParentTreeName: '',\r\n      isAppearanceApplicable: false,\r\n      languageOptions,\r\n    };\r\n\r\n    return (\r\n      <Container className=\"form-container\">\r\n        <Row className={'form-title formTitle'}>\r\n          <Col>\r\n            <h3 className=\"headerText\">{formTitle}</h3>\r\n          </Col>\r\n          <DropDown\r\n            languages={...languageOptions}\r\n            onChangeSelect={this.handleSelect}\r\n            defaultLanguage={defaultLanguage}\r\n          />\r\n        </Row>\r\n        {this.state && this.state.isSubmissionError && (\r\n          <KbAlert\r\n            color={'danger'}\r\n            isOpen={this.state.isSubmissionError}\r\n            handleToggle={this.toggleStateValue}\r\n            headerText={'Oh snap! You got an error!'}\r\n            bodyText={\r\n              'Please make sure the required fields are not missing and there are no errors'\r\n            }\r\n          />\r\n        )}\r\n        <Row className=\"formFieldBody\">\r\n          <Col>\r\n            <GroupTypeEvaluator {...props} />\r\n            <Row className=\"welcome-box\" style={{ padding: 10 }}>\r\n              <Col>\r\n                <Button className=\"btn btn-success\" onClick={this.handleClick}>\r\n                  Submit\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  private handleClick = (_event: React.MouseEvent<HTMLButtonElement>) => {\r\n    const { handleSubmit, isNoErrors, userInputObj, mediaList } = this.props;\r\n    if (isNoErrors) {\r\n      handleSubmit(userInputObj, mediaList);\r\n    } else {\r\n      handleSubmit('Field Violated', mediaList);\r\n      this.setState({ isSubmissionError: true });\r\n      this.props.setFormSubmitStatusAction(true);\r\n      window.scrollTo(0, 0);\r\n    }\r\n  };\r\n\r\n  private toggleStateValue = () => {\r\n    this.setState({ isSubmissionError: false });\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  isNoErrors: any;\r\n  userInputObj: any;\r\n  mediaList: any;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (state: Partial<Store>): DispatchedStateProps => {\r\n  const result = {\r\n    isNoErrors: isErrorsArrayEmpty(state),\r\n    mediaList: getAllFileObjects(state),\r\n    userInputObj: getUserInputFromStore(state),\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  resetStoreActionCreator: resetStoreAction,\r\n  setFormSubmitStatusAction: setFormSubmitStatus,\r\n  setUserInputAction: setUserInputObj,\r\n  setUserLanguageAction: setUserLanguage,\r\n};\r\n\r\n/** connect Decimal component to the redux store */\r\nconst ConnectedApp = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n\r\nexport default ConnectedApp;\r\n","import { MuiThemeProvider } from '@material-ui/core';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { theme } from './utils/Theme';\r\nimport App from './App';\r\nimport store from './store';\r\n\r\nexport interface OdkFormRendererProps {\r\n  csvList: any;\r\n  defaultLanguage: string;\r\n  formDefinitionJson: any;\r\n  languageOptions: any;\r\n  userInputJson: any;\r\n  handleSubmit: (userInput: any, mediaList: any) => any;\r\n}\r\n\r\nclass OdkFormRenderer extends React.Component<OdkFormRendererProps> {\r\n  public render() {\r\n    const {\r\n      csvList,\r\n      defaultLanguage,\r\n      formDefinitionJson,\r\n      userInputJson,\r\n      languageOptions,\r\n      handleSubmit,\r\n    } = this.props;\r\n    const props = {\r\n      choices: formDefinitionJson.choices || {},\r\n      csvList,\r\n      defaultLanguage,\r\n      fieldElements: formDefinitionJson.children,\r\n      formTitle: formDefinitionJson.title,\r\n      handleSubmit,\r\n      languageOptions,\r\n      userInputJson,\r\n    };\r\n    return (\r\n      <Provider store={store}>\r\n        <MuiThemeProvider theme={theme}>\r\n        <App {...props} />\r\n      </MuiThemeProvider>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OdkFormRenderer;\r\n"],"names":["theme","createMuiTheme","palette","primary","main","dark","secondary","light","info","text","disabled","hint","typography","h1","fontWeight","fontSize","h2","h3","h4","body1","fontFamily","caption","subtitle1","subtitle2","overrides","MuiPaper","root","color","KbAlert","render","props","headerText","bodyText","handleToggle","isOpen","React","Alert","toggle","className","DropDown","event","onChangeSelect","value","options","languageOptions","languages","map","elem","push","label","selectedValue","defaultLanguage","Select","multi","placeholder","onChange","onChangeHandler","GROUP_FIELD_TYPE","REPEAT_FIELD_TYPE","TEXT_FIELD_TYPE","DATE_FIELD_TYPE","DATE_TIME_FIELD_TYPE","TIME_FIELD_TYPE","INTEGER_FIELD_TYPE","DECIMAL_FIELD_TYPE","PHOTO_FIELD_TYPE","FILE_FIELD_TYPE","NOTE_FIELD_TYPE","SELECT_ONE_FIELD_TYPE","SELECT_ALL_FIELD_TYPE","CALCULATE_FIELD_TYPE","REQUIRED_FIELD_MSG","REQUIRED_SYMBOL","store","createStore","reducer","composeWithDevTools","actualExpression","currentHierarchicalName","formItemProperty","userInput","tokenizeCharacter","type","input","current","tokenizeParenOpen","tokenizeBrakeOpen","tokenizeBrakeClose","tokenizeParenClose","tokenizeEqual","tokenizePlus","tokenizeMinus","tokenizeMultiply","tokenizeDivide","tokenizeLessThan","tokenizeGreaterThan","tokenizeNot","tokenizeComma","tokenizeDot","tokenizePattern","pattern","char","consumedChars","test","tokenizeString","matchQuote","undefined","TypeError","tokenizeFunction","tokenizeNumber","tokenizeDecimal","tokenizeVariable","tokenizeOr","tokenizeIf","tokenizeAnd","tokenizeDiv","tokenizeName","skipWhiteSpace","tokenizers","tokenizer","tokens","tokenized","forEach","tokenizerFn","token","length","kbSelected","funcName","params","_paramsTokens","tmp","Array","isArray","element","kbChoice","tmpHierchicalName","split","i","parent","state","getState","variableName","replace","optionList","key","name","language","kbToday","_params","d","Date","setHours","kbRound","toFixed","parseFloat","kbRegex","regex","RegExp","kbCountSelected","kbInt","parseInt","kbCoalesce","kbPosition","tmpName","sumValuesOverJsn","sum","jsnObj","kbSum","paramsTokens","sumValue","kbConcat","concatStr","kbSubstr","subStr","substring","outerScopedVariables","variableValue","tmpUserInput","nodeNames","variableNameFromKey","parseMostClosestScopedVariable","index","parseDot","path","getIn","parseLiterals","_tmpOutput","toLowerCase","parseFunction","_output","possibleFunctions","arrayOfParams","arrayOfOriginalTokens","tmpQueue","tmpTokens","pop","tmpVal","parser","parsedFn","parsedVal","functionFn","parseIf","j","parseNot","output","terminatingTokens","indexOf","newOutput","parsed","possibleParsers","parseMinus","parseParen","consumedTokens","parserFn","parseAnd","parseOr","parseEqual","parseLessThan","flagLessThanOrEqual","parseGreaterThan","flagGreaterThanOrEqual","parseDivide","possibleTokens","ct","precedentParsers","parseMultiply","preParsed","preOutput","preParseFn","parsePlus","Object","prototype","toString","call","isNaN","getTime","Math","ceil","NaN","parsers","leftOutput","pos","console","log","evaluater","expression","tmpFormItemProperty","tmpCurrentHierarchicalName","getTextFromProperty","property","languageIdentifier","getFieldLabelText","fieldElement","getHintLabelText","customizeLabelsWithPreviousInputs","evaluator","labelText","fieldTreeName","placesOfCustomizationsRequiredList","match","tmpPlace","customizedName","matchList","getConstraintLabelText","bind","requiredEvaluator","isInputRequired","isRequired","required","shouldComponentBeRelevant","fieldParentTreeName","evaluateExpression","relevant","isRelevant","shouldComponentBeReadOnly","readonly","isReadOnly","shouldInputViolatesConstraint","constraint","isConstraintViolated","getModifiedUserInputObject","userInputObj","fieldValue","treeNodes","modifiedObj","getModifiedOptionListForRepeat","repeatIndex","filteredRepeatArray","optionListobj","entries","keyNameOptionListobj","keyValueOptionListobj","repeatIndexString","String","keyRepeat","keyNameRepeatObject","keyValueRepeatValue","getValueFromUserInputObj","shouldComponentBeMinimal","isMinimal","control","appearance","includes","emptyGroupedValues","groupTreeName","keys","objKey","startsWith","checkGroupedValuesForEmpty","isEmpty","FIELD_VALUE_ASSIGNED","OPTION_LIST_ASSIGNED","MEDIA_LIST_ADDED","REMOVE_FROM_MEDIA_LIST","REMOVE_FROM_OPTION_LIST_REPEAT","RESET_STORE","ADD_ERROR_INPUT_ID","REMOVE_ERROR_INPUT_ID","EMPTY_GROUP_FIELDS","REMOVE_GROUP_FIELDS_FROM_ERRORS","SET_USER_INPUT_OBJ","SET_FORM_SUBMIT_STATUS","SET_LANGUAGE","assignFieldValueAction","assignOptionListAction","RemoveFromOptionList","addMediaListAction","mediaObject","resetStoreAction","addErrorInputId","removeErrorInputId","emptyGroupFields","removeGroupFieldsFromErrors","setUserInputObj","setUserLanguage","setFormSubmitStatus","isFormSubmitted","initialState","SeamlessImmutable","errors","mediaList","action","modifiedUserInputObj","asMutable","deep","stateM","modifiedUserInputObjList","newState","hasOwnProperty","modifiedOptionListRepeat","newStateForRepeat","modifiedMediaList","newMediaState","updateIn","arr","concat","filter","elm","mUserInputObj","mState","getFieldValue","getOptionList","getEvaluatedExpression","getEvaluatedExpressionForSelect","isPresentInError","isGroupFieldsEmpty","isErrorsIncludeGroupFields","isPresent","fTName","isErrorsArrayEmpty","getUserInputFromStore","getFormSubmitStatus","getFileObject","fileName","fileObject","getAllFileObjects","GroupStyle","createStyles","borderTop","backgroundColor","toolbarIcon","display","alignItems","justifyContent","padding","mixins","toolbar","drawerPaperClose","overflowX","transition","transitions","create","easing","sharp","duration","leavingScreen","width","spacing","breakpoints","up","background","paper","overflow","flexDirection","listItem","marginTop","marginLeft","marginRight","borderRadius","listItemIcon","listItemActive","nested","paddingLeft","navlogo","margin","listParent","common","white","drawerClose","drawerOpen","overflowY","enteringScreen","Group","choices","csvList","isComponentRender","fieldLabel","isAppearanceApplicable","useTheme","useStyles","makeStyles","classNames","bodyless","Accordion","defaultExpanded","AccordionSummary","expandIcon","ExpandMoreIcon","Typography","AccordionDetails","FormGroup","Label","children","GroupTypeEvaluator","fieldElements","isErrorsIncludeGroupFieldsSelector","removeGroupFieldsFromErrorsActionCreator","isGroupFieldsEmptySelector","emptyGroupFieldsActionCreator","mapStateToProps","parentProps","getEvaluatedExpressionSelector","result","mapDispatchToProps","ConnectedGroup","connect","SingleRepeat","_event","assignmentHandler","removeHandler","removeOptionHandler","newFieldValue","_elem","unControlFlag","onClick","handleChange","FontAwesomeIcon","icon","Component","ControlledRepeat","assignFieldValueActionCreator","removeOptionListFromActionCreator","_elm","addAnotherRepeat","ConnectedControlledRepeat","UncontrolledRepeat","noOfJrCount","jrCount","res","removeFromError","_","size","assignOptionListActionCreator","iterate","slice","ConnectedUncontrolledRepeat","Repeat","Calculate","isPresentInErrorSelector","isRequiredViolated","isReadonly","addErrorInputIdActionCreator","removeErrorInputIdActionCreator","calculatedValue","calculate","Input","readOnly","ConnectedCalculate","KbDate","currentTarget","getFormSubmitStatusSelector","modifiedFieldLabel","constraintLabel","modifiedConstraintLabel","hintLabel","defaultValue","modifiedDate","toISOString","isError","ConnectedDate","DateTime","timeZoneOffset","getTimezoneOffset","getHours","DatePicker","selected","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","placeholderText","ConnectedDateTime","Decimal","setState","isFocused","modifiedValue","step","onBlur","onBlurHandler","ConnectedDecimal","FilePreview","fieldName","Button","ConnectedFilePreview","File","target","files","addMediaListActionCreator","accept","ConnectedFile","Integer","ConnectedInteger","Note","fieldHint","FormText","ConnectedNote","SelectAllDropDown","optionObject","tempObjArray","elemObj","isEqual","values","selectedValues","stringWithSearchKeyWord","processedStringArray","resultArray","criteriaParams","splice","extractAndFilterOptions","csvName","criteriaType","filterCriterias","trim","distinctOptions","finalRes","csv","modifiedName","nameOfKey","interConnectedValue","tempOptions","filterResult","getEvaluatedExpressionSelectorForSelect","option","from","Set","labelColumnName","valueColumnName","tmpOpt","uniqBy","resultOptions","updatedFieldElement","getProcessedString","setOptionList","itemset","choice_filter","childrenLabel","optionsArray","tmpValueArray","isNotIncluded","optionsValueArray","row","seperatedValues","isMulti","ConnectedSelectAllDropDown","SelectAllRadio","checked","newValue","childrenArray","flagInline","tmpStyle","Form","check","inline","onChangeHandlerCheckBox","ConnectedSelectAllRadio","SelectAll","Dropdown","Radio","SelectOneDropDown","ConnectedSelectOneDropDown","SelectOneRadio","choiceOptions","onChangeHandlerRadio","ConnectedSelectOneRadio","SelectOne","Text","ConnectedText","KbTime","ConnectedTime","BaseTypeEvaluator","typeEvaluator","style","isRender","processedString","Row","getAppearanceValue","Col","md","hidden","ConnectedGroupTypeEvaluator","library","add","faPlusCircle","faMinusCircle","faExclamationCircle","App","languageName","setUserLanguageAction","handleSubmit","isNoErrors","isSubmissionError","setFormSubmitStatusAction","window","scrollTo","componentDidMount","userInputJson","resetStoreActionCreator","setUserInputAction","formTitle","Container","handleSelect","toggleStateValue","handleClick","ConnectedApp","OdkFormRenderer","formDefinitionJson","title","Provider","MuiThemeProvider"],"mappings":"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"}