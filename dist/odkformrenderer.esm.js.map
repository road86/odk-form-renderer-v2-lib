{"version":3,"file":"odkformrenderer.esm.js","sources":["../src/utils/Theme.ts","../src/components/Alert/index.tsx","../src/components/DropDown/index.tsx","../src/constants.tsx","../src/store/index.tsx","../src/utils/compiler.ts","../src/utils/helpers.ts","../src/store/ducks/formState.ts","../src/containers/fields/group/Group/styles.ts","../src/containers/fields/group/Group/index.tsx","../src/containers/fields/group/Repeat/Single Repeat/index.tsx","../src/containers/fields/group/Repeat/Controlled Repeat/index.tsx","../src/containers/fields/group/Repeat/Uncontrolled Repeat/index.tsx","../src/containers/fields/group/Repeat/index.tsx","../src/containers/fields/base/Calculate/index.tsx","../src/containers/fields/base/Date/index.tsx","../src/containers/fields/base/Date Time/index.tsx","../src/containers/fields/base/Decimal/index.tsx","../src/containers/fields/base/File/FilePreview/FilePreview.tsx","../src/containers/fields/base/File/index.tsx","../src/containers/fields/base/Integer/index.tsx","../src/containers/fields/base/Note/index.tsx","../src/containers/fields/base/Select All/Dropdown/index.tsx","../src/containers/fields/base/Select All/Radio/index.tsx","../src/containers/fields/base/Select All/index.tsx","../src/containers/fields/base/Select One/Dropdown/index.tsx","../src/containers/fields/base/Select One/Radio/index.tsx","../src/containers/fields/base/Select One/index.tsx","../src/containers/fields/base/Text/index.tsx","../src/containers/fields/base/Time/index.tsx","../src/components/typeEvalutors/Base/index.tsx","../src/components/typeEvalutors/Group/index.tsx","../src/App/index.tsx","../src/index.tsx"],"sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#649A6A',\r\n      dark: '#8ac390',\r\n    },\r\n    secondary: {\r\n      main: '#D2AB16',\r\n      light: '#EBFDED',\r\n      dark: '#AD8C0F',\r\n    },\r\n    // error: {\r\n    //   main: '#f44336',\r\n    // },\r\n    // warning: {\r\n    //   main: '#ff9800',\r\n    // },\r\n    //table stripe\r\n    info: {\r\n      dark: '#F5F4F4',\r\n      main: '#EBFDED',\r\n      light: '#F9F9F9',\r\n    },\r\n    // success: {\r\n    //   main: '#4caf50',\r\n    // },\r\n    text: {\r\n      primary: '#EBFDED',\r\n      secondary: '#000000',\r\n      disabled: 'rgba(0, 0, 0, 0.38)',\r\n      hint: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n    // divider: 'rgba(0, 0, 0, 0.12)',\r\n    // background: {\r\n    //   paper: '#fff',\r\n    //   default: '#fff',\r\n    // },\r\n    // action: {\r\n    //   active: '#EEEEEE',\r\n    //   hover: '#888888',\r\n    //   hoverOpacity: 0.04,\r\n    //   selected: '#FFFFFF',\r\n    //   disabled: '#666666',\r\n    // },\r\n  },\r\n  typography: {\r\n    h1: {\r\n      fontWeight: 700,\r\n      // lineHeight: 0.35,\r\n      fontSize: 30,\r\n      // color: '#FFFFFF',\r\n    },\r\n    h2: {\r\n      fontWeight: 500,\r\n      fontSize: 20,\r\n      // lineHeight: 0.23,\r\n    },\r\n    h3: {\r\n      fontWeight: 400,\r\n      fontSize: 18,\r\n      // lineHeight: 0.21,\r\n      // color: '#FFFFFF',\r\n    },\r\n    h4: {\r\n      fontWeight: 700,\r\n      // lineHeight: 0.35,\r\n      fontSize: 26,\r\n    },\r\n    body1: {\r\n      fontFamily: 'Roboto',\r\n      fontWeight: 400,\r\n      // lineHeight: 1.18,\r\n      fontSize: 16,\r\n    },\r\n    caption: {\r\n      fontFamily: 'Roboto',\r\n      fontWeight: 600,\r\n      // lineHeight: 0.18,\r\n      fontSize: 16,\r\n    },\r\n    subtitle1: {\r\n      fontFamily: 'Roboto',\r\n      fontWeight: 400,\r\n      // lineHeight: 0.18,\r\n      fontSize: 16,\r\n    },\r\n    subtitle2: {\r\n      fontFamily: 'Roboto',\r\n      fontWeight: 500,\r\n      // lineHeight: 0.18,\r\n      fontSize: 16,\r\n    },\r\n  },\r\n  //menu\r\n  overrides: {\r\n    MuiPaper: {\r\n      root: {\r\n        color: '#222222 !important',\r\n      },\r\n    },\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport { Alert } from 'reactstrap';\r\n\r\nexport interface KbAlertProps {\r\n  headerText: string;\r\n  bodyText: string;\r\n  handleToggle: any;\r\n  isOpen: boolean;\r\n  color: string;\r\n}\r\n\r\nclass KbAlert extends React.Component<KbAlertProps> {\r\n  public render() {\r\n    const { headerText, bodyText, handleToggle, isOpen, color } = this.props;\r\n    return (\r\n      <Alert color={color} isOpen={isOpen} toggle={handleToggle}>\r\n        <h4 className=\"alert-heading\">{headerText}</h4>\r\n        <p>{bodyText}</p>\r\n      </Alert>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KbAlert;\r\n","import * as React from 'react';\r\nimport Select from 'react-select';\r\n\r\nexport interface DropDownProps {\r\n  languages: any;\r\n  onChangeSelect: any;\r\n  defaultLanguage: string;\r\n}\r\n\r\nexport interface Options {\r\n  label: any;\r\n  value: string;\r\n}\r\n\r\nclass DropDown extends React.Component<DropDownProps> {\r\n  public render() {\r\n    const options: Options[] = [];\r\n    const languageOptions = [...this.props.languages];\r\n    languageOptions.map((elem: any) => {\r\n      options.push({ label: elem.label, value: elem.value });\r\n    });\r\n\r\n    let selectedValue: any;\r\n    options.map(elem => {\r\n      if (elem.value === this.props.defaultLanguage) {\r\n        selectedValue = elem;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <Select\r\n        multi={false}\r\n        options={options}\r\n        className={'col-md-2 dropDown'}\r\n        placeholder=\"Language\"\r\n        onChange={this.onChangeHandler}\r\n        value={selectedValue || ''}\r\n      />\r\n    );\r\n  }\r\n\r\n  /** pass the selected value to the parent class\r\n   * @param {any} event - the onchange input event\r\n   */\r\n  private onChangeHandler = (event: any) => {\r\n    this.props.onChangeSelect(event.value);\r\n  };\r\n}\r\n\r\nexport default DropDown;\r\n","// Field Types\r\nexport const GROUP_FIELD_TYPE = 'group';\r\nexport type GROUP_FIELD_TYPE = typeof GROUP_FIELD_TYPE;\r\nexport const REPEAT_FIELD_TYPE = 'repeat';\r\nexport type REPEAT_FIELD_TYPE = typeof REPEAT_FIELD_TYPE;\r\nexport const TEXT_FIELD_TYPE = 'text';\r\nexport type TEXT_FIELD_TYPE = typeof TEXT_FIELD_TYPE;\r\nexport const DATE_FIELD_TYPE = 'date';\r\nexport type DATE_FIELD_TYPE = typeof DATE_FIELD_TYPE;\r\nexport const DATE_TIME_FIELD_TYPE = 'dateTime';\r\nexport type TIME_FIELD_TYPE = typeof TIME_FIELD_TYPE;\r\nexport const TIME_FIELD_TYPE = 'time';\r\nexport type DATE_TIME_FIELD_TYPE = typeof DATE_TIME_FIELD_TYPE;\r\nexport const INTEGER_FIELD_TYPE = 'integer';\r\nexport type INTEGER_FIELD_TYPE = typeof INTEGER_FIELD_TYPE;\r\nexport const DECIMAL_FIELD_TYPE = 'decimal';\r\nexport type DECIMAL_FIELD_TYPE = typeof DECIMAL_FIELD_TYPE;\r\nexport const PHOTO_FIELD_TYPE = 'photo';\r\nexport type PHOTO_FIELD_TYPE = typeof PHOTO_FIELD_TYPE;\r\nexport const FILE_FIELD_TYPE = 'file';\r\nexport type FILE_FIELD_TYPE = typeof FILE_FIELD_TYPE;\r\nexport const NOTE_FIELD_TYPE = 'note';\r\nexport type NOTE_FIELD_TYPE = typeof NOTE_FIELD_TYPE;\r\nexport const SELECT_ONE_FIELD_TYPE = 'select one';\r\nexport type SELECT_ONE_FIELD_TYPE = typeof SELECT_ONE_FIELD_TYPE;\r\nexport const SELECT_ALL_FIELD_TYPE = 'select all that apply';\r\nexport type SELECT_ALL_FIELD_TYPE = typeof SELECT_ALL_FIELD_TYPE;\r\nexport const CALCULATE_FIELD_TYPE = 'calculate';\r\nexport type CALCULATE_FIELD_TYPE = typeof CALCULATE_FIELD_TYPE;\r\n\r\n// Required Properties\r\nexport const REQUIRED_FIELD_MSG = 'This field is required';\r\nexport type REQUIRED_FIELD_MSG = typeof REQUIRED_FIELD_MSG;\r\nexport const REQUIRED_SYMBOL = '*';\r\nexport type REQUIRED_SYMBOL = typeof REQUIRED_SYMBOL;\r\n","import { createStore, Store } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer, { FormState } from './ducks/formState';\r\n\r\n/** The initial store */\r\nconst store: Store & FormState = createStore(reducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","// import moment from 'moment';\r\nimport moment from 'moment';\r\nimport store from '../store';\r\n\r\nlet actualExpression: string;\r\nlet currentHierarchicalName: string = '';\r\nlet formItemProperty: any = {};\r\nlet userInput: any = {};\r\n\r\n/**\r\n * tokenizeCharacter is a type of util method\r\n * @param {any} type - the type that will be returned if matches\r\n * @param {any} value - the actual value of the tokenize character\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeCharacter(type: any, value: any, input: any, current: any) {\r\n  return value === input[current] ? [1, { type, value }] : [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeParenOpen returns tokenizeReturnObject for character (\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeParenOpen(input: any, current: any) {\r\n  return tokenizeCharacter('paren', '(', input, current);\r\n}\r\n\r\n/**\r\n * tokenizeBrakeOpen returns tokenizeReturnObject for character [\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeBrakeOpen(input: any, current: any) {\r\n  return tokenizeCharacter('brac', '[', input, current);\r\n}\r\n\r\n/**\r\n * tokenizeBrakeClose returns tokenizeReturnObject for character ]\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeBrakeClose(input: any, current: any) {\r\n  return tokenizeCharacter('brac', ']', input, current);\r\n}\r\n\r\n/**\r\n * tokenizeParenClose returns tokenizeReturnObject for character )\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeParenClose(input: any, current: any) {\r\n  return tokenizeCharacter('paren', ')', input, current);\r\n}\r\n\r\n/**\r\n * tokenizeEqual returns tokenizeReturnObject for character =\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeEqual(input: any, current: any) {\r\n  return tokenizeCharacter('equal', '=', input, current);\r\n}\r\n\r\n/**\r\n * tokenizePlus returns tokenizeReturnObject for character +\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizePlus(input: any, current: any) {\r\n  return tokenizeCharacter('plus', '+', input, current);\r\n}\r\n\r\n/**\r\n * tokenizeMinus returns tokenizeReturnObject for character -\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeMinus(input: any, current: any) {\r\n  return tokenizeCharacter('minus', '-', input, current);\r\n}\r\n\r\n/**\r\n * tokenizeMultiply returns tokenizeReturnObject for character *\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeMultiply(input: any, current: any) {\r\n  return tokenizeCharacter('multiply', '*', input, current);\r\n}\r\n\r\n/**\r\n * tokenizeDivide returns tokenizeReturnObject for character /\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeDivide(input: any, current: any) {\r\n  return tokenizeCharacter('divide', '/', input, current);\r\n}\r\n\r\n/**\r\n * tokenizeLessThan returns tokenizeReturnObject for character <\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeLessThan(input: any, current: any) {\r\n  return tokenizeCharacter('lessThan', '<', input, current);\r\n}\r\n\r\n/**\r\n * tokenizeGreaterThan returns tokenizeReturnObject for character >\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeGreaterThan(input: any, current: any) {\r\n  return tokenizeCharacter('greaterThan', '>', input, current);\r\n}\r\n\r\n/**\r\n * tokenizeNot returns tokenizeReturnObject for character !\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeNot(input: any, current: any) {\r\n  if (input[current] == '!') {\r\n    return tokenizeCharacter('not', '!', input, current);\r\n  } else if (input[current] == 'n') {\r\n    if (\r\n      input[current + 1] &&\r\n      input[current + 1] == 'o' &&\r\n      (input[current + 2] && input[current + 2] == 't')\r\n    ) {\r\n      const type = 'not';\r\n      const value = '!';\r\n      return [3, { type, value }];\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeComma returns tokenizeReturnObject for character ,\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeComma(input: any, current: any) {\r\n  return tokenizeCharacter('comma', ',', input, current);\r\n}\r\n\r\n/**\r\n * tokenizeDot returns tokenizeReturnObject for character .\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeDot(input: any, current: any) {\r\n  return tokenizeCharacter('dot', '.', input, current);\r\n}\r\n\r\n/**\r\n * tokenizePattern is a type of util method\r\n * @param {any} type - the type that will be returned if matches\r\n * @param {any} pattern - the pattern that will be matched for tokenization\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizePattern(type: any, pattern: any, input: any, current: any) {\r\n  let char = input[current];\r\n  let consumedChars = 0;\r\n  if (pattern.test(char)) {\r\n    let value = '';\r\n    while (char && pattern.test(char)) {\r\n      value += char;\r\n      consumedChars += 1;\r\n      char = input[current + consumedChars];\r\n    }\r\n    return [consumedChars, { type, value }];\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeString returns tokenizeReturnObject for strings. example: 'abc12' , \"test1\", \"afgkj dafgk\"\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns - tokenizeReturnObject\r\n */\r\nfunction tokenizeString(input: any, current: any) {\r\n  if (input[current] === '\"' || input[current] === \"'\") {\r\n    const matchQuote = input[current];\r\n    let value = '';\r\n    let consumedChars = 0;\r\n    consumedChars += 1;\r\n    let char = input[current + consumedChars];\r\n    while (char !== matchQuote) {\r\n      if (char === undefined) {\r\n        throw new TypeError('unterminated string ');\r\n      }\r\n      value += char;\r\n      consumedChars += 1;\r\n      char = input[current + consumedChars];\r\n    }\r\n    return [consumedChars + 1, { type: 'string', value }];\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeFunction returns tokenizeReturnObject for functions. Example: round( , substring(\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns tokenizeReturnObject; value contains function name if matched\r\n */\r\nfunction tokenizeFunction(input: any, current: any) {\r\n  if (/[a-z_]/i.test(input[current])) {\r\n    let value = '';\r\n    let consumedChars = 0;\r\n    // consumedChars ++;\r\n    let char = input[current + consumedChars];\r\n    while (char && /[:a-z0-9_-]/i.test(char)) {\r\n      if (char === undefined) {\r\n        throw new TypeError('unterminated string ');\r\n      }\r\n      value += char;\r\n      consumedChars += 1;\r\n      char = input[current + consumedChars];\r\n    }\r\n    while (char && /\\s/.test(char)) {\r\n      consumedChars += 1;\r\n      char = input[current + consumedChars];\r\n    }\r\n    if (value == 'not') {\r\n      return [0, null];\r\n    }\r\n    if (char && char === '(') {\r\n      return [consumedChars, { type: 'function', value }];\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeNumber returns tokenizeReturnObject for discrete numbers. Example: 123 , 02113\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns tokenizeReturnObject\r\n */\r\nfunction tokenizeNumber(input: any, current: any) {\r\n  if (/[0-9]/i.test(input[current])) {\r\n    let value = '';\r\n    let consumedChars = 0;\r\n    // consumedChars ++;\r\n    let char = input[current + consumedChars];\r\n    while (/[0-9]/i.test(char)) {\r\n      if (char === undefined) {\r\n        throw new TypeError('unterminated string ');\r\n      }\r\n      value += char;\r\n      consumedChars += 1;\r\n      char = input[current + consumedChars];\r\n    }\r\n    if (char !== '.') {\r\n      return [consumedChars, { type: 'number', value }];\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeDecimal returns tokenizeReturnObject for decimal numbers. Example: 12.3 , 0.2113\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns tokenizeReturnObject\r\n */\r\nfunction tokenizeDecimal(input: any, current: any) {\r\n  if (/[0-9.]/i.test(input[current])) {\r\n    let value = '';\r\n    let consumedChars = 0;\r\n    // consumedChars ++;\r\n    let char = input[current + consumedChars];\r\n    while (/[0-9]/i.test(char)) {\r\n      if (char === undefined) {\r\n        throw new TypeError('unterminated string ');\r\n      }\r\n      value += char;\r\n      consumedChars += 1;\r\n      char = input[current + consumedChars];\r\n    }\r\n    if (char === '.') {\r\n      value += char;\r\n      consumedChars += 1;\r\n      char = input[current + consumedChars];\r\n      if (/[0-9]/i.test(char)) {\r\n        while (/[0-9]/i.test(char)) {\r\n          if (char === undefined) {\r\n            throw new TypeError('unterminated string ');\r\n          }\r\n          value += char;\r\n          consumedChars += 1;\r\n          char = input[current + consumedChars];\r\n        }\r\n        return [consumedChars, { type: 'decimal', value }];\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeVariable returns tokenizeReturnObject for variables. Example syntax: ${Iamvariable} , #{urvariable}\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns tokenizeReturnObject\r\n */\r\nfunction tokenizeVariable(input: any, current: any) {\r\n  if (input[current] === '#' || input[current] === '$') {\r\n    if (input[current + 1] && input[current + 1] === '{') {\r\n      let value = '';\r\n      let consumedChars = 1;\r\n      consumedChars += 1;\r\n      let char = input[current + consumedChars];\r\n      while (char !== '}') {\r\n        if (char === undefined) {\r\n          throw new TypeError('unterminated string ');\r\n        }\r\n        value += char;\r\n        consumedChars += 1;\r\n        char = input[current + consumedChars];\r\n      }\r\n      return [consumedChars + 1, { type: 'variable', value }];\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeOr returns tokenizeReturnObject for syntax or\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns tokenizeReturnObject\r\n */\r\nfunction tokenizeOr(input: any, current: any) {\r\n  if (input[current] === 'o') {\r\n    if (input[current + 1] && input[current + 1] === 'r') {\r\n      if (\r\n        input[current + 2] === undefined ||\r\n        /[0-9\\s]/.test(input[current + 2])\r\n      ) {\r\n        return [2, { type: 'or', value: 'or' }];\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeIf returns tokenizeReturnObject for word if\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns tokenizeReturnObject\r\n */\r\nfunction tokenizeIf(input: any, current: any) {\r\n  if (input[current] === 'i') {\r\n    if (input[current + 1] && input[current + 1] === 'f') {\r\n      if (\r\n        input[current + 2] === undefined ||\r\n        !/[a-z]i/.test(input[current + 2])\r\n      ) {\r\n        return [2, { type: 'if', value: 'if' }];\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeAnd returns tokenizeReturnObject for word and\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns tokenizeReturnObject\r\n */\r\nfunction tokenizeAnd(input: any, current: any) {\r\n  if (input[current] === 'a') {\r\n    if (input[current + 1] && input[current + 1] === 'n') {\r\n      if (input[current + 2] && input[current + 2] === 'd') {\r\n        if (\r\n          input[current + 3] === undefined ||\r\n          /[0-9\\s]/.test(input[current + 3])\r\n        ) {\r\n          return [3, { type: 'and', value: 'and' }];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeDiv returns tokenizeReturnObject of type divide for word div\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns tokenizeReturnObject\r\n */\r\nfunction tokenizeDiv(input: any, current: any) {\r\n  if (input[current] === 'd') {\r\n    if (input[current + 1] && input[current + 1] === 'i') {\r\n      if (input[current + 2] && input[current + 2] === 'v') {\r\n        if (\r\n          input[current + 3] === undefined ||\r\n          /[0-9\\s]/.test(input[current + 3])\r\n        ) {\r\n          return [3, { type: 'divide', value: '/' }];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * tokenizeName returns tokenizeReturnObject of type name for regex [a-z_]+\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns tokenizeReturnObject\r\n */\r\nfunction tokenizeName(input: any, current: any) {\r\n  return tokenizePattern('name', /[a-z_]/i, input, current);\r\n}\r\n\r\n/**\r\n * skipWhiteSpace removes space and iterates the position of compiler\r\n * @param {any} input - the input expression, valid cases involve only string type\r\n * @param {any} current - the position of the compiler at the input expression\r\n * @returns tokenizeReturnObject that consumes characters without returning type\r\n */\r\nfunction skipWhiteSpace(input: any, current: any) {\r\n  return /\\s/.test(input[current]) ? [1, null] : [0, null];\r\n}\r\n\r\n/**\r\n * Precedence of the tokenizer methods\r\n * If new tokenizer method is created, please add inside tokenizers with correct precedence\r\n */\r\nconst tokenizers = [\r\n  skipWhiteSpace,\r\n  tokenizeParenOpen,\r\n  tokenizeParenClose,\r\n  tokenizeIf,\r\n  tokenizeOr,\r\n  tokenizeAnd,\r\n  tokenizeVariable,\r\n  tokenizeString,\r\n  tokenizeFunction,\r\n  tokenizeEqual,\r\n  tokenizePlus,\r\n  tokenizeMinus,\r\n  tokenizeMultiply,\r\n  tokenizeDivide,\r\n  tokenizeDiv,\r\n  tokenizeLessThan,\r\n  tokenizeGreaterThan,\r\n  tokenizeNot,\r\n  tokenizeBrakeOpen,\r\n  tokenizeBrakeClose,\r\n  tokenizeDot,\r\n  tokenizeComma,\r\n  tokenizeNumber,\r\n  tokenizeDecimal,\r\n  tokenizeName,\r\n];\r\n\r\n/**\r\n * tokenizer is primary method that takes the expression and convert them to appropiate tokens.\r\n * Throws syntax error if expression is not appropiate or could not be tokenized properly\r\n * @param {string} input - should be of string for valid cases\r\n * @returns array of tokens\r\n */\r\nfunction tokenizer(input: any) {\r\n  let current: number = 0;\r\n  const tokens: any = [];\r\n  while (current < input.length) {\r\n    let tokenized = false;\r\n    tokenizers.forEach(tokenizerFn => {\r\n      if (tokenized) {\r\n        return;\r\n      }\r\n      const [consumedChars, token]: any = tokenizerFn(input, current);\r\n      if (consumedChars !== 0) {\r\n        tokenized = true;\r\n        current += consumedChars;\r\n      }\r\n      if (token) {\r\n        tokens.push(token);\r\n      }\r\n    });\r\n    if (!tokenized) {\r\n      throw new TypeError(\r\n        `I dont know what this character is: ${input[current]}`\r\n      );\r\n    }\r\n  }\r\n  return tokens;\r\n}\r\n\r\n/**\r\n * kbSelected parses the function selected and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbSelected(funcName: any, params: any, _paramsTokens: any, _output: any, _current: any ) {\r\n  if (funcName === 'selected') {\r\n    let tmp = false;\r\n    if (Array.isArray(params[0])) {\r\n      params[0].forEach((element: any) => {\r\n        // tslint:disable-next-line: triple-equals\r\n        tmp = tmp || element == params[1];\r\n      });\r\n      return [true, tmp];\r\n    }\r\n    // tslint:disable-next-line: triple-equals\r\n    return [true, params[0] == params[1]];\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n// tslint:disable-next-line: variable-name\r\nfunction kbChoice(funcName: any, params: any, _paramsTokens: any, _output: any, _current: any ) {\r\n  if (funcName === 'jr:choice-name') {\r\n    const tmpHierchicalName = currentHierarchicalName.split('/');\r\n    let i;\r\n    let parent = '';\r\n    for (i = 0; i < tmpHierchicalName.length - 1; ) {\r\n      // tslint:disable-next-line: triple-equals\r\n      if (tmpHierchicalName[i] == 'repeat') {\r\n        i += 3;\r\n      } else {\r\n        // path.push(parent + tmpHierchicalName[i + 1]);\r\n        parent = parent + tmpHierchicalName[i + 1] + '/';\r\n        i += 2;\r\n      }\r\n    }\r\n    const state = store.getState();\r\n    const variableName =\r\n      parent + params[params.length - 1].replace(/[^a-zA-Z ]/g, '');\r\n    if (variableName in state.optionList) {\r\n      for (const key in state.optionList[variableName]) {\r\n        if (state.optionList[variableName][key].name === params[0]) {\r\n          return [\r\n            true,\r\n            state.optionList[variableName][key].label[state.language],\r\n          ];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n// tslint:disable-next-line: variable-name\r\nfunction kbPullData(funcName: any, params: any, _paramsTokens: any, _output: any, _current: any ) {\r\n  if (funcName === 'pulldata') {\r\n    const state = store.getState();\r\n    const csv = state.csvList[params[0] + '.csv'];\r\n    if (params[3]) {\r\n      const item = csv.find((obj: any) => obj[params[2]] == params[3]);\r\n      if (item != undefined && item != null) {\r\n        return [true, item[params[1]]];\r\n      }\r\n    }\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * kbToday parses the function today and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbToday(funcName: any, _params: any, _paramsTokens: any, _output: any, _current: any ) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'today') {\r\n    const d = new Date();\r\n    d.setHours(0, 0, 0, 0);\r\n    return [true, d];\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * kbToday parses the function today and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbDecimalDateTime(funcName: any, _params: any, _paramsTokens: any, _output: any, _current: any ) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'decimal-date-time') {\r\n    if (_params[0]) {\r\n      const time_dif = (new Date(_params[0])).getTime() - (new Date(\"01/01/1970\")).getTime();\r\n      const day_diff = Math.round(Math.abs((time_dif) / (1000 * 3600 * 24)));\r\n      return [true, day_diff];\r\n    }\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * kbToday parses the function today and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbDate(funcName: any, _params: any, _paramsTokens: any, _output: any, _current: any ) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'date') {\r\n    if (_params[0]) {\r\n      const date = (new Date(\"01/01/1970\")).getTime() + _params[0]*24*60*60*1000;\r\n      return [true, new Date(date)];\r\n    }\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n\r\n/**\r\n * kbFormatDate formats the given date and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbFormatDate(funcName: any, _params: any, _paramsTokens: any, _output: any, _current: any ) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'format-date') {\r\n    if (_params.length == 2) {\r\n      let format = 'MM-DD-YYYY';\r\n      let date = null;\r\n      if (_params[1].includes('%a')) {\r\n        const day = _params[1].replace(\"%a\", \"ddd\");\r\n        date = _params[0] != null ? moment(_params[0]).format(`${day}`) : null ;\r\n      } else if(_params[1].includes('d')) {\r\n        format = _params[1].replace(\"%d\", \"DD\").replace(\"%m\", \"MM\").replace(\"%Y\", \"YYYY\").replace(\"%y\", \"YY\");\r\n        date = _params[0] != null ? moment(_params[0]).format(format) : null ;\r\n      } else if (_params[1].includes('b')) {\r\n        const month = _params[1].replace(\"%b\", \"MMM\");\r\n        date = _params[0] != null ? moment(_params[0]).format(`${month}`) : null ;\r\n      }\r\n      return [true, date];\r\n    }\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * kbRound parses the function round and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbRound(funcName: any, params: any, _paramsTokens: any, _output: any, _current: any ) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'round') {\r\n    if (params[0] && params[1]) {\r\n      if (typeof params[0] === 'number' && typeof params[1] === 'number') {\r\n        return [true, params[0].toFixed(params[1])];\r\n      }\r\n      if (typeof params[0] === 'string' && typeof params[1] === 'number') {\r\n        return [true, parseFloat(params[0]).toFixed(params[1])];\r\n      }\r\n    }\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * kbRegex parses the function regex and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbRegex(funcName: any, params: any, _paramsTokens: any, _output: any, _current: any ) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'regex') {\r\n    const regex = RegExp(params[1]);\r\n    return [true, regex.test(params[0])];\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * kbCountSelected parses the function count-selected and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbCountSelected(funcName: any, params: any, _paramsTokens: any, _output: any, _current: any ) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'count-selected') {\r\n    if (params[0] && Array.isArray(params[0])) {\r\n      return [true, params[0].length];\r\n    }\r\n    if (params[0] && typeof params[0] !== 'object') {\r\n      return [true, 1];\r\n    }\r\n    return [true, 0];\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * kbInt parses the function int and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbInt(funcName: any, params: any, _paramsTokens: any, _output: any, _current: any ) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'int') {\r\n    if (typeof params[0] === 'string') {\r\n      return [true, parseInt(params[0], 10)];\r\n    }\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * kbCoalesce parses the function coalesce and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbCoalesce(funcName: any, params: any, _paramsTokens: any, _output: any, _current: any ) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'coalesce') {\r\n    if (!params[0] && params[0] !== 0) {\r\n      return [true, params[1]];\r\n    }\r\n    return [true, params[0]];\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * kbPosition parses the function position and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbPosition(funcName: any, _params: any, _paramsTokens: any, _output: any, _current: any ) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'position') {\r\n    if (currentHierarchicalName) {\r\n      const tmpName = currentHierarchicalName.split('/');\r\n      if (tmpName.length > 2) {\r\n        return [true, parseInt(tmpName[tmpName.length - 2], 10) + 1];\r\n      }\r\n    }\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * sumValuesOverJsn is a utility method for kbSum\r\n * @param sum - initial sum value\r\n * @param jsnObj - variable name and value in json object\r\n * @param variableName - variable name\r\n * @returns the calculated sum\r\n */\r\nfunction sumValuesOverJsn(sum: any, jsnObj: any, variableName: any) {\r\n  if (Array.isArray(jsnObj)) {\r\n    let i;\r\n    for (i = 0; i < jsnObj.length; i += 1) {\r\n      sum = sumValuesOverJsn(sum, jsnObj[i], variableName);\r\n    }\r\n  } else if (typeof jsnObj === 'object') {\r\n    for (const key in jsnObj) {\r\n      if (typeof jsnObj[key] === 'object') {\r\n        sum = sumValuesOverJsn(sum, jsnObj[key], variableName);\r\n      } else if (key === variableName) {\r\n        if (typeof jsnObj[key] === 'string') {\r\n          sum += parseFloat(jsnObj[key]);\r\n        }\r\n        if (typeof jsnObj[key] === 'number') {\r\n          sum += jsnObj[key];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\n/**\r\n * kbSum parses the function sum and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbSum(funcName: any, _params: any, paramsTokens: any) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'sum') {\r\n    let sumValue = null;\r\n    if (\r\n      paramsTokens &&\r\n      paramsTokens.length > 0 &&\r\n      paramsTokens[0] &&\r\n      paramsTokens[0].length > 0 &&\r\n      paramsTokens[0][0].type === 'variable'\r\n    ) {\r\n      sumValue = sumValuesOverJsn(0, userInput, paramsTokens[0][0].value);\r\n    }\r\n    return [true, sumValue];\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * kbConcat parses the function concat and returns functionParseReturnObject\r\n * @param funcName - the function name of the token\r\n * @param params - calculated value of the params tokens\r\n * @param _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbConcat(funcName: any, params: any, _paramsTokens: any) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'concat') {\r\n    if (params && params.length > 0) {\r\n      let concatStr = '';\r\n      // tslint:disable-next-line: prefer-for-of\r\n      for (let i = 0; i < params.length; i += 1) {\r\n        if (params[i] == null) {\r\n          // continue;\r\n          // return [false, null];\r\n          concatStr += '';\r\n        } else {\r\n          concatStr += params[i];\r\n        }\r\n      }\r\n      return [true, concatStr];\r\n    }\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * kbSubstr parses the function substr and returns functionParseReturnObject\r\n * @param {any} funcName - the function name of the token\r\n * @param {any} params - calculated value of the params tokens\r\n * @param {any} _paramsTokens - orginal param tokens\r\n * @returns functionParseReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction kbSubstr(funcName: any, params: any, _paramsTokens: any) {\r\n  // tslint:disable-next-line: triple-equals\r\n  if (funcName == 'substr') {\r\n    if (params && params.length > 0) {\r\n      if (params[0] && params[1] !== null) {\r\n        if (params[2] !== null && params[2] < params[0].length) {\r\n          const subStr = params[0].substring(params[1], params[2]);\r\n          return [true, subStr];\r\n        }\r\n        return [true, params[0].substring(params[1])];\r\n      }\r\n    }\r\n  }\r\n  return [false, null];\r\n}\r\n\r\n/**\r\n * outerScopedVariables is a utility method that returns same variable values based on outerscope\r\n * @param {any} variableName - variable name\r\n * @param {any} variableValue - variable value upto now\r\n * @param {any} tmpUserInput - variable key-value storage\r\n * @returns parsed scoped variable value\r\n */\r\nfunction outerScopedVariables(\r\n  variableName: any,\r\n  variableValue: any,\r\n  tmpUserInput: any\r\n): any {\r\n  // tslint:disable-next-line: forin\r\n  for (const key in tmpUserInput) {\r\n    const nodeNames = key.split('/');\r\n    const variableNameFromKey = nodeNames[nodeNames.length - 1];\r\n    if (variableNameFromKey === variableName) {\r\n      return tmpUserInput[key];\r\n    }\r\n    if (typeof tmpUserInput[key] === 'object') {\r\n      if (variableValue == null) {\r\n        variableValue = outerScopedVariables(\r\n          variableName,\r\n          variableValue,\r\n          tmpUserInput[key]\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return variableValue;\r\n}\r\n\r\n/**\r\n * parseMostClosestScopedVariable returns the closest scoped parsed variable value\r\n * @param {any} variableName - the variable name\r\n * @returns the parsed variable value\r\n */\r\nfunction parseMostClosestScopedVariable(variableName: any) {\r\n  const tmpHierchicalName = currentHierarchicalName.split('/');\r\n  let i;\r\n  const tmpUserInput = userInput;\r\n  let variableValue = null;\r\n  variableValue = outerScopedVariables(\r\n    variableName,\r\n    variableValue,\r\n    tmpUserInput\r\n  );\r\n  let parent = '';\r\n  for (i = 0; i < tmpHierchicalName.length - 1; ) {\r\n    // tslint:disable-next-line: triple-equals\r\n    if (tmpHierchicalName[i] == 'repeat') {\r\n      i += 1;\r\n      const index = parseInt(tmpHierchicalName[i + 1], 10);\r\n      variableValue = outerScopedVariables(\r\n        variableName,\r\n        variableValue,\r\n        tmpUserInput[parent + tmpHierchicalName[i]][index]\r\n      );\r\n      i += 2;\r\n    } else {\r\n      parent = parent + tmpHierchicalName[i + 1] + '/';\r\n      i += 2;\r\n    }\r\n  }\r\n  return variableValue;\r\n}\r\n\r\n/**\r\n * parseDot parses the dot\r\n * @returns parsed value\r\n */\r\nfunction parseDot() {\r\n  const tmpHierchicalName = currentHierarchicalName.split('/');\r\n  let i;\r\n  let tmpUserInput = userInput;\r\n  let parent = '';\r\n  const path = [];\r\n  for (i = 0; i < tmpHierchicalName.length - 1; ) {\r\n    // tslint:disable-next-line: triple-equals\r\n    if (tmpHierchicalName[i] == 'repeat') {\r\n      i += 1;\r\n      path.push(parent + tmpHierchicalName[i]);\r\n      path.push(parseInt(tmpHierchicalName[i + 1], 10));\r\n      parent = parent + tmpHierchicalName[i] + '/';\r\n      i += 2;\r\n    } else {\r\n      // path.push(parent + tmpHierchicalName[i + 1]);\r\n      parent = parent + tmpHierchicalName[i + 1] + '/';\r\n      i += 2;\r\n    }\r\n  }\r\n  path.push(parent + tmpHierchicalName[tmpHierchicalName.length - 1]);\r\n  tmpUserInput = userInput.getIn(path);\r\n  return tmpUserInput;\r\n}\r\n\r\n/**\r\n * parseLiterals parse a set of tokens, starting from number, string, decimal, variable, name, dot\r\n * @param {any} _tmpOutput - the parsed value of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the position of parser\r\n * @returns parserReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction parseLiterals(_tmpOutput: any, tokens: any, current: any) {\r\n  if (tokens[current].type === 'number') {\r\n    return [1, parseInt(tokens[current].value, 10)];\r\n  }\r\n  if (tokens[current].type === 'string') {\r\n    return [1, tokens[current].value];\r\n  }\r\n  if (tokens[current].type === 'decimal') {\r\n    return [1, parseFloat(tokens[current].value)];\r\n  }\r\n  if (tokens[current].type === 'variable') {\r\n    return [1, parseMostClosestScopedVariable(tokens[current].value)];\r\n  }\r\n  if (tokens[current].type === 'name') {\r\n    if (tokens[current].value.toLowerCase() === 'true') {\r\n      return [1, true];\r\n    }\r\n    if (tokens[current].value.toLowerCase() === 'false') {\r\n      return [1, false];\r\n    }\r\n    if (formItemProperty && tokens[current].value in formItemProperty) {\r\n      return [1, formItemProperty[tokens[current].value]];\r\n    }\r\n    return [1, null];\r\n  }\r\n  if (tokens[current].type === 'dot') {\r\n    return [1, parseDot()];\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseFuntion parses the functions present in expression\r\n * @param {any} _output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction parseFunction(_output: any, tokens: any, current: any) {\r\n  // precedence of functions\r\n  const possibleFunctions = [\r\n    kbSelected,\r\n    kbCountSelected,\r\n    kbChoice,\r\n    kbToday,\r\n    kbRegex,\r\n    kbInt,\r\n    kbCoalesce,\r\n    kbPosition,\r\n    kbSum,\r\n    kbConcat,\r\n    kbSubstr,\r\n    kbRound,\r\n    kbFormatDate,\r\n    kbPullData,\r\n    kbDecimalDateTime,\r\n    kbDate\r\n  ];\r\n  if (tokens[current].type === 'function') {\r\n    const funcName = tokens[current].value;\r\n    const arrayOfParams: any = [];\r\n    const arrayOfOriginalTokens: any = [];\r\n    let i = 1;\r\n    if (\r\n      tokens[current + i].type === 'paren' &&\r\n      tokens[current + i].value === '('\r\n    ) {\r\n      const tmpQueue = [];\r\n      tmpQueue.push(1);\r\n      i += 1;\r\n      let tmpTokens = [];\r\n      while (tokens[current + i] && tmpQueue.length) {\r\n        tmpTokens.push(tokens[current + i]);\r\n        if (\r\n          tokens[current + i].type === 'paren' &&\r\n          tokens[current + i].value === ')'\r\n        ) {\r\n          tmpQueue.pop();\r\n        }\r\n        if (\r\n          tokens[current + i].type === 'paren' &&\r\n          tokens[current + i].value === '('\r\n        ) {\r\n          tmpQueue.push(1);\r\n        }\r\n        if (tokens[current + i].type === 'comma' && tmpQueue.length === 1) {\r\n          tmpTokens.pop();\r\n          const tmpVal = parser(null, tmpTokens, 0);\r\n          arrayOfParams.push(tmpVal);\r\n          arrayOfOriginalTokens.push(tmpTokens);\r\n          tmpTokens = [];\r\n        }\r\n        i += 1;\r\n      }\r\n      i -= 1;\r\n\r\n      if (\r\n        tokens[current + i].type === 'paren' &&\r\n        tokens[current + i].value === ')'\r\n      ) {\r\n        tmpTokens.pop();\r\n        const tmpVal = parser(null, tmpTokens, 0);\r\n        arrayOfParams.push(tmpVal);\r\n        arrayOfOriginalTokens.push(tmpTokens);\r\n        let parsedFn = false;\r\n        let parsedVal = null;\r\n        possibleFunctions.forEach(functionFn => {\r\n          if (parsedFn) {\r\n            return;\r\n          }\r\n          [parsedFn, parsedVal] = functionFn(\r\n            funcName,\r\n            arrayOfParams,\r\n            arrayOfOriginalTokens,\r\n            _output,\r\n            current\r\n          );\r\n        });\r\n        if (parsedFn) {\r\n          return [i + 1, parsedVal];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseIf parses the if present in expression\r\n * @param {any} _output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction parseIf(_output: any, tokens: any, current: any) {\r\n  if (tokens[current].type === 'if') {\r\n    const arrayOfParams = [];\r\n    let i = 1;\r\n    if (\r\n      tokens[current + i].type === 'paren' &&\r\n      tokens[current + i].value === '('\r\n    ) {\r\n      const tmpQueue = [];\r\n      tmpQueue.push(1);\r\n      i += 1;\r\n      let tmpTokens = [];\r\n      while (tokens[current + i] && tmpQueue.length) {\r\n        tmpTokens.push(tokens[current + i]);\r\n        if (\r\n          tokens[current + i].type === 'paren' &&\r\n          tokens[current + i].value === ')'\r\n        ) {\r\n          tmpQueue.pop();\r\n        }\r\n        if (\r\n          tokens[current + i].type === 'paren' &&\r\n          tokens[current + i].value === '('\r\n        ) {\r\n          tmpQueue.push(1);\r\n        }\r\n        if (tokens[current + i].type === 'comma' && tmpQueue.length === 1) {\r\n          tmpTokens.pop();\r\n          const tmpVal = parser(null, tmpTokens, 0);\r\n          arrayOfParams.push(tmpVal);\r\n          tmpTokens = [];\r\n        }\r\n        i += 1;\r\n      }\r\n      i -= 1;\r\n\r\n      if (\r\n        tokens[current + i].type === 'paren' &&\r\n        tokens[current + i].value === ')'\r\n      ) {\r\n        tmpTokens.pop();\r\n        const tmpVal = parser(null, tmpTokens, 0);\r\n        arrayOfParams.push(tmpVal);\r\n        if (arrayOfParams.length % 2 === 0) {\r\n          let j;\r\n          for (j = 0; j < arrayOfParams.length; j += 2) {\r\n            if (arrayOfParams[j]) {\r\n              return [i + 1, arrayOfParams[j + 1]];\r\n            }\r\n          }\r\n        } else {\r\n          let j;\r\n          for (j = 0; j < arrayOfParams.length - 1; j += 2) {\r\n            if (arrayOfParams[j]) {\r\n              return [i + 1, arrayOfParams[j + 1]];\r\n            }\r\n          }\r\n          return [i + 1, arrayOfParams[arrayOfParams.length - 1]];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseNot parses the not present in expression\r\n * @param {any} output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\nfunction parseNot(output: any, tokens: any, current: any) {\r\n  if (tokens[current].type === 'not') {\r\n    let tmpTokens;\r\n    let i = 1;\r\n    if (tokens[current + i].type === 'equal' && output != null) {\r\n      tmpTokens = [];\r\n      i += 1;\r\n      const terminatingTokens = ['and', 'or'];\r\n      while (\r\n        tokens[current + i] &&\r\n        terminatingTokens.indexOf(tokens[current + i].type) === -1\r\n      ) {\r\n        tmpTokens.push(tokens[current + i]);\r\n        i += 1;\r\n      }\r\n      let newOutput;\r\n      if (tmpTokens.length) {\r\n        newOutput = parser(null, tmpTokens, 0);\r\n        // tslint:disable-next-line: triple-equals\r\n        return [i, output != newOutput];\r\n      }\r\n    } else {\r\n      let parsed = false;\r\n      const possibleParsers = [\r\n        parseLiterals,\r\n        parseMinus,\r\n        parseParen,\r\n        parseFunction,\r\n      ];\r\n      let consumedTokens;\r\n      let newOutput;\r\n      possibleParsers.forEach(parserFn => {\r\n        if (parsed) {\r\n          return;\r\n        }\r\n        if (parserFn === parseMinus) {\r\n          [consumedTokens, newOutput] = parserFn(null, tokens, current + 1);\r\n        } else {\r\n          [consumedTokens, newOutput] = parserFn(output, tokens, current + 1);\r\n        }\r\n        if (consumedTokens !== 0) {\r\n          parsed = true;\r\n          i += consumedTokens;\r\n        }\r\n      });\r\n      if (parsed) {\r\n        return [i, !newOutput];\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseAnd parses the and present in expression\r\n * @param {any} output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\nfunction parseAnd(output: any, tokens: any, current: any): any {\r\n  if (tokens[current].type === 'and' && output != null) {\r\n    const tmpTokens = [];\r\n    let i = 1;\r\n    let newOutput = null;\r\n    if (\r\n      tokens[current + i].type === 'paren' &&\r\n      tokens[current + i].value === '('\r\n    ) {\r\n      let consumedChars;\r\n      [consumedChars, newOutput] = parseParen(null, tokens, current + i);\r\n      i += consumedChars;\r\n    } else {\r\n      const terminatingTokens = ['and', 'or'];\r\n      while (\r\n        tokens[current + i] &&\r\n        terminatingTokens.indexOf(tokens[current + i].type) === -1\r\n      ) {\r\n        tmpTokens.push(tokens[current + i]);\r\n        i += 1;\r\n      }\r\n      if (tmpTokens.length) {\r\n        newOutput = parser(null, tmpTokens, 0);\r\n      }\r\n    }\r\n    if (newOutput != null) {\r\n      newOutput = output && newOutput;\r\n      if (tokens[current + i] && tokens[current + i].type === 'and') {\r\n        let consumedChars = 0;\r\n        [consumedChars, newOutput] = parseAnd(newOutput, tokens, current + i);\r\n        i += consumedChars;\r\n      }\r\n      return [i, newOutput];\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseOr parses the or present in expression\r\n * @param {any} output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\nfunction parseOr(output: any, tokens: any, current: any) {\r\n  if (tokens[current].type === 'or' && output != null) {\r\n    const tmpTokens = [];\r\n    let i = 1;\r\n    let newOutput = null;\r\n    if (\r\n      tokens[current + i].type === 'paren' &&\r\n      tokens[current + i].value === '('\r\n    ) {\r\n      let consumedChars;\r\n      [consumedChars, newOutput] = parseParen(null, tokens, current + i);\r\n      i += consumedChars;\r\n    } else {\r\n      const terminatingTokens = ['and', 'or'];\r\n      while (\r\n        tokens[current + i] &&\r\n        terminatingTokens.indexOf(tokens[current + i].type) === -1\r\n      ) {\r\n        tmpTokens.push(tokens[current + i]);\r\n        i += 1;\r\n      }\r\n      if (tmpTokens.length) {\r\n        newOutput = parser(null, tmpTokens, 0);\r\n      }\r\n    }\r\n    if (newOutput != null || output != null) {\r\n      if (tokens[current + i] && tokens[current + i].type === 'and') {\r\n        let consumedChars = 0;\r\n        [consumedChars, newOutput] = parseAnd(newOutput, tokens, current + i);\r\n        i += consumedChars;\r\n      }\r\n      return [i, output || newOutput];\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseEqual parses the equal present in expression\r\n * @param {any} output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\nfunction parseEqual(output: any, tokens: any, current: any) {\r\n  if (tokens[current].type === 'equal' && output != null) {\r\n    const tmpTokens = [];\r\n    let i = 1;\r\n    const terminatingTokens = ['and', 'or'];\r\n    while (\r\n      tokens[current + i] &&\r\n      terminatingTokens.indexOf(tokens[current + i].type) === -1\r\n    ) {\r\n      tmpTokens.push(tokens[current + i]);\r\n      i += 1;\r\n    }\r\n    let newOutput;\r\n    if (tmpTokens.length) {\r\n      newOutput = parser(null, tmpTokens, 0);\r\n      // tslint:disable-next-line: triple-equals\r\n      return [i, output == newOutput];\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseLessThan parses the less than or equal present in expression\r\n * @param {any} output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\nfunction parseLessThan(output: any, tokens: any, current: any) {\r\n  if (tokens[current].type === 'lessThan' && output != null) {\r\n    let flagLessThanOrEqual = false;\r\n    const tmpTokens = [];\r\n    let i = 1;\r\n    if (tokens[current + i].type === 'equal') {\r\n      i += 1;\r\n      flagLessThanOrEqual = true;\r\n    }\r\n    const terminatingTokens = ['and', 'or'];\r\n    while (\r\n      tokens[current + i] &&\r\n      terminatingTokens.indexOf(tokens[current + i].type) === -1\r\n    ) {\r\n      tmpTokens.push(tokens[current + i]);\r\n      i += 1;\r\n    }\r\n    let newOutput;\r\n    if (tmpTokens.length) {\r\n      newOutput = parser(null, tmpTokens, 0);\r\n      if (flagLessThanOrEqual) {\r\n        if (typeof newOutput.getMonth === 'function') {\r\n          return [i, moment(output).startOf('day').isSameOrBefore(moment(newOutput).startOf('day'))];\r\n        }\r\n        return [i, output <= newOutput];\r\n      }\r\n      if (typeof newOutput.getMonth === 'function') {\r\n        return [i, moment(output).startOf('day').isBefore(moment(newOutput).startOf('day'))];\r\n      }\r\n      return [i, output < newOutput];\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseGreaterThan parses the greater than or equal present in expression\r\n * @param {any} output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\nfunction parseGreaterThan(output: any, tokens: any, current: any) {\r\n  if (tokens[current].type === 'greaterThan' && output != null) {\r\n    let flagGreaterThanOrEqual = false;\r\n    const tmpTokens = [];\r\n    let i = 1;\r\n    if (tokens[current + i].type === 'equal') {\r\n      i += 1;\r\n      flagGreaterThanOrEqual = true;\r\n    }\r\n    const terminatingTokens = ['and', 'or'];\r\n    while (\r\n      tokens[current + i] &&\r\n      terminatingTokens.indexOf(tokens[current + i].type) === -1\r\n    ) {\r\n      tmpTokens.push(tokens[current + i]);\r\n      i += 1;\r\n    }\r\n    let newOutput;\r\n    if (tmpTokens.length) {\r\n      newOutput = parser(null, tmpTokens, 0);\r\n\r\n      if (flagGreaterThanOrEqual) {\r\n        return [i, output >= newOutput];\r\n      }\r\n      return [i, output > newOutput];\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseParen parses the paren present in expression\r\n * @param {any} output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\n// tslint:disable-next-line: variable-name\r\nfunction parseParen(_output: any, tokens: any, current: any) {\r\n  if (tokens[current].type === 'paren' && tokens[current].value === '(') {\r\n    const tmpQueue = [];\r\n    tmpQueue.push(1);\r\n    let i = 1;\r\n    const tmpTokens = [];\r\n    while (tokens[current + i] && tmpQueue.length) {\r\n      tmpTokens.push(tokens[current + i]);\r\n      if (\r\n        tokens[current + i].type === 'paren' &&\r\n        tokens[current + i].value === ')'\r\n      ) {\r\n        tmpQueue.pop();\r\n      }\r\n      if (\r\n        tokens[current + i].type === 'paren' &&\r\n        tokens[current + i].value === '('\r\n      ) {\r\n        tmpQueue.push(1);\r\n      }\r\n      i += 1;\r\n    }\r\n    i -= 1;\r\n\r\n    if (\r\n      tokens[current + i].type === 'paren' &&\r\n      tokens[current + i].value === ')'\r\n    ) {\r\n      tmpTokens.pop();\r\n      const tmpVal = parser(null, tmpTokens, 0);\r\n      return [i + 1, tmpVal];\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseDivide parses the divide present in expression\r\n * @param {any} output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\nfunction parseDivide(output: any, tokens: any, current: any) {\r\n  if (output != null && tokens[current].type === 'divide') {\r\n    const possibleTokens = [\r\n      'number',\r\n      'decimal',\r\n      'minus',\r\n      'paren',\r\n      'variable',\r\n      'function',\r\n    ];\r\n    if (\r\n      current < tokens.length &&\r\n      possibleTokens.indexOf(tokens[current + 1].type) !== -1\r\n    ) {\r\n      let parsed = false;\r\n      let ct: any = null;\r\n      const possibleParsers = [\r\n        parseLiterals,\r\n        parseMinus,\r\n        parseParen,\r\n        parseFunction,\r\n      ];\r\n      possibleParsers.forEach(parserFn => {\r\n        if (parsed) {\r\n          return;\r\n        }\r\n        let consumedTokens;\r\n        let newOutput: any;\r\n        if (parserFn === parseMinus) {\r\n          [consumedTokens, newOutput] = parserFn(null, tokens, current + 1);\r\n        } else {\r\n          [consumedTokens, newOutput] = parserFn(output, tokens, current + 1);\r\n        }\r\n        if (consumedTokens !== 0) {\r\n          parsed = true;\r\n          consumedTokens += 1;\r\n          current += consumedTokens;\r\n          ct = consumedTokens;\r\n        }\r\n        const precedentParsers = [parseDivide, parseMultiply];\r\n        let preParsed = false;\r\n        let preOutput;\r\n        precedentParsers.forEach(preParseFn => {\r\n          if (preParsed) {\r\n            return;\r\n          }\r\n          if (tokens[current]) {\r\n            [consumedTokens, preOutput] = preParseFn(\r\n              newOutput,\r\n              tokens,\r\n              current\r\n            );\r\n            ct += consumedTokens;\r\n            if (consumedTokens !== 0) {\r\n              preParsed = true;\r\n              newOutput = preOutput;\r\n            }\r\n          }\r\n        });\r\n\r\n        if (newOutput != null) {\r\n          output /= newOutput;\r\n        }\r\n      });\r\n      if (parsed) {\r\n        return [ct, output];\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseMultiply parses the multiply present in expression\r\n * @param {any} output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\nfunction parseMultiply(output: any, tokens: any, current: any) {\r\n  if (output != null && tokens[current].type === 'multiply') {\r\n    const possibleTokens = [\r\n      'number',\r\n      'decimal',\r\n      'minus',\r\n      'paren',\r\n      'variable',\r\n      'function',\r\n    ];\r\n    if (\r\n      current < tokens.length &&\r\n      possibleTokens.indexOf(tokens[current + 1].type) !== -1\r\n    ) {\r\n      let parsed = false;\r\n      let ct: any = null;\r\n      const possibleParsers = [\r\n        parseLiterals,\r\n        parseMinus,\r\n        parseParen,\r\n        parseFunction,\r\n      ];\r\n      possibleParsers.forEach(parserFn => {\r\n        if (parsed) {\r\n          return;\r\n        }\r\n        let consumedTokens;\r\n        let newOutput: any;\r\n        if (parserFn === parseMinus) {\r\n          [consumedTokens, newOutput] = parserFn(null, tokens, current + 1);\r\n        } else {\r\n          [consumedTokens, newOutput] = parserFn(output, tokens, current + 1);\r\n        }\r\n        if (consumedTokens !== 0) {\r\n          parsed = true;\r\n          consumedTokens += 1;\r\n          current += consumedTokens;\r\n          ct = consumedTokens;\r\n        }\r\n        const precedentParsers = [parseDivide, parseMultiply];\r\n        let preParsed = false;\r\n        let preOutput;\r\n        precedentParsers.forEach(preParseFn => {\r\n          if (preParsed) {\r\n            return;\r\n          }\r\n          if (tokens[current]) {\r\n            [consumedTokens, preOutput] = preParseFn(\r\n              newOutput,\r\n              tokens,\r\n              current\r\n            );\r\n            ct += consumedTokens;\r\n            if (consumedTokens !== 0) {\r\n              preParsed = true;\r\n              newOutput = preOutput;\r\n            }\r\n          }\r\n        });\r\n\r\n        if (newOutput != null) {\r\n          output *= newOutput;\r\n        }\r\n      });\r\n      if (parsed) {\r\n        return [ct, output];\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parsePlus parses the addition present in expression\r\n * @param {any} output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\nfunction parsePlus(output: any, tokens: any, current: any) {\r\n  if (output != null && tokens[current].type === 'plus') {\r\n    const possibleTokens = [\r\n      'number',\r\n      'decimal',\r\n      'string',\r\n      'minus',\r\n      'paren',\r\n      'variable',\r\n      'function',\r\n    ];\r\n    if (\r\n      current < tokens.length &&\r\n      possibleTokens.indexOf(tokens[current + 1].type) !== -1\r\n    ) {\r\n      let parsed = false;\r\n      let ct: any = null;\r\n      const possibleParsers = [\r\n        parseLiterals,\r\n        parseMinus,\r\n        parseParen,\r\n        parseFunction,\r\n      ];\r\n      possibleParsers.forEach(parserFn => {\r\n        if (parsed) {\r\n          return;\r\n        }\r\n        let consumedTokens;\r\n        let newOutput: any;\r\n        if (parserFn === parseMinus) {\r\n          [consumedTokens, newOutput] = parserFn(null, tokens, current + 1);\r\n        } else {\r\n          [consumedTokens, newOutput] = parserFn(output, tokens, current + 1);\r\n        }\r\n        if (consumedTokens !== 0) {\r\n          parsed = true;\r\n          consumedTokens += 1;\r\n          current += consumedTokens;\r\n          ct = consumedTokens;\r\n          const precedentParsers = [parseDivide, parseMultiply];\r\n          let preParsed = false;\r\n          let preOutput;\r\n          precedentParsers.forEach(preParseFn => {\r\n            if (preParsed) {\r\n              return;\r\n            }\r\n            if (tokens[current]) {\r\n              [consumedTokens, preOutput] = preParseFn(\r\n                newOutput,\r\n                tokens,\r\n                current\r\n              );\r\n              ct += consumedTokens;\r\n              if (consumedTokens !== 0) {\r\n                preParsed = true;\r\n                newOutput = preOutput;\r\n              }\r\n            }\r\n          });\r\n        }\r\n        if (newOutput != null) {\r\n          output += newOutput;\r\n        }\r\n      });\r\n      if (parsed) {\r\n        return [ct, output];\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n/**\r\n * parseMinus parses the minus present in expression\r\n * @param {any} output - the parsed output of previous tokens\r\n * @param {any} tokens - the array of tokens\r\n * @param {any} current - the current position of the parser\r\n * @returns parserReturnObject\r\n */\r\nfunction parseMinus(output: any, tokens: any, current: any) {\r\n  if (tokens[current].type === 'minus') {\r\n    const possibleTokens = [\r\n      'number',\r\n      'decimal',\r\n      'paren',\r\n      'variable',\r\n      'function',\r\n    ];\r\n    if (\r\n      current < tokens.length &&\r\n      possibleTokens.indexOf(tokens[current + 1].type) !== -1\r\n    ) {\r\n      let parsed = false;\r\n      let ct: any = null;\r\n      const possibleParsers = [parseLiterals, parseParen, parseFunction];\r\n      possibleParsers.forEach(parserFn => {\r\n        if (parsed) {\r\n          return;\r\n        }\r\n        let [consumedTokens, newOutput] = parserFn(output, tokens, current + 1);\r\n        if (consumedTokens !== 0) {\r\n          parsed = true;\r\n          consumedTokens += 1;\r\n          current += consumedTokens;\r\n          ct = consumedTokens;\r\n          const precedentParsers = [parseDivide, parseMultiply];\r\n          let preParsed = false;\r\n          let preOutput;\r\n          precedentParsers.forEach(preParseFn => {\r\n            if (preParsed) {\r\n              return;\r\n            }\r\n            if (tokens[current]) {\r\n              [consumedTokens, preOutput] = preParseFn(\r\n                newOutput,\r\n                tokens,\r\n                current\r\n              );\r\n              ct += consumedTokens;\r\n              if (consumedTokens !== 0) {\r\n                preParsed = true;\r\n                newOutput = preOutput;\r\n              }\r\n            }\r\n          });\r\n        }\r\n        if (newOutput) {\r\n          if (output) {\r\n            if (\r\n              Object.prototype.toString.call(newOutput) === '[object Date]' &&\r\n              Object.prototype.toString.call(output) === '[object Date]'\r\n            ) {\r\n              if (!isNaN(output.getTime()) && !isNaN(newOutput.getTime())) {\r\n                output -= newOutput;\r\n                output = Math.ceil(output / (1000 * 60 * 60 * 24));\r\n              } else {\r\n                output = NaN;\r\n              }\r\n            } else if (\r\n              Object.prototype.toString.call(newOutput) === '[object Date]' ||\r\n              Object.prototype.toString.call(output) === '[object Date]'\r\n            ) {\r\n              output = NaN;\r\n            } else if (newOutput === '' || output === '') {\r\n              output = NaN;\r\n            } else {\r\n              output -= newOutput;\r\n            }\r\n          } else {\r\n            if (Object.prototype.toString.call(newOutput) === '[object Date]') {\r\n              output = NaN;\r\n            } else {\r\n              output = -newOutput;\r\n            }\r\n          }\r\n        } else {\r\n          output = NaN;\r\n        }\r\n      });\r\n      if (parsed) {\r\n        if (output === '') {\r\n          output = NaN;\r\n        }\r\n        return [ct, output];\r\n      }\r\n    }\r\n  }\r\n  return [0, null];\r\n}\r\n\r\n// precedence of the parser methods\r\nconst parsers = [\r\n  parseIf,\r\n  parseParen,\r\n  parseLiterals,\r\n  parseDivide,\r\n  parseMultiply,\r\n  parsePlus,\r\n  parseMinus,\r\n  parseLessThan,\r\n  parseGreaterThan,\r\n  parseEqual,\r\n  parseAnd,\r\n  parseOr,\r\n  parseNot,\r\n  parseFunction,\r\n];\r\n\r\n/**\r\n * the main parser that parses the series of tokens generated by the tokenizer.\r\n * Throws syntax error if not parsed\r\n * @param {any} leftOutput - the initial output or output of previous left side tokens\r\n * @param {any} tokens - the set or array of tokens need to be parsed\r\n * @param {any} pos - the start position of the parser\r\n * @returns parsed value of the set of tokens\r\n */\r\nfunction parser(leftOutput: any, tokens: any, pos: any) {\r\n  let current = pos;\r\n  let output = leftOutput;\r\n  while (current < tokens.length) {\r\n    let parsed = false;\r\n    parsers.forEach(parserFn => {\r\n      if (parsed) {\r\n        return;\r\n      }\r\n      const [consumedTokens, newOutput] = parserFn(output, tokens, current);\r\n      if (consumedTokens !== 0) {\r\n        parsed = true;\r\n        current += consumedTokens;\r\n      }\r\n      if (newOutput != null) {\r\n        output = newOutput;\r\n      }\r\n    });\r\n    if (!parsed) {\r\n      // throw new TypeError('syntax error');\r\n      // tslint:disable-next-line: no-console\r\n      console.log('syntax error');\r\n      // tslint:disable-next-line: no-console\r\n      console.log(actualExpression);\r\n      return null;\r\n    }\r\n  }\r\n  return output;\r\n}\r\n\r\n/**\r\n * odk wrapper evaluator, default method that will be exported, parses expressions\r\n * @param {any} expression - expression that needs to be evaluated\r\n * @param {any} tmpUserInput - the variable key-value json, (current user input json)\r\n * @param {any} tmpFormItemProperty - the name key-value json (current option list)\r\n * @param {any} tmpCurrentHierarchicalName - the node at which the evaluater is called\r\n * @returns evaluated value\r\n */\r\nexport default function evaluater(\r\n  expression: string,\r\n  tmpUserInput: any,\r\n  tmpFormItemProperty: any,\r\n  tmpCurrentHierarchicalName: string\r\n) {\r\n  if (!tmpUserInput) {\r\n    tmpUserInput = {};\r\n  }\r\n  currentHierarchicalName = tmpCurrentHierarchicalName;\r\n  actualExpression = expression;\r\n  userInput = tmpUserInput;\r\n  formItemProperty = tmpFormItemProperty;\r\n  return parser(null, tokenizer(expression), 0);\r\n}\r\n","import { FieldElement } from '../components/typeEvalutors/Base';\r\n\r\n/**\r\n * get the text from multilang obj based on language identifier,\r\n * @param {FieldElement} property - field multilang property or string\r\n * @return {string} - text value of the property based on language identifier, empty if not present\r\n */\r\nexport default function getTextFromProperty(\r\n  property: string | { [key: string]: string },\r\n  languageIdentifier: string\r\n): string {\r\n  if (typeof property === 'string') {\r\n    return property || '';\r\n  }\r\n  return property[languageIdentifier] || '';\r\n}\r\n\r\n/**\r\n * get the label text of the fieldElement\r\n * @param {FieldElement} fieldElement - the fieldElement Object\r\n * @return {string} - field label text\r\n */\r\nexport function getFieldLabelText(\r\n  fieldElement: FieldElement,\r\n  languageIdentifier: string\r\n) {\r\n  if (fieldElement.label) {\r\n    return getTextFromProperty(fieldElement.label, languageIdentifier);\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * get the label hint of the fieldElement\r\n * @param {FieldElement} fieldElement - the fieldElement Object\r\n * @return {string} - field label text\r\n */\r\nexport function getHintLabelText(\r\n  fieldElement: FieldElement,\r\n  languageIdentifier: string\r\n) {\r\n  if (fieldElement.hint) {\r\n    return getTextFromProperty(fieldElement.hint, languageIdentifier);\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * get the customised label text with previous input of the fieldElement\r\n * @param {any} evaluator - the getEvaluatedExpressionSelector Function\r\n * @param {string} labelText - the current Label Text\r\n * @param {string} fieldTreeName - the field tree name\r\n * @return {string | null} - field label text or null\r\n */\r\nexport function customizeLabelsWithPreviousInputs(\r\n  evaluator: any,\r\n  labelText: string,\r\n  fieldTreeName: string\r\n): string | null {\r\n  if (labelText === null || labelText === undefined) {\r\n    return null;\r\n  }\r\n  const placesOfCustomizationsRequiredList = labelText.match(/\\[(.*?)\\]/g);\r\n\r\n  // to calculate - i.e, [${departure_date_from_bangladesh}]\r\n  if (placesOfCustomizationsRequiredList) {\r\n    placesOfCustomizationsRequiredList.forEach(tmpPlace => {\r\n      tmpPlace = tmpPlace.substring(1, tmpPlace.length - 1);\r\n      const customizedName = evaluator(tmpPlace, fieldTreeName);\r\n      const tmp = '[' + tmpPlace + ']';\r\n      if (customizedName != null && customizedName !== undefined) {\r\n        labelText = labelText.replace(tmp, customizedName);\r\n      } else {\r\n        labelText = labelText.replace(tmp, '');\r\n      }\r\n    });\r\n  } else {\r\n    // to calculate - i.e, ${departure_date_from_bangladesh}\r\n    const matchList = labelText.match(/\\${(.*[^}])[\\}?]$/g);\r\n    if (matchList) {\r\n      matchList.forEach(tmpPlace => {\r\n        const customizedName = evaluator(tmpPlace, fieldTreeName);\r\n        if (customizedName != null && customizedName !== undefined) {\r\n          labelText = labelText.replace(tmpPlace, customizedName);\r\n        } else {\r\n          labelText = labelText.replace(tmpPlace, '');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return labelText;\r\n}\r\n\r\n/**\r\n * get the hint text of the fieldElement\r\n * @param {FieldElement} fieldElement - the fieldElement Object\r\n * @return {string} - field hint text\r\n */\r\nexport function getFieldHintText(\r\n  fieldElement: FieldElement,\r\n  languageIdentifier: string\r\n) {\r\n  if (fieldElement.hint) {\r\n    return getTextFromProperty(fieldElement.hint, languageIdentifier);\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * get the label text of the fieldElement constraint msg\r\n * @param {FieldElement} fieldElement - the fieldElement Object\r\n * @return {string} - constraint label text\r\n */\r\nexport function getConstraintLabelText(\r\n  fieldElement: FieldElement,\r\n  languageIdentifier: string\r\n) {\r\n  if (fieldElement.bind && fieldElement.bind['jr:constraintMsg']) {\r\n    return getTextFromProperty(\r\n      fieldElement.bind['jr:constraintMsg'],\r\n      languageIdentifier\r\n    );\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * get the boolean result depending on the expression\r\n * @param {string} - required string\r\n * @returns {boolean} - true if required, otherwise false\r\n */\r\nfunction requiredEvaluator(expression: string): boolean {\r\n  if (\r\n    expression.toLowerCase() === 'yes' ||\r\n    expression === '1' ||\r\n    expression.toLowerCase() === 'true'\r\n  ) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * get the boolean result of fieldElement string\r\n * @param fieldElement\r\n * @return {boolean} - boolean value by calculating fieldElement required properties\r\n */\r\nexport function isInputRequired(fieldElement: FieldElement): boolean {\r\n  let isRequired = false;\r\n  if (fieldElement.bind) {\r\n    if (fieldElement.bind.required) {\r\n      if (\r\n        typeof fieldElement.bind.required === 'string' &&\r\n        requiredEvaluator(fieldElement.bind.required)\r\n      ) {\r\n        isRequired = true;\r\n      }\r\n    }\r\n  }\r\n  return isRequired;\r\n}\r\n\r\n/** interface for EvaluateExpression\r\n * @param {string} expression - the expression that needs to be evaluated\r\n * @param {fieldTreeName} - the field Tree name\r\n * @returns {any} - evaluated value\r\n */\r\nexport type EvaluateExpression = (\r\n  expression: string,\r\n  fieldTreeName: string\r\n) => any;\r\n\r\n/** evaluates whether a component be relevant or not\r\n * @param {FieldElement} fieldElement - the expression that needs to be evaluated\r\n * @param {string} fieldParentTreeName- the field Parent Tree name\r\n * @param {EvaluateExpression} evaluateExpression- an handler to evaluate the relevant expression\r\n * @returns {boolean} - true if relevant; otherwise, false;\r\n */\r\nexport function shouldComponentBeRelevant(\r\n  fieldElement: FieldElement,\r\n  fieldParentTreeName: string,\r\n  evaluateExpression: EvaluateExpression\r\n): boolean {\r\n  if (fieldElement && fieldElement.bind && fieldElement.bind.relevant) {\r\n    const isRelevant = evaluateExpression(\r\n      fieldElement.bind.relevant,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    if (isRelevant) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n/** evaluates whether a component be readonly or not\r\n * @param {FieldElement} fieldElement - the expression that needs to be evaluated\r\n * @param {string} fieldParentTreeName- the field Parent Tree name\r\n * @param {EvaluateExpression} evaluateExpression- an handler to evaluate the readonly expression\r\n * @returns {boolean} - true if readonly; otherwise, false;\r\n */\r\nexport function shouldComponentBeReadOnly(\r\n  fieldElement: FieldElement,\r\n  fieldParentTreeName: string,\r\n  evaluateExpression: EvaluateExpression\r\n): boolean {\r\n  if (fieldElement && fieldElement.bind && fieldElement.bind.readonly) {\r\n    const isReadOnly = evaluateExpression(\r\n      fieldElement.bind.readonly,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    if (isReadOnly) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  return false;\r\n}\r\n\r\n/** evaluates whether the input violates constraint or not\r\n * @param {FieldElement} fieldElement - the constraint expression\r\n * @param {string} fieldParentTreeName- the field Parent Tree name\r\n * @param {EvaluateExpression} evaluateExpression- an handler to evaluate the expression\r\n * @returns {boolean} - true if violates; otherwise, false;\r\n */\r\nexport function shouldInputViolatesConstraint(\r\n  fieldElement: FieldElement,\r\n  fieldParentTreeName: string,\r\n  evaluateExpression: EvaluateExpression\r\n): boolean {\r\n  if (fieldElement && fieldElement.bind && fieldElement.bind.constraint) {\r\n    const isConstraintViolated = !evaluateExpression(\r\n      fieldElement.bind.constraint,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    if (isConstraintViolated) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  return false;\r\n}\r\n\r\n/** returns the new user input object after assigning value of passed fieldTreeName\r\n * @param {any} userInputObj - the current user input object\r\n * @param {string} fieldTreeName - the field Tree name\r\n * @param {any} fieldValue - the value that needs to be assigned\r\n * @returns {any} - the new user input object after assignment\r\n */\r\nexport function getModifiedUserInputObject(\r\n  userInputObj: any,\r\n  fieldTreeName: string,\r\n  fieldValue: any\r\n): any {\r\n  const treeNodes = fieldTreeName.split('/');\r\n  let i;\r\n  let parent = '';\r\n  let modifiedObj = userInputObj;\r\n  for (i = 0; i < treeNodes.length - 1; ) {\r\n    if (treeNodes[i] === 'repeat') {\r\n      i += 1;\r\n      if (parent + treeNodes[i] in modifiedObj) {\r\n        modifiedObj = modifiedObj[parent + treeNodes[i]];\r\n      } else {\r\n        modifiedObj[parent + treeNodes[i]] = [];\r\n        modifiedObj = modifiedObj[parent + treeNodes[i]];\r\n      }\r\n      const index = parseInt(treeNodes[i + 1], 10);\r\n      if (modifiedObj[index]) {\r\n        modifiedObj = modifiedObj[index];\r\n      } else {\r\n        modifiedObj[index] = {};\r\n        modifiedObj = modifiedObj[index];\r\n      }\r\n      parent = parent + treeNodes[i] + '/';\r\n      i += 2;\r\n    } else {\r\n      parent = parent + treeNodes[i + 1] + '/';\r\n      i += 2;\r\n    }\r\n  }\r\n  modifiedObj[parent + treeNodes[treeNodes.length - 1]] = fieldValue;\r\n  return userInputObj;\r\n}\r\n\r\n/** Returns the filtered option list Array For Repeat property\r\n * @param {any} userInputObj - the current option list object\r\n * @param {string} fieldTreeName - the field Tree name\r\n * @param {any} repeatIndex - the repeat index to remove\r\n * @returns {any} - the new user filredred repear array after assignment\r\n */\r\nexport function getModifiedOptionListForRepeat(\r\n  userInputObj: any,\r\n  fieldTreeName: string,\r\n  repeatIndex: number\r\n): any {\r\n  const filteredRepeatArray: any = [];\r\n  const optionListobj: any = userInputObj;\r\n\r\n  Object.entries(optionListobj).forEach(key => {\r\n    const keyNameOptionListobj: any = key[0];\r\n    const keyValueOptionListobj: any = key[1];\r\n    if (keyNameOptionListobj === fieldTreeName) {\r\n      const repeatIndexString: string = String(repeatIndex);\r\n      Object.entries(keyValueOptionListobj).map(keyRepeat => {\r\n        const keyNameRepeatObject: any = keyRepeat[0];\r\n        const keyValueRepeatValue: any = keyRepeat[1];\r\n        if (keyNameRepeatObject !== repeatIndexString) {\r\n          filteredRepeatArray.push(keyValueRepeatValue);\r\n        }\r\n      });\r\n    }\r\n  });\r\n  return filteredRepeatArray;\r\n}\r\n\r\n/** returns the value from the user input object\r\n * @param {any} userInputObj - the user input object\r\n * @param {string} fieldTreeName - the field Tree name\r\n * @returns {any} - the value, present in user input object, of the fieldTreeName\r\n */\r\nexport function getValueFromUserInputObj(\r\n  userInputObj: any,\r\n  fieldTreeName: string\r\n): any {\r\n  const treeNodes = fieldTreeName.split('/');\r\n  let i;\r\n  let parent = '';\r\n  let modifiedObj = userInputObj;\r\n  for (i = 0; i < treeNodes.length - 1; ) {\r\n    if (treeNodes[i] === 'repeat') {\r\n      i += 1;\r\n      if (parent + treeNodes[i] in modifiedObj) {\r\n        modifiedObj = modifiedObj[parent + treeNodes[i]];\r\n      } else {\r\n        modifiedObj[parent + treeNodes[i]] = [];\r\n      }\r\n      const index = parseInt(treeNodes[i + 1], 10);\r\n      if (modifiedObj[index]) {\r\n        modifiedObj = modifiedObj[index];\r\n      } else {\r\n        modifiedObj[index] = {};\r\n        modifiedObj = modifiedObj[index];\r\n      }\r\n      parent = parent + treeNodes[i] + '/';\r\n      i += 2;\r\n    } else {\r\n      parent = parent + treeNodes[i + 1] + '/';\r\n      i += 2;\r\n    }\r\n  }\r\n  return modifiedObj[parent + treeNodes[treeNodes.length - 1]];\r\n}\r\n\r\n/** evaluates whether the component is minimal or not\r\n * @param {FieldElement} fieldElement - the constraint expression\r\n * @returns {boolean} - true if minimal; otherwise, false;\r\n */\r\nexport function shouldComponentBeMinimal(fieldElement: FieldElement): boolean {\r\n  let isMinimal = false;\r\n  if (fieldElement.control && fieldElement.control.appearance) {\r\n    fieldElement.control.appearance.toString().includes('minimal')\r\n      ? (isMinimal = true)\r\n      : (isMinimal = false);\r\n  }\r\n  return isMinimal;\r\n}\r\n\r\n/** returns the new user input object after emptying the desired grouped values\r\n * @param {any} userInputObj - the current user input object\r\n * @param {string} groupTreeName - the group Tree name\r\n * @returns {any} - the new user input object after emptying the grouped values\r\n */\r\nexport function emptyGroupedValues(\r\n  userInputObj: any,\r\n  groupTreeName: string\r\n): any {\r\n  const treeNodes = groupTreeName.split('/');\r\n  let i;\r\n  let parent = '';\r\n  let modifiedObj = userInputObj;\r\n  for (i = 0; i < treeNodes.length - 1; ) {\r\n    if (treeNodes[i] === 'repeat') {\r\n      i += 1;\r\n      if (parent + treeNodes[i] in modifiedObj) {\r\n        modifiedObj = modifiedObj[parent + treeNodes[i]];\r\n      } else {\r\n        modifiedObj[parent + treeNodes[i]] = [];\r\n      }\r\n      const index = parseInt(treeNodes[i + 1], 10);\r\n      if (modifiedObj[index]) {\r\n        modifiedObj = modifiedObj[index];\r\n      } else {\r\n        modifiedObj[index] = {};\r\n        modifiedObj = modifiedObj[index];\r\n      }\r\n      parent = parent + treeNodes[i] + '/';\r\n      i += 2;\r\n    } else {\r\n      parent = parent + treeNodes[i + 1] + '/';\r\n      i += 2;\r\n    }\r\n  }\r\n  Object.keys(modifiedObj).forEach(objKey => {\r\n    if (objKey.startsWith(parent + treeNodes[treeNodes.length - 1])) {\r\n      modifiedObj[objKey] = null;\r\n    }\r\n  });\r\n  return userInputObj;\r\n}\r\n\r\n/** returns whether the grouped values are empty or not\r\n * @param {any} userInputObj - the current user input object\r\n * @param {string} groupTreeName - the group Tree name\r\n * @returns {any} - true if empty; otherwise, false\r\n */\r\nexport function checkGroupedValuesForEmpty(\r\n  userInputObj: any,\r\n  groupTreeName: string\r\n): any {\r\n  const treeNodes = groupTreeName.split('/');\r\n  let i;\r\n  let parent = '';\r\n  let modifiedObj = userInputObj;\r\n  for (i = 0; i < treeNodes.length - 1; ) {\r\n    if (treeNodes[i] === 'repeat') {\r\n      i += 1;\r\n      if (parent + treeNodes[i] in modifiedObj) {\r\n        modifiedObj = modifiedObj[parent + treeNodes[i]];\r\n      } else {\r\n        modifiedObj[parent + treeNodes[i]] = [];\r\n      }\r\n      const index = parseInt(treeNodes[i + 1], 10);\r\n      if (modifiedObj[index]) {\r\n        modifiedObj = modifiedObj[index];\r\n      } else {\r\n        modifiedObj[index] = {};\r\n        modifiedObj = modifiedObj[index];\r\n      }\r\n      parent = parent + treeNodes[i] + '/';\r\n      i += 2;\r\n    } else {\r\n      parent = parent + treeNodes[i + 1] + '/';\r\n      i += 2;\r\n    }\r\n  }\r\n  let isEmpty: boolean = true;\r\n  Object.keys(modifiedObj).forEach(objKey => {\r\n    if (objKey.startsWith(parent + treeNodes[treeNodes.length - 1])) {\r\n      if (\r\n        modifiedObj[objKey] !== null &&\r\n        modifiedObj[objKey] !== undefined &&\r\n        isEmpty\r\n      ) {\r\n        isEmpty = false;\r\n      }\r\n    }\r\n  });\r\n  return isEmpty;\r\n}\r\n","import { AnyAction, Store } from 'redux';\r\nimport SeamlessImmutable from 'seamless-immutable';\r\nimport evaluater from '../../utils/compiler';\r\nimport {\r\n  checkGroupedValuesForEmpty,\r\n  emptyGroupedValues,\r\n  getModifiedOptionListForRepeat,\r\n  getModifiedUserInputObject,\r\n  getValueFromUserInputObj,\r\n} from '../../utils/helpers';\r\n\r\n/** interface for the store state */\r\nexport interface FormState {\r\n  userInput: object;\r\n  errors: string[];\r\n  optionList: object;\r\n  isFormSubmitted: boolean;\r\n  mediaList: object;\r\n  language: string;\r\n}\r\n\r\n// actions\r\n\r\n/** FIELD_VALUE_ASSIGNED action type */\r\nexport const FIELD_VALUE_ASSIGNED = 'odk/reducer/form/FIELD_VALUE_ASSIGNED';\r\n/** OPTION_LIST_ASSIGNED action type */\r\nexport const OPTION_LIST_ASSIGNED = 'odk/reducer/form/OPTION_LIST_ASSIGNED';\r\n/** MEDIA_LIST_ASSIGNED action type */\r\nexport const MEDIA_LIST_ADDED = 'odk/reducer/form/MEDIA_LIST_ADDED';\r\n/** REMOVE_FROM_MEDIA_LIST action type */\r\nexport const REMOVE_FROM_MEDIA_LIST = 'odk/reducer/form/REMOVE_FROM_MEDIA_LIST';\r\n/** REMOVE_FROM_OPTION_LIST action type */\r\nexport const REMOVE_FROM_OPTION_LIST_REPEAT =\r\n  'odk/reducer/form/REMOVE_FROM_OPTION_LIST_REPEAT';\r\n/** RESET_STORE action type */\r\nexport const RESET_STORE = 'odk/reducer/form/RESET_STORE';\r\n/** ADD_ERROR_INPUT_ID action type */\r\nexport const ADD_ERROR_INPUT_ID = 'odk/reducer/form/ADD_ERROR_INPUT_ID';\r\n/** REMOVE_ERROR_INPUT_ID action type */\r\nexport const REMOVE_ERROR_INPUT_ID = 'odk/reducer/form/REMOVE_ERROR_INPUT_ID';\r\n/** EMPTY_GROUP_FIELDS */\r\nexport const EMPTY_GROUP_FIELDS = 'odk/reducer/form/EMPTY_GROUP_FIELDS';\r\n/** REMOVE_GROUP_FIELDS_FROM_ERRORS */\r\nexport const REMOVE_GROUP_FIELDS_FROM_ERRORS =\r\n  'odk/reducer/form/REMOVE_GROUP_FIELDS_FROM_ERRORS';\r\nexport const SET_USER_INPUT_OBJ = 'odk/reducer/form/SET_USER_INPUT_OBJ';\r\nexport const SET_CSV_OBJ = 'odk/reducer/form/SET_CSV_OBJ';\r\nexport const SET_FORM_SUBMIT_STATUS = 'odk/reducer/form/SET_FORM_SUBMIT_STATUS';\r\nexport const SET_LANGUAGE = 'odk/reducer/form/SET_LANGUAGE';\r\n\r\n/** interface for ASSIGN_FIELD_VALUE action */\r\nexport interface AssignFieldValueAction extends AnyAction {\r\n  fieldTreeName: string;\r\n  fieldValue: any;\r\n  type: typeof FIELD_VALUE_ASSIGNED;\r\n}\r\n\r\n/** interface for OPTION_LIST_ASSIGNED action */\r\nexport interface AssignOptionListAction extends AnyAction {\r\n  fieldTreeName: string;\r\n  optionList: any;\r\n  type: typeof OPTION_LIST_ASSIGNED;\r\n}\r\n\r\n/** interface for MEDIA_LIST_ADDED action */\r\nexport interface AddMediaListAction extends AnyAction {\r\n  mediaObject: any;\r\n  type: typeof MEDIA_LIST_ADDED;\r\n}\r\n\r\n/** interface for REMOVE_FROM_MEDIA_LIST action */\r\nexport interface RemoveFromMediaListAction extends AnyAction {\r\n  fieldTreeName: string;\r\n  mediaList: any;\r\n  type: typeof REMOVE_FROM_MEDIA_LIST;\r\n}\r\n\r\n/** interface for REMOVE_FROM_OPTION_LIST action */\r\nexport interface RemoveFromOptionList extends AnyAction {\r\n  fieldTreeName: string;\r\n  repeatIndex: number;\r\n  type: typeof REMOVE_FROM_OPTION_LIST_REPEAT;\r\n}\r\n\r\n/** interface for RESET_STORE action */\r\nexport interface ResetStoreAction extends AnyAction {\r\n  type: typeof RESET_STORE;\r\n}\r\n\r\n/** interface for ADD_ERROR_INPUT_ID action */\r\nexport interface AddErrorInputId extends AnyAction {\r\n  fieldTreeName: string;\r\n  type: typeof ADD_ERROR_INPUT_ID;\r\n}\r\n\r\n/** interface for REMOVE_ERROR_INPUT_ID action */\r\nexport interface RemoveErrorInputId extends AnyAction {\r\n  fieldTreeName: string;\r\n  type: typeof REMOVE_ERROR_INPUT_ID;\r\n}\r\n\r\n/** interface for EMPTY_GROUP_FIELDS action */\r\nexport interface EmptyGroupFields extends AnyAction {\r\n  fieldTreeName: string;\r\n  type: typeof EMPTY_GROUP_FIELDS;\r\n}\r\n\r\n/** interface for REMOVE_GROUP_FIELDS_FROM_ERRORS action */\r\nexport interface RemoveGroupFieldsFromErrors extends AnyAction {\r\n  fieldTreeName: string;\r\n  type: typeof REMOVE_GROUP_FIELDS_FROM_ERRORS;\r\n}\r\n\r\n/** interface for SET_USER_INPUT_OBJ action */\r\nexport interface SetUserInputObj extends AnyAction {\r\n  userInputObj: any;\r\n  type: typeof SET_USER_INPUT_OBJ;\r\n}\r\n\r\n/** interface for SET_CSV_OBJ action */\r\nexport interface SetCSVObj extends AnyAction {\r\n  csvObj: any;\r\n  type: typeof SET_CSV_OBJ;\r\n}\r\n/** interface for SET_LANGUAGE action */\r\nexport interface SetLanguage extends AnyAction {\r\n  language: string;\r\n  type: typeof SET_LANGUAGE;\r\n}\r\n\r\n/** interface for SET_FORM_SUBMIT_STATUS action */\r\nexport interface SetFormSubmitStatus extends AnyAction {\r\n  isFormSubmitted: boolean;\r\n  type: typeof SET_FORM_SUBMIT_STATUS;\r\n}\r\n\r\n/** Assigns the value to the proper field name\r\n * @param {string} fieldTreeName - the extended field name\r\n * @param {any} fieldValue - the value that will be assigned\r\n * @return {AssignFieldValueAction} - an action to assign value to a field in the redux store\r\n */\r\nexport const assignFieldValueAction = (\r\n  fieldTreeName: string,\r\n  fieldValue: any\r\n): AssignFieldValueAction => ({\r\n  fieldTreeName,\r\n  fieldValue,\r\n  type: FIELD_VALUE_ASSIGNED,\r\n});\r\n\r\n/** Assigns option list to the proper field name\r\n * @param {string} fieldTreeName - the extended field name\r\n * @param {any} optionList - the option list that will be assigned\r\n * @return {AssignOptionListAction} - an action to assign option List to a field in the redux store\r\n */\r\nexport const assignOptionListAction = (\r\n  fieldTreeName: string,\r\n  optionList: any\r\n): AssignOptionListAction => ({\r\n  fieldTreeName,\r\n  optionList,\r\n  type: OPTION_LIST_ASSIGNED,\r\n});\r\n\r\n/** Remove option list from Redux Store\r\n * @param fieldTreeName - the field tree name\r\n * @returns {RemoveFromOptionList} - an action to remove input id for errors\r\n */\r\nexport const RemoveFromOptionList = (\r\n  fieldTreeName: string,\r\n  repeatIndex: number\r\n): RemoveFromOptionList => ({\r\n  fieldTreeName,\r\n  repeatIndex,\r\n  type: REMOVE_FROM_OPTION_LIST_REPEAT,\r\n});\r\n\r\n/** Adds media object to the proper field name\r\n * @param {any} mediaObject - the media object that will be added\r\n * @return {AddMediaListAction} - an action to assign media object to a field in the redux store\r\n */\r\nexport const addMediaListAction = (mediaObject: any): AddMediaListAction => ({\r\n  mediaObject,\r\n  type: MEDIA_LIST_ADDED,\r\n});\r\n\r\n/** Remove a media item in option list from Redux Store\r\n * @param fieldTreeName - the field tree name\r\n * @returns {RemoveFromMediaListAction} - an action to remove media info from redux store\r\n */\r\nexport const removeFromMediaListAction = (\r\n  fieldTreeName: string,\r\n  mediaList: any\r\n): RemoveFromMediaListAction => ({\r\n  fieldTreeName,\r\n  mediaList,\r\n  type: REMOVE_FROM_MEDIA_LIST,\r\n});\r\n\r\n/** Resets the redux store state to initial state\r\n * @return {ResetStoreAction} - an action to reset the redux store state\r\n */\r\nexport const resetStoreAction = (): ResetStoreAction => ({\r\n  type: RESET_STORE,\r\n});\r\n\r\n/** add the field tree name as error id to store in redux store that violates constraints\r\n * @param fieldTreeName - the field tree name\r\n * @returns {AddErrorInputId} - an action to add input id for errors\r\n */\r\nexport const addErrorInputId = (fieldTreeName: string): AddErrorInputId => ({\r\n  fieldTreeName,\r\n  type: ADD_ERROR_INPUT_ID,\r\n});\r\n\r\n/** remove the field tree name as error id to store in redux store that violates constraints\r\n * @param fieldTreeName - the field tree name\r\n * @returns {RemoveErrorInputId} - an action to remove input id for errors\r\n */\r\nexport const removeErrorInputId = (\r\n  fieldTreeName: string\r\n): RemoveErrorInputId => ({\r\n  fieldTreeName,\r\n  type: REMOVE_ERROR_INPUT_ID,\r\n});\r\n\r\n/** empties the values of the fields of the group\r\n * @param fieldTreeName - the group field tree name\r\n * @returns {RemoveErrorInputId} - an action to empty the group field values\r\n */\r\nexport const emptyGroupFields = (fieldTreeName: string): EmptyGroupFields => ({\r\n  fieldTreeName,\r\n  type: EMPTY_GROUP_FIELDS,\r\n});\r\n\r\n/** removes the group field names from store errors obj\r\n * @param {string} fieldTreeName - the group field tree name\r\n * @returns {RemoveGroupFieldsFromErrors} - an action to remove group field names from errors\r\n */\r\nexport const removeGroupFieldsFromErrors = (\r\n  fieldTreeName: string\r\n): RemoveGroupFieldsFromErrors => ({\r\n  fieldTreeName,\r\n  type: REMOVE_GROUP_FIELDS_FROM_ERRORS,\r\n});\r\n\r\n/** sets the user input object to redux store\r\n * @param {any} userInputObj - the user input obj\r\n * @returns {SetUserInputObj} - an action to set user input to redux store\r\n */\r\nexport const setUserInputObj = (userInputObj: any): SetUserInputObj => ({\r\n  type: SET_USER_INPUT_OBJ,\r\n  userInputObj,\r\n});\r\n\r\n/** sets the csv object to redux store\r\n * @param {any} userInputObj - the user input obj\r\n * @returns {SetUserInputObj} - an action to set user input to redux store\r\n */\r\n export const setCSVObj = (csvObj: any): SetCSVObj => ({\r\n  type: SET_CSV_OBJ,\r\n  csvObj,\r\n});\r\n\r\n/** sets the language to redux store\r\n * @param {string} language - the user input obj\r\n * @returns {SetLanguage} - an action to set user input to redux store\r\n */\r\nexport const setUserLanguage = (language: string): SetLanguage => ({\r\n  type: SET_LANGUAGE,\r\n  language,\r\n});\r\n\r\n/** sets the form submit info to redux store\r\n * @param {boolean} isFormSubmitted - the form submit info variable\r\n * @returns {SetFormSubmitInfo} - an action to set form submit info to redux store\r\n */\r\nexport const setFormSubmitStatus = (\r\n  isFormSubmitted: boolean\r\n): SetFormSubmitStatus => ({\r\n  isFormSubmitted,\r\n  type: SET_FORM_SUBMIT_STATUS,\r\n});\r\n\r\n/** Create type for forms reducer actions */\r\nexport type FormActionTypes =\r\n  | AssignFieldValueAction\r\n  | AssignOptionListAction\r\n  | RemoveFromOptionList\r\n  | AddMediaListAction\r\n  | RemoveFromMediaListAction\r\n  | ResetStoreAction\r\n  | AddErrorInputId\r\n  | RemoveErrorInputId\r\n  | EmptyGroupFields\r\n  | RemoveGroupFieldsFromErrors\r\n  | SetUserInputObj\r\n  | SetCSVObj\r\n  | SetFormSubmitStatus\r\n  | AnyAction;\r\n\r\n/** Create an immutable form state */\r\nexport type ImmutableFormState = SeamlessImmutable.ImmutableObject<FormState>;\r\n\r\n/** initial form state */\r\nexport const initialState: ImmutableFormState = SeamlessImmutable({\r\n  errors: [],\r\n  isFormSubmitted: false,\r\n  mediaList: {},\r\n  optionList: {},\r\n  userInput: {},\r\n  language: 'English',\r\n  csvList: {},\r\n});\r\n\r\n/** the form reducer function */\r\nexport default function reducer(\r\n  state: ImmutableFormState = initialState,\r\n  action: FormActionTypes\r\n): ImmutableFormState {\r\n  switch (action.type) {\r\n    case FIELD_VALUE_ASSIGNED:\r\n      const modifiedUserInputObj = getModifiedUserInputObject(\r\n        state.getIn(['userInput']).asMutable({ deep: true }),\r\n        action.fieldTreeName,\r\n        action.fieldValue\r\n      );\r\n      const stateM = state.asMutable({ deep: true });\r\n      return SeamlessImmutable({ ...stateM, userInput: modifiedUserInputObj });\r\n\r\n    case OPTION_LIST_ASSIGNED:\r\n      const modifiedUserInputObjList = getModifiedUserInputObject(\r\n        state.getIn(['optionList']).asMutable({ deep: true }),\r\n        action.fieldTreeName,\r\n        action.optionList != null ? { ...action.optionList } : null\r\n      );\r\n      const newState = state.asMutable({ deep: true });\r\n      return SeamlessImmutable({\r\n        ...newState,\r\n        optionList: modifiedUserInputObjList,\r\n      });\r\n\r\n    case REMOVE_FROM_OPTION_LIST_REPEAT:\r\n      let filteredRepeatArray: any = [];\r\n      if (\r\n        state\r\n          .getIn(['optionList'])\r\n          .asMutable({ deep: true })\r\n          .hasOwnProperty(action.fieldTreeName)\r\n      ) {\r\n        filteredRepeatArray = [\r\n          ...getModifiedOptionListForRepeat(\r\n            state.getIn(['optionList']).asMutable({ deep: true }),\r\n            action.fieldTreeName,\r\n            action.repeatIndex\r\n          ),\r\n        ];\r\n        const modifiedOptionListRepeat = getModifiedUserInputObject(\r\n          state.getIn(['optionList']).asMutable({ deep: true }),\r\n          action.fieldTreeName,\r\n          { ...filteredRepeatArray }\r\n        );\r\n        const newStateForRepeat = state.asMutable({ deep: true });\r\n        return SeamlessImmutable({\r\n          ...newStateForRepeat,\r\n          optionList: modifiedOptionListRepeat,\r\n        });\r\n      }\r\n      return state;\r\n\r\n    case MEDIA_LIST_ADDED:\r\n      const modifiedMediaList = {\r\n        ...state.getIn(['mediaList']).asMutable({ deep: true }),\r\n        [action.mediaObject.name]: action.mediaObject,\r\n      };\r\n      const newMediaState = state.asMutable({ deep: true });\r\n      return SeamlessImmutable({\r\n        ...newMediaState,\r\n        mediaList: modifiedMediaList,\r\n      });\r\n\r\n    case REMOVE_FROM_MEDIA_LIST:\r\n      if (\r\n        state\r\n          .getIn(['mediaList'])\r\n          .asMutable({ deep: true })\r\n          .hasOwnProperty(action.fieldTreeName)\r\n      ) {\r\n        // const tempMediaState = state.asMutable({ deep: true });\r\n        // return SeamlessImmutable({\r\n        //   ...tempMediaState,\r\n        //   mediaList: modifiedMediaObject,\r\n        // });\r\n      }\r\n      return state;\r\n\r\n    case RESET_STORE:\r\n      return initialState;\r\n\r\n    case ADD_ERROR_INPUT_ID:\r\n      if (!state.errors.includes(action.fieldTreeName)) {\r\n        return state.updateIn(['errors'], arr =>\r\n          arr.concat([action.fieldTreeName])\r\n        );\r\n      }\r\n      return state;\r\n\r\n    case REMOVE_ERROR_INPUT_ID:\r\n      if (state.errors.includes(action.fieldTreeName)) {\r\n        return state.updateIn(['errors'], arr =>\r\n          arr.filter(elm => elm !== action.fieldTreeName)\r\n        );\r\n      }\r\n      return state;\r\n\r\n    case EMPTY_GROUP_FIELDS:\r\n      const mUserInputObj = emptyGroupedValues(\r\n        state.getIn(['userInput']).asMutable({ deep: true }),\r\n        action.fieldTreeName\r\n      );\r\n      const mState = state.asMutable({ deep: true });\r\n      return SeamlessImmutable({ ...mState, userInput: mUserInputObj });\r\n\r\n    case REMOVE_GROUP_FIELDS_FROM_ERRORS:\r\n      return state.updateIn(['errors'], arr =>\r\n        arr.filter(elm => !elm.startsWith(action.fieldTreeName))\r\n      );\r\n\r\n    case SET_USER_INPUT_OBJ:\r\n      return SeamlessImmutable({\r\n        ...state,\r\n        userInput: (action as any).userInputObj,\r\n      });\r\n\r\n    case SET_CSV_OBJ:\r\n      return SeamlessImmutable({\r\n        ...state,\r\n        csvList: (action as any).csvObj,\r\n      });\r\n      \r\n    case SET_FORM_SUBMIT_STATUS:\r\n      return SeamlessImmutable({\r\n        ...state,\r\n        isFormSubmitted: (action as any).isFormSubmitted,\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// selectors\r\n\r\n/** get the value by their respective element tree name\r\n * @param {Partial<Store>} state - the redux store\r\n * @param {string} fieldTreeName - the hierchical tree name of the field\r\n * @return {any | null} value if the element name is found else null\r\n */\r\nexport function getFieldValue(\r\n  state: Partial<Store>,\r\n  fieldTreeName: string\r\n): any {\r\n  return getValueFromUserInputObj(\r\n    (state as any) != undefined && (state as any).getIn(['userInput']).asMutable({ deep: true }),\r\n    fieldTreeName\r\n  );\r\n}\r\n\r\n/** get option list by their respective element tree name\r\n * @param {Partial<Store>} state - the redux store\r\n * @param {string} fieldTreeName - the hierchical tree name of the field\r\n * @return {any | null} value if the element name is found else null\r\n */\r\nexport function getOptionList(\r\n  state: Partial<Store>,\r\n  fieldTreeName: string\r\n): any {\r\n  return getValueFromUserInputObj(\r\n    (state as any) != undefined && (state as any).getIn(['optionList']).asMutable({ deep: true }),\r\n    fieldTreeName\r\n  );\r\n}\r\n\r\n/** get the value of the evaluated expression\r\n * @param {Partial<Store>} state - the redux store\r\n * @param {string} expression - the expression that needs to be evaluated\r\n * @param {string} fieldTreeName - the hierchical tree name of the field\r\n * @return {any | null} - the evaluated value or null if syntax error\r\n */\r\nexport function getEvaluatedExpression(\r\n  state: Partial<Store>,\r\n  expression: string,\r\n  fieldTreeName: string\r\n): any {\r\n  return evaluater(expression, (state as any) != undefined && (state as any).userInput, null, fieldTreeName);\r\n}\r\n\r\n/** get the value of the evaluated expression for Select One and Select All\r\n * @param {Partial<Store>} state - the redux store\r\n * @param {string} expression - the expression that needs to be evaluated\r\n * @param {any} options - the options that needs to be evaluated\r\n * @param {string} fieldTreeName - the hierchical tree name of the field\r\n * @return {any | null} - the evaluated value or null if syntax error\r\n */\r\nexport function getEvaluatedExpressionForSelect(\r\n  state: Partial<Store>,\r\n  expression: string,\r\n  options: any,\r\n  fieldTreeName: string\r\n): any {\r\n  return evaluater(\r\n    expression,\r\n    (state as any).userInput,\r\n    options,\r\n    fieldTreeName\r\n  );\r\n}\r\n\r\n/** check if the field element is present in the store\r\n * @param {Partial<Store>} state - the redux store\r\n * @param {string} fieldTreeName - the hierchical tree name of the field\r\n * @return {boolean} true if present; otherwise, false\r\n */\r\nexport function isPresentInError(\r\n  state: Partial<Store>,\r\n  fieldTreeName: string\r\n): any {\r\n  return  (state as any) != undefined && (state as any).errors.includes(fieldTreeName);\r\n}\r\n\r\n/** check if the field elements under group are empty or not\r\n * @param {Partial<Store>} state - the redux store\r\n * @param {string} fieldTreeName - the hierchical tree name of the group field\r\n * @return {boolean} true if empty; otherwise, false\r\n */\r\nexport function isGroupFieldsEmpty(\r\n  state: Partial<Store>,\r\n  fieldTreeName: string\r\n): any {\r\n  return checkGroupedValuesForEmpty( (state as any) != undefined && (state as any).userInput, fieldTreeName);\r\n}\r\n\r\n/** check if the field elements under group are present in errors or not\r\n * @param {Partial<Store>} state - the redux store\r\n * @param {string} fieldTreeName - the hierchical tree name of the group field\r\n * @return {boolean} true if present; otherwise, false\r\n */\r\nexport function isErrorsIncludeGroupFields(\r\n  state: Partial<Store>,\r\n  fieldTreeName: string\r\n): any {\r\n  let isPresent = false;\r\n  (state as any).errors.forEach((fTName: string) => {\r\n    if (fTName.startsWith(fieldTreeName) && !isPresent) {\r\n      isPresent = true;\r\n    }\r\n  });\r\n  return isPresent;\r\n}\r\n\r\n/** check if the errors array in store empty or not\r\n * @param {Partial<Store>} state - the redux store\r\n * @return {boolean} true if empty; otherwise, false\r\n */\r\nexport function isErrorsArrayEmpty(state: Partial<Store>): any {\r\n  return (state as any) != undefined && (state as any).errors && (state as any).errors.length ? false : true;\r\n}\r\n\r\n/** get the userInput object from store\r\n * @param {Partial<Store>} state - the redux store\r\n * @return {boolean} the current userInputObject\r\n */\r\nexport function getUserInputFromStore(state: Partial<Store>): any {\r\n  return (state as any) != undefined && (state as any).getIn(['userInput']).asMutable({ deep: true });\r\n}\r\n\r\n/** get the userInput object from store\r\n * @param {Partial<Store>} state - the redux store\r\n * @return {boolean} the current userInputObject\r\n */\r\n export function getCSVFromStore(state: Partial<Store>): any {\r\n  return (state as any) != undefined && (state as any).getIn(['csvList']).asMutable({ deep: true });\r\n}\r\n\r\n\r\n/** get the userInput object from store\r\n * @param {Partial<Store>} state - the redux store\r\n * @return {boolean} the current isFormSubmitted\r\n */\r\nexport function getFormSubmitStatus(state: Partial<Store>): any {\r\n  return (state as any) != undefined && (state as any).isFormSubmitted;\r\n}\r\n\r\n/** get the file if present in store\r\n * @param {Partial<Store>} state - the redux store\r\n * @param {string} fileName - the fileName\r\n * @return {any} - the file or null\r\n */\r\nexport function getFileObject(state: Partial<Store>, fileName: string): any {\r\n  const fileObject = (state as any).getIn(['mediaList', fileName]);\r\n  return fileObject ? (state as any).getIn(['mediaList', fileName]) : null;\r\n}\r\n\r\n/** get all the files\r\n * @param {Partial<Store>} state - the redux store\r\n * @return {any} - the files or empty object\r\n */\r\nexport function getAllFileObjects(state: Partial<Store>): any {\r\n  return (state as any) != undefined && (state as any).getIn(['mediaList']);\r\n}\r\n","import { createStyles, Theme } from '@material-ui/core';\r\n\r\nconst GroupStyle = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '&.MuiAccordionSummary-root': {\r\n        borderTop: `5px solid ${theme.palette.primary.dark}`,\r\n        color: `${theme.palette.primary.dark} !important`,\r\n        '&:hover': {\r\n          backgroundColor: `${theme.palette.primary.dark} !important`,\r\n          color: `${theme.palette.secondary.light} !important`,\r\n        },\r\n        '&.Mui-expanded': {\r\n          backgroundColor: `${theme.palette.primary.dark} !important`,\r\n          color: `${theme.palette.secondary.light} !important`,\r\n        },\r\n      },\r\n    },\r\n    backgroundProp: {\r\n      backgroundColor: theme.palette.secondary.light,\r\n      display: 'block'\r\n    },\r\n    insideBackground: {\r\n      backgroundColor: 'white'\r\n    },\r\n    borderProp: {\r\n      boxShadow: `inset 0 0 2px ${theme.palette.primary.light}`,\r\n      backgroundColor: 'white',\r\n      marginTop: 10,\r\n      marginBottom: 5,\r\n      padding: 10,\r\n\r\n    },\r\n    toolbarIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n      '& button': {\r\n        color: '#FFF',\r\n      },\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: 'hidden',\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      width: theme.spacing(7),\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9),\r\n      },\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',\r\n    },\r\n    listItem: {\r\n      width: '94%',\r\n      background: theme.palette.primary.main,\r\n      color: '#FFF',\r\n      marginTop: '2px',\r\n      marginLeft: '8px',\r\n      marginRight: '2px',\r\n      borderRadius: '3px',\r\n      '&:hover': {\r\n        background: theme.palette.primary.light,\r\n      },\r\n    },\r\n    listItemIcon: {\r\n      color: '#FFF',\r\n    },\r\n    listItemActive: {\r\n      width: '94%',\r\n      background: theme.palette.primary.light,\r\n      color: '#FFF',\r\n      marginTop: '2px',\r\n      marginLeft: '8px',\r\n      marginRight: '2px',\r\n      borderRadius: '3px',\r\n      '&:hover': {\r\n        background: theme.palette.primary.light,\r\n      },\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n      color: '#FFF',\r\n    },\r\n    navlogo: {\r\n      width: '40%',\r\n      margin: '0 auto',\r\n      padding: 3,\r\n      backgroundColor: '#FFF',\r\n      borderRadius: 5,\r\n    },\r\n    listParent: {\r\n      color: theme.palette.common.white,\r\n      '&.MuiListItem-root': {\r\n        color: theme.palette.common.white,\r\n        '&.Mui-selected': { color: theme.palette.common.white, backgroundColor: theme.palette.primary.main },\r\n        '&:hover': {\r\n          color: theme.palette.common.white,\r\n          backgroundColor: theme.palette.primary.dark,\r\n        },\r\n      },\r\n    },\r\n    drawerClose: {\r\n      overflowX: 'hidden',\r\n      transition: theme.transitions.create('width', {\r\n        duration: theme.transitions.duration.leavingScreen,\r\n        easing: theme.transitions.easing.sharp,\r\n      }),\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(7) + 1,\r\n      },\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    drawerOpen: {\r\n      '&:hover': {\r\n        overflowY: 'auto',\r\n      },\r\n      overflowY: 'hidden',\r\n      transition: theme.transitions.create('width', {\r\n        duration: theme.transitions.duration.enteringScreen,\r\n        easing: theme.transitions.easing.sharp,\r\n      }),\r\n    },\r\n  });\r\n\r\nexport default GroupStyle;\r\n","import { Accordion, AccordionDetails, AccordionSummary } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormGroup } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport GroupTypeEvaluator from '../../../../components/typeEvalutors/Group';\r\nimport {\r\n  emptyGroupFields,\r\n  getEvaluatedExpression,\r\n  isErrorsIncludeGroupFields,\r\n  isGroupFieldsEmpty,\r\n  removeGroupFieldsFromErrors,\r\n} from '../../../../store/ducks/formState';\r\nimport {\r\n  getFieldLabelText,\r\n  shouldComponentBeRelevant,\r\n} from '../../../../utils/helpers';\r\nimport GroupStyle from './styles';\r\n\r\nexport interface GroupProps {\r\n  choices: any;\r\n  csvList: any;\r\n  defaultLanguage: string;\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: string;\r\n  getEvaluatedExpressionSelector: any;\r\n  isComponentRender: boolean;\r\n  isGroupFieldsEmptySelector: any;\r\n  isErrorsIncludeGroupFieldsSelector: any;\r\n  emptyGroupFieldsActionCreator: typeof emptyGroupFields;\r\n  removeGroupFieldsFromErrorsActionCreator: typeof removeGroupFieldsFromErrors;\r\n}\r\n\r\nfunction Group(props: GroupProps) {\r\n  const {\r\n    choices,\r\n    csvList,\r\n    fieldElement,\r\n    fieldParentTreeName,\r\n    defaultLanguage,\r\n    isComponentRender,\r\n  } = props;\r\n  const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n  let isAppearanceApplicable = false;\r\n  if (fieldElement.control && fieldElement.control.appearance) {\r\n    if (/^w(\\d+)\\b/i.test(fieldElement.control.appearance)) {\r\n      isAppearanceApplicable = true;\r\n    }\r\n  }\r\n  const theme = useTheme();\r\n  const useStyles = makeStyles(GroupStyle(theme));\r\n  const classNames = useStyles();\r\n  if (\r\n    isComponentRender\r\n    && (fieldElement.control && fieldElement.control.bodyless\r\n      ? fieldElement.control.bodyless === false\r\n      : true)\r\n  ) {\r\n    return (\r\n      <Accordion defaultExpanded style={{ marginBottom: 10 }}>\r\n        <AccordionSummary\r\n          className={classNames.root}\r\n          expandIcon={<ExpandMoreIcon />}\r\n        >\r\n          <Typography>{fieldLabel}</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails className={classNames.backgroundProp}>\r\n          <FormGroup className={classNames.borderProp}>\r\n            {fieldElement.children && (\r\n              <GroupTypeEvaluator\r\n                choices={choices}\r\n                fieldElements={fieldElement.children}\r\n                fieldParentTreeName={`${fieldParentTreeName}group/${fieldElement.name}/`}\r\n                defaultLanguage={defaultLanguage}\r\n                csvList={csvList}\r\n                isAppearanceApplicable={isAppearanceApplicable}\r\n              />\r\n            )}\r\n          </FormGroup>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    );\r\n  }\r\n\r\n  if (\r\n    props.isErrorsIncludeGroupFieldsSelector(\r\n      `${fieldParentTreeName}group/${fieldElement.name}/`\r\n    )\r\n  ) {\r\n    props.removeGroupFieldsFromErrorsActionCreator(\r\n      `${fieldParentTreeName}group/${fieldElement.name}/`\r\n    );\r\n  }\r\n  if (\r\n    !props.isGroupFieldsEmptySelector(fieldParentTreeName + fieldElement.name)\r\n  ) {\r\n    props.emptyGroupFieldsActionCreator(\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  getEvaluatedExpressionSelector: any;\r\n  isComponentRender: boolean;\r\n  isGroupFieldsEmptySelector: any;\r\n  isErrorsIncludeGroupFieldsSelector: any;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  defaultLanguage: string;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isGroupFieldsEmptySelector = (fieldTreeName: string) =>\r\n    isGroupFieldsEmpty(state, fieldTreeName);\r\n  const isErrorsIncludeGroupFieldsSelector = (fieldTreeName: string) =>\r\n    isErrorsIncludeGroupFields(state, fieldTreeName);\r\n  const result = {\r\n    getEvaluatedExpressionSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isErrorsIncludeGroupFieldsSelector,\r\n    isGroupFieldsEmptySelector,\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  emptyGroupFieldsActionCreator: emptyGroupFields,\r\n  removeGroupFieldsFromErrorsActionCreator: removeGroupFieldsFromErrors,\r\n};\r\n\r\n/** connect Group component to the redux store */\r\nconst ConnectedGroup = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Group);\r\n\r\nexport default ConnectedGroup;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../../components/typeEvalutors/Base';\r\nimport GroupTypeEvaluator from '../../../../../components/typeEvalutors/Group';\r\n\r\nexport interface SingleRepeatProps {\r\n  choices: any;\r\n  csvList: any;\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: any;\r\n  defaultLanguage: string;\r\n  repeatIndex: number;\r\n  assignmentHandler: any;\r\n  removeHandler: any;\r\n  removeOptionHandler: any;\r\n  unControlFlag: boolean;\r\n}\r\n\r\nclass SingleRepeat extends React.Component<SingleRepeatProps> {\r\n  public render() {\r\n    const {\r\n      choices,\r\n      csvList,\r\n      defaultLanguage,\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      repeatIndex,\r\n      unControlFlag,\r\n    } = this.props;\r\n    let isAppearanceApplicable = false;\r\n    if (fieldElement.control && fieldElement.control.appearance) {\r\n      if (/^w(\\d+)\\b/i.test(fieldElement.control.appearance)) {\r\n        isAppearanceApplicable = true;\r\n      }\r\n    }\r\n    return (\r\n      <div className={'groupFormFieldBody'}>\r\n        {fieldElement.children && (\r\n          <GroupTypeEvaluator\r\n            choices={choices}\r\n            fieldElements={fieldElement.children}\r\n            fieldParentTreeName={\r\n              fieldParentTreeName +\r\n              'repeat/' +\r\n              fieldElement.name +\r\n              '/' +\r\n              repeatIndex +\r\n              '/'\r\n            }\r\n            defaultLanguage={defaultLanguage}\r\n            csvList={csvList}\r\n            isAppearanceApplicable={isAppearanceApplicable}\r\n          />\r\n        )}\r\n\r\n        {unControlFlag === false ? (\r\n          <div className={'minusIconWrapper'}>\r\n            <span onClick={this.handleChange}>\r\n              <FontAwesomeIcon icon=\"minus-circle\" className={'minusIcon'} />\r\n            </span>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  private handleChange = (_event: React.MouseEvent<HTMLDivElement>) => {\r\n    const {\r\n      repeatIndex,\r\n      fieldValue,\r\n      assignmentHandler,\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      removeHandler,\r\n      removeOptionHandler,\r\n    } = this.props;\r\n    let newFieldValue: any[] = [...fieldValue];\r\n    newFieldValue = newFieldValue.filter(\r\n      // tslint:disable-next-line: variable-name\r\n      (_elem, index) => index !== repeatIndex\r\n    );\r\n    assignmentHandler(fieldParentTreeName + fieldElement.name, newFieldValue);\r\n    removeHandler(fieldParentTreeName + 'repeat/' + fieldElement.name + '/');\r\n    removeOptionHandler(fieldParentTreeName + fieldElement.name, repeatIndex);\r\n  };\r\n}\r\n\r\nexport default SingleRepeat;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormGroup, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../../components/typeEvalutors/Base';\r\nimport {\r\n  assignFieldValueAction,\r\n  emptyGroupFields,\r\n  getEvaluatedExpression,\r\n  getFieldValue,\r\n  isErrorsIncludeGroupFields,\r\n  isGroupFieldsEmpty,\r\n  RemoveFromOptionList,\r\n  removeGroupFieldsFromErrors,\r\n} from '../../../../../store/ducks/formState';\r\nimport {\r\n  getFieldLabelText,\r\n  shouldComponentBeRelevant,\r\n} from '../../../../../utils/helpers';\r\nimport SingleRepeat from '.././Single Repeat';\r\n\r\nexport interface ControlledRepeatProps {\r\n  choices: any;\r\n  csvList: any;\r\n  defaultLanguage: string;\r\n  fieldElement: FieldElement;\r\n  fieldValue: any;\r\n  fieldParentTreeName: string;\r\n  getEvaluatedExpressionSelector: any;\r\n  isComponentRender: boolean;\r\n  isGroupFieldsEmptySelector: any;\r\n  isErrorsIncludeGroupFieldsSelector: any;\r\n  emptyGroupFieldsActionCreator: typeof emptyGroupFields;\r\n  removeGroupFieldsFromErrorsActionCreator: typeof removeGroupFieldsFromErrors;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  removeOptionListFromActionCreator: typeof RemoveFromOptionList;\r\n}\r\n\r\nclass ControlledRepeat extends React.Component<ControlledRepeatProps> {\r\n  public render() {\r\n    const {\r\n      choices,\r\n      csvList,\r\n      fieldValue,\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      defaultLanguage,\r\n      isComponentRender,\r\n      assignFieldValueActionCreator,\r\n      removeGroupFieldsFromErrorsActionCreator,\r\n      removeOptionListFromActionCreator,\r\n    } = this.props;\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    if (isComponentRender) {\r\n      if (!fieldValue) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          [{}]\r\n        );\r\n      }\r\n\r\n      return (\r\n        <FormGroup className={'groupBody'}>\r\n          <Label>{fieldLabel}</Label>\r\n          {fieldValue &&\r\n            // tslint:disable-next-line: variable-name\r\n            fieldValue.map((_elm: any, index: any) => (\r\n              <div className=\"repeat-fields-body\" key={'repeat' + index}>\r\n                <SingleRepeat\r\n                  choices={choices}\r\n                  defaultLanguage={defaultLanguage}\r\n                  fieldElement={fieldElement}\r\n                  fieldParentTreeName={fieldParentTreeName}\r\n                  fieldValue={fieldValue}\r\n                  repeatIndex={index}\r\n                  assignmentHandler={assignFieldValueActionCreator}\r\n                  removeHandler={removeGroupFieldsFromErrorsActionCreator}\r\n                  removeOptionHandler={removeOptionListFromActionCreator}\r\n                  csvList={csvList}\r\n                  unControlFlag={false}\r\n                />\r\n              </div>\r\n            ))}\r\n          <div>\r\n            <span onClick={this.addAnotherRepeat}>\r\n              <FontAwesomeIcon icon=\"plus-circle\" className={'plusIcon'} />\r\n            </span>\r\n          </div>\r\n        </FormGroup>\r\n      );\r\n    } else {\r\n      if (\r\n        this.props.isErrorsIncludeGroupFieldsSelector(\r\n          fieldParentTreeName + 'repeat/' + fieldElement.name + '/'\r\n        )\r\n      ) {\r\n        this.props.removeGroupFieldsFromErrorsActionCreator(\r\n          fieldParentTreeName + 'repeat/' + fieldElement.name + '/'\r\n        );\r\n      }\r\n      if (fieldValue) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  private addAnotherRepeat = (_event: React.MouseEvent<HTMLDivElement>) => {\r\n    const { fieldValue, fieldParentTreeName, fieldElement } = this.props;\r\n    const newFieldValue = [...fieldValue];\r\n    newFieldValue.push({});\r\n    this.props.assignFieldValueActionCreator(\r\n      fieldParentTreeName + fieldElement.name,\r\n      newFieldValue\r\n    );\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: any;\r\n  getEvaluatedExpressionSelector: any;\r\n  isComponentRender: boolean;\r\n  isGroupFieldsEmptySelector: any;\r\n  isErrorsIncludeGroupFieldsSelector: any;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  defaultLanguage: string;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isGroupFieldsEmptySelector = (fieldTreeName: string) =>\r\n    isGroupFieldsEmpty(state, fieldTreeName);\r\n  const isErrorsIncludeGroupFieldsSelector = (fieldTreeName: string) =>\r\n    isErrorsIncludeGroupFields(state, fieldTreeName);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isErrorsIncludeGroupFieldsSelector,\r\n    isGroupFieldsEmptySelector,\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  emptyGroupFieldsActionCreator: emptyGroupFields,\r\n  removeGroupFieldsFromErrorsActionCreator: removeGroupFieldsFromErrors,\r\n  removeOptionListFromActionCreator: RemoveFromOptionList,\r\n};\r\n\r\n/** connect Group component to the redux store */\r\nconst ConnectedControlledRepeat = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ControlledRepeat);\r\n\r\nexport default ConnectedControlledRepeat;\r\n","import _ from 'lodash';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormGroup, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../../components/typeEvalutors/Base';\r\nimport {\r\n  assignFieldValueAction,\r\n  assignOptionListAction,\r\n  emptyGroupFields,\r\n  getEvaluatedExpression,\r\n  getFieldValue,\r\n  getOptionList,\r\n  isErrorsIncludeGroupFields,\r\n  isGroupFieldsEmpty,\r\n  RemoveFromOptionList,\r\n  removeGroupFieldsFromErrors,\r\n} from '../../../../../store/ducks/formState';\r\nimport {\r\n  getFieldLabelText,\r\n  shouldComponentBeRelevant,\r\n} from '../../../../../utils/helpers';\r\nimport SingleRepeat from '.././Single Repeat';\r\n\r\nexport interface UncontrolledRepeatProps {\r\n  choices: any;\r\n  csvList: any;\r\n  defaultLanguage: string;\r\n  fieldElement: FieldElement;\r\n  fieldValue: any;\r\n  fieldParentTreeName: string;\r\n  getEvaluatedExpressionSelector: any;\r\n  isComponentRender: boolean;\r\n  isGroupFieldsEmptySelector: any;\r\n  isErrorsIncludeGroupFieldsSelector: any;\r\n  optionList: object;\r\n  emptyGroupFieldsActionCreator: typeof emptyGroupFields;\r\n  removeGroupFieldsFromErrorsActionCreator: typeof removeGroupFieldsFromErrors;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  assignOptionListActionCreator: typeof assignOptionListAction;\r\n  removeOptionListFromActionCreator: typeof RemoveFromOptionList;\r\n}\r\n\r\nclass UncontrolledRepeat extends React.Component<UncontrolledRepeatProps> {\r\n  public render() {\r\n    const {\r\n      choices,\r\n      csvList,\r\n      fieldValue,\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      defaultLanguage,\r\n      isComponentRender,\r\n      optionList,\r\n      assignFieldValueActionCreator,\r\n      removeGroupFieldsFromErrorsActionCreator,\r\n      removeOptionListFromActionCreator,\r\n    } = this.props;\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    if (isComponentRender) {\r\n      if (!fieldValue) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          []\r\n        );\r\n      }\r\n\r\n      let noOfJrCount: number = 0;\r\n\r\n      if (fieldElement.control) {\r\n        const jrCount: string = 'jr:count';\r\n        const res: any = fieldElement.control[jrCount];\r\n\r\n        if (/^[0-9]*$/i.test(res)) {\r\n          noOfJrCount = parseInt(res, 10);\r\n        } else {\r\n          const value: any = this.props.getEvaluatedExpressionSelector(\r\n            res,\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n          if (value) {\r\n            noOfJrCount = parseInt(value, 10);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (\r\n        fieldValue &&\r\n        fieldValue.length === 0 &&\r\n        noOfJrCount === 0 &&\r\n        this.props.isErrorsIncludeGroupFieldsSelector(\r\n          fieldParentTreeName + 'repeat/' + fieldElement.name + '/'\r\n        )\r\n      ) {\r\n        this.props.removeGroupFieldsFromErrorsActionCreator(\r\n          fieldParentTreeName + 'repeat/' + fieldElement.name + '/'\r\n        );\r\n      }\r\n\r\n      if (fieldValue && fieldValue.length > 0 && noOfJrCount === 0) {\r\n        this.removeFromError();\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          []\r\n        );\r\n      }\r\n\r\n      if (optionList && _.size(optionList) > noOfJrCount && noOfJrCount === 0) {\r\n        this.props.assignOptionListActionCreator(\r\n          this.props.fieldParentTreeName + this.props.fieldElement.name,\r\n          []\r\n        );\r\n      }\r\n\r\n      if (noOfJrCount > 0) {\r\n        const newFieldValue = [...fieldValue];\r\n\r\n        if (fieldValue && fieldValue.length < noOfJrCount) {\r\n          const iterate = noOfJrCount - fieldValue.length;\r\n          for (let j = 0; j < iterate; j++) {\r\n            newFieldValue.push({});\r\n          }\r\n        }\r\n\r\n        if (fieldValue && fieldValue.length > noOfJrCount) {\r\n          const iterate = fieldValue.length - noOfJrCount;\r\n          for (let i = 0; i < iterate; i++) {\r\n            newFieldValue.pop();\r\n          }\r\n          this.props.assignFieldValueActionCreator(\r\n            fieldParentTreeName + fieldElement.name,\r\n            newFieldValue\r\n          );\r\n          this.removeFromError();\r\n        }\r\n\r\n        if (optionList && _.size(optionList) > noOfJrCount) {\r\n          const iterate = _.size(optionList) - noOfJrCount;\r\n          this.props.assignOptionListActionCreator(\r\n            this.props.fieldParentTreeName + this.props.fieldElement.name,\r\n            Array.prototype.slice.call(optionList, iterate)\r\n          );\r\n          this.removeFromError();\r\n        }\r\n\r\n        return (\r\n          <FormGroup className={'groupBodyUnControlled'}>\r\n            <Label>{fieldLabel}</Label>\r\n            {newFieldValue &&\r\n              // tslint:disable-next-line: variable-name\r\n              newFieldValue.map((_elm: any, index: any) => (\r\n                <div className=\"repeat-fields-body\" key={'repeat' + index}>\r\n                  <SingleRepeat\r\n                    choices={choices}\r\n                    defaultLanguage={defaultLanguage}\r\n                    fieldElement={fieldElement}\r\n                    fieldParentTreeName={fieldParentTreeName}\r\n                    fieldValue={fieldValue}\r\n                    repeatIndex={index}\r\n                    assignmentHandler={assignFieldValueActionCreator}\r\n                    removeHandler={removeGroupFieldsFromErrorsActionCreator}\r\n                    removeOptionHandler={removeOptionListFromActionCreator}\r\n                    csvList={csvList}\r\n                    unControlFlag={true}\r\n                  />\r\n                </div>\r\n              ))}\r\n          </FormGroup>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    } else {\r\n      this.removeFromError();\r\n      if (fieldValue) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private removeFromError() {\r\n    if (\r\n      this.props.isErrorsIncludeGroupFieldsSelector(\r\n        this.props.fieldParentTreeName +\r\n          'repeat/' +\r\n          this.props.fieldElement.name +\r\n          '/'\r\n      )\r\n    ) {\r\n      this.props.removeGroupFieldsFromErrorsActionCreator(\r\n        this.props.fieldParentTreeName +\r\n          'repeat/' +\r\n          this.props.fieldElement.name +\r\n          '/'\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: any;\r\n  getEvaluatedExpressionSelector: any;\r\n  isComponentRender: boolean;\r\n  isGroupFieldsEmptySelector: any;\r\n  isErrorsIncludeGroupFieldsSelector: any;\r\n  optionList: object;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  defaultLanguage: string;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isGroupFieldsEmptySelector = (fieldTreeName: string) =>\r\n    isGroupFieldsEmpty(state, fieldTreeName);\r\n  const isErrorsIncludeGroupFieldsSelector = (fieldTreeName: string) =>\r\n    isErrorsIncludeGroupFields(state, fieldTreeName);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isErrorsIncludeGroupFieldsSelector,\r\n    isGroupFieldsEmptySelector,\r\n    optionList: getOptionList(state, fieldParentTreeName + fieldElement.name),\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  assignOptionListActionCreator: assignOptionListAction,\r\n  emptyGroupFieldsActionCreator: emptyGroupFields,\r\n  removeGroupFieldsFromErrorsActionCreator: removeGroupFieldsFromErrors,\r\n  removeOptionListFromActionCreator: RemoveFromOptionList,\r\n};\r\n\r\n/** connect Repeat component to the redux store */\r\nconst ConnectedUncontrolledRepeat = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UncontrolledRepeat);\r\n\r\nexport default ConnectedUncontrolledRepeat;\r\n","import * as React from 'react';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport ControlledRepeat from './Controlled Repeat';\r\nimport UncontrolledRepeat from './Uncontrolled Repeat';\r\n\r\n/** props interface for the Repeat component */\r\nexport interface RepeatProps {\r\n  choices: any;\r\n  csvList: any;\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  defaultLanguage: string;\r\n}\r\n\r\nclass Repeat extends React.Component<RepeatProps> {\r\n  public render() {\r\n    const { fieldElement } = this.props;\r\n    if (fieldElement.control && fieldElement.control['jr:count']) {\r\n      return <UncontrolledRepeat {...this.props} />;\r\n    }\r\n    return <ControlledRepeat {...this.props} />;\r\n  }\r\n}\r\n\r\nexport default Repeat;\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Input } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\n\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  getEvaluatedExpression,\r\n  getFieldValue,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../store/ducks/formState';\r\nimport {\r\n  isInputRequired,\r\n  shouldComponentBeReadOnly,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../utils/helpers';\r\n\r\n/** props interface for the calculate component */\r\nexport interface CalculateProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: any;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\n\r\nclass Calculate extends React.Component<CalculateProps> {\r\n  public render() {\r\n    const {\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      isPresentInErrorSelector,\r\n    } = this.props;\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\r\n    const isConstraintViolated =\r\n      fieldValue &&\r\n      fieldValue !== '' &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n      const isReadonly = shouldComponentBeReadOnly(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n      \r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n      let calculatedValue: any = '';\r\n      if (fieldElement.bind && fieldElement.bind.calculate) {\r\n        calculatedValue = this.props.getEvaluatedExpressionSelector(\r\n          fieldElement.bind.calculate,\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      if (calculatedValue && fieldValue !== calculatedValue) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          calculatedValue\r\n        );\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          <Input\r\n            type=\"hidden\"\r\n            name={fieldElement.name}\r\n            value={calculatedValue || ''}\r\n            readOnly={isReadonly}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: any;\r\n  getEvaluatedExpressionSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect Calculate component to the redux store */\r\nconst ConnectedCalculate = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Calculate);\r\n\r\nexport default ConnectedCalculate;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  getEvaluatedExpression,\r\n  getFieldValue,\r\n  getFormSubmitStatus,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeReadOnly,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../utils/helpers';\r\n\r\n/** props interface for the KbDate component */\r\nexport interface DateProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: any;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: boolean;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\n\r\nclass KbDate extends React.Component<DateProps> {\r\n  public render() {\r\n    const {\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      getFormSubmitStatusSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isFormSubmitted: boolean = getFormSubmitStatusSelector;\r\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\r\n    const isConstraintViolated =\r\n      fieldValue &&\r\n      fieldValue !== '' &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const modifiedFieldLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      fieldLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n    const modifiedConstraintLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      constraintLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const hintLabel = getHintLabelText(fieldElement, defaultLanguage);\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n      const isReadonly = shouldComponentBeReadOnly(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n      let defaultValue: string = '';\r\n      if (fieldValue && fieldValue !== '') {\r\n        const modifiedDate = new Date(fieldValue);\r\n        defaultValue = modifiedDate.toISOString().slice(0, 10);\r\n      }\r\n\r\n\r\n      let calculatedValue: any = '';\r\n      if (fieldElement.bind && fieldElement.bind.calculate) {\r\n        calculatedValue = this.props.getEvaluatedExpressionSelector(\r\n          fieldElement.bind.calculate,\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      if (calculatedValue && fieldValue !== calculatedValue) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          calculatedValue\r\n        );\r\n      }\r\n\r\n      const isError = isPresentInErrorSelector(\r\n        fieldParentTreeName + fieldElement.name\r\n      );\r\n      return (\r\n        <FormGroup>\r\n          <Label>\r\n            {modifiedFieldLabel}{' '}\r\n            {isRequired && (\r\n              <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n            )}\r\n          </Label>\r\n          <Input\r\n            type=\"date\"\r\n            name={fieldElement.name}\r\n            onChange={this.onChangeHandler}\r\n            value={defaultValue || calculatedValue || ''}\r\n            readOnly={isReadonly}\r\n          />\r\n          {isFormSubmitted && isError && (\r\n            <FontAwesomeIcon icon=\"exclamation-circle\" className=\"errorSign\" />\r\n          )}\r\n          {fieldElement.hint && <Label className=\"hintText\">{hintLabel}</Label>}\r\n          {isFormSubmitted && isRequiredViolated && (\r\n            <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n          )}\r\n          {isConstraintViolated && (\r\n            <Label className=\"constraintText\">{modifiedConstraintLabel}</Label>\r\n          )}\r\n        </FormGroup>\r\n      );\r\n    } else {\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /** sets the value of field element in store\r\n   * @param {React.FormEvent<HTMLInputElement>} event - the onchange input event\r\n   */\r\n  private onChangeHandler = (event: React.FormEvent<HTMLInputElement>) => {\r\n    this.props.assignFieldValueActionCreator(\r\n      this.props.fieldParentTreeName + event.currentTarget.name,\r\n      event.currentTarget.value !== ''\r\n        ? new Date(event.currentTarget.value)\r\n        : null\r\n    );\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: any;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const getFormSubmitStatusSelector = getFormSubmitStatus(state);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    getFormSubmitStatusSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect KbDate component to the redux store */\r\nconst ConnectedDate = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(KbDate);\r\n\r\nexport default ConnectedDate;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport { connect } from 'react-redux';\r\nimport { FormGroup, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  getEvaluatedExpression,\r\n  getFieldValue,\r\n  getFormSubmitStatus,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeReadOnly,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../utils/helpers';\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\n/** props interface for the date Time component */\r\nexport interface DateTimeProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: any;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: boolean;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\n\r\nclass DateTime extends React.Component<DateTimeProps> {\r\n  public render() {\r\n    const {\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      getFormSubmitStatusSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isFormSubmitted: boolean = getFormSubmitStatusSelector;\r\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\r\n    const isConstraintViolated =\r\n      fieldValue &&\r\n      fieldValue !== '' &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const modifiedFieldLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      fieldLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n    const modifiedConstraintLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      constraintLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const hintLabel = getHintLabelText(fieldElement, defaultLanguage);\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n      const isReadonly = shouldComponentBeReadOnly(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      const isError = isPresentInErrorSelector(\r\n        fieldParentTreeName + fieldElement.name\r\n      );\r\n\r\n      let modifiedDate: any = null;\r\n      if (fieldValue) {\r\n        modifiedDate = new Date(fieldValue);\r\n        const timeZoneOffset = modifiedDate.getTimezoneOffset() / 60;\r\n        modifiedDate.setHours(modifiedDate.getHours() - timeZoneOffset);\r\n      }\r\n\r\n      return (\r\n        <FormGroup>\r\n          <Label>\r\n            {modifiedFieldLabel}{' '}\r\n            {isRequired && (\r\n              <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n            )}\r\n          </Label>\r\n          <br />\r\n          <DatePicker\r\n            name={fieldElement.name}\r\n            selected={fieldValue ? modifiedDate : null}\r\n            onChange={this.handleChange(fieldElement.name)}\r\n            showTimeSelect={true}\r\n            timeFormat=\"h:m aa\"\r\n            timeIntervals={15}\r\n            timeCaption=\"time\"\r\n            dateFormat=\"MM/dd/yyyy h:mm aa\"\r\n            placeholderText=\"mm/dd/yyyy h:m aa\"\r\n            className=\"form-control\"\r\n            readOnly={isReadonly}\r\n          />\r\n          <br />\r\n          {isFormSubmitted && isError && (\r\n            <FontAwesomeIcon icon=\"exclamation-circle\" className=\"errorSign\" />\r\n          )}\r\n          {fieldElement.hint && <Label className=\"hintText\">{hintLabel}</Label>}\r\n          {isFormSubmitted && isRequiredViolated && (\r\n            <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n          )}\r\n          {isConstraintViolated && (\r\n            <Label className=\"constraintText\">{modifiedConstraintLabel}</Label>\r\n          )}\r\n        </FormGroup>\r\n      );\r\n    } else {\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private handleChange = (name: any) => (value: any) => {\r\n    const modifiedDate: any = new Date(value);\r\n    const timeZoneOffset = modifiedDate.getTimezoneOffset() / 60;\r\n    modifiedDate.setHours(modifiedDate.getHours() + timeZoneOffset);\r\n    this.props.assignFieldValueActionCreator(\r\n      this.props.fieldParentTreeName + name,\r\n      value !== '' ? modifiedDate : null\r\n    );\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: string;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const getFormSubmitStatusSelector = getFormSubmitStatus(state);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    getFormSubmitStatusSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect Date Time component to the redux store */\r\nconst ConnectedDateTime = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DateTime);\r\n\r\nexport default ConnectedDateTime;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  getEvaluatedExpression,\r\n  getFieldValue,\r\n  getFormSubmitStatus,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeReadOnly,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../utils/helpers';\r\n\r\n/** props interface for the decimal component */\r\nexport interface DecimalProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: any;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: boolean;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\n\r\nexport interface DecimalState {\r\n  fieldValue: string;\r\n  isFocused: boolean;\r\n}\r\n\r\nclass Decimal extends React.Component<DecimalProps, DecimalState> {\r\n  constructor(props: DecimalProps) {\r\n    super(props);\r\n    this.state = { fieldValue: '', isFocused: false };\r\n  }\r\n  public render() {\r\n    const {\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      getFormSubmitStatusSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isFormSubmitted: boolean = getFormSubmitStatusSelector;\r\n    const isRequiredViolated =\r\n      isRequired &&\r\n      (fieldValue === null || fieldValue === '' || fieldValue === undefined);\r\n    const isConstraintViolated =\r\n      fieldValue !== '' &&\r\n      fieldValue !== null &&\r\n      fieldValue !== undefined &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const modifiedFieldLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      fieldLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n    const modifiedConstraintLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      constraintLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n\r\n    const hintLabel = getHintLabelText(fieldElement, defaultLanguage);\r\n\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n      const isReadonly = shouldComponentBeReadOnly(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      if (typeof this.props.fieldValue === 'string') {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          parseFloat(this.props.fieldValue)\r\n        );\r\n      }\r\n\r\n      let modifiedValue: any;\r\n      {\r\n        fieldValue === 0 ? (modifiedValue = '0') : (modifiedValue = fieldValue);\r\n      }\r\n\r\n      const isError = isPresentInErrorSelector(\r\n        fieldParentTreeName + fieldElement.name\r\n      );\r\n\r\n      if (fieldElement.bind && fieldElement.bind.calculate) {\r\n        let calculatedValue: any = '';\r\n        calculatedValue = this.props.getEvaluatedExpressionSelector(\r\n          fieldElement.bind.calculate,\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n\r\n        if (fieldValue && calculatedValue !== fieldValue) {\r\n          this.props.assignFieldValueActionCreator(\r\n            fieldParentTreeName + fieldElement.name,\r\n            calculatedValue\r\n          );\r\n        }\r\n        modifiedValue = calculatedValue;\r\n      }\r\n\r\n      return (\r\n        <FormGroup>\r\n          <Label>\r\n            {modifiedFieldLabel}{' '}\r\n            {isRequired && (\r\n              <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n            )}\r\n          </Label>\r\n          <Input\r\n            type=\"number\"\r\n            step=\"any\"\r\n            name={fieldElement.name}\r\n            onChange={this.onChangeHandler}\r\n            onBlur={this.onBlurHandler}\r\n            value={\r\n              this.state.isFocused\r\n                ? this.state.fieldValue || ''\r\n                : modifiedValue || ''\r\n            }\r\n            readOnly={isReadonly}\r\n          />\r\n          {isFormSubmitted && isError && (\r\n            <FontAwesomeIcon icon=\"exclamation-circle\" className=\"errorSign\" />\r\n          )}\r\n          {fieldElement.hint && <Label className=\"hintText\">{hintLabel}</Label>}\r\n          {isFormSubmitted && isRequiredViolated && (\r\n            <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n          )}\r\n          {isConstraintViolated && (\r\n            <Label className=\"constraintText\">{modifiedConstraintLabel}</Label>\r\n          )}\r\n        </FormGroup>\r\n      );\r\n    } else {\r\n      if (this.state.isFocused) {\r\n        this.setState({ ...this.state, isFocused: false });\r\n      }\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /** sets the value of field element in store\r\n   * @param {React.FormEvent<HTMLInputElement>} event - the onchange input event\r\n   */\r\n  private onChangeHandler = (event: React.FormEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      ...this.state,\r\n      fieldValue: event.currentTarget.value || '',\r\n      isFocused: true,\r\n    });\r\n  };\r\n\r\n  private onBlurHandler = (event: React.FormEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      ...this.state,\r\n      fieldValue: event.currentTarget.value || '',\r\n      isFocused: false,\r\n    });\r\n    this.props.assignFieldValueActionCreator(\r\n      this.props.fieldParentTreeName + event.currentTarget.name,\r\n      event.currentTarget.value !== ''\r\n        ? parseFloat(event.currentTarget.value)\r\n        : null\r\n    );\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: any;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const getFormSubmitStatusSelector = getFormSubmitStatus(state);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    getFormSubmitStatusSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect Decimal component to the redux store */\r\nconst ConnectedDecimal = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Decimal);\r\n\r\nexport default ConnectedDecimal;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  assignFieldValueAction,\r\n  getFileObject,\r\n} from '../../../../../store/ducks/formState';\r\n\r\ninterface FilePreviewProps {\r\n  fieldName: string;\r\n  fieldValue: any;\r\n  fileObject: any;\r\n  assignFieldValueActionCreator: any;\r\n}\r\n\r\nclass FilePreview extends React.Component<FilePreviewProps> {\r\n  public render() {\r\n    const { fieldName, fieldValue, assignFieldValueActionCreator } = this.props;\r\n    const removeHandler = () => {\r\n      assignFieldValueActionCreator(fieldName, null);\r\n    };\r\n    return (\r\n      <>\r\n        <p className=\"text-muted\">\r\n          Uploaded File Name: <strong className=\"text-primary\"> {fieldValue} </strong>\r\n        </p>\r\n        <Button size=\"sm\" color=\"danger\" onClick={removeHandler}>\r\n          Remove File\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fileObject: any;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldName: string;\r\n  fieldValue: any;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldValue } = parentProps;\r\n  const result = {\r\n    fileObject: getFileObject(state, fieldValue),\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n};\r\n\r\n/** connect FilePreview component to the redux store */\r\nconst ConnectedFilePreview = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FilePreview);\r\n\r\nexport default ConnectedFilePreview;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\r\nimport { PHOTO_FIELD_TYPE } from '../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  addMediaListAction,\r\n  assignFieldValueAction,\r\n  getEvaluatedExpression,\r\n  getFieldValue,\r\n  getFormSubmitStatus,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeReadOnly,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../utils/helpers';\r\nimport FilePreview from './FilePreview/FilePreview';\r\n\r\n/** props interface for the file component */\r\nexport interface FileProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: any;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  addMediaListActionCreator: typeof addMediaListAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: boolean;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\n\r\nclass File extends React.Component<FileProps> {\r\n  public render() {\r\n    const {\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      getFormSubmitStatusSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isFormSubmitted: boolean = getFormSubmitStatusSelector;\r\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\r\n    const isConstraintViolated =\r\n      fieldValue &&\r\n      fieldValue !== '' &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const modifiedFieldLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      fieldLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n    const modifiedConstraintLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      constraintLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n\r\n    const hintLabel = getHintLabelText(fieldElement, defaultLanguage);\r\n\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n      const isReadonly = shouldComponentBeReadOnly(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      const isError = isPresentInErrorSelector(\r\n        fieldParentTreeName + fieldElement.name\r\n      );\r\n\r\n      return (\r\n        <FormGroup>\r\n          <Label>\r\n            {modifiedFieldLabel}{' '}\r\n            {isRequired && (\r\n              <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n            )}\r\n          </Label>\r\n          {fieldValue ? (\r\n            <FilePreview\r\n              fieldName={fieldParentTreeName + fieldElement.name}\r\n              fieldValue={fieldValue}\r\n            />\r\n          ) : fieldElement.type === PHOTO_FIELD_TYPE ? (\r\n            <Input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              name={fieldElement.name}\r\n              onChange={this.onChangeHandler}\r\n              readOnly={isReadonly}\r\n            />\r\n          ) : (\r\n            <Input\r\n              type=\"file\"\r\n              name={fieldElement.name}\r\n              onChange={this.onChangeHandler}\r\n              readOnly={isReadonly}\r\n            />\r\n          )}\r\n          {isFormSubmitted && isError && (\r\n            <FontAwesomeIcon icon=\"exclamation-circle\" className=\"errorSign\" />\r\n          )}\r\n          {fieldElement.hint && <Label className=\"hintText\">{hintLabel}</Label>}\r\n          {isFormSubmitted && isRequiredViolated && (\r\n            <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n          )}\r\n          {isConstraintViolated && (\r\n            <Label className=\"constraintText\">{modifiedConstraintLabel}</Label>\r\n          )}\r\n        </FormGroup>\r\n      );\r\n    } else {\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /** sets the value of field element in store\r\n   * @param event - the onchange input event\r\n   */\r\n  private onChangeHandler = (event: any) => {\r\n    if (event.target.files[0]) {\r\n      this.props.assignFieldValueActionCreator(\r\n        this.props.fieldParentTreeName + event.target.name,\r\n        event.target.files[0].name\r\n      );\r\n      this.props.addMediaListActionCreator(event.target.files[0]);\r\n    } else {\r\n      this.props.assignFieldValueActionCreator(\r\n        this.props.fieldParentTreeName + event.target.name,\r\n        null\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: any;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const getFormSubmitStatusSelector = getFormSubmitStatus(state);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    getFormSubmitStatusSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  addMediaListActionCreator: addMediaListAction,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect File component to the redux store */\r\nconst ConnectedFile = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(File);\r\n\r\nexport default ConnectedFile;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  getEvaluatedExpression,\r\n  getFieldValue,\r\n  getFormSubmitStatus,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeReadOnly,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../utils/helpers';\r\n\r\n/** props interface for the integer component */\r\nexport interface IntegerProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: any;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: boolean;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\nexport interface IntegerState {\r\n  fieldValue: string;\r\n  isFocused: boolean;\r\n}\r\nclass Integer extends React.Component<IntegerProps, IntegerState> {\r\n  constructor(props: IntegerProps) {\r\n    super(props);\r\n    this.state = { fieldValue: '', isFocused: false };\r\n  }\r\n  public render() {\r\n    const {\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      getFormSubmitStatusSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isFormSubmitted: boolean = getFormSubmitStatusSelector;\r\n    const isRequiredViolated =\r\n      isRequired &&\r\n      (fieldValue === null || fieldValue === '' || fieldValue === undefined);\r\n\r\n    const isConstraintViolated =\r\n      fieldValue !== '' &&\r\n      fieldValue !== null &&\r\n      fieldValue !== undefined &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const modifiedFieldLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      fieldLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n    const modifiedConstraintLabel =\r\n      customizeLabelsWithPreviousInputs(\r\n        getEvaluatedExpressionSelector,\r\n        constraintLabel,\r\n        fieldParentTreeName + fieldElement.name\r\n      ) || '';\r\n    const hintLabel = getHintLabelText(fieldElement, defaultLanguage);\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n      const isReadonly = shouldComponentBeReadOnly(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n      if (typeof this.props.fieldValue === 'string') {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          parseInt(this.props.fieldValue, 10)\r\n        );\r\n      }\r\n\r\n      let modifiedValue: any;\r\n      {\r\n        fieldValue === 0 ? (modifiedValue = '0') : (modifiedValue = fieldValue);\r\n      }\r\n\r\n      const isError = isPresentInErrorSelector(\r\n        fieldParentTreeName + fieldElement.name\r\n      );\r\n\r\n      if (fieldElement.bind && fieldElement.bind.calculate) {\r\n        let calculatedValue: any = '';\r\n        calculatedValue = this.props.getEvaluatedExpressionSelector(\r\n          fieldElement.bind.calculate,\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n\r\n        if (fieldValue && calculatedValue !== fieldValue) {\r\n          this.props.assignFieldValueActionCreator(\r\n            fieldParentTreeName + fieldElement.name,\r\n            calculatedValue\r\n          );\r\n        }\r\n        modifiedValue = calculatedValue;\r\n      }\r\n\r\n      return (\r\n        <FormGroup>\r\n          <Label>\r\n            {modifiedFieldLabel}{' '}\r\n            {isRequired && (\r\n              <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n            )}\r\n          </Label>\r\n          <Input\r\n            type=\"number\"\r\n            name={fieldElement.name}\r\n            onChange={this.onChangeHandler}\r\n            onBlur={this.onBlurHandler}\r\n            value={\r\n              this.state.isFocused\r\n                ? this.state.fieldValue || ''\r\n                : modifiedValue || ''\r\n            }\r\n            readOnly={isReadonly}\r\n          />\r\n          {isFormSubmitted && isError && (\r\n            <FontAwesomeIcon icon=\"exclamation-circle\" className=\"errorSign\" />\r\n          )}\r\n          {fieldElement.hint && <Label className=\"hintText\">{hintLabel}</Label>}\r\n          {isFormSubmitted && isRequiredViolated && (\r\n            <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n          )}\r\n          {isConstraintViolated && (\r\n            <Label className=\"constraintText\">{modifiedConstraintLabel}</Label>\r\n          )}\r\n        </FormGroup>\r\n      );\r\n    } else {\r\n      if (this.state.isFocused) {\r\n        this.setState({ ...this.state, isFocused: false });\r\n      }\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n  /** sets the value of field element in store\r\n   * @param {React.FormEvent<HTMLInputElement>} event - the onchange input event\r\n   */\r\n  private onChangeHandler = (event: React.FormEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      ...this.state,\r\n      fieldValue: event.currentTarget.value || '',\r\n      isFocused: true,\r\n    });\r\n  };\r\n\r\n  private onBlurHandler = (event: React.FormEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      ...this.state,\r\n      fieldValue: event.currentTarget.value || '',\r\n      isFocused: false,\r\n    });\r\n    this.props.assignFieldValueActionCreator(\r\n      this.props.fieldParentTreeName + event.currentTarget.name,\r\n      event.currentTarget.value !== ''\r\n        ? parseInt(event.currentTarget.value, 10)\r\n        : null\r\n    );\r\n  };\r\n}\r\n/** connect the component to the store */\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: any;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n}\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n}\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const getFormSubmitStatusSelector = getFormSubmitStatus(state);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    getFormSubmitStatusSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n  };\r\n  return result;\r\n};\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n/** connect Integer component to the redux store */\r\nconst ConnectedInteger = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Integer);\r\nexport default ConnectedInteger;\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormGroup, FormText, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  getEvaluatedExpression,\r\n  getFieldValue,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../utils/helpers';\r\n\r\n/** props interface for the text component */\r\nexport interface NoteProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: string;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  isPresentInErrorSelector: any;\r\n  isComponentRender: boolean;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\n\r\nclass Note extends React.Component<NoteProps> {\r\n  public render() {\r\n    const {\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\r\n    const isConstraintViolated =\r\n      fieldValue &&\r\n      fieldValue !== '' &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n    const modifiedConstraintLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      constraintLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n      const fieldHint = getHintLabelText(fieldElement, defaultLanguage);\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n      return (\r\n        <FormGroup>\r\n          <Label>{fieldLabel}</Label>\r\n          {isRequired && (\r\n            <Label className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</Label>\r\n          )}\r\n          {fieldElement.hint && (\r\n            <FormText className=\"hintText\">{fieldHint}</FormText>\r\n          )}\r\n\r\n          {isRequiredViolated && (\r\n            <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n          )}\r\n          {isConstraintViolated && (\r\n            <Label className=\"constraintText\">{modifiedConstraintLabel}</Label>\r\n          )}\r\n        </FormGroup>\r\n      );\r\n    } else {\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: string;\r\n  getEvaluatedExpressionSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect Note component to the redux store */\r\nconst ConnectedNote = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Note);\r\n\r\nexport default ConnectedNote;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport _ from 'lodash';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport { FormGroup, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  assignOptionListAction,\r\n  getEvaluatedExpression,\r\n  getEvaluatedExpressionForSelect,\r\n  getFieldValue,\r\n  getFormSubmitStatus,\r\n  getOptionList,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeReadOnly,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../../utils/helpers';\r\n\r\n/** props interface for the SelectAll Dropdown component */\r\nexport interface SelectAllDropDownProps {\r\n  choices: any;\r\n  csvList: any;\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: any;\r\n  optionList: object;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  assignOptionListActionCreator: typeof assignOptionListAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  getEvaluatedExpressionSelectorForSelect: any;\r\n  getFormSubmitStatusSelector: boolean;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\n\r\nexport interface Options {\r\n  label: any;\r\n  value: string;\r\n}\r\n\r\n\r\nconst customStyles = {\r\n  // For the select itself (not the options)\r\n  control: (styles: any, { isDisabled }: any) => {\r\n    return {\r\n      ...styles,\r\n      backgroundColor: isDisabled ? 'white' : 'white',\r\n    }\r\n  },\r\n\r\n    // For the select itself (not the options)\r\n    container: (styles: any, { isDisabled }: any) => {\r\n      return {\r\n        ...styles,\r\n        backgroundColor: isDisabled ? 'white' : 'white',\r\n      }\r\n    },\r\n};\r\n\r\nclass SelectAllDropDown extends React.Component<SelectAllDropDownProps> {\r\n  public render() {\r\n    const {\r\n      choices,\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      getFormSubmitStatusSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isFormSubmitted: boolean = getFormSubmitStatusSelector;\r\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === []);\r\n    const isConstraintViolated =\r\n      fieldValue &&\r\n      fieldValue !== [] &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const modifiedFieldLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      fieldLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n    const modifiedConstraintLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      constraintLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const hintLabel = getHintLabelText(fieldElement, defaultLanguage);\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n\r\n      const isReadonly = shouldComponentBeReadOnly(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      let resultOptions: any[] = [];\r\n      const options: Options[] = [];\r\n\r\n      if (fieldElement.control && fieldElement.control.appearance) {\r\n        const updatedFieldElement: any = fieldElement.control.appearance\r\n          .toString()\r\n          .replace('minimal', '');\r\n        if (/search\\([^\\)|(]+\\)/i.test(updatedFieldElement)) {\r\n          const processedStringArray = updatedFieldElement.match(\r\n            /search\\([^\\)|(]+\\)/i\r\n          ) || [''];\r\n          resultOptions = this.getProcessedString(processedStringArray[0]);\r\n        }\r\n      }\r\n\r\n      if (\r\n        fieldElement.control &&\r\n        fieldElement.control.appearance &&\r\n        /search\\([^\\)|(]+\\)/i.test(fieldElement.control.appearance)\r\n      ) {\r\n        resultOptions.map(elem =>\r\n          options.push({ label: elem.label, value: elem.name })\r\n        );\r\n        this.setOptionList(resultOptions);\r\n      } else if (fieldElement.itemset) {\r\n        if (choices && choices[fieldElement.itemset.trim()]) {\r\n          _.forEach(choices[fieldElement.itemset.trim()], (elem: any) => {\r\n            if (\r\n              fieldElement.choice_filter &&\r\n              this.props.getEvaluatedExpressionSelectorForSelect(\r\n                fieldElement.choice_filter,\r\n                fieldParentTreeName + fieldElement.name,\r\n                elem\r\n              )\r\n            ) {\r\n              const childrenLabel: string = getFieldLabelText(\r\n                elem,\r\n                defaultLanguage\r\n              );\r\n              options.push({ label: childrenLabel, value: elem.name });\r\n            }\r\n          });\r\n\r\n          const optionsArray: any = [];\r\n          if (options) {\r\n            options.map(elem => {\r\n              const elemObj: any = {};\r\n              const name: string = 'name';\r\n              const label: string = 'label';\r\n              elemObj[name] = elem.value;\r\n              elemObj[label] = elem.label;\r\n              optionsArray.push(elemObj);\r\n            });\r\n          }\r\n          this.setOptionList(optionsArray);\r\n        }\r\n      } else {\r\n        if (fieldElement.children) {\r\n          fieldElement.children.map(elem => {\r\n            const childrenLabel: string = getFieldLabelText(\r\n              elem,\r\n              defaultLanguage\r\n            );\r\n\r\n            options.push({ label: childrenLabel, value: elem.name });\r\n          });\r\n          this.setOptionList(fieldElement.children);\r\n        }\r\n      }\r\n\r\n      const tmpValueArray: any = [];\r\n      let isNotIncluded: boolean = false;\r\n      if (fieldValue && fieldValue.length > 0) {\r\n        const optionsValueArray: any = [];\r\n        options.map(elem => {\r\n          if (elem.value) {\r\n            optionsValueArray.push(elem.value);\r\n          }\r\n        });\r\n\r\n        for (const row of fieldValue) {\r\n          if (!optionsValueArray.includes(row)) {\r\n            isNotIncluded = true;\r\n          } else {\r\n            tmpValueArray.push(row);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (fieldValue && fieldValue.length > 0 && isNotIncluded) {\r\n        this.props.assignFieldValueActionCreator(\r\n          this.props.fieldParentTreeName + fieldElement.name,\r\n          tmpValueArray || []\r\n        );\r\n      }\r\n\r\n      const selectedValues: any[] = [];\r\n      if (fieldValue && fieldValue.length > 0) {\r\n        options.map(elem => {\r\n          for (const row of fieldValue) {\r\n            if (elem.value === row) {\r\n              selectedValues.push(elem);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      if (typeof this.props.fieldValue === 'string') {\r\n        const seperatedValues: string[] = fieldValue.split(' ');\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          seperatedValues\r\n        );\r\n      }\r\n\r\n      let calculatedValue: any = '';\r\n      if (fieldElement.bind && fieldElement.bind.calculate) {\r\n        calculatedValue = this.props.getEvaluatedExpressionSelector(\r\n          fieldElement.bind.calculate,\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      if (calculatedValue && fieldValue !== calculatedValue) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          calculatedValue\r\n        );\r\n      }\r\n\r\n      const isError = isPresentInErrorSelector(\r\n        fieldParentTreeName + fieldElement.name\r\n      );\r\n\r\n      return (\r\n        <FormGroup>\r\n          <Label>\r\n            {modifiedFieldLabel}{' '}\r\n            {isRequired && (\r\n              <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n            )}\r\n          </Label>\r\n          <div key={fieldElement.name} className=\"selectAllDropDown\">\r\n            <Select\r\n              styles={customStyles}\r\n              isDisabled={isReadonly}\r\n              isMulti={true}\r\n              name={fieldElement.name}\r\n              options={options}\r\n              onChange={this.onChangeHandler(fieldElement.name)}\r\n              value={selectedValues || calculatedValue || []}\r\n            />\r\n          </div>\r\n          {isFormSubmitted && isError && (\r\n            <FontAwesomeIcon icon=\"exclamation-circle\" className=\"errorSign\" />\r\n          )}\r\n          {fieldElement.hint && <Label className=\"hintText\">{hintLabel}</Label>}\r\n          {isFormSubmitted && isRequiredViolated && (\r\n            <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n          )}\r\n          {isConstraintViolated && (\r\n            <Label className=\"constraintText\">{modifiedConstraintLabel}</Label>\r\n          )}\r\n        </FormGroup>\r\n      );\r\n    } else {\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      if (this.props.optionList != null) {\r\n        this.props.assignOptionListActionCreator(\r\n          this.props.fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /** Sets the option list to the Redux Store\r\n   * @param {any} optionObject - the option object to be processed\r\n   */\r\n  private setOptionList = (optionObject: any) => {\r\n    const tempObjArray: any = [];\r\n    optionObject.map((elem: { name: any; label: any }) => {\r\n      const elemObj: any = {};\r\n      const name: string = 'name';\r\n      const label: string = 'label';\r\n      elemObj[name] = elem.name;\r\n      elemObj[label] = elem.label;\r\n      tempObjArray.push(elemObj);\r\n    });\r\n\r\n    if (!_.isEqual(this.props.optionList, { ...tempObjArray })) {\r\n      this.props.assignOptionListActionCreator(\r\n        this.props.fieldParentTreeName + this.props.fieldElement.name,\r\n        tempObjArray\r\n      );\r\n    }\r\n  };\r\n\r\n  /** sets the value of field element in store\r\n   * @param {any} values - the onchange input values\r\n   * @param {any} fieldName - the input name\r\n   */\r\n  private onChangeHandler = (fieldName: any) => (values: any) => {\r\n    const selectedValues: any = [];\r\n    let i = 0;\r\n    if (values && values.length > 0) {\r\n      values.map(() => {\r\n        if (!selectedValues.includes(values[i].value)) {\r\n          selectedValues.push(values[i].value);\r\n        }\r\n        i++;\r\n      });\r\n\r\n      this.props.assignFieldValueActionCreator(\r\n        this.props.fieldParentTreeName + fieldName,\r\n        selectedValues\r\n      );\r\n    } else {\r\n      this.props.assignFieldValueActionCreator(\r\n        this.props.fieldParentTreeName + fieldName,\r\n        null\r\n      );\r\n    }\r\n  };\r\n\r\n  /** converts apeearance text into array and pass them to further process\r\n   * @param {string} stringWithSearchKeyWord - the fieldElement children appearance text (partial)\r\n   */\r\n  private getProcessedString = (stringWithSearchKeyWord: string) => {\r\n    const processedStringArray = stringWithSearchKeyWord.match(\r\n      /\\([^\\)]+\\)/i\r\n    ) || [''];\r\n    let params = processedStringArray[0];\r\n\r\n    if (params.length > 2) {\r\n      params = params.substring(1, params.length - 1);\r\n      const resultArray = params.split(',');\r\n      let criteriaParams = [...resultArray];\r\n      criteriaParams = criteriaParams.splice(2, criteriaParams.length);\r\n      return this.extractAndFilterOptions(\r\n        resultArray[0],\r\n        resultArray[1] || null,\r\n        criteriaParams || []\r\n      );\r\n    }\r\n    return [];\r\n  };\r\n\r\n  /** generates unique dropdown options using CSV\r\n   * @param {string} csvName - the CSV file name\r\n   * @param {string | null} criteriaType - criteria to match with previous user input\r\n   * @param {any} filterCriterias - previous user input collections\r\n   */\r\n  private extractAndFilterOptions = (\r\n    csvName: string,\r\n    criteriaType: string | null,\r\n    filterCriterias: any\r\n  ) => {\r\n    if (criteriaType) {\r\n      criteriaType = criteriaType.trim();\r\n      criteriaType = criteriaType.substring(1, criteriaType.length - 1).trim();\r\n    }\r\n\r\n    let options: any[] = [];\r\n    const distinctOptions: any[] = [];\r\n    const finalRes: any[] = [];\r\n    const csv: any = this.props.csvList;\r\n    csvName = csvName.substring(1, csvName.length - 1) + '.csv';\r\n\r\n    if (csv[csvName]) {\r\n      const modifiedName = csvName.replace(/'/g, '');\r\n      options = this.props.csvList[modifiedName] || [];\r\n    }\r\n\r\n    if (criteriaType && criteriaType.trim() === 'matches') {\r\n      let i = 0;\r\n      while (i < filterCriterias.length) {\r\n        let nameOfKey = filterCriterias[i].trim();\r\n        nameOfKey = nameOfKey.substring(1, nameOfKey.length - 1).trim();\r\n        const interConnectedValue = filterCriterias[i + 1];\r\n        const tempOptions = [...options];\r\n\r\n        let filterResult: any = [];\r\n        tempOptions.forEach(elm => {\r\n          filterResult = this.props.getEvaluatedExpressionSelectorForSelect(\r\n            interConnectedValue,\r\n            this.props.fieldParentTreeName + this.props.fieldElement.name,\r\n            elm\r\n          );\r\n        });\r\n\r\n        let j = 0;\r\n        filterResult.map(() => {\r\n          options.map(option => {\r\n            if (option[nameOfKey] === filterResult[j]) {\r\n              finalRes.push(option);\r\n            }\r\n          });\r\n          j = j + 1;\r\n        });\r\n\r\n        i = i + 2;\r\n      }\r\n\r\n      options = [...Array.from(new Set(finalRes))];\r\n    }\r\n\r\n    if (options.length !== 0) {\r\n      let labelColumnName: string = '';\r\n      let valueColumnName: string = '';\r\n      if (\r\n        this.props.fieldElement.children &&\r\n        this.props.fieldElement.children[0] &&\r\n        this.props.fieldElement.children[0].name &&\r\n        this.props.fieldElement.children[0].label\r\n      ) {\r\n        labelColumnName = getFieldLabelText(\r\n          this.props.fieldElement.children[0],\r\n          this.props.defaultLanguage\r\n        );\r\n        valueColumnName = this.props.fieldElement.children[0].name;\r\n      }\r\n\r\n      options.forEach(elem => {\r\n        const tmpOpt: any = {};\r\n        const label: string = 'label';\r\n        const name: string = 'name';\r\n        tmpOpt[label] = elem[labelColumnName].trim();\r\n        tmpOpt[name] = elem[valueColumnName].trim();\r\n        distinctOptions.push(tmpOpt);\r\n      });\r\n\r\n      return _.uniqBy(distinctOptions, 'name');\r\n    }\r\n    return [];\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: string[];\r\n  getEvaluatedExpressionSelector: any;\r\n  getEvaluatedExpressionSelectorForSelect: any;\r\n  getFormSubmitStatusSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  optionList: object;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  defaultLanguage: string;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const getEvaluatedExpressionSelectorForSelect = (\r\n    expression: string,\r\n    fieldTreeName: string,\r\n    options: any\r\n  ) =>\r\n    getEvaluatedExpressionForSelect(state, expression, options, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const getFormSubmitStatusSelector = getFormSubmitStatus(state);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    getEvaluatedExpressionSelectorForSelect,\r\n    getFormSubmitStatusSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n    optionList: getOptionList(state, fieldParentTreeName + fieldElement.name),\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  assignOptionListActionCreator: assignOptionListAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect SelectOne Dropdown component to the redux store */\r\nconst ConnectedSelectAllDropDown = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SelectAllDropDown);\r\n\r\nexport default ConnectedSelectAllDropDown;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport _ from 'lodash';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  assignOptionListAction,\r\n  getEvaluatedExpression,\r\n  getEvaluatedExpressionForSelect,\r\n  getFieldValue,\r\n  getFormSubmitStatus,\r\n  getOptionList,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeReadOnly,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../../utils/helpers';\r\n\r\n/** props interface for the SelectAll Radio component */\r\nexport interface SelectAllRadioProps {\r\n  choices: any;\r\n  csvList: any;\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: any;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  assignOptionListActionCreator: typeof assignOptionListAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  getEvaluatedExpressionSelectorForSelect: any;\r\n  getFormSubmitStatusSelector: boolean;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n  optionList: object;\r\n}\r\n\r\nexport interface Options {\r\n  label: any;\r\n  value: string;\r\n}\r\n\r\nclass SelectAllRadio extends React.Component<SelectAllRadioProps> {\r\n  public render() {\r\n    const {\r\n      choices,\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      getFormSubmitStatusSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isFormSubmitted: boolean = getFormSubmitStatusSelector;\r\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === []);\r\n    const isConstraintViolated =\r\n      fieldValue &&\r\n      fieldValue !== [] &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const modifiedFieldLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      fieldLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n    const modifiedConstraintLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      constraintLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const hintLabel = getHintLabelText(fieldElement, defaultLanguage);\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n      const isReadonly = shouldComponentBeReadOnly(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      let resultOptions: any[] = [];\r\n      let options: Options[] = [];\r\n\r\n      if (fieldElement.control && fieldElement.control.appearance) {\r\n        const updatedFieldElement: any = fieldElement.control.appearance\r\n          .toString()\r\n          .replace('minimal', '');\r\n        if (/search\\([^\\)|(]+\\)/i.test(updatedFieldElement)) {\r\n          const processedStringArray = updatedFieldElement.match(\r\n            /search\\([^\\)|(]+\\)/i\r\n          ) || [''];\r\n          resultOptions = this.getProcessedString(processedStringArray[0]);\r\n        }\r\n      }\r\n\r\n      const childrenArray: any = [];\r\n      if (fieldElement.children) {\r\n        fieldElement.children.map(elem => {\r\n          const elemObj: any = {};\r\n          const name: string = 'name';\r\n          const label: string = 'label';\r\n          elemObj[name] = elem.name;\r\n          elemObj[label] = elem.label;\r\n          childrenArray.push(elemObj);\r\n        });\r\n      }\r\n\r\n      let values: any = [];\r\n\r\n      if (\r\n        fieldElement.control &&\r\n        fieldElement.control.appearance &&\r\n        /search\\([^\\)|(]+\\)/i.test(fieldElement.control.appearance)\r\n      ) {\r\n        values = [];\r\n        options = [];\r\n        const tmpValueArray: any = [];\r\n        let isNotIncluded: boolean = false;\r\n\r\n        resultOptions.map(elem =>\r\n          options.push({ label: elem.label, value: elem.name })\r\n        );\r\n\r\n        if (fieldValue && fieldValue.length > 0) {\r\n          const optionsValueArray: any = [];\r\n          options.map(elem => {\r\n            if (elem.value) {\r\n              optionsValueArray.push(elem.value);\r\n            }\r\n          });\r\n\r\n          for (const row of fieldValue) {\r\n            if (!optionsValueArray.includes(row)) {\r\n              isNotIncluded = true;\r\n            } else {\r\n              tmpValueArray.push(row);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (fieldValue && fieldValue.length > 0 && isNotIncluded) {\r\n          this.props.assignFieldValueActionCreator(\r\n            this.props.fieldParentTreeName + fieldElement.name,\r\n            tmpValueArray || []\r\n          );\r\n        }\r\n\r\n        if (!_.isEqual(this.props.optionList, { ...resultOptions })) {\r\n          this.props.assignOptionListActionCreator(\r\n            this.props.fieldParentTreeName + fieldElement.name,\r\n            resultOptions\r\n          );\r\n        }\r\n        values = [...resultOptions];\r\n      } else if (fieldElement.itemset) {\r\n        values = [];\r\n        options = [];\r\n        const tmpValueArray: any = [];\r\n        const optionsArray: any = [];\r\n        let isNotIncluded: boolean = false;\r\n\r\n        if (choices && choices[fieldElement.itemset.trim()]) {\r\n          _.forEach(choices[fieldElement.itemset.trim()], (elem: any) => {\r\n            if (\r\n              fieldElement.choice_filter &&\r\n              this.props.getEvaluatedExpressionSelectorForSelect(\r\n                fieldElement.choice_filter,\r\n                fieldParentTreeName + fieldElement.name,\r\n                elem\r\n              )\r\n            ) {\r\n              const childrenLabel: string = getFieldLabelText(\r\n                elem,\r\n                defaultLanguage\r\n              );\r\n              options.push({ label: childrenLabel, value: elem.name });\r\n            }\r\n          });\r\n        }\r\n\r\n        if (fieldValue && fieldValue.length > 0) {\r\n          const optionsValueArray: any = [];\r\n          options.map((elem: any) => {\r\n            if (elem.value) {\r\n              optionsValueArray.push(elem.value);\r\n            }\r\n          });\r\n\r\n          for (const row of fieldValue) {\r\n            if (!optionsValueArray.includes(row)) {\r\n              isNotIncluded = true;\r\n            } else {\r\n              tmpValueArray.push(row);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (fieldValue && fieldValue.length > 0 && isNotIncluded) {\r\n          this.props.assignFieldValueActionCreator(\r\n            this.props.fieldParentTreeName + fieldElement.name,\r\n            tmpValueArray || []\r\n          );\r\n        }\r\n\r\n        if (options) {\r\n          options.map(elem => {\r\n            const elemObj: any = {};\r\n            const name: string = 'name';\r\n            const label: string = 'label';\r\n            elemObj[name] = elem.value;\r\n            elemObj[label] = elem.label;\r\n            optionsArray.push(elemObj);\r\n          });\r\n        }\r\n\r\n        if (!_.isEqual(this.props.optionList, { ...optionsArray })) {\r\n          this.props.assignOptionListActionCreator(\r\n            this.props.fieldParentTreeName + fieldElement.name,\r\n            optionsArray\r\n          );\r\n        }\r\n\r\n        values = [...optionsArray];\r\n      } else {\r\n        values = [];\r\n        options = [];\r\n        if (fieldElement.children) {\r\n          fieldElement.children.map(elem =>\r\n            options.push({ label: elem.label, value: elem.name })\r\n          );\r\n        }\r\n\r\n        if (!_.isEqual(this.props.optionList, { ...childrenArray })) {\r\n          this.props.assignOptionListActionCreator(\r\n            this.props.fieldParentTreeName + fieldElement.name,\r\n            childrenArray\r\n          );\r\n        }\r\n        values = [...childrenArray];\r\n      }\r\n\r\n      const selectedValues: any[] = [];\r\n      if (fieldValue && fieldValue.length > 0) {\r\n        options.map(elem => {\r\n          for (const row of fieldValue) {\r\n            if (elem.value === row) {\r\n              selectedValues.push(elem.value);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      let flagInline = false;\r\n      if (fieldElement.control && fieldElement.control.appearance) {\r\n        fieldElement.control.appearance.split(' ').forEach((tmpStyle: any) => {\r\n          if (!flagInline && tmpStyle === 'horizontal-compact') {\r\n            flagInline = true;\r\n          }\r\n        });\r\n      }\r\n\r\n      if (typeof this.props.fieldValue === 'string') {\r\n        const seperatedValues: string[] = fieldValue.split(' ');\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          seperatedValues\r\n        );\r\n      }\r\n\r\n      let calculatedValue: any = '';\r\n      if (fieldElement.bind && fieldElement.bind.calculate) {\r\n        calculatedValue = this.props.getEvaluatedExpressionSelector(\r\n          fieldElement.bind.calculate,\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      if (calculatedValue && fieldValue !== calculatedValue) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          calculatedValue\r\n        );\r\n      }\r\n\r\n      const isError = isPresentInErrorSelector(\r\n        fieldParentTreeName + fieldElement.name\r\n      );\r\n\r\n      return (\r\n        <div>\r\n          <Label>\r\n            {modifiedFieldLabel}{' '}\r\n            {isRequired && (\r\n              <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n            )}\r\n          </Label>\r\n          <Form key=\"selectAll\">\r\n            {values.map((elem: any, index: any) => (\r\n              <FormGroup key={index} check={true} inline={flagInline}>\r\n                <Label check={true}>\r\n                  <Input\r\n                    key={fieldElement.name + '-' + index}\r\n                    type=\"checkbox\"\r\n                    name={fieldElement.name}\r\n                    value={elem.name || []}\r\n                    onChange={this.onChangeHandlerCheckBox}\r\n                    readOnly={isReadonly}\r\n                    checked={selectedValues.includes(elem.name) || calculatedValue.includes(elem.name)}\r\n                  />{' '}\r\n                  {getFieldLabelText(elem, defaultLanguage)}\r\n                </Label>\r\n              </FormGroup>\r\n            ))}\r\n          </Form>\r\n          {isFormSubmitted && isError && (\r\n            <FontAwesomeIcon icon=\"exclamation-circle\" className=\"errorSign\" />\r\n          )}\r\n          {fieldElement.hint && <Label className=\"hintText\">{hintLabel}</Label>}\r\n          {isFormSubmitted && isRequiredViolated && (\r\n            <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n          )}\r\n          {isConstraintViolated && (\r\n            <Label className=\"constraintText\">{modifiedConstraintLabel}</Label>\r\n          )}\r\n        </div>\r\n      );\r\n    } else {\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n\r\n      if (this.props.optionList != null) {\r\n        this.props.assignOptionListActionCreator(\r\n          this.props.fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n      }\r\n\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /** sets the value of field element in store\r\n   * @param {any} event - the onchange event\r\n   */\r\n\r\n  private onChangeHandlerCheckBox = (event: any) => {\r\n    const { fieldValue, fieldElement, fieldParentTreeName } = this.props;\r\n    const fieldName = fieldParentTreeName + fieldElement.name;\r\n    if (event.target.checked) {\r\n      if (\r\n        fieldValue &&\r\n        fieldValue.length > 0 &&\r\n        !fieldValue.includes(event.target.value)\r\n      ) {\r\n        this.props.assignFieldValueActionCreator(fieldName, [\r\n          ...fieldValue,\r\n          event.target.value,\r\n        ]);\r\n      } else {\r\n        this.props.assignFieldValueActionCreator(fieldName, [\r\n          event.target.value,\r\n        ]);\r\n      }\r\n    } else {\r\n      if (\r\n        fieldValue &&\r\n        fieldValue.length > 0 &&\r\n        fieldValue.includes(event.target.value)\r\n      ) {\r\n        const newValue = fieldValue.filter(\r\n          (elm: any) => elm !== event.target.value\r\n        );\r\n\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldName,\r\n          newValue.length ? newValue : null\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  /** converts apeearance text into array and pass them to further process\r\n   * @param {string} stringWithSearchKeyWord - the fieldElement children appearance text (partial)\r\n   */\r\n  private getProcessedString = (stringWithSearchKeyWord: string) => {\r\n    const processedStringArray = stringWithSearchKeyWord.match(\r\n      /\\([^\\)]+\\)/i\r\n    ) || [''];\r\n    let params = processedStringArray[0];\r\n\r\n    if (params.length > 2) {\r\n      params = params.substring(1, params.length - 1);\r\n      const resultArray = params.split(',');\r\n      let criteriaParams = [...resultArray];\r\n      criteriaParams = criteriaParams.splice(2, criteriaParams.length);\r\n      return this.extractAndFilterOptions(\r\n        resultArray[0],\r\n        resultArray[1] || null,\r\n        criteriaParams || []\r\n      );\r\n    }\r\n    return [];\r\n  };\r\n\r\n  /** generates unique dropdown options using CSV\r\n   * @param {string} csvName - the CSV file name\r\n   * @param {string | null} criteriaType - criteria to match with previous user input\r\n   * @param {any} filterCriterias - previous user input collections\r\n   */\r\n  private extractAndFilterOptions = (\r\n    csvName: string,\r\n    criteriaType: string | null,\r\n    filterCriterias: any\r\n  ) => {\r\n    if (criteriaType) {\r\n      criteriaType = criteriaType.trim();\r\n      criteriaType = criteriaType.substring(1, criteriaType.length - 1).trim();\r\n    }\r\n\r\n    let options: any[] = [];\r\n    const distinctOptions: any[] = [];\r\n    const finalRes: any[] = [];\r\n    const csv: any = this.props.csvList;\r\n    csvName = csvName.substring(1, csvName.length - 1) + '.csv';\r\n\r\n    if (csv[csvName]) {\r\n      const modifiedName = csvName.replace(/'/g, '');\r\n      options = this.props.csvList[modifiedName] || [];\r\n    }\r\n\r\n    if (criteriaType && criteriaType.trim() === 'matches') {\r\n      let i = 0;\r\n      while (i < filterCriterias.length) {\r\n        let nameOfKey = filterCriterias[i].trim();\r\n        nameOfKey = nameOfKey.substring(1, nameOfKey.length - 1).trim();\r\n        const interConnectedValue = filterCriterias[i + 1];\r\n        const tempOptions = [...options];\r\n\r\n        let filterResult: any = [];\r\n        tempOptions.forEach(elm => {\r\n          filterResult = this.props.getEvaluatedExpressionSelectorForSelect(\r\n            interConnectedValue,\r\n            this.props.fieldParentTreeName + this.props.fieldElement.name,\r\n            elm\r\n          );\r\n        });\r\n\r\n        let j = 0;\r\n        filterResult.map(() => {\r\n          options.map(option => {\r\n            if (option[nameOfKey] === filterResult[j]) {\r\n              finalRes.push(option);\r\n            }\r\n          });\r\n          j = j + 1;\r\n        });\r\n\r\n        i = i + 2;\r\n      }\r\n\r\n      options = [...Array.from(new Set(finalRes))];\r\n    }\r\n\r\n    if (options.length !== 0) {\r\n      let labelColumnName: string = '';\r\n      let valueColumnName: string = '';\r\n      if (\r\n        this.props.fieldElement.children &&\r\n        this.props.fieldElement.children[0] &&\r\n        this.props.fieldElement.children[0].name &&\r\n        this.props.fieldElement.children[0].label\r\n      ) {\r\n        labelColumnName = getFieldLabelText(\r\n          this.props.fieldElement.children[0],\r\n          this.props.defaultLanguage\r\n        );\r\n        valueColumnName = this.props.fieldElement.children[0].name;\r\n      }\r\n\r\n      options.forEach(elem => {\r\n        const tmpOpt: any = {};\r\n        const label: string = 'label';\r\n        const name: string = 'name';\r\n        tmpOpt[label] = elem[labelColumnName].trim();\r\n        tmpOpt[name] = elem[valueColumnName].trim();\r\n        distinctOptions.push(tmpOpt);\r\n      });\r\n\r\n      return _.uniqBy(distinctOptions, 'name');\r\n    }\r\n    return [];\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: string[];\r\n  getEvaluatedExpressionSelector: any;\r\n  getEvaluatedExpressionSelectorForSelect: any;\r\n  getFormSubmitStatusSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  optionList: object;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const getEvaluatedExpressionSelectorForSelect = (\r\n    expression: string,\r\n    fieldTreeName: string,\r\n    options: any\r\n  ) =>\r\n    getEvaluatedExpressionForSelect(state, expression, options, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const getFormSubmitStatusSelector = getFormSubmitStatus(state);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    getEvaluatedExpressionSelectorForSelect,\r\n    getFormSubmitStatusSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n    optionList: getOptionList(state, fieldParentTreeName + fieldElement.name),\r\n  };\r\n\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  assignOptionListActionCreator: assignOptionListAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect SelectOne Radio component to the redux store */\r\nconst ConnectedSelectAllRadio = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SelectAllRadio);\r\n\r\nexport default ConnectedSelectAllRadio;\r\n","import * as React from 'react';\r\nimport { shouldComponentBeMinimal } from '../../../../../src/utils/helpers';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport Dropdown from './Dropdown';\r\nimport Radio from './Radio';\r\n\r\n/** props interface for the SelectOne component */\r\nexport interface SelectAllProps {\r\n  choices: any;\r\n  csvList: any;\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  defaultLanguage: string;\r\n}\r\n\r\nclass SelectAll extends React.Component<SelectAllProps> {\r\n  public render() {\r\n    const { fieldElement } = this.props;\r\n    if (shouldComponentBeMinimal(fieldElement)) {\r\n      return <Dropdown {...this.props} />;\r\n    }\r\n    return <Radio {...this.props} />;\r\n  }\r\n}\r\n\r\nexport default SelectAll;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport _ from 'lodash';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport { FormGroup, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  assignOptionListAction,\r\n  getEvaluatedExpression,\r\n  getEvaluatedExpressionForSelect,\r\n  getFieldValue,\r\n  getFormSubmitStatus,\r\n  getOptionList,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeReadOnly,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../../utils/helpers';\r\n\r\n\r\n/** props interface for the SelectOne component */\r\nexport interface SelectOneDropDownProps {\r\n  choices: any;\r\n  csvList: any;\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: string;\r\n  optionList: object;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  assignOptionListActionCreator: typeof assignOptionListAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: boolean;\r\n  getEvaluatedExpressionSelectorForSelect: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\n\r\nexport interface Options {\r\n  label: any;\r\n  value: string;\r\n}\r\n\r\nconst customStyles = {\r\n  // For the select itself (not the options)\r\n  control: (styles: any, { isDisabled }: any) => {\r\n    return {\r\n      ...styles,\r\n      backgroundColor: isDisabled ? 'white' : 'white',\r\n    }\r\n    \r\n  },\r\n\r\n    // For the select itself (not the options)\r\n    container: (styles: any, { isDisabled }: any) => {\r\n      return {\r\n        ...styles,\r\n        backgroundColor: isDisabled ? 'white' : 'white',\r\n      }\r\n    },\r\n};\r\n\r\nclass SelectOneDropDown extends React.Component<SelectOneDropDownProps> {\r\n  public render() {\r\n    const {\r\n      choices,\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      getFormSubmitStatusSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isFormSubmitted: boolean = getFormSubmitStatusSelector;\r\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\r\n    const isConstraintViolated =\r\n      fieldValue &&\r\n      fieldValue !== '' &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const modifiedFieldLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      fieldLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n\r\n    const modifiedConstraintLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      constraintLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const hintLabel = getHintLabelText(fieldElement, defaultLanguage);\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n\r\n      const isReadonly = shouldComponentBeReadOnly(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      let resultOptions: any[] = [];\r\n      const options: Options[] = [];\r\n\r\n      if (fieldElement.control && fieldElement.control.appearance) {\r\n        const updatedFieldElement: any = fieldElement.control.appearance\r\n          .toString()\r\n          .replace('minimal', '');\r\n        if (/search\\([^\\)|(]+\\)/i.test(updatedFieldElement)) {\r\n          const processedStringArray = updatedFieldElement.match(\r\n            /search\\([^\\)|(]+\\)/i\r\n          ) || [''];\r\n          resultOptions = this.getProcessedString(processedStringArray[0]);\r\n        }\r\n      }\r\n\r\n      if (\r\n        fieldElement.control &&\r\n        fieldElement.control.appearance &&\r\n        /search\\([^\\)|(]+\\)/i.test(fieldElement.control.appearance)\r\n      ) {\r\n        resultOptions.map(elem =>\r\n          options.push({ label: elem.label, value: elem.name })\r\n        );\r\n\r\n        this.setOptionList(resultOptions);\r\n      } else if (fieldElement.itemset) {\r\n        if (choices && choices[fieldElement.itemset.trim()]) {\r\n          _.forEach(choices[fieldElement.itemset.trim()], (elem: any) => {\r\n            if (\r\n              fieldElement.choice_filter &&\r\n              this.props.getEvaluatedExpressionSelectorForSelect(\r\n                fieldElement.choice_filter,\r\n                fieldParentTreeName + fieldElement.name,\r\n                elem\r\n              )\r\n            ) {\r\n              const childrenLabel: string = getFieldLabelText(\r\n                elem,\r\n                defaultLanguage\r\n              );\r\n              options.push({ label: childrenLabel, value: elem.name });\r\n            }\r\n          });\r\n          this.setOptionList(choices[fieldElement.itemset.trim()]);\r\n        }\r\n      } else {\r\n        if (fieldElement.children) {\r\n          fieldElement.children.map(elem => {\r\n            const childrenLabel: string = getFieldLabelText(\r\n              elem,\r\n              defaultLanguage\r\n            );\r\n            options.push({ label: childrenLabel, value: elem.name });\r\n          });\r\n\r\n          this.setOptionList(fieldElement.children);\r\n        }\r\n      }\r\n\r\n      if (fieldValue) {\r\n        const optionsValueArray: any = [];\r\n        options.map(elem => {\r\n          if (elem.value) {\r\n            optionsValueArray.push(elem.value);\r\n          }\r\n        });\r\n\r\n        if (!optionsValueArray.includes(fieldValue)) {\r\n          this.props.assignFieldValueActionCreator(\r\n            this.props.fieldParentTreeName + fieldElement.name,\r\n            ''\r\n          );\r\n        }\r\n      }\r\n\r\n      let selectedValue: any;\r\n      options.map(elem => {\r\n        if (elem.value === fieldValue) {\r\n          selectedValue = elem;\r\n        }\r\n      });\r\n\r\n      let calculatedValue: any = '';\r\n      if (fieldElement.bind && fieldElement.bind.calculate) {\r\n        calculatedValue = this.props.getEvaluatedExpressionSelector(\r\n          fieldElement.bind.calculate,\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      if (calculatedValue && fieldValue !== calculatedValue) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          calculatedValue\r\n        );\r\n      }\r\n\r\n      const isError = isPresentInErrorSelector(\r\n        fieldParentTreeName + fieldElement.name\r\n      );\r\n\r\n      return (\r\n        <FormGroup>\r\n          <Label>\r\n            {modifiedFieldLabel}{' '}\r\n            {isRequired && (\r\n              <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n            )}\r\n          </Label>\r\n          <div key={fieldElement.name} className=\"selectOneDropDown\">\r\n            <Select\r\n              styles={customStyles}\r\n              isDisabled={isReadonly}\r\n              multi={false}\r\n              name={fieldElement.name}\r\n              options={options}\r\n              value={selectedValue || calculatedValue || ''}\r\n              onChange={this.onChangeHandler(fieldElement.name)}\r\n            />\r\n          </div>\r\n          {isFormSubmitted && isError && (\r\n            <FontAwesomeIcon icon=\"exclamation-circle\" className=\"errorSign\" />\r\n          )}\r\n          {fieldElement.hint && <Label className=\"hintText\">{hintLabel}</Label>}\r\n          {isFormSubmitted && isRequiredViolated && (\r\n            <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n          )}\r\n          {isConstraintViolated && (\r\n            <Label className=\"constraintText\">{modifiedConstraintLabel}</Label>\r\n          )}\r\n        </FormGroup>\r\n      );\r\n    } else {\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /** Sets the option list to the Redux Store\r\n   * @param {any} optionObject - the option object to be processed\r\n   */\r\n  private setOptionList = (optionObject: any) => {\r\n    const tempObjArray: any = [];\r\n    optionObject.map((elem: { name: any; label: any }) => {\r\n      const elemObj: any = {};\r\n      const name: string = 'name';\r\n      const label: string = 'label';\r\n      elemObj[name] = elem.name;\r\n      elemObj[label] = elem.label;\r\n      tempObjArray.push(elemObj);\r\n    });\r\n\r\n    if (!_.isEqual(this.props.optionList, { ...tempObjArray })) {\r\n      this.props.assignOptionListActionCreator(\r\n        this.props.fieldParentTreeName + this.props.fieldElement.name,\r\n        tempObjArray\r\n      );\r\n    }\r\n  };\r\n\r\n  /** sets the value of field element in store\r\n   * @param {any} event - the onchange input event\r\n   * @param {any} fieldName - the input name\r\n   */\r\n  private onChangeHandler = (fieldName: any) => (event: any) => {\r\n    this.props.assignFieldValueActionCreator(\r\n      this.props.fieldParentTreeName + fieldName,\r\n      event.value || ''\r\n    );\r\n  };\r\n\r\n  /** converts apeearance text into array and pass them to further process\r\n   * @param {string} stringWithSearchKeyWord - the fieldElement children appearance text (partial)\r\n   */\r\n  private getProcessedString = (stringWithSearchKeyWord: string) => {\r\n    const processedStringArray = stringWithSearchKeyWord.match(\r\n      /\\([^\\)]+\\)/i\r\n    ) || [''];\r\n    let params = processedStringArray[0];\r\n\r\n    if (params.length > 2) {\r\n      params = params.substring(1, params.length - 1);\r\n      const resultArray = params.split(',');\r\n      let criteriaParams = [...resultArray];\r\n      criteriaParams = criteriaParams.splice(2, criteriaParams.length);\r\n      return this.extractAndFilterOptions(\r\n        resultArray[0],\r\n        resultArray[1] || null,\r\n        criteriaParams || []\r\n      );\r\n    }\r\n    return [];\r\n  };\r\n\r\n  /** generates unique dropdown options using CSV\r\n   * @param {string} csvName - the CSV file name\r\n   * @param {string | null} criteriaType - criteria to match with previous user input\r\n   * @param {any} filterCriterias - previous user input collections\r\n   */\r\n  private extractAndFilterOptions = (\r\n    csvName: string,\r\n    criteriaType: string | null,\r\n    filterCriterias: any\r\n  ) => {\r\n    if (criteriaType) {\r\n      criteriaType = criteriaType.trim();\r\n      criteriaType = criteriaType.substring(1, criteriaType.length - 1).trim();\r\n    }\r\n\r\n    let options: any[] = [];\r\n    const distinctOptions: any[] = [];\r\n    const csv: any = this.props.csvList;\r\n    csvName = csvName.substring(1, csvName.length - 1) + '.csv';\r\n\r\n    if (csv[csvName]) {\r\n      const modifiedName = csvName.replace(/'/g, '');\r\n      options = this.props.csvList[modifiedName] || [];\r\n    }\r\n\r\n    if (criteriaType && criteriaType.trim() === 'matches') {\r\n      let i = 0;\r\n      while (i < filterCriterias.length) {\r\n        let nameOfKey = filterCriterias[i].trim();\r\n        nameOfKey = nameOfKey.substring(1, nameOfKey.length - 1).trim();\r\n        const interConnectedValue = filterCriterias[i + 1];\r\n        const tempOptions = [...options];\r\n        let filterResult: any = '';\r\n        tempOptions.forEach(elm => {\r\n          filterResult = this.props.getEvaluatedExpressionSelectorForSelect(\r\n            interConnectedValue,\r\n            this.props.fieldParentTreeName + this.props.fieldElement.name,\r\n            elm\r\n          );\r\n        });\r\n        options = options.filter(option => option[nameOfKey] === filterResult);\r\n        i = i + 2;\r\n      }\r\n    }\r\n\r\n    if (options.length !== 0) {\r\n      let labelColumnName: string = '';\r\n      let valueColumnName: string = '';\r\n      if (\r\n        this.props.fieldElement.children &&\r\n        this.props.fieldElement.children[0] &&\r\n        this.props.fieldElement.children[0].name &&\r\n        this.props.fieldElement.children[0].label\r\n      ) {\r\n        labelColumnName = getFieldLabelText(\r\n          this.props.fieldElement.children[0],\r\n          this.props.defaultLanguage\r\n        );\r\n        valueColumnName = this.props.fieldElement.children[0].name;\r\n      }\r\n\r\n      options.forEach(elem => {\r\n        const tmpOpt: any = {};\r\n        const label: string = 'label';\r\n        const name: string = 'name';\r\n        tmpOpt[label] = elem[labelColumnName].trim();\r\n        tmpOpt[name] = elem[valueColumnName].trim();\r\n        distinctOptions.push(tmpOpt);\r\n      });\r\n\r\n      return _.uniqBy(distinctOptions, 'name');\r\n    }\r\n    return [];\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: string;\r\n  getEvaluatedExpressionSelector: any;\r\n  getEvaluatedExpressionSelectorForSelect: any;\r\n  getFormSubmitStatusSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  optionList: object;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  defaultLanguage: string;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n\r\n  const getEvaluatedExpressionSelectorForSelect = (\r\n    expression: string,\r\n    fieldTreeName: string,\r\n    options: any\r\n  ) =>\r\n    getEvaluatedExpressionForSelect(state, expression, options, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const getFormSubmitStatusSelector = getFormSubmitStatus(state);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    getEvaluatedExpressionSelectorForSelect,\r\n    getFormSubmitStatusSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n    optionList: getOptionList(state, fieldParentTreeName + fieldElement.name),\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  assignOptionListActionCreator: assignOptionListAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect SelectOne component to the redux store */\r\nconst ConnectedSelectOneDropDown = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SelectOneDropDown);\r\n\r\nexport default ConnectedSelectOneDropDown;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport _ from 'lodash';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  assignOptionListAction,\r\n  getEvaluatedExpression,\r\n  getEvaluatedExpressionForSelect,\r\n  getFieldValue,\r\n  getFormSubmitStatus,\r\n  getOptionList,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeReadOnly,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../../utils/helpers';\r\n\r\n/** props interface for the SelectOne component */\r\nexport interface SelectOneRadioProps {\r\n  choices: any;\r\n  csvList: any;\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: string;\r\n  optionList: object;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  assignOptionListActionCreator: typeof assignOptionListAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  getEvaluatedExpressionSelectorForSelect: any;\r\n  getFormSubmitStatusSelector: boolean;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\n\r\nexport interface Options {\r\n  label: any;\r\n  value: string;\r\n}\r\n\r\nclass SelectOneRadio extends React.Component<SelectOneRadioProps> {\r\n  public render() {\r\n    const {\r\n      choices,\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      getFormSubmitStatusSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isFormSubmitted: boolean = getFormSubmitStatusSelector;\r\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\r\n    const isConstraintViolated =\r\n      fieldValue &&\r\n      fieldValue !== '' &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const modifiedFieldLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      fieldLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n    const modifiedConstraintLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      constraintLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const hintLabel = getHintLabelText(fieldElement, defaultLanguage);\r\n\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n      const isReadonly = shouldComponentBeReadOnly(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      let resultOptions: any[] = [];\r\n\r\n      if (fieldElement.control && fieldElement.control.appearance) {\r\n        if (/search\\([^\\)|(]+\\)/i.test(fieldElement.control.appearance)) {\r\n          const processedStringArray = fieldElement.control.appearance.match(\r\n            /search\\([^\\)|(]+\\)/i\r\n          ) || [''];\r\n\r\n          resultOptions = this.getProcessedString(processedStringArray[0]);\r\n        }\r\n      }\r\n\r\n      const childrenArray: any = [];\r\n      if (fieldElement.children) {\r\n        fieldElement.children.map(elem => {\r\n          const elemObj: any = {};\r\n          const name: string = 'name';\r\n          const label: string = 'label';\r\n          elemObj[name] = elem.name;\r\n          elemObj[label] = elem.label;\r\n          childrenArray.push(elemObj);\r\n        });\r\n      }\r\n\r\n      let values: any = [];\r\n\r\n      if (\r\n        fieldElement.control &&\r\n        fieldElement.control.appearance &&\r\n        /search\\([^\\)|(]+\\)/i.test(fieldElement.control.appearance)\r\n      ) {\r\n        values = [];\r\n        if (fieldValue) {\r\n          const optionsValueArray: any = [];\r\n          resultOptions.map(elem => {\r\n            if (elem.name) {\r\n              optionsValueArray.push(elem.name);\r\n            }\r\n          });\r\n\r\n          if (!optionsValueArray.includes(fieldValue)) {\r\n            this.props.assignFieldValueActionCreator(\r\n              this.props.fieldParentTreeName + fieldElement.name,\r\n              ''\r\n            );\r\n          }\r\n        }\r\n\r\n        if (!_.isEqual(this.props.optionList, { ...resultOptions })) {\r\n          this.props.assignOptionListActionCreator(\r\n            this.props.fieldParentTreeName + fieldElement.name,\r\n            resultOptions\r\n          );\r\n        }\r\n        values = [...resultOptions];\r\n      } else if (fieldElement.itemset) {\r\n        const choiceOptions: any = [];\r\n        values = [];\r\n        if (choices && choices[fieldElement.itemset.trim()]) {\r\n          _.forEach(choices[fieldElement.itemset.trim()], (elem: any) => {\r\n            if (\r\n              fieldElement.choice_filter &&\r\n              this.props.getEvaluatedExpressionSelectorForSelect(\r\n                fieldElement.choice_filter,\r\n                fieldParentTreeName + fieldElement.name,\r\n                elem\r\n              )\r\n            ) {\r\n              const childrenLabel: string = getFieldLabelText(\r\n                elem,\r\n                defaultLanguage\r\n              );\r\n              choiceOptions.push({ label: childrenLabel, name: elem.name });\r\n            }\r\n          });\r\n\r\n          if (fieldValue) {\r\n            const optionsValueArray: any = [];\r\n            choiceOptions.map((elem: any) => {\r\n              if (elem.name) {\r\n                optionsValueArray.push(elem.name);\r\n              }\r\n            });\r\n            if (!optionsValueArray.includes(fieldValue)) {\r\n              this.props.assignFieldValueActionCreator(\r\n                this.props.fieldParentTreeName + fieldElement.name,\r\n                ''\r\n              );\r\n            }\r\n          }\r\n          if (!_.isEqual(this.props.optionList, { ...choiceOptions })) {\r\n            this.props.assignOptionListActionCreator(\r\n              this.props.fieldParentTreeName + fieldElement.name,\r\n              choiceOptions\r\n            );\r\n          }\r\n          values = [...choiceOptions];\r\n        }\r\n      } else {\r\n        values = [];\r\n        if (!_.isEqual(this.props.optionList, { ...childrenArray })) {\r\n          this.props.assignOptionListActionCreator(\r\n            this.props.fieldParentTreeName + fieldElement.name,\r\n            childrenArray\r\n          );\r\n        }\r\n        values = [...childrenArray];\r\n      }\r\n\r\n      let flagInline = false;\r\n      if (fieldElement.control && fieldElement.control.appearance) {\r\n        fieldElement.control.appearance.split(' ').forEach((tmpStyle: any) => {\r\n          if (!flagInline && tmpStyle === 'horizontal-compact') {\r\n            flagInline = true;\r\n          }\r\n        });\r\n      }\r\n\r\n      let calculatedValue: any = '';\r\n      if (fieldElement.bind && fieldElement.bind.calculate) {\r\n        calculatedValue = this.props.getEvaluatedExpressionSelector(\r\n          fieldElement.bind.calculate,\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      if (calculatedValue && fieldValue !== calculatedValue) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          calculatedValue\r\n        );\r\n      }\r\n\r\n      const isError = isPresentInErrorSelector(\r\n        fieldParentTreeName + fieldElement.name\r\n      );\r\n\r\n      return (\r\n        <div>\r\n          <Label>\r\n            {modifiedFieldLabel}{' '}\r\n            {isRequired && (\r\n              <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n            )}\r\n          </Label>\r\n          <Form key=\"selectOne\">\r\n            {values.map((elem: any, index: any) => (\r\n              <FormGroup key={index} check={true} inline={flagInline}>\r\n                <Label check={true}>\r\n                  <Input\r\n                    key={fieldElement.name + '-' + index}\r\n                    type=\"radio\"\r\n                    name={fieldElement.name}\r\n                    value={elem.name}\r\n                    onChange={this.onChangeHandlerRadio(fieldElement.name)}\r\n                    readOnly={isReadonly}\r\n                    checked={elem.name === fieldValue || elem.name === calculatedValue}\r\n                  />{' '}\r\n                  {getFieldLabelText(elem, defaultLanguage)}\r\n                </Label>\r\n              </FormGroup>\r\n            ))}\r\n          </Form>\r\n          {isFormSubmitted && isError && (\r\n            <FontAwesomeIcon icon=\"exclamation-circle\" className=\"errorSign\" />\r\n          )}\r\n          {fieldElement.hint && <Label className=\"hintText\">{hintLabel}</Label>}\r\n          {isFormSubmitted && isRequiredViolated && (\r\n            <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n          )}\r\n          {isConstraintViolated && (\r\n            <Label className=\"constraintText\">{modifiedConstraintLabel}</Label>\r\n          )}\r\n        </div>\r\n      );\r\n    } else {\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n  /** sets the value of Radio Button field element in store\r\n   * @param {any} event - the onchange input event\r\n   * @param {any} fieldName - the input name\r\n   */\r\n  private onChangeHandlerRadio = (fieldName: any) => (event: any) => {\r\n    this.props.assignFieldValueActionCreator(\r\n      this.props.fieldParentTreeName + fieldName,\r\n      event.target.value || ''\r\n    );\r\n  };\r\n\r\n  /** converts apeearance text into array and pass them to further process\r\n   * @param {string} stringWithSearchKeyWord - the fieldElement children appearance text (partial)\r\n   */\r\n  private getProcessedString = (stringWithSearchKeyWord: string) => {\r\n    const processedStringArray = stringWithSearchKeyWord.match(\r\n      /\\([^\\)]+\\)/i\r\n    ) || [''];\r\n    let params = processedStringArray[0];\r\n\r\n    if (params.length > 2) {\r\n      params = params.substring(1, params.length - 1);\r\n      const resultArray = params.split(',');\r\n      let criteriaParams = [...resultArray];\r\n      criteriaParams = criteriaParams.splice(2, criteriaParams.length);\r\n      return this.extractAndFilterOptions(\r\n        resultArray[0],\r\n        resultArray[1] || null,\r\n        criteriaParams || []\r\n      );\r\n    }\r\n    return [];\r\n  };\r\n\r\n  /** generates unique radio button options using CSV\r\n   * @param {string} csvName - the CSV file name\r\n   * @param {string | null} criteriaType - criteria to match with previous user input\r\n   * @param {any} filterCriterias - previous user input collections\r\n   */\r\n  private extractAndFilterOptions = (\r\n    csvName: string,\r\n    criteriaType: string | null,\r\n    filterCriterias: any\r\n  ) => {\r\n    if (criteriaType) {\r\n      criteriaType = criteriaType.trim();\r\n      criteriaType = criteriaType.substring(1, criteriaType.length - 1).trim();\r\n    }\r\n\r\n    let options: any[] = [];\r\n    const distinctOptions: any[] = [];\r\n    const csv: any = this.props.csvList;\r\n    csvName = csvName.substring(1, csvName.length - 1) + '.csv';\r\n    if (csv[csvName]) {\r\n      const modifiedName = csvName.replace(/'/g, '');\r\n      options = this.props.csvList[modifiedName] || [];\r\n    }\r\n\r\n    if (criteriaType && criteriaType.trim() === 'matches') {\r\n      let i = 0;\r\n      while (i < filterCriterias.length) {\r\n        let nameOfKey = filterCriterias[i].trim();\r\n        nameOfKey = nameOfKey.substring(1, nameOfKey.length - 1).trim();\r\n        const interConnectedValue = filterCriterias[i + 1];\r\n        const tempOptions = [...options];\r\n        let filterResult: any = '';\r\n        tempOptions.forEach(elm => {\r\n          filterResult = this.props.getEvaluatedExpressionSelectorForSelect(\r\n            interConnectedValue,\r\n            this.props.fieldParentTreeName + this.props.fieldElement.name,\r\n            elm\r\n          );\r\n        });\r\n        options = options.filter(option => option[nameOfKey] === filterResult);\r\n        i = i + 2;\r\n      }\r\n    }\r\n    if (options.length !== 0) {\r\n      let labelColumnName: string = '';\r\n      let valueColumnName: string = '';\r\n      if (\r\n        this.props.fieldElement.children &&\r\n        this.props.fieldElement.children[0] &&\r\n        this.props.fieldElement.children[0].name &&\r\n        this.props.fieldElement.children[0].label\r\n      ) {\r\n        labelColumnName = getFieldLabelText(\r\n          this.props.fieldElement.children[0],\r\n          this.props.defaultLanguage\r\n        );\r\n        valueColumnName = this.props.fieldElement.children[0].name;\r\n      }\r\n      options.forEach(elem => {\r\n        const tmpOpt: any = {};\r\n        const label: string = 'label';\r\n        const name: string = 'name';\r\n        tmpOpt[label] = elem[labelColumnName].trim();\r\n        tmpOpt[name] = elem[valueColumnName].trim();\r\n        distinctOptions.push(tmpOpt);\r\n      });\r\n      return _.uniqBy(distinctOptions, 'name');\r\n    }\r\n    return [];\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: string;\r\n  getEvaluatedExpressionSelector: any;\r\n  getEvaluatedExpressionSelectorForSelect: any;\r\n  getFormSubmitStatusSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  optionList: object;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  defaultLanguage: string;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const getEvaluatedExpressionSelectorForSelect = (\r\n    expression: string,\r\n    fieldTreeName: string,\r\n    options: any\r\n  ) =>\r\n    getEvaluatedExpressionForSelect(state, expression, options, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const getFormSubmitStatusSelector = getFormSubmitStatus(state);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    getEvaluatedExpressionSelectorForSelect,\r\n    getFormSubmitStatusSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n    optionList: getOptionList(state, fieldParentTreeName + fieldElement.name),\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  assignOptionListActionCreator: assignOptionListAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect SelectOne Radio component to the redux store */\r\nconst ConnectedSelectOneRadio = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SelectOneRadio);\r\n\r\nexport default ConnectedSelectOneRadio;\r\n","import * as React from 'react';\r\nimport { shouldComponentBeMinimal } from '../../../../../src/utils/helpers';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport Dropdown from './Dropdown';\r\nimport Radio from './Radio';\r\n\r\n/** props interface for the SelectOne component */\r\nexport interface SelectOneProps {\r\n  choices: any;\r\n  csvList: any;\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  defaultLanguage: string;\r\n}\r\n\r\nclass SelectOne extends React.Component<SelectOneProps> {\r\n  public render() {\r\n    const { fieldElement } = this.props;\r\n    if (shouldComponentBeMinimal(fieldElement)) {\r\n      return <Dropdown {...this.props} />;\r\n    }\r\n    return <Radio {...this.props} />;\r\n  }\r\n}\r\n\r\nexport default SelectOne;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  getEvaluatedExpression,\r\n  getFieldValue,\r\n  getFormSubmitStatus,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeReadOnly,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../utils/helpers';\r\n\r\n/** props interface for the text component */\r\nexport interface TextProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: string;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: boolean;\r\n  isPresentInErrorSelector: any;\r\n  isComponentRender: boolean;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\n\r\nexport interface TextState {\r\n  fieldValue: string;\r\n  isFocused: boolean;\r\n}\r\n\r\nclass Text extends React.Component<TextProps, TextState> {\r\n  constructor(props: TextProps) {\r\n    super(props);\r\n    this.state = { fieldValue: '', isFocused: false };\r\n  }\r\n\r\n  public render() {\r\n    const {\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      getFormSubmitStatusSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isFormSubmitted: boolean = getFormSubmitStatusSelector;\r\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\r\n    const isConstraintViolated =\r\n      fieldValue &&\r\n      fieldValue !== '' &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const modifiedFieldLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      fieldLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n    const modifiedConstraintLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      constraintLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n\r\n    const hintLabel = getHintLabelText(fieldElement, defaultLanguage);\r\n\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n      const isReadonly = shouldComponentBeReadOnly(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      const isError = isPresentInErrorSelector(\r\n        fieldParentTreeName + fieldElement.name\r\n      );\r\n\r\n      if (fieldElement.bind && fieldElement.bind.calculate) {\r\n        let calculatedValue: any = '';\r\n        calculatedValue = this.props.getEvaluatedExpressionSelector(\r\n          fieldElement.bind.calculate,\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n\r\n        if (calculatedValue && calculatedValue !== fieldValue) {\r\n          this.props.assignFieldValueActionCreator(\r\n            fieldParentTreeName + fieldElement.name,\r\n            calculatedValue\r\n          );\r\n        }\r\n\r\n        return (\r\n          <FormGroup>\r\n            <Label>\r\n              {modifiedFieldLabel}{' '}\r\n              {isRequired && (\r\n                <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n              )}\r\n            </Label>\r\n            <Input\r\n              type=\"text\"\r\n              name={fieldElement.name}\r\n              onChange={this.onChangeHandler}\r\n              onBlur={this.onBlurHandler}\r\n              value={\r\n                this.state.isFocused\r\n                  ? this.state.fieldValue || ''\r\n                  : calculatedValue || ''\r\n              }\r\n              readOnly={isReadonly}\r\n            />\r\n            {isFormSubmitted && isError && (\r\n              <FontAwesomeIcon\r\n                icon=\"exclamation-circle\"\r\n                className=\"errorSign\"\r\n              />\r\n            )}\r\n            {fieldElement.hint && (\r\n              <Label className=\"hintText\">{hintLabel}</Label>\r\n            )}\r\n            {isFormSubmitted && isRequiredViolated && (\r\n              <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n            )}\r\n            {isConstraintViolated && (\r\n              <Label className=\"constraintText\">\r\n                {modifiedConstraintLabel}\r\n              </Label>\r\n            )}\r\n          </FormGroup>\r\n        );\r\n      } else {\r\n        return (\r\n          <FormGroup>\r\n            <Label>\r\n              {modifiedFieldLabel}{' '}\r\n              {isRequired && (\r\n                <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n              )}\r\n            </Label>\r\n            <Input\r\n              type=\"text\"\r\n              name={fieldElement.name}\r\n              onChange={this.onChangeHandler}\r\n              onBlur={this.onBlurHandler}\r\n              value={\r\n                this.state.isFocused\r\n                  ? this.state.fieldValue || ''\r\n                  : fieldValue || ''\r\n              }\r\n              readOnly={isReadonly}\r\n            />\r\n            {isFormSubmitted && isError && (\r\n              <FontAwesomeIcon\r\n                icon=\"exclamation-circle\"\r\n                className=\"errorSign\"\r\n              />\r\n            )}\r\n            {fieldElement.hint && (\r\n              <Label className=\"hintText\">{hintLabel}</Label>\r\n            )}\r\n            {isFormSubmitted && isRequiredViolated && (\r\n              <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n            )}\r\n            {isConstraintViolated && (\r\n              <Label className=\"constraintText\">\r\n                {modifiedConstraintLabel}\r\n              </Label>\r\n            )}\r\n          </FormGroup>\r\n        );\r\n      }\r\n    } else {\r\n      if (this.state.isFocused) {\r\n        this.setState({ ...this.state, isFocused: false });\r\n      }\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /** sets the value of field element in store\r\n   * @param {React.FormEvent<HTMLInputElement>} event - the onchange input event\r\n   */\r\n  private onChangeHandler = (event: React.FormEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      ...this.state,\r\n      fieldValue: event.currentTarget.value || '',\r\n      isFocused: true,\r\n    });\r\n  };\r\n\r\n  private onBlurHandler = (event: React.FormEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      ...this.state,\r\n      fieldValue: event.currentTarget.value || '',\r\n      isFocused: false,\r\n    });\r\n    this.props.assignFieldValueActionCreator(\r\n      this.props.fieldParentTreeName + event.currentTarget.name,\r\n      event.currentTarget.value || ''\r\n    );\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: string;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const getFormSubmitStatusSelector = getFormSubmitStatus(state);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    getFormSubmitStatusSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect Text component to the redux store */\r\nconst ConnectedText = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Text);\r\n\r\nexport default ConnectedText;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport {\r\n  FieldElement,\r\n  FieldParentTreeName,\r\n} from '../../../../components/typeEvalutors/Base';\r\nimport { REQUIRED_FIELD_MSG, REQUIRED_SYMBOL } from '../../../../constants';\r\nimport {\r\n  addErrorInputId,\r\n  assignFieldValueAction,\r\n  getEvaluatedExpression,\r\n  getFieldValue,\r\n  getFormSubmitStatus,\r\n  isPresentInError,\r\n  removeErrorInputId,\r\n} from '../../../../store/ducks/formState';\r\nimport {\r\n  customizeLabelsWithPreviousInputs,\r\n  getConstraintLabelText,\r\n  getFieldLabelText,\r\n  getHintLabelText,\r\n  isInputRequired,\r\n  shouldComponentBeReadOnly,\r\n  shouldComponentBeRelevant,\r\n  shouldInputViolatesConstraint,\r\n} from '../../../../utils/helpers';\r\n\r\n/** props interface for the KbTime component */\r\nexport interface TimeProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n  fieldValue: any;\r\n  assignFieldValueActionCreator: typeof assignFieldValueAction;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: boolean;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n  addErrorInputIdActionCreator: typeof addErrorInputId;\r\n  removeErrorInputIdActionCreator: typeof removeErrorInputId;\r\n  defaultLanguage: string;\r\n}\r\n\r\nclass KbTime extends React.Component<TimeProps> {\r\n  public render() {\r\n    const {\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      fieldValue,\r\n      isComponentRender,\r\n      getEvaluatedExpressionSelector,\r\n      getFormSubmitStatusSelector,\r\n      isPresentInErrorSelector,\r\n      defaultLanguage,\r\n    } = this.props;\r\n    const isRequired = isInputRequired(fieldElement);\r\n    const isFormSubmitted: boolean = getFormSubmitStatusSelector;\r\n    const isRequiredViolated = isRequired && (!fieldValue || fieldValue === '');\r\n    const isConstraintViolated =\r\n      fieldValue &&\r\n      fieldValue !== '' &&\r\n      shouldInputViolatesConstraint(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n    const fieldLabel = getFieldLabelText(fieldElement, defaultLanguage);\r\n    const modifiedFieldLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      fieldLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const constraintLabel = getConstraintLabelText(\r\n      fieldElement,\r\n      defaultLanguage\r\n    );\r\n    const modifiedConstraintLabel = customizeLabelsWithPreviousInputs(\r\n      getEvaluatedExpressionSelector,\r\n      constraintLabel,\r\n      fieldParentTreeName + fieldElement.name\r\n    );\r\n    const hintLabel = getHintLabelText(fieldElement, defaultLanguage);\r\n    if (isComponentRender) {\r\n      if (fieldValue == null && 'default' in fieldElement) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          fieldElement.default\r\n        );\r\n      }\r\n      const isReadonly = shouldComponentBeReadOnly(\r\n        fieldElement,\r\n        fieldParentTreeName,\r\n        getEvaluatedExpressionSelector\r\n      );\r\n      if (\r\n        (isRequiredViolated || isConstraintViolated) &&\r\n        !isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.addErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      } else if (\r\n        !isRequiredViolated &&\r\n        !isConstraintViolated &&\r\n        isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)\r\n      ) {\r\n        this.props.removeErrorInputIdActionCreator(\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      const isError = isPresentInErrorSelector(\r\n        fieldParentTreeName + fieldElement.name\r\n      );\r\n\r\n      let calculatedValue: any = '';\r\n      if (fieldElement.bind && fieldElement.bind.calculate) {\r\n        calculatedValue = this.props.getEvaluatedExpressionSelector(\r\n          fieldElement.bind.calculate,\r\n          fieldParentTreeName + fieldElement.name\r\n        );\r\n      }\r\n\r\n      if (calculatedValue && fieldValue !== calculatedValue) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          calculatedValue\r\n        );\r\n      }\r\n\r\n\r\n      return (\r\n        <FormGroup>\r\n          <Label>\r\n            {modifiedFieldLabel}{' '}\r\n            {isRequired && (\r\n              <span className=\"requiredTextSteric\">{REQUIRED_SYMBOL}</span>\r\n            )}\r\n          </Label>\r\n          <Input\r\n            type=\"time\"\r\n            name={fieldElement.name}\r\n            onChange={this.onChangeHandler}\r\n            value={fieldValue || calculatedValue || ''}\r\n            readOnly={isReadonly}\r\n          />\r\n          {isFormSubmitted && isError && (\r\n            <FontAwesomeIcon icon=\"exclamation-circle\" className=\"errorSign\" />\r\n          )}\r\n          {fieldElement.hint && <Label className=\"hintText\">{hintLabel}</Label>}\r\n          {isFormSubmitted && isRequiredViolated && (\r\n            <Label className=\"requiredText\">{REQUIRED_FIELD_MSG}</Label>\r\n          )}\r\n          {isConstraintViolated && (\r\n            <Label className=\"constraintText\">{modifiedConstraintLabel}</Label>\r\n          )}\r\n        </FormGroup>\r\n      );\r\n    } else {\r\n      if (fieldValue != null) {\r\n        this.props.assignFieldValueActionCreator(\r\n          fieldParentTreeName + fieldElement.name,\r\n          null\r\n        );\r\n        if (isPresentInErrorSelector(fieldParentTreeName + fieldElement.name)) {\r\n          this.props.removeErrorInputIdActionCreator(\r\n            fieldParentTreeName + fieldElement.name\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private onChangeHandler = (event: React.FormEvent<HTMLInputElement>) => {\r\n    this.props.assignFieldValueActionCreator(\r\n      this.props.fieldParentTreeName + event.currentTarget.name,\r\n      event.currentTarget.value !== '' ? event.currentTarget.value : null\r\n    );\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  fieldValue: any;\r\n  getEvaluatedExpressionSelector: any;\r\n  getFormSubmitStatusSelector: any;\r\n  isComponentRender: boolean;\r\n  isPresentInErrorSelector: any;\r\n}\r\n\r\n/** Interface to describe props from parent */\r\ninterface ParentProps {\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (\r\n  state: Partial<Store>,\r\n  parentProps: ParentProps\r\n): DispatchedStateProps => {\r\n  const { fieldElement, fieldParentTreeName } = parentProps;\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n  const isPresentInErrorSelector = (fieldTreeName: string) =>\r\n    isPresentInError(state, fieldTreeName);\r\n  const getFormSubmitStatusSelector = getFormSubmitStatus(state);\r\n  const result = {\r\n    fieldValue: getFieldValue(state, fieldParentTreeName + fieldElement.name),\r\n    getEvaluatedExpressionSelector,\r\n    getFormSubmitStatusSelector,\r\n    isComponentRender: shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      getEvaluatedExpressionSelector\r\n    ),\r\n    isPresentInErrorSelector,\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  addErrorInputIdActionCreator: addErrorInputId,\r\n  assignFieldValueActionCreator: assignFieldValueAction,\r\n  removeErrorInputIdActionCreator: removeErrorInputId,\r\n};\r\n\r\n/** connect KbTime component to the redux store */\r\nconst ConnectedTime = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(KbTime);\r\n\r\nexport default ConnectedTime;\r\n","import * as React from 'react';\r\nimport {\r\n  CALCULATE_FIELD_TYPE,\r\n  DATE_FIELD_TYPE,\r\n  DATE_TIME_FIELD_TYPE,\r\n  DECIMAL_FIELD_TYPE,\r\n  FILE_FIELD_TYPE,\r\n  INTEGER_FIELD_TYPE,\r\n  NOTE_FIELD_TYPE,\r\n  PHOTO_FIELD_TYPE,\r\n  SELECT_ALL_FIELD_TYPE,\r\n  SELECT_ONE_FIELD_TYPE,\r\n  TEXT_FIELD_TYPE,\r\n  TIME_FIELD_TYPE,\r\n} from '../../../constants';\r\nimport Calculate from '../../../containers/fields/base/Calculate';\r\nimport KbDate from '../../../containers/fields/base/Date';\r\nimport DateTime from '../../../containers/fields/base/Date Time';\r\nimport Decimal from '../../../containers/fields/base/Decimal';\r\nimport File from '../../../containers/fields/base/File';\r\nimport Integer from '../../../containers/fields/base/Integer';\r\nimport Note from '../../../containers/fields/base/Note';\r\nimport SelectAll from '../../../containers/fields/base/Select All';\r\nimport SelectOne from '../../../containers/fields/base/Select One';\r\nimport Text from '../../../containers/fields/base/Text';\r\nimport KbTime from '../../../containers/fields/base/Time';\r\n\r\n/** type of fieldParentTreeName */\r\nexport type FieldParentTreeName = string;\r\n\r\n/** interface for bind property */\r\ninterface BindProperty {\r\n  calculate?: string;\r\n  relevant?: string;\r\n  readonly?: string;\r\n  appearance?: string;\r\n  required?: string;\r\n  constraint?: string;\r\n  'jr:constraintMsg'?: { [key: string]: string } | string;\r\n}\r\n\r\n/** interface for kobo field element */\r\nexport interface FieldElement {\r\n  name: string;\r\n  type: string;\r\n  children?: any[];\r\n  bind?: BindProperty;\r\n  label?: { [key: string]: string } | string;\r\n  default?: any;\r\n  control?: any;\r\n  hint?: any;\r\n  itemset?: string;\r\n  choice_filter?: string;\r\n}\r\n\r\n/** props interface for BaseTypeEvaluator component */\r\nexport interface BaseTypeEvaluatorProps {\r\n  choices: any;\r\n  csvList: any;\r\n  defaultLanguage: string;\r\n  fieldElement: FieldElement;\r\n  fieldParentTreeName: FieldParentTreeName;\r\n}\r\n\r\nclass BaseTypeEvaluator extends React.Component<BaseTypeEvaluatorProps> {\r\n  public render() {\r\n    const {\r\n      choices,\r\n      csvList,\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      defaultLanguage,\r\n    } = this.props;\r\n    return this.typeEvaluator(\r\n      choices,\r\n      csvList,\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      defaultLanguage\r\n    );\r\n  }\r\n\r\n  /** returns jsx components based on field types\r\n   * @param {any} choices - the choices of form definition\r\n   * @param {FieldElement} fieldElement - the field element object\r\n   * @param {FieldParentTreeName} fieldParentTreeName - the field parent hierchical name\r\n   * @return {React.ReactElement} - jsx base components\r\n   */\r\n  private typeEvaluator(\r\n    choices: any,\r\n    csvList: any,\r\n    fieldElement: FieldElement,\r\n    fieldParentTreeName: FieldParentTreeName,\r\n    defaultLanguage: string\r\n  ): React.ReactElement {\r\n    switch (fieldElement.type) {\r\n      case TEXT_FIELD_TYPE:\r\n        return (\r\n          <Text\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n          />\r\n        );\r\n      case DATE_FIELD_TYPE:\r\n        return (\r\n          <KbDate\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n          />\r\n        );\r\n      case TIME_FIELD_TYPE:\r\n        return (\r\n          <KbTime\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n          />\r\n        );\r\n      case DATE_TIME_FIELD_TYPE:\r\n        return (\r\n          <DateTime\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n          />\r\n        );\r\n      case INTEGER_FIELD_TYPE:\r\n        return (\r\n          <Integer\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n          />\r\n        );\r\n      case DECIMAL_FIELD_TYPE:\r\n        return (\r\n          <Decimal\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n          />\r\n        );\r\n      case NOTE_FIELD_TYPE:\r\n        return (\r\n          <Note\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n          />\r\n        );\r\n      case CALCULATE_FIELD_TYPE:\r\n        return (\r\n          <Calculate\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n          />\r\n        );\r\n      case SELECT_ONE_FIELD_TYPE:\r\n        return (\r\n          <SelectOne\r\n            choices={choices}\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n            csvList={csvList}\r\n          />\r\n        );\r\n      case SELECT_ALL_FIELD_TYPE:\r\n        return (\r\n          <SelectAll\r\n            choices={choices}\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n            csvList={csvList}\r\n          />\r\n        );\r\n      case PHOTO_FIELD_TYPE:\r\n        return (\r\n          <File\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n          />\r\n        );\r\n      case FILE_FIELD_TYPE:\r\n        return (\r\n          <File\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <div style={{ display: 'none' }}>\r\n            Other {fieldElement.type} {fieldElement.name}\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nexport default BaseTypeEvaluator;\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport { CALCULATE_FIELD_TYPE, GROUP_FIELD_TYPE, REPEAT_FIELD_TYPE } from '../../../constants';\r\nimport Group from '../../../containers/fields/group/Group';\r\nimport Repeat from '../../../containers/fields/group/Repeat';\r\nimport { getEvaluatedExpression } from '../../../store/ducks/formState';\r\nimport { shouldComponentBeRelevant } from '../../../utils/helpers';\r\nimport BaseTypeEvaluator, { FieldElement, FieldParentTreeName } from '../Base';\r\n\r\n/** props Interface for the GroupTypeEvaluator component */\r\nexport interface GroupTypeEvaluatorProps {\r\n  choices: any;\r\n  csvList: any;\r\n  defaultLanguage: string;\r\n  fieldElements: FieldElement[];\r\n  fieldParentTreeName: string;\r\n  isAppearanceApplicable: boolean;\r\n  getEvaluatedExpressionSelector: any;\r\n}\r\n\r\nclass GroupTypeEvaluator extends React.Component<GroupTypeEvaluatorProps> {\r\n  public render() {\r\n    const {\r\n      choices,\r\n      csvList,\r\n      fieldElements,\r\n      fieldParentTreeName,\r\n      defaultLanguage,\r\n      isAppearanceApplicable,\r\n    } = this.props;\r\n    return (\r\n      <Row className=\"groupTypeEvaluatorRow\">\r\n        {fieldElements.map((fieldElement) => {\r\n          const value: number = this.getAppearanceValue(\r\n            fieldElement,\r\n            fieldParentTreeName,\r\n            isAppearanceApplicable,\r\n          );\r\n          return (\r\n            <Col\r\n              key={`group_${fieldElement.name}`}\r\n              className={ value === 0 || fieldElement.type === CALCULATE_FIELD_TYPE ? \"groupTypeEvaluator hideDiv\" : \"groupTypeEvaluator\"}\r\n              md={value}\r\n              // hidden={value === 0}\r\n            >\r\n              {this.typeEvaluator(\r\n                choices,\r\n                csvList,\r\n                fieldElement,\r\n                fieldParentTreeName,\r\n                defaultLanguage,\r\n              )}\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  /** returns jsx components based on field types\r\n   * @param {any} choices - the form choices\r\n   * @param {FieldElement} fieldElement - the field element object\r\n   * @param {FieldParentTreeName} - the field parent hierarchical name\r\n   * @return {React.ReactElement} - jsx group components/ base evaluator component\r\n   */\r\n  private typeEvaluator(\r\n    choices: any,\r\n    csvList: any,\r\n    fieldElement: FieldElement,\r\n    fieldParentTreeName: FieldParentTreeName,\r\n    defaultLanguage: string,\r\n  ): React.ReactElement {\r\n    switch (fieldElement.type) {\r\n      case GROUP_FIELD_TYPE:\r\n        return (\r\n          <div>\r\n            <Group\r\n              choices={choices}\r\n              fieldElement={fieldElement}\r\n              fieldParentTreeName={fieldParentTreeName}\r\n              defaultLanguage={defaultLanguage}\r\n              csvList={csvList}\r\n            />\r\n          </div>\r\n        );\r\n      case REPEAT_FIELD_TYPE:\r\n        return (\r\n          <div>\r\n            <Repeat\r\n              choices={choices}\r\n              fieldElement={fieldElement}\r\n              fieldParentTreeName={fieldParentTreeName}\r\n              defaultLanguage={defaultLanguage}\r\n              csvList={csvList}\r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return (\r\n          <BaseTypeEvaluator\r\n            choices={choices}\r\n            fieldElement={fieldElement}\r\n            fieldParentTreeName={fieldParentTreeName}\r\n            defaultLanguage={defaultLanguage}\r\n            csvList={csvList}\r\n          />\r\n        );\r\n    }\r\n  }\r\n\r\n  private getAppearanceValue = (\r\n    fieldElement: FieldElement,\r\n    fieldParentTreeName: string,\r\n    isAppearanceApplicable: boolean,\r\n  ): number => {\r\n    const isRender: boolean = shouldComponentBeRelevant(\r\n      fieldElement,\r\n      fieldParentTreeName,\r\n      this.props.getEvaluatedExpressionSelector,\r\n    );\r\n\r\n    if (!isRender) {\r\n      return 0;\r\n    } if (\r\n      isRender\r\n      && isAppearanceApplicable\r\n      && fieldElement.control\r\n      && fieldElement.control.appearance\r\n    ) {\r\n      if (/^w(\\d+)\\b/i.test(fieldElement.control.appearance)) {\r\n        const processedStringArray = fieldElement.control.appearance.match(\r\n          /^w(\\d+)\\b/i,\r\n        );\r\n        const processedString = processedStringArray[0].replace('w', '');\r\n        const result = isNaN(processedString)\r\n          ? 12\r\n          : parseInt(processedString, 10);\r\n        return result;\r\n      }\r\n    }\r\n    return 12;\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  getEvaluatedExpressionSelector: any;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (state: Partial<Store>): DispatchedStateProps => {\r\n  const getEvaluatedExpressionSelector = (\r\n    expression: string,\r\n    fieldTreeName: string,\r\n  ) => getEvaluatedExpression(state, expression, fieldTreeName);\r\n\r\n  const result = {\r\n    getEvaluatedExpressionSelector,\r\n  };\r\n  return result;\r\n};\r\n\r\n/** connect GroupTypeEvaluator component to the redux store */\r\nconst ConnectedGroupTypeEvaluator = connect(mapStateToProps)(\r\n  GroupTypeEvaluator,\r\n);\r\n\r\nexport default ConnectedGroupTypeEvaluator;\r\n","import { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faExclamationCircle,\r\n  faMinusCircle,\r\n  faPlusCircle,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Col, Container, Row } from 'reactstrap';\r\nimport { Store } from 'redux';\r\nimport KbAlert from '../components/Alert';\r\nimport DropDown from '../components/DropDown';\r\nimport GroupTypeEvaluator from '../components/typeEvalutors/Group';\r\nimport {\r\n  getAllFileObjects,\r\n  getCSVFromStore,\r\n  getUserInputFromStore,\r\n  isErrorsArrayEmpty,\r\n  resetStoreAction,\r\n  setCSVObj,\r\n  setFormSubmitStatus,\r\n  setUserInputObj,\r\n  setUserLanguage,\r\n} from '../store/ducks/formState';\r\n\r\nlibrary.add(faPlusCircle, faMinusCircle, faExclamationCircle);\r\n\r\nexport interface AppProps {\r\n  choices: any;\r\n  csvList: any;\r\n  csvObj: any;\r\n  isNoErrors: any;\r\n  userInputObj: any;\r\n  userInputJson: any;\r\n  defaultLanguage: string;\r\n  formTitle: string;\r\n  fieldElements: any;\r\n  setUserInputAction: typeof setUserInputObj;\r\n  setCSVAction: typeof setCSVObj;\r\n  setUserLanguageAction: typeof setUserLanguage;\r\n  languageOptions: any;\r\n  setFormSubmitStatusAction: typeof setFormSubmitStatus;\r\n  resetStoreActionCreator: typeof resetStoreAction;\r\n  mediaList: any;\r\n  handleSubmit(userInput: any, mediaList: any): any;\r\n}\r\n\r\nexport interface AppState {\r\n  defaultLanguage: string;\r\n  isSubmissionError: boolean;\r\n}\r\n\r\nclass App extends React.Component<AppProps, AppState> {\r\n  constructor(props: AppProps) {\r\n    super(props);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    const { userInputJson, userInputObj, csvList, csvObj } = this.props;\r\n    this.props.resetStoreActionCreator();\r\n    if (userInputJson && userInputJson !== userInputObj) {\r\n      this.props.setUserInputAction(userInputJson);\r\n    }\r\n    if (csvList && csvList !== csvObj) {\r\n      this.props.setCSVAction(csvList);\r\n    }\r\n    this.props.setUserLanguageAction(this.props.defaultLanguage);\r\n    this.setState({\r\n      defaultLanguage: this.props.defaultLanguage,\r\n      isSubmissionError: false,\r\n    });\r\n  }\r\n\r\n  public handleSelect = (languageName: string) => {\r\n    this.setState({ defaultLanguage: languageName });\r\n    this.props.setUserLanguageAction(this.props.defaultLanguage);\r\n  };\r\n\r\n  public render() {\r\n    const {\r\n      csvList,\r\n      fieldElements,\r\n      formTitle,\r\n      languageOptions,\r\n      choices,\r\n    } = this.props;\r\n    const { defaultLanguage } = this.state || this.props;\r\n\r\n    const props = {\r\n      choices,\r\n      csvList,\r\n      defaultLanguage,\r\n      fieldElements,\r\n      fieldParentTreeName: '',\r\n      isAppearanceApplicable: false,\r\n      languageOptions,\r\n    };\r\n\r\n    return (\r\n      <Container className=\"form-container\">\r\n        <Row className={'form-title formTitle'}>\r\n          <Col>\r\n            <h3 className=\"headerText\">{formTitle}</h3>\r\n          </Col>\r\n          <DropDown\r\n            languages={...languageOptions}\r\n            onChangeSelect={this.handleSelect}\r\n            defaultLanguage={defaultLanguage}\r\n          />\r\n        </Row>\r\n        {this.state && this.state.isSubmissionError && (\r\n          <KbAlert\r\n            color={'danger'}\r\n            isOpen={this.state.isSubmissionError}\r\n            handleToggle={this.toggleStateValue}\r\n            headerText={'Oh snap! You got an error!'}\r\n            bodyText={\r\n              'Please make sure the required fields are not missing and there are no errors'\r\n            }\r\n          />\r\n        )}\r\n        <Row>\r\n          <Col style={{ padding: 0}}>\r\n            <GroupTypeEvaluator {...props} />\r\n            <Row className=\"welcome-box\" style={{ padding: 10 }}>\r\n              <Col>\r\n                <Button className=\"btn btn-success\" onClick={this.handleClick}>\r\n                  Submit\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  private handleClick = (_event: React.MouseEvent<HTMLButtonElement>) => {\r\n    const { handleSubmit, isNoErrors, userInputObj, mediaList } = this.props;\r\n    if (isNoErrors) {\r\n      handleSubmit(userInputObj, mediaList);\r\n    } else {\r\n      handleSubmit('Field Violated', mediaList);\r\n      this.setState({ isSubmissionError: true });\r\n      this.props.setFormSubmitStatusAction(true);\r\n      window.scrollTo(0, 0);\r\n    }\r\n  };\r\n\r\n  private toggleStateValue = () => {\r\n    this.setState({ isSubmissionError: false });\r\n  };\r\n}\r\n\r\n/** connect the component to the store */\r\n\r\n/** Interface to describe props from mapStateToProps */\r\ninterface DispatchedStateProps {\r\n  isNoErrors: any;\r\n  userInputObj: any;\r\n  mediaList: any;\r\n  csvObj: any;\r\n}\r\n\r\n/** Map props to state  */\r\nconst mapStateToProps = (state: Partial<Store>): DispatchedStateProps => {\r\n  const result = {\r\n    isNoErrors: isErrorsArrayEmpty(state),\r\n    mediaList: getAllFileObjects(state),\r\n    userInputObj: getUserInputFromStore(state),\r\n    csvObj: getCSVFromStore(state),\r\n  };\r\n  return result;\r\n};\r\n\r\n/** map props to actions */\r\nconst mapDispatchToProps = {\r\n  resetStoreActionCreator: resetStoreAction,\r\n  setFormSubmitStatusAction: setFormSubmitStatus,\r\n  setUserInputAction: setUserInputObj,\r\n  setUserLanguageAction: setUserLanguage,\r\n  setCSVAction: setCSVObj,\r\n};\r\n\r\n/** connect Decimal component to the redux store */\r\nconst ConnectedApp = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n\r\nexport default ConnectedApp;\r\n","import { MuiThemeProvider } from '@material-ui/core';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { theme } from './utils/Theme';\r\nimport App from './App';\r\nimport store from './store';\r\n\r\nexport interface OdkFormRendererProps {\r\n  csvList: any;\r\n  defaultLanguage: string;\r\n  formDefinitionJson: any;\r\n  languageOptions: any;\r\n  userInputJson: any;\r\n  handleSubmit: (userInput: any, mediaList: any) => any;\r\n}\r\n\r\nclass OdkFormRenderer extends React.Component<OdkFormRendererProps> {\r\n  public render() {\r\n    const {\r\n      csvList,\r\n      defaultLanguage,\r\n      formDefinitionJson,\r\n      userInputJson,\r\n      languageOptions,\r\n      handleSubmit,\r\n    } = this.props;\r\n    const props = {\r\n      choices: formDefinitionJson.choices || {},\r\n      csvList,\r\n      defaultLanguage,\r\n      fieldElements: formDefinitionJson.children,\r\n      formTitle: formDefinitionJson.title,\r\n      handleSubmit,\r\n      languageOptions,\r\n      userInputJson,\r\n    };\r\n    return (\r\n      <Provider store={store}>\r\n        <MuiThemeProvider theme={theme}>\r\n          <App {...props} />\r\n        </MuiThemeProvider>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OdkFormRenderer;\r\n"],"names":["theme","createMuiTheme","palette","primary","main","dark","secondary","light","info","text","disabled","hint","typography","h1","fontWeight","fontSize","h2","h3","h4","body1","fontFamily","caption","subtitle1","subtitle2","overrides","MuiPaper","root","color","KbAlert","render","props","headerText","bodyText","handleToggle","isOpen","React","Alert","toggle","className","DropDown","event","onChangeSelect","value","options","languageOptions","languages","map","elem","push","label","selectedValue","defaultLanguage","Select","multi","placeholder","onChange","onChangeHandler","GROUP_FIELD_TYPE","REPEAT_FIELD_TYPE","TEXT_FIELD_TYPE","DATE_FIELD_TYPE","DATE_TIME_FIELD_TYPE","TIME_FIELD_TYPE","INTEGER_FIELD_TYPE","DECIMAL_FIELD_TYPE","PHOTO_FIELD_TYPE","FILE_FIELD_TYPE","NOTE_FIELD_TYPE","SELECT_ONE_FIELD_TYPE","SELECT_ALL_FIELD_TYPE","CALCULATE_FIELD_TYPE","REQUIRED_FIELD_MSG","REQUIRED_SYMBOL","store","createStore","reducer","composeWithDevTools","actualExpression","currentHierarchicalName","formItemProperty","userInput","tokenizeCharacter","type","input","current","tokenizeParenOpen","tokenizeBrakeOpen","tokenizeBrakeClose","tokenizeParenClose","tokenizeEqual","tokenizePlus","tokenizeMinus","tokenizeMultiply","tokenizeDivide","tokenizeLessThan","tokenizeGreaterThan","tokenizeNot","tokenizeComma","tokenizeDot","tokenizePattern","pattern","char","consumedChars","test","tokenizeString","matchQuote","undefined","TypeError","tokenizeFunction","tokenizeNumber","tokenizeDecimal","tokenizeVariable","tokenizeOr","tokenizeIf","tokenizeAnd","tokenizeDiv","tokenizeName","skipWhiteSpace","tokenizers","tokenizer","tokens","tokenized","forEach","tokenizerFn","token","length","kbSelected","funcName","params","_paramsTokens","_output","_current","tmp","Array","isArray","element","kbChoice","tmpHierchicalName","split","i","parent","state","getState","variableName","replace","optionList","key","name","language","kbPullData","csv","csvList","item","find","obj","kbToday","_params","d","Date","setHours","kbDecimalDateTime","time_dif","getTime","day_diff","Math","round","abs","kbDate","date","kbFormatDate","format","includes","day","moment","month","kbRound","toFixed","parseFloat","kbRegex","regex","RegExp","kbCountSelected","kbInt","parseInt","kbCoalesce","kbPosition","tmpName","sumValuesOverJsn","sum","jsnObj","kbSum","paramsTokens","sumValue","kbConcat","concatStr","kbSubstr","subStr","substring","outerScopedVariables","variableValue","tmpUserInput","nodeNames","variableNameFromKey","parseMostClosestScopedVariable","index","parseDot","path","getIn","parseLiterals","_tmpOutput","toLowerCase","parseFunction","possibleFunctions","arrayOfParams","arrayOfOriginalTokens","tmpQueue","tmpTokens","pop","tmpVal","parser","parsedFn","parsedVal","functionFn","parseIf","j","parseNot","output","terminatingTokens","indexOf","newOutput","parsed","possibleParsers","parseMinus","parseParen","consumedTokens","parserFn","parseAnd","parseOr","parseEqual","parseLessThan","flagLessThanOrEqual","getMonth","startOf","isSameOrBefore","isBefore","parseGreaterThan","flagGreaterThanOrEqual","parseDivide","possibleTokens","ct","precedentParsers","parseMultiply","preParsed","preOutput","preParseFn","parsePlus","Object","prototype","toString","call","isNaN","ceil","NaN","parsers","leftOutput","pos","console","log","evaluater","expression","tmpFormItemProperty","tmpCurrentHierarchicalName","getTextFromProperty","property","languageIdentifier","getFieldLabelText","fieldElement","getHintLabelText","customizeLabelsWithPreviousInputs","evaluator","labelText","fieldTreeName","placesOfCustomizationsRequiredList","match","tmpPlace","customizedName","matchList","getConstraintLabelText","bind","requiredEvaluator","isInputRequired","isRequired","required","shouldComponentBeRelevant","fieldParentTreeName","evaluateExpression","relevant","isRelevant","shouldComponentBeReadOnly","readonly","isReadOnly","shouldInputViolatesConstraint","constraint","isConstraintViolated","getModifiedUserInputObject","userInputObj","fieldValue","treeNodes","modifiedObj","getModifiedOptionListForRepeat","repeatIndex","filteredRepeatArray","optionListobj","entries","keyNameOptionListobj","keyValueOptionListobj","repeatIndexString","String","keyRepeat","keyNameRepeatObject","keyValueRepeatValue","getValueFromUserInputObj","shouldComponentBeMinimal","isMinimal","control","appearance","emptyGroupedValues","groupTreeName","keys","objKey","startsWith","checkGroupedValuesForEmpty","isEmpty","FIELD_VALUE_ASSIGNED","OPTION_LIST_ASSIGNED","MEDIA_LIST_ADDED","REMOVE_FROM_MEDIA_LIST","REMOVE_FROM_OPTION_LIST_REPEAT","RESET_STORE","ADD_ERROR_INPUT_ID","REMOVE_ERROR_INPUT_ID","EMPTY_GROUP_FIELDS","REMOVE_GROUP_FIELDS_FROM_ERRORS","SET_USER_INPUT_OBJ","SET_CSV_OBJ","SET_FORM_SUBMIT_STATUS","SET_LANGUAGE","assignFieldValueAction","assignOptionListAction","RemoveFromOptionList","addMediaListAction","mediaObject","resetStoreAction","addErrorInputId","removeErrorInputId","emptyGroupFields","removeGroupFieldsFromErrors","setUserInputObj","setCSVObj","csvObj","setUserLanguage","setFormSubmitStatus","isFormSubmitted","initialState","SeamlessImmutable","errors","mediaList","action","modifiedUserInputObj","asMutable","deep","stateM","modifiedUserInputObjList","newState","hasOwnProperty","modifiedOptionListRepeat","newStateForRepeat","modifiedMediaList","newMediaState","updateIn","arr","concat","filter","elm","mUserInputObj","mState","getFieldValue","getOptionList","getEvaluatedExpression","getEvaluatedExpressionForSelect","isPresentInError","isGroupFieldsEmpty","isErrorsIncludeGroupFields","isPresent","fTName","isErrorsArrayEmpty","getUserInputFromStore","getCSVFromStore","getFormSubmitStatus","getFileObject","fileName","fileObject","getAllFileObjects","GroupStyle","createStyles","borderTop","backgroundColor","backgroundProp","display","insideBackground","borderProp","boxShadow","marginTop","marginBottom","padding","toolbarIcon","alignItems","justifyContent","mixins","toolbar","drawerPaperClose","overflowX","transition","transitions","create","easing","sharp","duration","leavingScreen","width","spacing","breakpoints","up","background","paper","overflow","flexDirection","listItem","marginLeft","marginRight","borderRadius","listItemIcon","listItemActive","nested","paddingLeft","navlogo","margin","listParent","common","white","drawerClose","drawerOpen","overflowY","enteringScreen","Group","choices","isComponentRender","fieldLabel","isAppearanceApplicable","useTheme","useStyles","makeStyles","classNames","bodyless","Accordion","defaultExpanded","style","AccordionSummary","expandIcon","ExpandMoreIcon","Typography","AccordionDetails","FormGroup","children","GroupTypeEvaluator","fieldElements","isErrorsIncludeGroupFieldsSelector","removeGroupFieldsFromErrorsActionCreator","isGroupFieldsEmptySelector","emptyGroupFieldsActionCreator","mapStateToProps","parentProps","getEvaluatedExpressionSelector","result","mapDispatchToProps","ConnectedGroup","connect","SingleRepeat","_event","assignmentHandler","removeHandler","removeOptionHandler","newFieldValue","_elem","unControlFlag","onClick","handleChange","FontAwesomeIcon","icon","Component","ControlledRepeat","assignFieldValueActionCreator","removeOptionListFromActionCreator","Label","_elm","addAnotherRepeat","ConnectedControlledRepeat","UncontrolledRepeat","noOfJrCount","jrCount","res","removeFromError","_","size","assignOptionListActionCreator","iterate","slice","ConnectedUncontrolledRepeat","Repeat","Calculate","isPresentInErrorSelector","isRequiredViolated","isReadonly","addErrorInputIdActionCreator","removeErrorInputIdActionCreator","calculatedValue","calculate","Input","readOnly","ConnectedCalculate","KbDate","currentTarget","getFormSubmitStatusSelector","modifiedFieldLabel","constraintLabel","modifiedConstraintLabel","hintLabel","defaultValue","modifiedDate","toISOString","isError","ConnectedDate","DateTime","timeZoneOffset","getTimezoneOffset","getHours","DatePicker","selected","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","placeholderText","ConnectedDateTime","Decimal","setState","isFocused","modifiedValue","step","onBlur","onBlurHandler","ConnectedDecimal","FilePreview","fieldName","Button","ConnectedFilePreview","File","target","files","addMediaListActionCreator","accept","ConnectedFile","Integer","ConnectedInteger","Note","fieldHint","FormText","ConnectedNote","customStyles","styles","isDisabled","container","SelectAllDropDown","optionObject","tempObjArray","elemObj","isEqual","values","selectedValues","stringWithSearchKeyWord","processedStringArray","resultArray","criteriaParams","splice","extractAndFilterOptions","csvName","criteriaType","filterCriterias","trim","distinctOptions","finalRes","modifiedName","nameOfKey","interConnectedValue","tempOptions","filterResult","getEvaluatedExpressionSelectorForSelect","option","from","Set","labelColumnName","valueColumnName","tmpOpt","uniqBy","resultOptions","updatedFieldElement","getProcessedString","setOptionList","itemset","choice_filter","childrenLabel","optionsArray","tmpValueArray","isNotIncluded","optionsValueArray","row","seperatedValues","isMulti","ConnectedSelectAllDropDown","SelectAllRadio","checked","newValue","childrenArray","flagInline","tmpStyle","Form","check","inline","onChangeHandlerCheckBox","ConnectedSelectAllRadio","SelectAll","Dropdown","Radio","SelectOneDropDown","ConnectedSelectOneDropDown","SelectOneRadio","choiceOptions","onChangeHandlerRadio","ConnectedSelectOneRadio","SelectOne","Text","ConnectedText","KbTime","ConnectedTime","BaseTypeEvaluator","typeEvaluator","isRender","processedString","Row","getAppearanceValue","Col","md","ConnectedGroupTypeEvaluator","library","add","faPlusCircle","faMinusCircle","faExclamationCircle","App","languageName","setUserLanguageAction","handleSubmit","isNoErrors","isSubmissionError","setFormSubmitStatusAction","window","scrollTo","componentDidMount","userInputJson","resetStoreActionCreator","setUserInputAction","setCSVAction","formTitle","Container","handleSelect","toggleStateValue","handleClick","ConnectedApp","OdkFormRenderer","formDefinitionJson","title","Provider","MuiThemeProvider"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,IAAMA,KAAK;;AAAGC,cAAc,CAAC;EAClCC,OAAO,EAAE;IACPC,OAAO,EAAE;MACPC,IAAI,EAAE,SADC;MAEPC,IAAI,EAAE;KAHD;IAKPC,SAAS,EAAE;MACTF,IAAI,EAAE,SADG;MAETG,KAAK,EAAE,SAFE;MAGTF,IAAI,EAAE;KARD;;;;;;;;IAiBPG,IAAI,EAAE;MACJH,IAAI,EAAE,SADF;MAEJD,IAAI,EAAE,SAFF;MAGJG,KAAK,EAAE;KApBF;;;;IAyBPE,IAAI,EAAE;MACJN,OAAO,EAAE,SADL;MAEJG,SAAS,EAAE,SAFP;MAGJI,QAAQ,EAAE,qBAHN;MAIJC,IAAI,EAAE;;GA9BwB;EA6ClCC,UAAU,EAAE;IACVC,EAAE,EAAE;MACFC,UAAU,EAAE,GADV;;MAGFC,QAAQ,EAAE;KAJF;IAOVC,EAAE,EAAE;MACFF,UAAU,EAAE,GADV;MAEFC,QAAQ,EAAE;KATF;IAYVE,EAAE,EAAE;MACFH,UAAU,EAAE,GADV;MAEFC,QAAQ,EAAE;KAdF;IAkBVG,EAAE,EAAE;MACFJ,UAAU,EAAE,GADV;;MAGFC,QAAQ,EAAE;KArBF;IAuBVI,KAAK,EAAE;MACLC,UAAU,EAAE,QADP;MAELN,UAAU,EAAE,GAFP;;MAILC,QAAQ,EAAE;KA3BF;IA6BVM,OAAO,EAAE;MACPD,UAAU,EAAE,QADL;MAEPN,UAAU,EAAE,GAFL;;MAIPC,QAAQ,EAAE;KAjCF;IAmCVO,SAAS,EAAE;MACTF,UAAU,EAAE,QADH;MAETN,UAAU,EAAE,GAFH;;MAITC,QAAQ,EAAE;KAvCF;IAyCVQ,SAAS,EAAE;MACTH,UAAU,EAAE,QADH;MAETN,UAAU,EAAE,GAFH;;MAITC,QAAQ,EAAE;;GA1FoB;;EA8FlCS,SAAS,EAAE;IACTC,QAAQ,EAAE;MACRC,IAAI,EAAE;QACJC,KAAK,EAAE;;;;CAjGoB,CAA5B;;ICSDC;;;;;;;;;;;SACGC,SAAA;sBACyD,KAAKC;QAA3DC,yBAAAA;QAAYC,uBAAAA;QAAUC,2BAAAA;QAAcC,qBAAAA;QAAQP,oBAAAA;WAElDQ,aAAA,CAACC,KAAD;MAAOT,KAAK,EAAEA;MAAOO,MAAM,EAAEA;MAAQG,MAAM,EAAEJ;KAA7C,EACEE,aAAA,KAAA;MAAIG,SAAS,EAAC;KAAd,EAA+BP,UAA/B,CADF,EAEEI,aAAA,IAAA,MAAA,EAAIH,QAAJ,CAFF,CADF;;;;EAHkBG;;ICGhBI;;;;;;;;;;;;;yBA8BI,GAAkB,UAACC,KAAD;YACnBV,KAAL,CAAWW,cAAX,CAA0BD,KAAK,CAACE,KAAhC;KADM;;;;;;;SA7BDb,SAAA;;;QACCc,OAAO,GAAc,EAA3B;QACMC,eAAe,aAAO,KAAKd,KAAL,CAAWe,SAAlB,CAArB;IACAD,eAAe,CAACE,GAAhB,CAAoB,UAACC,IAAD;MAClBJ,OAAO,CAACK,IAAR,CAAa;QAAEC,KAAK,EAAEF,IAAI,CAACE,KAAd;QAAqBP,KAAK,EAAEK,IAAI,CAACL;OAA9C;KADF;QAIIQ,aAAJ;IACAP,OAAO,CAACG,GAAR,CAAY,UAAAC,IAAI;UACVA,IAAI,CAACL,KAAL,KAAe,MAAI,CAACZ,KAAL,CAAWqB,eAA9B,EAA+C;QAC7CD,aAAa,GAAGH,IAAhB;;KAFJ;WAOEZ,aAAA,CAACiB,MAAD;MACEC,KAAK,EAAE;MACPV,OAAO,EAAEA;MACTL,SAAS,EAAE;MACXgB,WAAW,EAAC;MACZC,QAAQ,EAAE,KAAKC;MACfd,KAAK,EAAEQ,aAAa,IAAI;KAN1B,CADF;;;;EAfmBf;;ACdvB;AACA,AAAO,IAAMsB,gBAAgB,GAAG,OAAzB;AAEP,AAAO,IAAMC,iBAAiB,GAAG,QAA1B;AAEP,AAAO,IAAMC,eAAe,GAAG,MAAxB;AAEP,AAAO,IAAMC,eAAe,GAAG,MAAxB;AAEP,AAAO,IAAMC,oBAAoB,GAAG,UAA7B;AAEP,AAAO,IAAMC,eAAe,GAAG,MAAxB;AAEP,AAAO,IAAMC,kBAAkB,GAAG,SAA3B;AAEP,AAAO,IAAMC,kBAAkB,GAAG,SAA3B;AAEP,AAAO,IAAMC,gBAAgB,GAAG,OAAzB;AAEP,AAAO,IAAMC,eAAe,GAAG,MAAxB;AAEP,AAAO,IAAMC,eAAe,GAAG,MAAxB;AAEP,AAAO,IAAMC,qBAAqB,GAAG,YAA9B;AAEP,AAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AAEP,AAAO,IAAMC,oBAAoB,GAAG,WAA7B;;AAIP,AAAO,IAAMC,kBAAkB,GAAG,wBAA3B;AAEP,AAAO,IAAMC,eAAe,GAAG,GAAxB;;AC7BP;;AACA,IAAMC,KAAK;;AAAsBC,WAAW,CAACC,OAAD;;AAAUC,mBAAmB,EAA7B,CAA5C;;ACLA;AACA,AAGA,IAAIC,gBAAJ;AACA,IAAIC,uBAAuB,GAAW,EAAtC;AACA,IAAIC,gBAAgB,GAAQ,EAA5B;AACA,IAAIC,SAAS,GAAQ,EAArB;;;;;;;;;;AAUA,SAASC,iBAAT,CAA2BC,IAA3B,EAAsCxC,KAAtC,EAAkDyC,KAAlD,EAA8DC,OAA9D;SACS1C,KAAK,KAAKyC,KAAK,CAACC,OAAD,CAAf,GAA2B,CAAC,CAAD,EAAI;IAAEF,IAAI,EAAJA,IAAF;IAAQxC,KAAK,EAALA;GAAZ,CAA3B,GAAkD,CAAC,CAAD,EAAI,IAAJ,CAAzD;;;;;;;;;;AASF,SAAS2C,iBAAT,CAA2BF,KAA3B,EAAuCC,OAAvC;SACSH,iBAAiB,CAAC,OAAD,EAAU,GAAV,EAAeE,KAAf,EAAsBC,OAAtB,CAAxB;;;;;;;;;;AASF,SAASE,iBAAT,CAA2BH,KAA3B,EAAuCC,OAAvC;SACSH,iBAAiB,CAAC,MAAD,EAAS,GAAT,EAAcE,KAAd,EAAqBC,OAArB,CAAxB;;;;;;;;;;AASF,SAASG,kBAAT,CAA4BJ,KAA5B,EAAwCC,OAAxC;SACSH,iBAAiB,CAAC,MAAD,EAAS,GAAT,EAAcE,KAAd,EAAqBC,OAArB,CAAxB;;;;;;;;;;AASF,SAASI,kBAAT,CAA4BL,KAA5B,EAAwCC,OAAxC;SACSH,iBAAiB,CAAC,OAAD,EAAU,GAAV,EAAeE,KAAf,EAAsBC,OAAtB,CAAxB;;;;;;;;;;AASF,SAASK,aAAT,CAAuBN,KAAvB,EAAmCC,OAAnC;SACSH,iBAAiB,CAAC,OAAD,EAAU,GAAV,EAAeE,KAAf,EAAsBC,OAAtB,CAAxB;;;;;;;;;;AASF,SAASM,YAAT,CAAsBP,KAAtB,EAAkCC,OAAlC;SACSH,iBAAiB,CAAC,MAAD,EAAS,GAAT,EAAcE,KAAd,EAAqBC,OAArB,CAAxB;;;;;;;;;;AASF,SAASO,aAAT,CAAuBR,KAAvB,EAAmCC,OAAnC;SACSH,iBAAiB,CAAC,OAAD,EAAU,GAAV,EAAeE,KAAf,EAAsBC,OAAtB,CAAxB;;;;;;;;;;AASF,SAASQ,gBAAT,CAA0BT,KAA1B,EAAsCC,OAAtC;SACSH,iBAAiB,CAAC,UAAD,EAAa,GAAb,EAAkBE,KAAlB,EAAyBC,OAAzB,CAAxB;;;;;;;;;;AASF,SAASS,cAAT,CAAwBV,KAAxB,EAAoCC,OAApC;SACSH,iBAAiB,CAAC,QAAD,EAAW,GAAX,EAAgBE,KAAhB,EAAuBC,OAAvB,CAAxB;;;;;;;;;;AASF,SAASU,gBAAT,CAA0BX,KAA1B,EAAsCC,OAAtC;SACSH,iBAAiB,CAAC,UAAD,EAAa,GAAb,EAAkBE,KAAlB,EAAyBC,OAAzB,CAAxB;;;;;;;;;;AASF,SAASW,mBAAT,CAA6BZ,KAA7B,EAAyCC,OAAzC;SACSH,iBAAiB,CAAC,aAAD,EAAgB,GAAhB,EAAqBE,KAArB,EAA4BC,OAA5B,CAAxB;;;;;;;;;;AASF,SAASY,WAAT,CAAqBb,KAArB,EAAiCC,OAAjC;MACMD,KAAK,CAACC,OAAD,CAAL,IAAkB,GAAtB,EAA2B;WAClBH,iBAAiB,CAAC,KAAD,EAAQ,GAAR,EAAaE,KAAb,EAAoBC,OAApB,CAAxB;GADF,MAEO,IAAID,KAAK,CAACC,OAAD,CAAL,IAAkB,GAAtB,EAA2B;QAE9BD,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,IACAD,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,IAAsB,GADtB,IAECD,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,IAAsBD,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,IAAsB,GAH/C,EAIE;UACMF,IAAI,GAAG,KAAb;UACMxC,KAAK,GAAG,GAAd;aACO,CAAC,CAAD,EAAI;QAAEwC,IAAI,EAAJA,IAAF;QAAQxC,KAAK,EAALA;OAAZ,CAAP;;;;SAGG,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;AASF,SAASuD,aAAT,CAAuBd,KAAvB,EAAmCC,OAAnC;SACSH,iBAAiB,CAAC,OAAD,EAAU,GAAV,EAAeE,KAAf,EAAsBC,OAAtB,CAAxB;;;;;;;;;;AASF,SAASc,WAAT,CAAqBf,KAArB,EAAiCC,OAAjC;SACSH,iBAAiB,CAAC,KAAD,EAAQ,GAAR,EAAaE,KAAb,EAAoBC,OAApB,CAAxB;;;;;;;;;;;;AAWF,SAASe,eAAT,CAAyBjB,IAAzB,EAAoCkB,OAApC,EAAkDjB,KAAlD,EAA8DC,OAA9D;MACMiB,KAAI,GAAGlB,KAAK,CAACC,OAAD,CAAhB;MACIkB,aAAa,GAAG,CAApB;;MACIF,OAAO,CAACG,IAAR,CAAaF,KAAb,CAAJ,EAAwB;QAClB3D,KAAK,GAAG,EAAZ;;WACO2D,KAAI,IAAID,OAAO,CAACG,IAAR,CAAaF,KAAb,CAAf,EAAmC;MACjC3D,KAAK,IAAI2D,KAAT;MACAC,aAAa,IAAI,CAAjB;MACAD,KAAI,GAAGlB,KAAK,CAACC,OAAO,GAAGkB,aAAX,CAAZ;;;WAEK,CAACA,aAAD,EAAgB;MAAEpB,IAAI,EAAJA,IAAF;MAAQxC,KAAK,EAALA;KAAxB,CAAP;;;SAEK,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;AASF,SAAS8D,cAAT,CAAwBrB,KAAxB,EAAoCC,OAApC;MACMD,KAAK,CAACC,OAAD,CAAL,KAAmB,GAAnB,IAA0BD,KAAK,CAACC,OAAD,CAAL,KAAmB,GAAjD,EAAsD;QAC9CqB,UAAU,GAAGtB,KAAK,CAACC,OAAD,CAAxB;QACI1C,KAAK,GAAG,EAAZ;QACI4D,aAAa,GAAG,CAApB;IACAA,aAAa,IAAI,CAAjB;QACID,MAAI,GAAGlB,KAAK,CAACC,OAAO,GAAGkB,aAAX,CAAhB;;WACOD,MAAI,KAAKI,UAAhB,EAA4B;UACtBJ,MAAI,KAAKK,SAAb,EAAwB;cAChB,IAAIC,SAAJ,CAAc,sBAAd,CAAN;;;MAEFjE,KAAK,IAAI2D,MAAT;MACAC,aAAa,IAAI,CAAjB;MACAD,MAAI,GAAGlB,KAAK,CAACC,OAAO,GAAGkB,aAAX,CAAZ;;;WAEK,CAACA,aAAa,GAAG,CAAjB,EAAoB;MAAEpB,IAAI,EAAE,QAAR;MAAkBxC,KAAK,EAALA;KAAtC,CAAP;;;SAEK,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;AASF,SAASkE,gBAAT,CAA0BzB,KAA1B,EAAsCC,OAAtC;MACM,UAAUmB,IAAV,CAAepB,KAAK,CAACC,OAAD,CAApB,CAAJ,EAAoC;QAC9B1C,KAAK,GAAG,EAAZ;QACI4D,aAAa,GAAG,CAApB,CAFkC;;QAI9BD,MAAI,GAAGlB,KAAK,CAACC,OAAO,GAAGkB,aAAX,CAAhB;;WACOD,MAAI,IAAI,eAAeE,IAAf,CAAoBF,MAApB,CAAf,EAA0C;UACpCA,MAAI,KAAKK,SAAb,EAAwB;cAChB,IAAIC,SAAJ,CAAc,sBAAd,CAAN;;;MAEFjE,KAAK,IAAI2D,MAAT;MACAC,aAAa,IAAI,CAAjB;MACAD,MAAI,GAAGlB,KAAK,CAACC,OAAO,GAAGkB,aAAX,CAAZ;;;WAEKD,MAAI,IAAI,KAAKE,IAAL,CAAUF,MAAV,CAAf,EAAgC;MAC9BC,aAAa,IAAI,CAAjB;MACAD,MAAI,GAAGlB,KAAK,CAACC,OAAO,GAAGkB,aAAX,CAAZ;;;QAEE5D,KAAK,IAAI,KAAb,EAAoB;aACX,CAAC,CAAD,EAAI,IAAJ,CAAP;;;QAEE2D,MAAI,IAAIA,MAAI,KAAK,GAArB,EAA0B;aACjB,CAACC,aAAD,EAAgB;QAAEpB,IAAI,EAAE,UAAR;QAAoBxC,KAAK,EAALA;OAApC,CAAP;;;;SAGG,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;AASF,SAASmE,cAAT,CAAwB1B,KAAxB,EAAoCC,OAApC;MACM,SAASmB,IAAT,CAAcpB,KAAK,CAACC,OAAD,CAAnB,CAAJ,EAAmC;QAC7B1C,KAAK,GAAG,EAAZ;QACI4D,aAAa,GAAG,CAApB,CAFiC;;QAI7BD,MAAI,GAAGlB,KAAK,CAACC,OAAO,GAAGkB,aAAX,CAAhB;;WACO,SAASC,IAAT,CAAcF,MAAd,CAAP,EAA4B;UACtBA,MAAI,KAAKK,SAAb,EAAwB;cAChB,IAAIC,SAAJ,CAAc,sBAAd,CAAN;;;MAEFjE,KAAK,IAAI2D,MAAT;MACAC,aAAa,IAAI,CAAjB;MACAD,MAAI,GAAGlB,KAAK,CAACC,OAAO,GAAGkB,aAAX,CAAZ;;;QAEED,MAAI,KAAK,GAAb,EAAkB;aACT,CAACC,aAAD,EAAgB;QAAEpB,IAAI,EAAE,QAAR;QAAkBxC,KAAK,EAALA;OAAlC,CAAP;;;;SAGG,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;AASF,SAASoE,eAAT,CAAyB3B,KAAzB,EAAqCC,OAArC;MACM,UAAUmB,IAAV,CAAepB,KAAK,CAACC,OAAD,CAApB,CAAJ,EAAoC;QAC9B1C,KAAK,GAAG,EAAZ;QACI4D,aAAa,GAAG,CAApB,CAFkC;;QAI9BD,MAAI,GAAGlB,KAAK,CAACC,OAAO,GAAGkB,aAAX,CAAhB;;WACO,SAASC,IAAT,CAAcF,MAAd,CAAP,EAA4B;UACtBA,MAAI,KAAKK,SAAb,EAAwB;cAChB,IAAIC,SAAJ,CAAc,sBAAd,CAAN;;;MAEFjE,KAAK,IAAI2D,MAAT;MACAC,aAAa,IAAI,CAAjB;MACAD,MAAI,GAAGlB,KAAK,CAACC,OAAO,GAAGkB,aAAX,CAAZ;;;QAEED,MAAI,KAAK,GAAb,EAAkB;MAChB3D,KAAK,IAAI2D,MAAT;MACAC,aAAa,IAAI,CAAjB;MACAD,MAAI,GAAGlB,KAAK,CAACC,OAAO,GAAGkB,aAAX,CAAZ;;UACI,SAASC,IAAT,CAAcF,MAAd,CAAJ,EAAyB;eAChB,SAASE,IAAT,CAAcF,MAAd,CAAP,EAA4B;cACtBA,MAAI,KAAKK,SAAb,EAAwB;kBAChB,IAAIC,SAAJ,CAAc,sBAAd,CAAN;;;UAEFjE,KAAK,IAAI2D,MAAT;UACAC,aAAa,IAAI,CAAjB;UACAD,MAAI,GAAGlB,KAAK,CAACC,OAAO,GAAGkB,aAAX,CAAZ;;;eAEK,CAACA,aAAD,EAAgB;UAAEpB,IAAI,EAAE,SAAR;UAAmBxC,KAAK,EAALA;SAAnC,CAAP;;;;;SAIC,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;AASF,SAASqE,gBAAT,CAA0B5B,KAA1B,EAAsCC,OAAtC;MACMD,KAAK,CAACC,OAAD,CAAL,KAAmB,GAAnB,IAA0BD,KAAK,CAACC,OAAD,CAAL,KAAmB,GAAjD,EAAsD;QAChDD,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,IAAsBD,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,KAAuB,GAAjD,EAAsD;UAChD1C,KAAK,GAAG,EAAZ;UACI4D,aAAa,GAAG,CAApB;MACAA,aAAa,IAAI,CAAjB;UACID,MAAI,GAAGlB,KAAK,CAACC,OAAO,GAAGkB,aAAX,CAAhB;;aACOD,MAAI,KAAK,GAAhB,EAAqB;YACfA,MAAI,KAAKK,SAAb,EAAwB;gBAChB,IAAIC,SAAJ,CAAc,sBAAd,CAAN;;;QAEFjE,KAAK,IAAI2D,MAAT;QACAC,aAAa,IAAI,CAAjB;QACAD,MAAI,GAAGlB,KAAK,CAACC,OAAO,GAAGkB,aAAX,CAAZ;;;aAEK,CAACA,aAAa,GAAG,CAAjB,EAAoB;QAAEpB,IAAI,EAAE,UAAR;QAAoBxC,KAAK,EAALA;OAAxC,CAAP;;;;SAGG,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;AASF,SAASsE,UAAT,CAAoB7B,KAApB,EAAgCC,OAAhC;MACMD,KAAK,CAACC,OAAD,CAAL,KAAmB,GAAvB,EAA4B;QACtBD,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,IAAsBD,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,KAAuB,GAAjD,EAAsD;UAElDD,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,KAAuBsB,SAAvB,IACA,UAAUH,IAAV,CAAepB,KAAK,CAACC,OAAO,GAAG,CAAX,CAApB,CAFF,EAGE;eACO,CAAC,CAAD,EAAI;UAAEF,IAAI,EAAE,IAAR;UAAcxC,KAAK,EAAE;SAAzB,CAAP;;;;;SAIC,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;AASF,SAASuE,UAAT,CAAoB9B,KAApB,EAAgCC,OAAhC;MACMD,KAAK,CAACC,OAAD,CAAL,KAAmB,GAAvB,EAA4B;QACtBD,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,IAAsBD,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,KAAuB,GAAjD,EAAsD;UAElDD,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,KAAuBsB,SAAvB,IACA,CAAC,SAASH,IAAT,CAAcpB,KAAK,CAACC,OAAO,GAAG,CAAX,CAAnB,CAFH,EAGE;eACO,CAAC,CAAD,EAAI;UAAEF,IAAI,EAAE,IAAR;UAAcxC,KAAK,EAAE;SAAzB,CAAP;;;;;SAIC,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;AASF,SAASwE,WAAT,CAAqB/B,KAArB,EAAiCC,OAAjC;MACMD,KAAK,CAACC,OAAD,CAAL,KAAmB,GAAvB,EAA4B;QACtBD,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,IAAsBD,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,KAAuB,GAAjD,EAAsD;UAChDD,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,IAAsBD,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,KAAuB,GAAjD,EAAsD;YAElDD,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,KAAuBsB,SAAvB,IACA,UAAUH,IAAV,CAAepB,KAAK,CAACC,OAAO,GAAG,CAAX,CAApB,CAFF,EAGE;iBACO,CAAC,CAAD,EAAI;YAAEF,IAAI,EAAE,KAAR;YAAexC,KAAK,EAAE;WAA1B,CAAP;;;;;;SAKD,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;AASF,SAASyE,WAAT,CAAqBhC,KAArB,EAAiCC,OAAjC;MACMD,KAAK,CAACC,OAAD,CAAL,KAAmB,GAAvB,EAA4B;QACtBD,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,IAAsBD,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,KAAuB,GAAjD,EAAsD;UAChDD,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,IAAsBD,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,KAAuB,GAAjD,EAAsD;YAElDD,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,KAAuBsB,SAAvB,IACA,UAAUH,IAAV,CAAepB,KAAK,CAACC,OAAO,GAAG,CAAX,CAApB,CAFF,EAGE;iBACO,CAAC,CAAD,EAAI;YAAEF,IAAI,EAAE,QAAR;YAAkBxC,KAAK,EAAE;WAA7B,CAAP;;;;;;SAKD,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;AASF,SAAS0E,YAAT,CAAsBjC,KAAtB,EAAkCC,OAAlC;SACSe,eAAe,CAAC,MAAD,EAAS,SAAT,EAAoBhB,KAApB,EAA2BC,OAA3B,CAAtB;;;;;;;;;;AASF,SAASiC,cAAT,CAAwBlC,KAAxB,EAAoCC,OAApC;SACS,KAAKmB,IAAL,CAAUpB,KAAK,CAACC,OAAD,CAAf,IAA4B,CAAC,CAAD,EAAI,IAAJ,CAA5B,GAAwC,CAAC,CAAD,EAAI,IAAJ,CAA/C;;;;;;;;AAOF,IAAMkC,UAAU,GAAG,CACjBD,cADiB,EAEjBhC,iBAFiB,EAGjBG,kBAHiB,EAIjByB,UAJiB,EAKjBD,UALiB,EAMjBE,WANiB,EAOjBH,gBAPiB,EAQjBP,cARiB,EASjBI,gBATiB,EAUjBnB,aAViB,EAWjBC,YAXiB,EAYjBC,aAZiB,EAajBC,gBAbiB,EAcjBC,cAdiB,EAejBsB,WAfiB,EAgBjBrB,gBAhBiB,EAiBjBC,mBAjBiB,EAkBjBC,WAlBiB,EAmBjBV,iBAnBiB,EAoBjBC,kBApBiB,EAqBjBW,WArBiB,EAsBjBD,aAtBiB,EAuBjBY,cAvBiB,EAwBjBC,eAxBiB,EAyBjBM,YAzBiB,CAAnB;;;;;;;;AAkCA,SAASG,SAAT,CAAmBpC,KAAnB;MACMC,OAAO,GAAW,CAAtB;MACMoC,MAAM,GAAQ,EAApB;;;QAEMC,SAAS,GAAG,KAAhB;IACAH,UAAU,CAACI,OAAX,CAAmB,UAAAC,WAAW;UACxBF,SAAJ,EAAe;;;;yBAGqBE,WAAW,CAACxC,KAAD,EAAQC,OAAR;UAAxCkB;UAAesB;;UAClBtB,aAAa,KAAK,CAAtB,EAAyB;QACvBmB,SAAS,GAAG,IAAZ;QACArC,OAAO,IAAIkB,aAAX;;;UAEEsB,KAAJ,EAAW;QACTJ,MAAM,CAACxE,IAAP,CAAY4E,KAAZ;;KAVJ;;QAaI,CAACH,SAAL,EAAgB;YACR,IAAId,SAAJ,0CACmCxB,KAAK,CAACC,OAAD,CADxC,CAAN;;;;SAhBGA,OAAO,GAAGD,KAAK,CAAC0C,MAAvB,EAA+B;;;;SAqBxBL,MAAP;;;;;;;;;;;;AAWF,SAASM,UAAT,CAAoBC,QAApB,EAAmCC,MAAnC,EAAgDC,aAAhD,EAAoEC,OAApE,EAAkFC,QAAlF;MACMJ,QAAQ,KAAK,UAAjB,EAA6B;QACvBK,GAAG,GAAG,KAAV;;QACIC,KAAK,CAACC,OAAN,CAAcN,MAAM,CAAC,CAAD,CAApB,CAAJ,EAA8B;MAC5BA,MAAM,CAAC,CAAD,CAAN,CAAUN,OAAV,CAAkB,UAACa,OAAD;;QAEhBH,GAAG,GAAGA,GAAG,IAAIG,OAAO,IAAIP,MAAM,CAAC,CAAD,CAA9B;OAFF;aAIO,CAAC,IAAD,EAAOI,GAAP,CAAP;KAPyB;;;WAUpB,CAAC,IAAD,EAAOJ,MAAM,CAAC,CAAD,CAAN,IAAaA,MAAM,CAAC,CAAD,CAA1B,CAAP;;;SAEK,CAAC,KAAD,EAAQ,IAAR,CAAP;;;;AAIF,SAASQ,QAAT,CAAkBT,QAAlB,EAAiCC,MAAjC,EAA8CC,aAA9C,EAAkEC,OAAlE,EAAgFC,QAAhF;MACMJ,QAAQ,KAAK,gBAAjB,EAAmC;QAC3BU,iBAAiB,GAAG3D,uBAAuB,CAAC4D,KAAxB,CAA8B,GAA9B,CAA1B;QACIC,CAAJ;QACIC,MAAM,GAAG,EAAb;;SACKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,iBAAiB,CAACZ,MAAlB,GAA2B,CAA3C,GAAgD;;UAE1CY,iBAAiB,CAACE,CAAD,CAAjB,IAAwB,QAA5B,EAAsC;QACpCA,CAAC,IAAI,CAAL;OADF,MAEO;;QAELC,MAAM,GAAGA,MAAM,GAAGH,iBAAiB,CAACE,CAAC,GAAG,CAAL,CAA1B,GAAoC,GAA7C;QACAA,CAAC,IAAI,CAAL;;;;QAGEE,KAAK,GAAGpE,KAAK,CAACqE,QAAN,EAAd;QACMC,YAAY,GAChBH,MAAM,GAAGZ,MAAM,CAACA,MAAM,CAACH,MAAP,GAAgB,CAAjB,CAAN,CAA0BmB,OAA1B,CAAkC,aAAlC,EAAiD,EAAjD,CADX;;QAEID,YAAY,IAAIF,KAAK,CAACI,UAA1B,EAAsC;WAC/B,IAAMC,GAAX,IAAkBL,KAAK,CAACI,UAAN,CAAiBF,YAAjB,CAAlB,EAAkD;YAC5CF,KAAK,CAACI,UAAN,CAAiBF,YAAjB,EAA+BG,GAA/B,EAAoCC,IAApC,KAA6CnB,MAAM,CAAC,CAAD,CAAvD,EAA4D;iBACnD,CACL,IADK,EAELa,KAAK,CAACI,UAAN,CAAiBF,YAAjB,EAA+BG,GAA/B,EAAoCjG,KAApC,CAA0C4F,KAAK,CAACO,QAAhD,CAFK,CAAP;;;;;;SAQD,CAAC,KAAD,EAAQ,IAAR,CAAP;;;;AAIF,SAASC,UAAT,CAAoBtB,QAApB,EAAmCC,MAAnC,EAAgDC,aAAhD,EAAoEC,OAApE,EAAkFC,QAAlF;MACMJ,QAAQ,KAAK,UAAjB,EAA6B;QACrBc,KAAK,GAAGpE,KAAK,CAACqE,QAAN,EAAd;QACMQ,GAAG,GAAGT,KAAK,CAACU,OAAN,CAAcvB,MAAM,CAAC,CAAD,CAAN,GAAY,MAA1B,CAAZ;;QACIA,MAAM,CAAC,CAAD,CAAV,EAAe;UACPwB,IAAI,GAAGF,GAAG,CAACG,IAAJ,CAAS,UAACC,GAAD;eAAcA,GAAG,CAAC1B,MAAM,CAAC,CAAD,CAAP,CAAH,IAAkBA,MAAM,CAAC,CAAD,CAAtC;OAAT,CAAb;;UACIwB,IAAI,IAAI9C,SAAR,IAAqB8C,IAAI,IAAI,IAAjC,EAAuC;eAC9B,CAAC,IAAD,EAAOA,IAAI,CAACxB,MAAM,CAAC,CAAD,CAAP,CAAX,CAAP;;;;;SAIC,CAAC,KAAD,EAAQ,IAAR,CAAP;;;;;;;;;;;;AAWF,SAAS2B,OAAT,CAAiB5B,QAAjB,EAAgC6B,OAAhC,EAA8C3B,aAA9C,EAAkEC,OAAlE,EAAgFC,QAAhF;;MAEMJ,QAAQ,IAAI,OAAhB,EAAyB;QACjB8B,CAAC,GAAG,IAAIC,IAAJ,EAAV;IACAD,CAAC,CAACE,QAAF,CAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;WACO,CAAC,IAAD,EAAOF,CAAP,CAAP;;;SAEK,CAAC,KAAD,EAAQ,IAAR,CAAP;;;;;;;;;;;;AAWF,SAASG,iBAAT,CAA2BjC,QAA3B,EAA0C6B,OAA1C,EAAwD3B,aAAxD,EAA4EC,OAA5E,EAA0FC,QAA1F;;MAEMJ,QAAQ,IAAI,mBAAhB,EAAqC;QAC/B6B,OAAO,CAAC,CAAD,CAAX,EAAgB;UACRK,QAAQ,GAAI,IAAIH,IAAJ,CAASF,OAAO,CAAC,CAAD,CAAhB,CAAD,CAAuBM,OAAvB,KAAoC,IAAIJ,IAAJ,CAAS,YAAT,CAAD,CAAyBI,OAAzB,EAApD;UACMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAAUL,QAAD,IAAc,OAAO,IAAP,GAAc,EAA5B,CAAT,CAAX,CAAjB;aACO,CAAC,IAAD,EAAOE,QAAP,CAAP;;;;SAGG,CAAC,KAAD,EAAQ,IAAR,CAAP;;;;;;;;;;;;AAWF,SAASI,MAAT,CAAgBxC,QAAhB,EAA+B6B,OAA/B,EAA6C3B,aAA7C,EAAiEC,OAAjE,EAA+EC,QAA/E;;MAEMJ,QAAQ,IAAI,MAAhB,EAAwB;QAClB6B,OAAO,CAAC,CAAD,CAAX,EAAgB;UACRY,IAAI,GAAI,IAAIV,IAAJ,CAAS,YAAT,CAAD,CAAyBI,OAAzB,KAAqCN,OAAO,CAAC,CAAD,CAAP,GAAW,EAAX,GAAc,EAAd,GAAiB,EAAjB,GAAoB,IAAtE;aACO,CAAC,IAAD,EAAO,IAAIE,IAAJ,CAASU,IAAT,CAAP,CAAP;;;;SAGG,CAAC,KAAD,EAAQ,IAAR,CAAP;;;;;;;;;;;;AAYF,SAASC,YAAT,CAAsB1C,QAAtB,EAAqC6B,OAArC,EAAmD3B,aAAnD,EAAuEC,OAAvE,EAAqFC,QAArF;;MAEMJ,QAAQ,IAAI,aAAhB,EAA+B;QACzB6B,OAAO,CAAC/B,MAAR,IAAkB,CAAtB,EAAyB;UACnB6C,MAAM,GAAG,YAAb;UACIF,IAAI,GAAG,IAAX;;UACIZ,OAAO,CAAC,CAAD,CAAP,CAAWe,QAAX,CAAoB,IAApB,CAAJ,EAA+B;YACvBC,GAAG,GAAGhB,OAAO,CAAC,CAAD,CAAP,CAAWZ,OAAX,CAAmB,IAAnB,EAAyB,KAAzB,CAAZ;;QACAwB,IAAI,GAAGZ,OAAO,CAAC,CAAD,CAAP,IAAc,IAAd,GAAqBiB,MAAM,CAACjB,OAAO,CAAC,CAAD,CAAR,CAAN,CAAmBc,MAAnB,MAA6BE,GAA7B,CAArB,GAA2D,IAAlE;OAFF,MAGO,IAAGhB,OAAO,CAAC,CAAD,CAAP,CAAWe,QAAX,CAAoB,GAApB,CAAH,EAA6B;QAClCD,MAAM,GAAGd,OAAO,CAAC,CAAD,CAAP,CAAWZ,OAAX,CAAmB,IAAnB,EAAyB,IAAzB,EAA+BA,OAA/B,CAAuC,IAAvC,EAA6C,IAA7C,EAAmDA,OAAnD,CAA2D,IAA3D,EAAiE,MAAjE,EAAyEA,OAAzE,CAAiF,IAAjF,EAAuF,IAAvF,CAAT;QACAwB,IAAI,GAAGZ,OAAO,CAAC,CAAD,CAAP,IAAc,IAAd,GAAqBiB,MAAM,CAACjB,OAAO,CAAC,CAAD,CAAR,CAAN,CAAmBc,MAAnB,CAA0BA,MAA1B,CAArB,GAAyD,IAAhE;OAFK,MAGA,IAAId,OAAO,CAAC,CAAD,CAAP,CAAWe,QAAX,CAAoB,GAApB,CAAJ,EAA8B;YAC7BG,KAAK,GAAGlB,OAAO,CAAC,CAAD,CAAP,CAAWZ,OAAX,CAAmB,IAAnB,EAAyB,KAAzB,CAAd;;QACAwB,IAAI,GAAGZ,OAAO,CAAC,CAAD,CAAP,IAAc,IAAd,GAAqBiB,MAAM,CAACjB,OAAO,CAAC,CAAD,CAAR,CAAN,CAAmBc,MAAnB,MAA6BI,KAA7B,CAArB,GAA6D,IAApE;;;aAEK,CAAC,IAAD,EAAON,IAAP,CAAP;;;;SAGG,CAAC,KAAD,EAAQ,IAAR,CAAP;;;;;;;;;;;;AAWF,SAASO,OAAT,CAAiBhD,QAAjB,EAAgCC,MAAhC,EAA6CC,aAA7C,EAAiEC,OAAjE,EAA+EC,QAA/E;;MAEMJ,QAAQ,IAAI,OAAhB,EAAyB;QACnBC,MAAM,CAAC,CAAD,CAAN,IAAaA,MAAM,CAAC,CAAD,CAAvB,EAA4B;UACtB,OAAOA,MAAM,CAAC,CAAD,CAAb,KAAqB,QAArB,IAAiC,OAAOA,MAAM,CAAC,CAAD,CAAb,KAAqB,QAA1D,EAAoE;eAC3D,CAAC,IAAD,EAAOA,MAAM,CAAC,CAAD,CAAN,CAAUgD,OAAV,CAAkBhD,MAAM,CAAC,CAAD,CAAxB,CAAP,CAAP;;;UAEE,OAAOA,MAAM,CAAC,CAAD,CAAb,KAAqB,QAArB,IAAiC,OAAOA,MAAM,CAAC,CAAD,CAAb,KAAqB,QAA1D,EAAoE;eAC3D,CAAC,IAAD,EAAOiD,UAAU,CAACjD,MAAM,CAAC,CAAD,CAAP,CAAV,CAAsBgD,OAAtB,CAA8BhD,MAAM,CAAC,CAAD,CAApC,CAAP,CAAP;;;;;SAIC,CAAC,KAAD,EAAQ,IAAR,CAAP;;;;;;;;;;;;AAWF,SAASkD,OAAT,CAAiBnD,QAAjB,EAAgCC,MAAhC,EAA6CC,aAA7C,EAAiEC,OAAjE,EAA+EC,QAA/E;;MAEMJ,QAAQ,IAAI,OAAhB,EAAyB;QACjBoD,KAAK,GAAGC,MAAM,CAACpD,MAAM,CAAC,CAAD,CAAP,CAApB;WACO,CAAC,IAAD,EAAOmD,KAAK,CAAC5E,IAAN,CAAWyB,MAAM,CAAC,CAAD,CAAjB,CAAP,CAAP;;;SAEK,CAAC,KAAD,EAAQ,IAAR,CAAP;;;;;;;;;;;;AAWF,SAASqD,eAAT,CAAyBtD,QAAzB,EAAwCC,MAAxC,EAAqDC,aAArD,EAAyEC,OAAzE,EAAuFC,QAAvF;;MAEMJ,QAAQ,IAAI,gBAAhB,EAAkC;QAC5BC,MAAM,CAAC,CAAD,CAAN,IAAaK,KAAK,CAACC,OAAN,CAAcN,MAAM,CAAC,CAAD,CAApB,CAAjB,EAA2C;aAClC,CAAC,IAAD,EAAOA,MAAM,CAAC,CAAD,CAAN,CAAUH,MAAjB,CAAP;;;QAEEG,MAAM,CAAC,CAAD,CAAN,IAAa,OAAOA,MAAM,CAAC,CAAD,CAAb,KAAqB,QAAtC,EAAgD;aACvC,CAAC,IAAD,EAAO,CAAP,CAAP;;;WAEK,CAAC,IAAD,EAAO,CAAP,CAAP;;;SAEK,CAAC,KAAD,EAAQ,IAAR,CAAP;;;;;;;;;;;;AAWF,SAASsD,KAAT,CAAevD,QAAf,EAA8BC,MAA9B,EAA2CC,aAA3C,EAA+DC,OAA/D,EAA6EC,QAA7E;;MAEMJ,QAAQ,IAAI,KAAhB,EAAuB;QACjB,OAAOC,MAAM,CAAC,CAAD,CAAb,KAAqB,QAAzB,EAAmC;aAC1B,CAAC,IAAD,EAAOuD,QAAQ,CAACvD,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAf,CAAP;;;;SAGG,CAAC,KAAD,EAAQ,IAAR,CAAP;;;;;;;;;;;;AAWF,SAASwD,UAAT,CAAoBzD,QAApB,EAAmCC,MAAnC,EAAgDC,aAAhD,EAAoEC,OAApE,EAAkFC,QAAlF;;MAEMJ,QAAQ,IAAI,UAAhB,EAA4B;QACtB,CAACC,MAAM,CAAC,CAAD,CAAP,IAAcA,MAAM,CAAC,CAAD,CAAN,KAAc,CAAhC,EAAmC;aAC1B,CAAC,IAAD,EAAOA,MAAM,CAAC,CAAD,CAAb,CAAP;;;WAEK,CAAC,IAAD,EAAOA,MAAM,CAAC,CAAD,CAAb,CAAP;;;SAEK,CAAC,KAAD,EAAQ,IAAR,CAAP;;;;;;;;;;;;AAWF,SAASyD,UAAT,CAAoB1D,QAApB,EAAmC6B,OAAnC,EAAiD3B,aAAjD,EAAqEC,OAArE,EAAmFC,QAAnF;;MAEMJ,QAAQ,IAAI,UAAhB,EAA4B;QACtBjD,uBAAJ,EAA6B;UACrB4G,OAAO,GAAG5G,uBAAuB,CAAC4D,KAAxB,CAA8B,GAA9B,CAAhB;;UACIgD,OAAO,CAAC7D,MAAR,GAAiB,CAArB,EAAwB;eACf,CAAC,IAAD,EAAO0D,QAAQ,CAACG,OAAO,CAACA,OAAO,CAAC7D,MAAR,GAAiB,CAAlB,CAAR,EAA8B,EAA9B,CAAR,GAA4C,CAAnD,CAAP;;;;;SAIC,CAAC,KAAD,EAAQ,IAAR,CAAP;;;;;;;;;;;AAUF,SAAS8D,gBAAT,CAA0BC,GAA1B,EAAoCC,MAApC,EAAiD9C,YAAjD;MACMV,KAAK,CAACC,OAAN,CAAcuD,MAAd,CAAJ,EAA2B;QACrBlD,CAAJ;;SACKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGkD,MAAM,CAAChE,MAAvB,EAA+Bc,CAAC,IAAI,CAApC,EAAuC;MACrCiD,GAAG,GAAGD,gBAAgB,CAACC,GAAD,EAAMC,MAAM,CAAClD,CAAD,CAAZ,EAAiBI,YAAjB,CAAtB;;GAHJ,MAKO,IAAI,OAAO8C,MAAP,KAAkB,QAAtB,EAAgC;SAChC,IAAM3C,GAAX,IAAkB2C,MAAlB,EAA0B;UACpB,OAAOA,MAAM,CAAC3C,GAAD,CAAb,KAAuB,QAA3B,EAAqC;QACnC0C,GAAG,GAAGD,gBAAgB,CAACC,GAAD,EAAMC,MAAM,CAAC3C,GAAD,CAAZ,EAAmBH,YAAnB,CAAtB;OADF,MAEO,IAAIG,GAAG,KAAKH,YAAZ,EAA0B;YAC3B,OAAO8C,MAAM,CAAC3C,GAAD,CAAb,KAAuB,QAA3B,EAAqC;UACnC0C,GAAG,IAAIX,UAAU,CAACY,MAAM,CAAC3C,GAAD,CAAP,CAAjB;;;YAEE,OAAO2C,MAAM,CAAC3C,GAAD,CAAb,KAAuB,QAA3B,EAAqC;UACnC0C,GAAG,IAAIC,MAAM,CAAC3C,GAAD,CAAb;;;;;;SAKD0C,GAAP;;;;;;;;;;;;AAWF,SAASE,KAAT,CAAe/D,QAAf,EAA8B6B,OAA9B,EAA4CmC,YAA5C;;MAEMhE,QAAQ,IAAI,KAAhB,EAAuB;QACjBiE,QAAQ,GAAG,IAAf;;QAEED,YAAY,IACZA,YAAY,CAAClE,MAAb,GAAsB,CADtB,IAEAkE,YAAY,CAAC,CAAD,CAFZ,IAGAA,YAAY,CAAC,CAAD,CAAZ,CAAgBlE,MAAhB,GAAyB,CAHzB,IAIAkE,YAAY,CAAC,CAAD,CAAZ,CAAgB,CAAhB,EAAmB7G,IAAnB,KAA4B,UAL9B,EAME;MACA8G,QAAQ,GAAGL,gBAAgB,CAAC,CAAD,EAAI3G,SAAJ,EAAe+G,YAAY,CAAC,CAAD,CAAZ,CAAgB,CAAhB,EAAmBrJ,KAAlC,CAA3B;;;WAEK,CAAC,IAAD,EAAOsJ,QAAP,CAAP;;;SAEK,CAAC,KAAD,EAAQ,IAAR,CAAP;;;;;;;;;;;;AAWF,SAASC,QAAT,CAAkBlE,QAAlB,EAAiCC,MAAjC,EAA8CC,aAA9C;;MAEMF,QAAQ,IAAI,QAAhB,EAA0B;QACpBC,MAAM,IAAIA,MAAM,CAACH,MAAP,GAAgB,CAA9B,EAAiC;UAC3BqE,SAAS,GAAG,EAAhB,CAD+B;;WAG1B,IAAIvD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,MAAM,CAACH,MAA3B,EAAmCc,CAAC,IAAI,CAAxC,EAA2C;YACrCX,MAAM,CAACW,CAAD,CAAN,IAAa,IAAjB,EAAuB;;;UAGrBuD,SAAS,IAAI,EAAb;SAHF,MAIO;UACLA,SAAS,IAAIlE,MAAM,CAACW,CAAD,CAAnB;;;;aAGG,CAAC,IAAD,EAAOuD,SAAP,CAAP;;;;SAGG,CAAC,KAAD,EAAQ,IAAR,CAAP;;;;;;;;;;;;AAWF,SAASC,QAAT,CAAkBpE,QAAlB,EAAiCC,MAAjC,EAA8CC,aAA9C;;MAEMF,QAAQ,IAAI,QAAhB,EAA0B;QACpBC,MAAM,IAAIA,MAAM,CAACH,MAAP,GAAgB,CAA9B,EAAiC;UAC3BG,MAAM,CAAC,CAAD,CAAN,IAAaA,MAAM,CAAC,CAAD,CAAN,KAAc,IAA/B,EAAqC;YAC/BA,MAAM,CAAC,CAAD,CAAN,KAAc,IAAd,IAAsBA,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAAC,CAAD,CAAN,CAAUH,MAAhD,EAAwD;cAChDuE,MAAM,GAAGpE,MAAM,CAAC,CAAD,CAAN,CAAUqE,SAAV,CAAoBrE,MAAM,CAAC,CAAD,CAA1B,EAA+BA,MAAM,CAAC,CAAD,CAArC,CAAf;iBACO,CAAC,IAAD,EAAOoE,MAAP,CAAP;;;eAEK,CAAC,IAAD,EAAOpE,MAAM,CAAC,CAAD,CAAN,CAAUqE,SAAV,CAAoBrE,MAAM,CAAC,CAAD,CAA1B,CAAP,CAAP;;;;;SAIC,CAAC,KAAD,EAAQ,IAAR,CAAP;;;;;;;;;;;AAUF,SAASsE,oBAAT,CACEvD,YADF,EAEEwD,aAFF,EAGEC,YAHF;;OAMO,IAAMtD,GAAX,IAAkBsD,YAAlB,EAAgC;QACxBC,SAAS,GAAGvD,GAAG,CAACR,KAAJ,CAAU,GAAV,CAAlB;QACMgE,mBAAmB,GAAGD,SAAS,CAACA,SAAS,CAAC5E,MAAV,GAAmB,CAApB,CAArC;;QACI6E,mBAAmB,KAAK3D,YAA5B,EAA0C;aACjCyD,YAAY,CAACtD,GAAD,CAAnB;;;QAEE,OAAOsD,YAAY,CAACtD,GAAD,CAAnB,KAA6B,QAAjC,EAA2C;UACrCqD,aAAa,IAAI,IAArB,EAA2B;QACzBA,aAAa,GAAGD,oBAAoB,CAClCvD,YADkC,EAElCwD,aAFkC,EAGlCC,YAAY,CAACtD,GAAD,CAHsB,CAApC;;;;;SAQCqD,aAAP;;;;;;;;;AAQF,SAASI,8BAAT,CAAwC5D,YAAxC;MACQN,iBAAiB,GAAG3D,uBAAuB,CAAC4D,KAAxB,CAA8B,GAA9B,CAA1B;MACIC,CAAJ;MACM6D,YAAY,GAAGxH,SAArB;MACIuH,aAAa,GAAG,IAApB;EACAA,aAAa,GAAGD,oBAAoB,CAClCvD,YADkC,EAElCwD,aAFkC,EAGlCC,YAHkC,CAApC;MAKI5D,MAAM,GAAG,EAAb;;OACKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,iBAAiB,CAACZ,MAAlB,GAA2B,CAA3C,GAAgD;;QAE1CY,iBAAiB,CAACE,CAAD,CAAjB,IAAwB,QAA5B,EAAsC;MACpCA,CAAC,IAAI,CAAL;UACMiE,KAAK,GAAGrB,QAAQ,CAAC9C,iBAAiB,CAACE,CAAC,GAAG,CAAL,CAAlB,EAA2B,EAA3B,CAAtB;MACA4D,aAAa,GAAGD,oBAAoB,CAClCvD,YADkC,EAElCwD,aAFkC,EAGlCC,YAAY,CAAC5D,MAAM,GAAGH,iBAAiB,CAACE,CAAD,CAA3B,CAAZ,CAA4CiE,KAA5C,CAHkC,CAApC;MAKAjE,CAAC,IAAI,CAAL;KARF,MASO;MACLC,MAAM,GAAGA,MAAM,GAAGH,iBAAiB,CAACE,CAAC,GAAG,CAAL,CAA1B,GAAoC,GAA7C;MACAA,CAAC,IAAI,CAAL;;;;SAGG4D,aAAP;;;;;;;;AAOF,SAASM,QAAT;MACQpE,iBAAiB,GAAG3D,uBAAuB,CAAC4D,KAAxB,CAA8B,GAA9B,CAA1B;MACIC,CAAJ;MACI6D,YAAY,GAAGxH,SAAnB;MACI4D,MAAM,GAAG,EAAb;MACMkE,IAAI,GAAG,EAAb;;OACKnE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,iBAAiB,CAACZ,MAAlB,GAA2B,CAA3C,GAAgD;;QAE1CY,iBAAiB,CAACE,CAAD,CAAjB,IAAwB,QAA5B,EAAsC;MACpCA,CAAC,IAAI,CAAL;MACAmE,IAAI,CAAC9J,IAAL,CAAU4F,MAAM,GAAGH,iBAAiB,CAACE,CAAD,CAApC;MACAmE,IAAI,CAAC9J,IAAL,CAAUuI,QAAQ,CAAC9C,iBAAiB,CAACE,CAAC,GAAG,CAAL,CAAlB,EAA2B,EAA3B,CAAlB;MACAC,MAAM,GAAGA,MAAM,GAAGH,iBAAiB,CAACE,CAAD,CAA1B,GAAgC,GAAzC;MACAA,CAAC,IAAI,CAAL;KALF,MAMO;;MAELC,MAAM,GAAGA,MAAM,GAAGH,iBAAiB,CAACE,CAAC,GAAG,CAAL,CAA1B,GAAoC,GAA7C;MACAA,CAAC,IAAI,CAAL;;;;EAGJmE,IAAI,CAAC9J,IAAL,CAAU4F,MAAM,GAAGH,iBAAiB,CAACA,iBAAiB,CAACZ,MAAlB,GAA2B,CAA5B,CAApC;EACA2E,YAAY,GAAGxH,SAAS,CAAC+H,KAAV,CAAgBD,IAAhB,CAAf;SACON,YAAP;;;;;;;;;;;;AAWF,SAASQ,aAAT,CAAuBC,UAAvB,EAAwCzF,MAAxC,EAAqDpC,OAArD;MACMoC,MAAM,CAACpC,OAAD,CAAN,CAAgBF,IAAhB,KAAyB,QAA7B,EAAuC;WAC9B,CAAC,CAAD,EAAIqG,QAAQ,CAAC/D,MAAM,CAACpC,OAAD,CAAN,CAAgB1C,KAAjB,EAAwB,EAAxB,CAAZ,CAAP;;;MAEE8E,MAAM,CAACpC,OAAD,CAAN,CAAgBF,IAAhB,KAAyB,QAA7B,EAAuC;WAC9B,CAAC,CAAD,EAAIsC,MAAM,CAACpC,OAAD,CAAN,CAAgB1C,KAApB,CAAP;;;MAEE8E,MAAM,CAACpC,OAAD,CAAN,CAAgBF,IAAhB,KAAyB,SAA7B,EAAwC;WAC/B,CAAC,CAAD,EAAI+F,UAAU,CAACzD,MAAM,CAACpC,OAAD,CAAN,CAAgB1C,KAAjB,CAAd,CAAP;;;MAEE8E,MAAM,CAACpC,OAAD,CAAN,CAAgBF,IAAhB,KAAyB,UAA7B,EAAyC;WAChC,CAAC,CAAD,EAAIyH,8BAA8B,CAACnF,MAAM,CAACpC,OAAD,CAAN,CAAgB1C,KAAjB,CAAlC,CAAP;;;MAEE8E,MAAM,CAACpC,OAAD,CAAN,CAAgBF,IAAhB,KAAyB,MAA7B,EAAqC;QAC/BsC,MAAM,CAACpC,OAAD,CAAN,CAAgB1C,KAAhB,CAAsBwK,WAAtB,OAAwC,MAA5C,EAAoD;aAC3C,CAAC,CAAD,EAAI,IAAJ,CAAP;;;QAEE1F,MAAM,CAACpC,OAAD,CAAN,CAAgB1C,KAAhB,CAAsBwK,WAAtB,OAAwC,OAA5C,EAAqD;aAC5C,CAAC,CAAD,EAAI,KAAJ,CAAP;;;QAEEnI,gBAAgB,IAAIyC,MAAM,CAACpC,OAAD,CAAN,CAAgB1C,KAAhB,IAAyBqC,gBAAjD,EAAmE;aAC1D,CAAC,CAAD,EAAIA,gBAAgB,CAACyC,MAAM,CAACpC,OAAD,CAAN,CAAgB1C,KAAjB,CAApB,CAAP;;;WAEK,CAAC,CAAD,EAAI,IAAJ,CAAP;;;MAEE8E,MAAM,CAACpC,OAAD,CAAN,CAAgBF,IAAhB,KAAyB,KAA7B,EAAoC;WAC3B,CAAC,CAAD,EAAI2H,QAAQ,EAAZ,CAAP;;;SAEK,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;;;AAWF,SAASM,aAAT,CAAuBjF,OAAvB,EAAqCV,MAArC,EAAkDpC,OAAlD;;MAEQgI,iBAAiB,GAAG,CACxBtF,UADwB,EAExBuD,eAFwB,EAGxB7C,QAHwB,EAIxBmB,OAJwB,EAKxBuB,OALwB,EAMxBI,KANwB,EAOxBE,UAPwB,EAQxBC,UARwB,EASxBK,KATwB,EAUxBG,QAVwB,EAWxBE,QAXwB,EAYxBpB,OAZwB,EAaxBN,YAbwB,EAcxBpB,UAdwB,EAexBW,iBAfwB,EAgBxBO,MAhBwB,CAA1B;;MAkBI/C,MAAM,CAACpC,OAAD,CAAN,CAAgBF,IAAhB,KAAyB,UAA7B,EAAyC;QACjC6C,QAAQ,GAAGP,MAAM,CAACpC,OAAD,CAAN,CAAgB1C,KAAjC;QACM2K,aAAa,GAAQ,EAA3B;QACMC,qBAAqB,GAAQ,EAAnC;QACI3E,CAAC,GAAG,CAAR;;QAEEnB,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAApB,KAA6B,OAA7B,IACAsC,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBjG,KAApB,KAA8B,GAFhC,EAGE;UACM6K,QAAQ,GAAG,EAAjB;MACAA,QAAQ,CAACvK,IAAT,CAAc,CAAd;MACA2F,CAAC,IAAI,CAAL;UACI6E,SAAS,GAAG,EAAhB;;aACOhG,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,IAAuB4E,QAAQ,CAAC1F,MAAvC,EAA+C;QAC7C2F,SAAS,CAACxK,IAAV,CAAewE,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAArB;;YAEEnB,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAApB,KAA6B,OAA7B,IACAsC,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBjG,KAApB,KAA8B,GAFhC,EAGE;UACA6K,QAAQ,CAACE,GAAT;;;YAGAjG,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAApB,KAA6B,OAA7B,IACAsC,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBjG,KAApB,KAA8B,GAFhC,EAGE;UACA6K,QAAQ,CAACvK,IAAT,CAAc,CAAd;;;YAEEwE,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAApB,KAA6B,OAA7B,IAAwCqI,QAAQ,CAAC1F,MAAT,KAAoB,CAAhE,EAAmE;UACjE2F,SAAS,CAACC,GAAV;cACMC,MAAM,GAAGC,MAAM,CAAC,IAAD,EAAOH,SAAP,EAAkB,CAAlB,CAArB;UACAH,aAAa,CAACrK,IAAd,CAAmB0K,MAAnB;UACAJ,qBAAqB,CAACtK,IAAtB,CAA2BwK,SAA3B;UACAA,SAAS,GAAG,EAAZ;;;QAEF7E,CAAC,IAAI,CAAL;;;MAEFA,CAAC,IAAI,CAAL;;UAGEnB,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAApB,KAA6B,OAA7B,IACAsC,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBjG,KAApB,KAA8B,GAFhC,EAGE;QACA8K,SAAS,CAACC,GAAV;;YACMC,OAAM,GAAGC,MAAM,CAAC,IAAD,EAAOH,SAAP,EAAkB,CAAlB,CAArB;;QACAH,aAAa,CAACrK,IAAd,CAAmB0K,OAAnB;QACAJ,qBAAqB,CAACtK,IAAtB,CAA2BwK,SAA3B;YACII,QAAQ,GAAG,KAAf;YACIC,SAAS,GAAG,IAAhB;QACAT,iBAAiB,CAAC1F,OAAlB,CAA0B,UAAAoG,UAAU;cAC9BF,QAAJ,EAAc;;;;4BAGUE,UAAU,CAChC/F,QADgC,EAEhCsF,aAFgC,EAGhCC,qBAHgC,EAIhCpF,OAJgC,EAKhC9C,OALgC;;UAAjCwI;UAAUC;SAJb;;YAYID,QAAJ,EAAc;iBACL,CAACjF,CAAC,GAAG,CAAL,EAAQkF,SAAR,CAAP;;;;;;SAKD,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;;;AAWF,SAASE,OAAT,CAAiB7F,OAAjB,EAA+BV,MAA/B,EAA4CpC,OAA5C;MACMoC,MAAM,CAACpC,OAAD,CAAN,CAAgBF,IAAhB,KAAyB,IAA7B,EAAmC;QAC3BmI,aAAa,GAAG,EAAtB;QACI1E,CAAC,GAAG,CAAR;;QAEEnB,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAApB,KAA6B,OAA7B,IACAsC,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBjG,KAApB,KAA8B,GAFhC,EAGE;UACM6K,QAAQ,GAAG,EAAjB;MACAA,QAAQ,CAACvK,IAAT,CAAc,CAAd;MACA2F,CAAC,IAAI,CAAL;UACI6E,SAAS,GAAG,EAAhB;;aACOhG,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,IAAuB4E,QAAQ,CAAC1F,MAAvC,EAA+C;QAC7C2F,SAAS,CAACxK,IAAV,CAAewE,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAArB;;YAEEnB,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAApB,KAA6B,OAA7B,IACAsC,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBjG,KAApB,KAA8B,GAFhC,EAGE;UACA6K,QAAQ,CAACE,GAAT;;;YAGAjG,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAApB,KAA6B,OAA7B,IACAsC,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBjG,KAApB,KAA8B,GAFhC,EAGE;UACA6K,QAAQ,CAACvK,IAAT,CAAc,CAAd;;;YAEEwE,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAApB,KAA6B,OAA7B,IAAwCqI,QAAQ,CAAC1F,MAAT,KAAoB,CAAhE,EAAmE;UACjE2F,SAAS,CAACC,GAAV;cACMC,MAAM,GAAGC,MAAM,CAAC,IAAD,EAAOH,SAAP,EAAkB,CAAlB,CAArB;UACAH,aAAa,CAACrK,IAAd,CAAmB0K,MAAnB;UACAF,SAAS,GAAG,EAAZ;;;QAEF7E,CAAC,IAAI,CAAL;;;MAEFA,CAAC,IAAI,CAAL;;UAGEnB,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAApB,KAA6B,OAA7B,IACAsC,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBjG,KAApB,KAA8B,GAFhC,EAGE;QACA8K,SAAS,CAACC,GAAV;;YACMC,QAAM,GAAGC,MAAM,CAAC,IAAD,EAAOH,SAAP,EAAkB,CAAlB,CAArB;;QACAH,aAAa,CAACrK,IAAd,CAAmB0K,QAAnB;;YACIL,aAAa,CAACxF,MAAd,GAAuB,CAAvB,KAA6B,CAAjC,EAAoC;cAC9BmG,CAAJ;;eACKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGX,aAAa,CAACxF,MAA9B,EAAsCmG,CAAC,IAAI,CAA3C,EAA8C;gBACxCX,aAAa,CAACW,CAAD,CAAjB,EAAsB;qBACb,CAACrF,CAAC,GAAG,CAAL,EAAQ0E,aAAa,CAACW,CAAC,GAAG,CAAL,CAArB,CAAP;;;SAJN,MAOO;cACDA,EAAJ;;eACKA,EAAC,GAAG,CAAT,EAAYA,EAAC,GAAGX,aAAa,CAACxF,MAAd,GAAuB,CAAvC,EAA0CmG,EAAC,IAAI,CAA/C,EAAkD;gBAC5CX,aAAa,CAACW,EAAD,CAAjB,EAAsB;qBACb,CAACrF,CAAC,GAAG,CAAL,EAAQ0E,aAAa,CAACW,EAAC,GAAG,CAAL,CAArB,CAAP;;;;iBAGG,CAACrF,CAAC,GAAG,CAAL,EAAQ0E,aAAa,CAACA,aAAa,CAACxF,MAAd,GAAuB,CAAxB,CAArB,CAAP;;;;;;SAKD,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;;AAUF,SAASoG,QAAT,CAAkBC,MAAlB,EAA+B1G,MAA/B,EAA4CpC,OAA5C;MACMoC,MAAM,CAACpC,OAAD,CAAN,CAAgBF,IAAhB,KAAyB,KAA7B,EAAoC;QAC9BsI,SAAJ;QACI7E,CAAC,GAAG,CAAR;;QACInB,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAApB,KAA6B,OAA7B,IAAwCgJ,MAAM,IAAI,IAAtD,EAA4D;MAC1DV,SAAS,GAAG,EAAZ;MACA7E,CAAC,IAAI,CAAL;UACMwF,iBAAiB,GAAG,CAAC,KAAD,EAAQ,IAAR,CAA1B;;aAEE3G,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,IACAwF,iBAAiB,CAACC,OAAlB,CAA0B5G,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAA9C,MAAwD,CAAC,CAF3D,EAGE;QACAsI,SAAS,CAACxK,IAAV,CAAewE,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAArB;QACAA,CAAC,IAAI,CAAL;;;UAEE0F,SAAJ;;UACIb,SAAS,CAAC3F,MAAd,EAAsB;QACpBwG,SAAS,GAAGV,MAAM,CAAC,IAAD,EAAOH,SAAP,EAAkB,CAAlB,CAAlB,CADoB;;eAGb,CAAC7E,CAAD,EAAIuF,MAAM,IAAIG,SAAd,CAAP;;KAfJ,MAiBO;UACDC,MAAM,GAAG,KAAb;UACMC,eAAe,GAAG,CACtBvB,aADsB,EAEtBwB,UAFsB,EAGtBC,UAHsB,EAItBtB,aAJsB,CAAxB;UAMIuB,cAAJ;;UACIL,UAAJ;;MACAE,eAAe,CAAC7G,OAAhB,CAAwB,UAAAiH,QAAQ;YAC1BL,MAAJ,EAAY;;;;YAGRK,QAAQ,KAAKH,UAAjB,EAA6B;0BACGG,QAAQ,CAAC,IAAD,EAAOnH,MAAP,EAAepC,OAAO,GAAG,CAAzB,CADX;;UAC1BsJ,cAD0B;UACVL,UADU;SAA7B,MAEO;2BACyBM,QAAQ,CAACT,MAAD,EAAS1G,MAAT,EAAiBpC,OAAO,GAAG,CAA3B,CADjC;;UACJsJ,cADI;UACYL,UADZ;;;YAGHK,cAAc,KAAK,CAAvB,EAA0B;UACxBJ,MAAM,GAAG,IAAT;UACA3F,CAAC,IAAI+F,cAAL;;OAXJ;;UAcIJ,MAAJ,EAAY;eACH,CAAC3F,CAAD,EAAI,CAAC0F,UAAL,CAAP;;;;;SAIC,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;;AAUF,SAASO,QAAT,CAAkBV,MAAlB,EAA+B1G,MAA/B,EAA4CpC,OAA5C;MACMoC,MAAM,CAACpC,OAAD,CAAN,CAAgBF,IAAhB,KAAyB,KAAzB,IAAkCgJ,MAAM,IAAI,IAAhD,EAAsD;QAC9CV,SAAS,GAAG,EAAlB;QACI7E,CAAC,GAAG,CAAR;QACI0F,SAAS,GAAG,IAAhB;;QAEE7G,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAApB,KAA6B,OAA7B,IACAsC,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBjG,KAApB,KAA8B,GAFhC,EAGE;UACI4D,aAAJ;;wBAC6BmI,UAAU,CAAC,IAAD,EAAOjH,MAAP,EAAepC,OAAO,GAAGuD,CAAzB,CAFvC;;MAECrC,aAFD;MAEgB+H,SAFhB;MAGA1F,CAAC,IAAIrC,aAAL;KANF,MAOO;UACC6H,iBAAiB,GAAG,CAAC,KAAD,EAAQ,IAAR,CAA1B;;aAEE3G,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,IACAwF,iBAAiB,CAACC,OAAlB,CAA0B5G,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAA9C,MAAwD,CAAC,CAF3D,EAGE;QACAsI,SAAS,CAACxK,IAAV,CAAewE,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAArB;QACAA,CAAC,IAAI,CAAL;;;UAEE6E,SAAS,CAAC3F,MAAd,EAAsB;QACpBwG,SAAS,GAAGV,MAAM,CAAC,IAAD,EAAOH,SAAP,EAAkB,CAAlB,CAAlB;;;;QAGAa,SAAS,IAAI,IAAjB,EAAuB;MACrBA,SAAS,GAAGH,MAAM,IAAIG,SAAtB;;UACI7G,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,IAAuBnB,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAApB,KAA6B,KAAxD,EAA+D;YACzDoB,cAAa,GAAG,CAApB;;wBAC6BsI,QAAQ,CAACP,SAAD,EAAY7G,MAAZ,EAAoBpC,OAAO,GAAGuD,CAA9B,CAFwB;;QAE5DrC,cAF4D;QAE7C+H,SAF6C;QAG7D1F,CAAC,IAAIrC,cAAL;;;aAEK,CAACqC,CAAD,EAAI0F,SAAJ,CAAP;;;;SAGG,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;;AAUF,SAASQ,OAAT,CAAiBX,MAAjB,EAA8B1G,MAA9B,EAA2CpC,OAA3C;MACMoC,MAAM,CAACpC,OAAD,CAAN,CAAgBF,IAAhB,KAAyB,IAAzB,IAAiCgJ,MAAM,IAAI,IAA/C,EAAqD;QAC7CV,SAAS,GAAG,EAAlB;QACI7E,CAAC,GAAG,CAAR;QACI0F,SAAS,GAAG,IAAhB;;QAEE7G,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAApB,KAA6B,OAA7B,IACAsC,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBjG,KAApB,KAA8B,GAFhC,EAGE;UACI4D,aAAJ;;yBAC6BmI,UAAU,CAAC,IAAD,EAAOjH,MAAP,EAAepC,OAAO,GAAGuD,CAAzB,CAFvC;;MAECrC,aAFD;MAEgB+H,SAFhB;MAGA1F,CAAC,IAAIrC,aAAL;KANF,MAOO;UACC6H,iBAAiB,GAAG,CAAC,KAAD,EAAQ,IAAR,CAA1B;;aAEE3G,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,IACAwF,iBAAiB,CAACC,OAAlB,CAA0B5G,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAA9C,MAAwD,CAAC,CAF3D,EAGE;QACAsI,SAAS,CAACxK,IAAV,CAAewE,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAArB;QACAA,CAAC,IAAI,CAAL;;;UAEE6E,SAAS,CAAC3F,MAAd,EAAsB;QACpBwG,SAAS,GAAGV,MAAM,CAAC,IAAD,EAAOH,SAAP,EAAkB,CAAlB,CAAlB;;;;QAGAa,SAAS,IAAI,IAAb,IAAqBH,MAAM,IAAI,IAAnC,EAAyC;UACnC1G,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,IAAuBnB,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAApB,KAA6B,KAAxD,EAA+D;YACzDoB,eAAa,GAAG,CAApB;;yBAC6BsI,QAAQ,CAACP,SAAD,EAAY7G,MAAZ,EAAoBpC,OAAO,GAAGuD,CAA9B,CAFwB;;QAE5DrC,eAF4D;QAE7C+H,SAF6C;QAG7D1F,CAAC,IAAIrC,eAAL;;;aAEK,CAACqC,CAAD,EAAIuF,MAAM,IAAIG,SAAd,CAAP;;;;SAGG,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;;AAUF,SAASS,UAAT,CAAoBZ,MAApB,EAAiC1G,MAAjC,EAA8CpC,OAA9C;MACMoC,MAAM,CAACpC,OAAD,CAAN,CAAgBF,IAAhB,KAAyB,OAAzB,IAAoCgJ,MAAM,IAAI,IAAlD,EAAwD;QAChDV,SAAS,GAAG,EAAlB;QACI7E,CAAC,GAAG,CAAR;QACMwF,iBAAiB,GAAG,CAAC,KAAD,EAAQ,IAAR,CAA1B;;WAEE3G,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,IACAwF,iBAAiB,CAACC,OAAlB,CAA0B5G,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAA9C,MAAwD,CAAC,CAF3D,EAGE;MACAsI,SAAS,CAACxK,IAAV,CAAewE,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAArB;MACAA,CAAC,IAAI,CAAL;;;QAEE0F,SAAJ;;QACIb,SAAS,CAAC3F,MAAd,EAAsB;MACpBwG,SAAS,GAAGV,MAAM,CAAC,IAAD,EAAOH,SAAP,EAAkB,CAAlB,CAAlB,CADoB;;aAGb,CAAC7E,CAAD,EAAIuF,MAAM,IAAIG,SAAd,CAAP;;;;SAGG,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;;AAUF,SAASU,aAAT,CAAuBb,MAAvB,EAAoC1G,MAApC,EAAiDpC,OAAjD;MACMoC,MAAM,CAACpC,OAAD,CAAN,CAAgBF,IAAhB,KAAyB,UAAzB,IAAuCgJ,MAAM,IAAI,IAArD,EAA2D;QACrDc,mBAAmB,GAAG,KAA1B;QACMxB,SAAS,GAAG,EAAlB;QACI7E,CAAC,GAAG,CAAR;;QACInB,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAApB,KAA6B,OAAjC,EAA0C;MACxCyD,CAAC,IAAI,CAAL;MACAqG,mBAAmB,GAAG,IAAtB;;;QAEIb,iBAAiB,GAAG,CAAC,KAAD,EAAQ,IAAR,CAA1B;;WAEE3G,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,IACAwF,iBAAiB,CAACC,OAAlB,CAA0B5G,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAA9C,MAAwD,CAAC,CAF3D,EAGE;MACAsI,SAAS,CAACxK,IAAV,CAAewE,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAArB;MACAA,CAAC,IAAI,CAAL;;;QAEE0F,SAAJ;;QACIb,SAAS,CAAC3F,MAAd,EAAsB;MACpBwG,SAAS,GAAGV,MAAM,CAAC,IAAD,EAAOH,SAAP,EAAkB,CAAlB,CAAlB;;UACIwB,mBAAJ,EAAyB;YACnB,OAAOX,SAAS,CAACY,QAAjB,KAA8B,UAAlC,EAA8C;iBACrC,CAACtG,CAAD,EAAIkC,MAAM,CAACqD,MAAD,CAAN,CAAegB,OAAf,CAAuB,KAAvB,EAA8BC,cAA9B,CAA6CtE,MAAM,CAACwD,SAAD,CAAN,CAAkBa,OAAlB,CAA0B,KAA1B,CAA7C,CAAJ,CAAP;;;eAEK,CAACvG,CAAD,EAAIuF,MAAM,IAAIG,SAAd,CAAP;;;UAEE,OAAOA,SAAS,CAACY,QAAjB,KAA8B,UAAlC,EAA8C;eACrC,CAACtG,CAAD,EAAIkC,MAAM,CAACqD,MAAD,CAAN,CAAegB,OAAf,CAAuB,KAAvB,EAA8BE,QAA9B,CAAuCvE,MAAM,CAACwD,SAAD,CAAN,CAAkBa,OAAlB,CAA0B,KAA1B,CAAvC,CAAJ,CAAP;;;aAEK,CAACvG,CAAD,EAAIuF,MAAM,GAAGG,SAAb,CAAP;;;;SAGG,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;;AAUF,SAASgB,gBAAT,CAA0BnB,MAA1B,EAAuC1G,MAAvC,EAAoDpC,OAApD;MACMoC,MAAM,CAACpC,OAAD,CAAN,CAAgBF,IAAhB,KAAyB,aAAzB,IAA0CgJ,MAAM,IAAI,IAAxD,EAA8D;QACxDoB,sBAAsB,GAAG,KAA7B;QACM9B,SAAS,GAAG,EAAlB;QACI7E,CAAC,GAAG,CAAR;;QACInB,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAApB,KAA6B,OAAjC,EAA0C;MACxCyD,CAAC,IAAI,CAAL;MACA2G,sBAAsB,GAAG,IAAzB;;;QAEInB,iBAAiB,GAAG,CAAC,KAAD,EAAQ,IAAR,CAA1B;;WAEE3G,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,IACAwF,iBAAiB,CAACC,OAAlB,CAA0B5G,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAA9C,MAAwD,CAAC,CAF3D,EAGE;MACAsI,SAAS,CAACxK,IAAV,CAAewE,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAArB;MACAA,CAAC,IAAI,CAAL;;;QAEE0F,SAAJ;;QACIb,SAAS,CAAC3F,MAAd,EAAsB;MACpBwG,SAAS,GAAGV,MAAM,CAAC,IAAD,EAAOH,SAAP,EAAkB,CAAlB,CAAlB;;UAEI8B,sBAAJ,EAA4B;eACnB,CAAC3G,CAAD,EAAIuF,MAAM,IAAIG,SAAd,CAAP;;;aAEK,CAAC1F,CAAD,EAAIuF,MAAM,GAAGG,SAAb,CAAP;;;;SAGG,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;;;AAWF,SAASI,UAAT,CAAoBvG,OAApB,EAAkCV,MAAlC,EAA+CpC,OAA/C;MACMoC,MAAM,CAACpC,OAAD,CAAN,CAAgBF,IAAhB,KAAyB,OAAzB,IAAoCsC,MAAM,CAACpC,OAAD,CAAN,CAAgB1C,KAAhB,KAA0B,GAAlE,EAAuE;QAC/D6K,QAAQ,GAAG,EAAjB;IACAA,QAAQ,CAACvK,IAAT,CAAc,CAAd;QACI2F,CAAC,GAAG,CAAR;QACM6E,SAAS,GAAG,EAAlB;;WACOhG,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,IAAuB4E,QAAQ,CAAC1F,MAAvC,EAA+C;MAC7C2F,SAAS,CAACxK,IAAV,CAAewE,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAArB;;UAEEnB,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAApB,KAA6B,OAA7B,IACAsC,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBjG,KAApB,KAA8B,GAFhC,EAGE;QACA6K,QAAQ,CAACE,GAAT;;;UAGAjG,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAApB,KAA6B,OAA7B,IACAsC,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBjG,KAApB,KAA8B,GAFhC,EAGE;QACA6K,QAAQ,CAACvK,IAAT,CAAc,CAAd;;;MAEF2F,CAAC,IAAI,CAAL;;;IAEFA,CAAC,IAAI,CAAL;;QAGEnB,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBzD,IAApB,KAA6B,OAA7B,IACAsC,MAAM,CAACpC,OAAO,GAAGuD,CAAX,CAAN,CAAoBjG,KAApB,KAA8B,GAFhC,EAGE;MACA8K,SAAS,CAACC,GAAV;UACMC,MAAM,GAAGC,MAAM,CAAC,IAAD,EAAOH,SAAP,EAAkB,CAAlB,CAArB;aACO,CAAC7E,CAAC,GAAG,CAAL,EAAQ+E,MAAR,CAAP;;;;SAGG,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;;AAUF,SAAS6B,WAAT,CAAqBrB,MAArB,EAAkC1G,MAAlC,EAA+CpC,OAA/C;MACM8I,MAAM,IAAI,IAAV,IAAkB1G,MAAM,CAACpC,OAAD,CAAN,CAAgBF,IAAhB,KAAyB,QAA/C,EAAyD;QACjDsK,cAAc,GAAG,CACrB,QADqB,EAErB,SAFqB,EAGrB,OAHqB,EAIrB,OAJqB,EAKrB,UALqB,EAMrB,UANqB,CAAvB;;QASEpK,OAAO,GAAGoC,MAAM,CAACK,MAAjB,IACA2H,cAAc,CAACpB,OAAf,CAAuB5G,MAAM,CAACpC,OAAO,GAAG,CAAX,CAAN,CAAoBF,IAA3C,MAAqD,CAAC,CAFxD,EAGE;UACIoJ,MAAM,GAAG,KAAb;UACImB,EAAE,GAAQ,IAAd;UACMlB,eAAe,GAAG,CACtBvB,aADsB,EAEtBwB,UAFsB,EAGtBC,UAHsB,EAItBtB,aAJsB,CAAxB;MAMAoB,eAAe,CAAC7G,OAAhB,CAAwB,UAAAiH,QAAQ;YAC1BL,MAAJ,EAAY;;;;YAGRI,cAAJ;YACIL,SAAJ;;YACIM,QAAQ,KAAKH,UAAjB,EAA6B;2BACGG,QAAQ,CAAC,IAAD,EAAOnH,MAAP,EAAepC,OAAO,GAAG,CAAzB,CADX;;UAC1BsJ,cAD0B;UACVL,SADU;SAA7B,MAEO;2BACyBM,QAAQ,CAACT,MAAD,EAAS1G,MAAT,EAAiBpC,OAAO,GAAG,CAA3B,CADjC;;UACJsJ,cADI;UACYL,SADZ;;;YAGHK,cAAc,KAAK,CAAvB,EAA0B;UACxBJ,MAAM,GAAG,IAAT;UACAI,cAAc,IAAI,CAAlB;UACAtJ,OAAO,IAAIsJ,cAAX;UACAe,EAAE,GAAGf,cAAL;;;YAEIgB,gBAAgB,GAAG,CAACH,WAAD,EAAcI,aAAd,CAAzB;YACIC,SAAS,GAAG,KAAhB;YACIC,SAAJ;QACAH,gBAAgB,CAAChI,OAAjB,CAAyB,UAAAoI,UAAU;cAC7BF,SAAJ,EAAe;;;;cAGXpI,MAAM,CAACpC,OAAD,CAAV,EAAqB;8BACW0K,UAAU,CACtCzB,SADsC,EAEtC7G,MAFsC,EAGtCpC,OAHsC,CADrB;;YAClBsJ,cADkB;YACFmB,SADE;YAMnBJ,EAAE,IAAIf,cAAN;;gBACIA,cAAc,KAAK,CAAvB,EAA0B;cACxBkB,SAAS,GAAG,IAAZ;cACAvB,SAAS,GAAGwB,SAAZ;;;SAbN;;YAkBIxB,SAAS,IAAI,IAAjB,EAAuB;UACrBH,MAAM,IAAIG,SAAV;;OAvCJ;;UA0CIC,MAAJ,EAAY;eACH,CAACmB,EAAD,EAAKvB,MAAL,CAAP;;;;;SAIC,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;;AAUF,SAASyB,aAAT,CAAuBzB,MAAvB,EAAoC1G,MAApC,EAAiDpC,OAAjD;MACM8I,MAAM,IAAI,IAAV,IAAkB1G,MAAM,CAACpC,OAAD,CAAN,CAAgBF,IAAhB,KAAyB,UAA/C,EAA2D;QACnDsK,cAAc,GAAG,CACrB,QADqB,EAErB,SAFqB,EAGrB,OAHqB,EAIrB,OAJqB,EAKrB,UALqB,EAMrB,UANqB,CAAvB;;QASEpK,OAAO,GAAGoC,MAAM,CAACK,MAAjB,IACA2H,cAAc,CAACpB,OAAf,CAAuB5G,MAAM,CAACpC,OAAO,GAAG,CAAX,CAAN,CAAoBF,IAA3C,MAAqD,CAAC,CAFxD,EAGE;UACIoJ,MAAM,GAAG,KAAb;UACImB,EAAE,GAAQ,IAAd;UACMlB,eAAe,GAAG,CACtBvB,aADsB,EAEtBwB,UAFsB,EAGtBC,UAHsB,EAItBtB,aAJsB,CAAxB;MAMAoB,eAAe,CAAC7G,OAAhB,CAAwB,UAAAiH,QAAQ;YAC1BL,MAAJ,EAAY;;;;YAGRI,cAAJ;YACIL,SAAJ;;YACIM,QAAQ,KAAKH,UAAjB,EAA6B;2BACGG,QAAQ,CAAC,IAAD,EAAOnH,MAAP,EAAepC,OAAO,GAAG,CAAzB,CADX;;UAC1BsJ,cAD0B;UACVL,SADU;SAA7B,MAEO;2BACyBM,QAAQ,CAACT,MAAD,EAAS1G,MAAT,EAAiBpC,OAAO,GAAG,CAA3B,CADjC;;UACJsJ,cADI;UACYL,SADZ;;;YAGHK,cAAc,KAAK,CAAvB,EAA0B;UACxBJ,MAAM,GAAG,IAAT;UACAI,cAAc,IAAI,CAAlB;UACAtJ,OAAO,IAAIsJ,cAAX;UACAe,EAAE,GAAGf,cAAL;;;YAEIgB,gBAAgB,GAAG,CAACH,WAAD,EAAcI,aAAd,CAAzB;YACIC,SAAS,GAAG,KAAhB;YACIC,SAAJ;QACAH,gBAAgB,CAAChI,OAAjB,CAAyB,UAAAoI,UAAU;cAC7BF,SAAJ,EAAe;;;;cAGXpI,MAAM,CAACpC,OAAD,CAAV,EAAqB;+BACW0K,UAAU,CACtCzB,SADsC,EAEtC7G,MAFsC,EAGtCpC,OAHsC,CADrB;;YAClBsJ,cADkB;YACFmB,SADE;YAMnBJ,EAAE,IAAIf,cAAN;;gBACIA,cAAc,KAAK,CAAvB,EAA0B;cACxBkB,SAAS,GAAG,IAAZ;cACAvB,SAAS,GAAGwB,SAAZ;;;SAbN;;YAkBIxB,SAAS,IAAI,IAAjB,EAAuB;UACrBH,MAAM,IAAIG,SAAV;;OAvCJ;;UA0CIC,MAAJ,EAAY;eACH,CAACmB,EAAD,EAAKvB,MAAL,CAAP;;;;;SAIC,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;;AAUF,SAAS6B,SAAT,CAAmB7B,MAAnB,EAAgC1G,MAAhC,EAA6CpC,OAA7C;MACM8I,MAAM,IAAI,IAAV,IAAkB1G,MAAM,CAACpC,OAAD,CAAN,CAAgBF,IAAhB,KAAyB,MAA/C,EAAuD;QAC/CsK,cAAc,GAAG,CACrB,QADqB,EAErB,SAFqB,EAGrB,QAHqB,EAIrB,OAJqB,EAKrB,OALqB,EAMrB,UANqB,EAOrB,UAPqB,CAAvB;;QAUEpK,OAAO,GAAGoC,MAAM,CAACK,MAAjB,IACA2H,cAAc,CAACpB,OAAf,CAAuB5G,MAAM,CAACpC,OAAO,GAAG,CAAX,CAAN,CAAoBF,IAA3C,MAAqD,CAAC,CAFxD,EAGE;UACIoJ,MAAM,GAAG,KAAb;UACImB,EAAE,GAAQ,IAAd;UACMlB,eAAe,GAAG,CACtBvB,aADsB,EAEtBwB,UAFsB,EAGtBC,UAHsB,EAItBtB,aAJsB,CAAxB;MAMAoB,eAAe,CAAC7G,OAAhB,CAAwB,UAAAiH,QAAQ;YAC1BL,MAAJ,EAAY;;;;YAGRI,cAAJ;YACIL,SAAJ;;YACIM,QAAQ,KAAKH,UAAjB,EAA6B;2BACGG,QAAQ,CAAC,IAAD,EAAOnH,MAAP,EAAepC,OAAO,GAAG,CAAzB,CADX;;UAC1BsJ,cAD0B;UACVL,SADU;SAA7B,MAEO;2BACyBM,QAAQ,CAACT,MAAD,EAAS1G,MAAT,EAAiBpC,OAAO,GAAG,CAA3B,CADjC;;UACJsJ,cADI;UACYL,SADZ;;;YAGHK,cAAc,KAAK,CAAvB,EAA0B;UACxBJ,MAAM,GAAG,IAAT;UACAI,cAAc,IAAI,CAAlB;UACAtJ,OAAO,IAAIsJ,cAAX;UACAe,EAAE,GAAGf,cAAL;cACMgB,gBAAgB,GAAG,CAACH,WAAD,EAAcI,aAAd,CAAzB;cACIC,SAAS,GAAG,KAAhB;cACIC,SAAJ;UACAH,gBAAgB,CAAChI,OAAjB,CAAyB,UAAAoI,UAAU;gBAC7BF,SAAJ,EAAe;;;;gBAGXpI,MAAM,CAACpC,OAAD,CAAV,EAAqB;iCACW0K,UAAU,CACtCzB,SADsC,EAEtC7G,MAFsC,EAGtCpC,OAHsC,CADrB;;cAClBsJ,cADkB;cACFmB,SADE;cAMnBJ,EAAE,IAAIf,cAAN;;kBACIA,cAAc,KAAK,CAAvB,EAA0B;gBACxBkB,SAAS,GAAG,IAAZ;gBACAvB,SAAS,GAAGwB,SAAZ;;;WAbN;;;YAkBExB,SAAS,IAAI,IAAjB,EAAuB;UACrBH,MAAM,IAAIG,SAAV;;OAtCJ;;UAyCIC,MAAJ,EAAY;eACH,CAACmB,EAAD,EAAKvB,MAAL,CAAP;;;;;SAIC,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;;;;;;;;AAUF,SAASM,UAAT,CAAoBN,MAApB,EAAiC1G,MAAjC,EAA8CpC,OAA9C;MACMoC,MAAM,CAACpC,OAAD,CAAN,CAAgBF,IAAhB,KAAyB,OAA7B,EAAsC;QAC9BsK,cAAc,GAAG,CACrB,QADqB,EAErB,SAFqB,EAGrB,OAHqB,EAIrB,UAJqB,EAKrB,UALqB,CAAvB;;QAQEpK,OAAO,GAAGoC,MAAM,CAACK,MAAjB,IACA2H,cAAc,CAACpB,OAAf,CAAuB5G,MAAM,CAACpC,OAAO,GAAG,CAAX,CAAN,CAAoBF,IAA3C,MAAqD,CAAC,CAFxD,EAGE;UACIoJ,MAAM,GAAG,KAAb;UACImB,EAAE,GAAQ,IAAd;UACMlB,eAAe,GAAG,CAACvB,aAAD,EAAgByB,UAAhB,EAA4BtB,aAA5B,CAAxB;MACAoB,eAAe,CAAC7G,OAAhB,CAAwB,UAAAiH,QAAQ;YAC1BL,MAAJ,EAAY;;;;yBAGsBK,QAAQ,CAACT,MAAD,EAAS1G,MAAT,EAAiBpC,OAAO,GAAG,CAA3B;YAArCsJ;YAAgBL;;YACjBK,cAAc,KAAK,CAAvB,EAA0B;UACxBJ,MAAM,GAAG,IAAT;UACAI,cAAc,IAAI,CAAlB;UACAtJ,OAAO,IAAIsJ,cAAX;UACAe,EAAE,GAAGf,cAAL;cACMgB,gBAAgB,GAAG,CAACH,WAAD,EAAcI,aAAd,CAAzB;cACIC,SAAS,GAAG,KAAhB;cACIC,SAAJ;UACAH,gBAAgB,CAAChI,OAAjB,CAAyB,UAAAoI,UAAU;gBAC7BF,SAAJ,EAAe;;;;gBAGXpI,MAAM,CAACpC,OAAD,CAAV,EAAqB;iCACW0K,UAAU,CACtCzB,SADsC,EAEtC7G,MAFsC,EAGtCpC,OAHsC,CADrB;;cAClBsJ,cADkB;cACFmB,SADE;cAMnBJ,EAAE,IAAIf,cAAN;;kBACIA,cAAc,KAAK,CAAvB,EAA0B;gBACxBkB,SAAS,GAAG,IAAZ;gBACAvB,SAAS,GAAGwB,SAAZ;;;WAbN;;;YAkBExB,SAAJ,EAAe;cACTH,MAAJ,EAAY;gBAER8B,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+B9B,SAA/B,MAA8C,eAA9C,IACA2B,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BjC,MAA/B,MAA2C,eAF7C,EAGE;kBACI,CAACkC,KAAK,CAAClC,MAAM,CAAChE,OAAP,EAAD,CAAN,IAA4B,CAACkG,KAAK,CAAC/B,SAAS,CAACnE,OAAV,EAAD,CAAtC,EAA6D;gBAC3DgE,MAAM,IAAIG,SAAV;gBACAH,MAAM,GAAG9D,IAAI,CAACiG,IAAL,CAAUnC,MAAM,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAhB,CAAT;eAFF,MAGO;gBACLA,MAAM,GAAGoC,GAAT;;aARJ,MAUO,IACLN,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+B9B,SAA/B,MAA8C,eAA9C,IACA2B,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BjC,MAA/B,MAA2C,eAFtC,EAGL;cACAA,MAAM,GAAGoC,GAAT;aAJK,MAKA,IAAIjC,SAAS,KAAK,EAAd,IAAoBH,MAAM,KAAK,EAAnC,EAAuC;cAC5CA,MAAM,GAAGoC,GAAT;aADK,MAEA;cACLpC,MAAM,IAAIG,SAAV;;WAnBJ,MAqBO;gBACD2B,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+B9B,SAA/B,MAA8C,eAAlD,EAAmE;cACjEH,MAAM,GAAGoC,GAAT;aADF,MAEO;cACLpC,MAAM,GAAG,CAACG,SAAV;;;SA1BN,MA6BO;UACLH,MAAM,GAAGoC,GAAT;;OA7DJ;;UAgEIhC,MAAJ,EAAY;YACNJ,MAAM,KAAK,EAAf,EAAmB;UACjBA,MAAM,GAAGoC,GAAT;;;eAEK,CAACb,EAAD,EAAKvB,MAAL,CAAP;;;;;SAIC,CAAC,CAAD,EAAI,IAAJ,CAAP;;;;AAIF,IAAMqC,OAAO,GAAG,CACdxC,OADc,EAEdU,UAFc,EAGdzB,aAHc,EAIduC,WAJc,EAKdI,aALc,EAMdI,SANc,EAOdvB,UAPc,EAQdO,aARc,EASdM,gBATc,EAUdP,UAVc,EAWdF,QAXc,EAYdC,OAZc,EAadZ,QAbc,EAcdd,aAdc,CAAhB;;;;;;;;;;AAyBA,SAASQ,MAAT,CAAgB6C,UAAhB,EAAiChJ,MAAjC,EAA8CiJ,GAA9C;MACMrL,OAAO,GAAGqL,GAAd;MACIvC,MAAM,GAAGsC,UAAb;;;QAEMlC,MAAM,GAAG,KAAb;IACAiC,OAAO,CAAC7I,OAAR,CAAgB,UAAAiH,QAAQ;UAClBL,MAAJ,EAAY;;;;wBAGwBK,QAAQ,CAACT,MAAD,EAAS1G,MAAT,EAAiBpC,OAAjB;UAArCsJ;UAAgBL;;UACnBK,cAAc,KAAK,CAAvB,EAA0B;QACxBJ,MAAM,GAAG,IAAT;QACAlJ,OAAO,IAAIsJ,cAAX;;;UAEEL,SAAS,IAAI,IAAjB,EAAuB;QACrBH,MAAM,GAAGG,SAAT;;KAVJ;;QAaI,CAACC,MAAL,EAAa;;;MAGXoC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAHW;;MAKXD,OAAO,CAACC,GAAR,CAAY9L,gBAAZ;;WACO;;;;;SArBJO,OAAO,GAAGoC,MAAM,CAACK,MAAxB,EAAgC;;;;;;SAwBzBqG,MAAP;;;;;;;;;;;;AAWF,SAAwB0C,UACtBC,YACArE,cACAsE,qBACAC;MAEI,CAACvE,YAAL,EAAmB;IACjBA,YAAY,GAAG,EAAf;;;EAEF1H,uBAAuB,GAAGiM,0BAA1B;EACAlM,gBAAgB,GAAGgM,UAAnB;EACA7L,SAAS,GAAGwH,YAAZ;EACAzH,gBAAgB,GAAG+L,mBAAnB;SACOnD,MAAM,CAAC,IAAD,EAAOpG,SAAS,CAACsJ,UAAD,CAAhB,EAA8B,CAA9B,CAAb;;;ACr4DF;;;;;AAKA,SAAwBG,oBACtBC,UACAC;MAEI,OAAOD,QAAP,KAAoB,QAAxB,EAAkC;WACzBA,QAAQ,IAAI,EAAnB;;;SAEKA,QAAQ,CAACC,kBAAD,CAAR,IAAgC,EAAvC;;;;;;;;AAQF,SAAgBC,kBACdC,cACAF;MAEIE,YAAY,CAACnO,KAAjB,EAAwB;WACf+N,mBAAmB,CAACI,YAAY,CAACnO,KAAd,EAAqBiO,kBAArB,CAA1B;;;SAEK,EAAP;;;;;;;;AAQF,SAAgBG,iBACdD,cACAF;MAEIE,YAAY,CAACzQ,IAAjB,EAAuB;WACdqQ,mBAAmB,CAACI,YAAY,CAACzQ,IAAd,EAAoBuQ,kBAApB,CAA1B;;;SAEK,EAAP;;;;;;;;;;AAUF,SAAgBI,kCACdC,WACAC,WACAC;MAEID,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK9K,SAAxC,EAAmD;WAC1C,IAAP;;;MAEIgL,kCAAkC,GAAGF,SAAS,CAACG,KAAV,CAAgB,YAAhB,CAA3C;;MAGID,kCAAJ,EAAwC;IACtCA,kCAAkC,CAAChK,OAAnC,CAA2C,UAAAkK,QAAQ;MACjDA,QAAQ,GAAGA,QAAQ,CAACvF,SAAT,CAAmB,CAAnB,EAAsBuF,QAAQ,CAAC/J,MAAT,GAAkB,CAAxC,CAAX;UACMgK,cAAc,GAAGN,SAAS,CAACK,QAAD,EAAWH,aAAX,CAAhC;UACMrJ,GAAG,GAAG,MAAMwJ,QAAN,GAAiB,GAA7B;;UACIC,cAAc,IAAI,IAAlB,IAA0BA,cAAc,KAAKnL,SAAjD,EAA4D;QAC1D8K,SAAS,GAAGA,SAAS,CAACxI,OAAV,CAAkBZ,GAAlB,EAAuByJ,cAAvB,CAAZ;OADF,MAEO;QACLL,SAAS,GAAGA,SAAS,CAACxI,OAAV,CAAkBZ,GAAlB,EAAuB,EAAvB,CAAZ;;KAPJ;GADF,MAWO;;QAEC0J,SAAS,GAAGN,SAAS,CAACG,KAAV,CAAgB,oBAAhB,CAAlB;;QACIG,SAAJ,EAAe;MACbA,SAAS,CAACpK,OAAV,CAAkB,UAAAkK,QAAQ;YAClBC,cAAc,GAAGN,SAAS,CAACK,QAAD,EAAWH,aAAX,CAAhC;;YACII,cAAc,IAAI,IAAlB,IAA0BA,cAAc,KAAKnL,SAAjD,EAA4D;UAC1D8K,SAAS,GAAGA,SAAS,CAACxI,OAAV,CAAkB4I,QAAlB,EAA4BC,cAA5B,CAAZ;SADF,MAEO;UACLL,SAAS,GAAGA,SAAS,CAACxI,OAAV,CAAkB4I,QAAlB,EAA4B,EAA5B,CAAZ;;OALJ;;;;SAWGJ,SAAP;;AAGF,AAeA;;;;;;AAKA,SAAgBO,uBACdX,cACAF;MAEIE,YAAY,CAACY,IAAb,IAAqBZ,YAAY,CAACY,IAAb,CAAkB,kBAAlB,CAAzB,EAAgE;WACvDhB,mBAAmB,CACxBI,YAAY,CAACY,IAAb,CAAkB,kBAAlB,CADwB,EAExBd,kBAFwB,CAA1B;;;SAKK,EAAP;;;;;;;;AAQF,SAASe,iBAAT,CAA2BpB,UAA3B;MAEIA,UAAU,CAAC3D,WAAX,OAA6B,KAA7B,IACA2D,UAAU,KAAK,GADf,IAEAA,UAAU,CAAC3D,WAAX,OAA6B,MAH/B,EAIE;WACO,IAAP;GALF,MAMO;WACE,KAAP;;;;;;;;;;AASJ,SAAgBgF,gBAAgBd;MAC1Be,UAAU,GAAG,KAAjB;;MACIf,YAAY,CAACY,IAAjB,EAAuB;QACjBZ,YAAY,CAACY,IAAb,CAAkBI,QAAtB,EAAgC;UAE5B,OAAOhB,YAAY,CAACY,IAAb,CAAkBI,QAAzB,KAAsC,QAAtC,IACAH,iBAAiB,CAACb,YAAY,CAACY,IAAb,CAAkBI,QAAnB,CAFnB,EAGE;QACAD,UAAU,GAAG,IAAb;;;;;SAICA,UAAP;;;;;;;;;AAmBF,SAAgBE,0BACdjB,cACAkB,qBACAC;MAEInB,YAAY,IAAIA,YAAY,CAACY,IAA7B,IAAqCZ,YAAY,CAACY,IAAb,CAAkBQ,QAA3D,EAAqE;QAC7DC,UAAU,GAAGF,kBAAkB,CACnCnB,YAAY,CAACY,IAAb,CAAkBQ,QADiB,EAEnCF,mBAAmB,GAAGlB,YAAY,CAACjI,IAFA,CAArC;;QAIIsJ,UAAJ,EAAgB;aACP,IAAP;;;WAEK,KAAP;;;SAEK,IAAP;;;;;;;;;AASF,SAAgBC,0BACdtB,cACAkB,qBACAC;MAEInB,YAAY,IAAIA,YAAY,CAACY,IAA7B,IAAqCZ,YAAY,CAACY,IAAb,CAAkBW,QAA3D,EAAqE;QAC7DC,UAAU,GAAGL,kBAAkB,CACnCnB,YAAY,CAACY,IAAb,CAAkBW,QADiB,EAEnCL,mBAAmB,GAAGlB,YAAY,CAACjI,IAFA,CAArC;;QAIIyJ,UAAJ,EAAgB;aACP,IAAP;;;WAEK,KAAP;;;SAEK,KAAP;;;;;;;;;AASF,SAAgBC,8BACdzB,cACAkB,qBACAC;MAEInB,YAAY,IAAIA,YAAY,CAACY,IAA7B,IAAqCZ,YAAY,CAACY,IAAb,CAAkBc,UAA3D,EAAuE;QAC/DC,oBAAoB,GAAG,CAACR,kBAAkB,CAC9CnB,YAAY,CAACY,IAAb,CAAkBc,UAD4B,EAE9CR,mBAAmB,GAAGlB,YAAY,CAACjI,IAFW,CAAhD;;QAII4J,oBAAJ,EAA0B;aACjB,IAAP;;;WAEK,KAAP;;;SAEK,KAAP;;;;;;;;;AASF,SAAgBC,2BACdC,cACAxB,eACAyB;MAEMC,SAAS,GAAG1B,aAAa,CAAC/I,KAAd,CAAoB,GAApB,CAAlB;MACIC,CAAJ;MACIC,MAAM,GAAG,EAAb;MACIwK,WAAW,GAAGH,YAAlB;;OACKtK,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGwK,SAAS,CAACtL,MAAV,GAAmB,CAAnC,GAAwC;QAClCsL,SAAS,CAACxK,CAAD,CAAT,KAAiB,QAArB,EAA+B;MAC7BA,CAAC,IAAI,CAAL;;UACIC,MAAM,GAAGuK,SAAS,CAACxK,CAAD,CAAlB,IAAyByK,WAA7B,EAA0C;QACxCA,WAAW,GAAGA,WAAW,CAACxK,MAAM,GAAGuK,SAAS,CAACxK,CAAD,CAAnB,CAAzB;OADF,MAEO;QACLyK,WAAW,CAACxK,MAAM,GAAGuK,SAAS,CAACxK,CAAD,CAAnB,CAAX,GAAqC,EAArC;QACAyK,WAAW,GAAGA,WAAW,CAACxK,MAAM,GAAGuK,SAAS,CAACxK,CAAD,CAAnB,CAAzB;;;UAEIiE,KAAK,GAAGrB,QAAQ,CAAC4H,SAAS,CAACxK,CAAC,GAAG,CAAL,CAAV,EAAmB,EAAnB,CAAtB;;UACIyK,WAAW,CAACxG,KAAD,CAAf,EAAwB;QACtBwG,WAAW,GAAGA,WAAW,CAACxG,KAAD,CAAzB;OADF,MAEO;QACLwG,WAAW,CAACxG,KAAD,CAAX,GAAqB,EAArB;QACAwG,WAAW,GAAGA,WAAW,CAACxG,KAAD,CAAzB;;;MAEFhE,MAAM,GAAGA,MAAM,GAAGuK,SAAS,CAACxK,CAAD,CAAlB,GAAwB,GAAjC;MACAA,CAAC,IAAI,CAAL;KAhBF,MAiBO;MACLC,MAAM,GAAGA,MAAM,GAAGuK,SAAS,CAACxK,CAAC,GAAG,CAAL,CAAlB,GAA4B,GAArC;MACAA,CAAC,IAAI,CAAL;;;;EAGJyK,WAAW,CAACxK,MAAM,GAAGuK,SAAS,CAACA,SAAS,CAACtL,MAAV,GAAmB,CAApB,CAAnB,CAAX,GAAwDqL,UAAxD;SACOD,YAAP;;;;;;;;;AASF,SAAgBI,+BACdJ,cACAxB,eACA6B;MAEMC,mBAAmB,GAAQ,EAAjC;MACMC,aAAa,GAAQP,YAA3B;EAEAjD,MAAM,CAACyD,OAAP,CAAeD,aAAf,EAA8B9L,OAA9B,CAAsC,UAAAwB,GAAG;QACjCwK,oBAAoB,GAAQxK,GAAG,CAAC,CAAD,CAArC;QACMyK,qBAAqB,GAAQzK,GAAG,CAAC,CAAD,CAAtC;;QACIwK,oBAAoB,KAAKjC,aAA7B,EAA4C;UACpCmC,iBAAiB,GAAWC,MAAM,CAACP,WAAD,CAAxC;MACAtD,MAAM,CAACyD,OAAP,CAAeE,qBAAf,EAAsC7Q,GAAtC,CAA0C,UAAAgR,SAAS;YAC3CC,mBAAmB,GAAQD,SAAS,CAAC,CAAD,CAA1C;YACME,mBAAmB,GAAQF,SAAS,CAAC,CAAD,CAA1C;;YACIC,mBAAmB,KAAKH,iBAA5B,EAA+C;UAC7CL,mBAAmB,CAACvQ,IAApB,CAAyBgR,mBAAzB;;OAJJ;;GALJ;SAcOT,mBAAP;;;;;;;;AAQF,SAAgBU,yBACdhB,cACAxB;MAEM0B,SAAS,GAAG1B,aAAa,CAAC/I,KAAd,CAAoB,GAApB,CAAlB;MACIC,CAAJ;MACIC,MAAM,GAAG,EAAb;MACIwK,WAAW,GAAGH,YAAlB;;OACKtK,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGwK,SAAS,CAACtL,MAAV,GAAmB,CAAnC,GAAwC;QAClCsL,SAAS,CAACxK,CAAD,CAAT,KAAiB,QAArB,EAA+B;MAC7BA,CAAC,IAAI,CAAL;;UACIC,MAAM,GAAGuK,SAAS,CAACxK,CAAD,CAAlB,IAAyByK,WAA7B,EAA0C;QACxCA,WAAW,GAAGA,WAAW,CAACxK,MAAM,GAAGuK,SAAS,CAACxK,CAAD,CAAnB,CAAzB;OADF,MAEO;QACLyK,WAAW,CAACxK,MAAM,GAAGuK,SAAS,CAACxK,CAAD,CAAnB,CAAX,GAAqC,EAArC;;;UAEIiE,KAAK,GAAGrB,QAAQ,CAAC4H,SAAS,CAACxK,CAAC,GAAG,CAAL,CAAV,EAAmB,EAAnB,CAAtB;;UACIyK,WAAW,CAACxG,KAAD,CAAf,EAAwB;QACtBwG,WAAW,GAAGA,WAAW,CAACxG,KAAD,CAAzB;OADF,MAEO;QACLwG,WAAW,CAACxG,KAAD,CAAX,GAAqB,EAArB;QACAwG,WAAW,GAAGA,WAAW,CAACxG,KAAD,CAAzB;;;MAEFhE,MAAM,GAAGA,MAAM,GAAGuK,SAAS,CAACxK,CAAD,CAAlB,GAAwB,GAAjC;MACAA,CAAC,IAAI,CAAL;KAfF,MAgBO;MACLC,MAAM,GAAGA,MAAM,GAAGuK,SAAS,CAACxK,CAAC,GAAG,CAAL,CAAlB,GAA4B,GAArC;MACAA,CAAC,IAAI,CAAL;;;;SAGGyK,WAAW,CAACxK,MAAM,GAAGuK,SAAS,CAACA,SAAS,CAACtL,MAAV,GAAmB,CAApB,CAAnB,CAAlB;;;;;;;AAOF,SAAgBqM,yBAAyB9C;MACnC+C,SAAS,GAAG,KAAhB;;MACI/C,YAAY,CAACgD,OAAb,IAAwBhD,YAAY,CAACgD,OAAb,CAAqBC,UAAjD,EAA6D;IAC3DjD,YAAY,CAACgD,OAAb,CAAqBC,UAArB,CAAgCnE,QAAhC,GAA2CvF,QAA3C,CAAoD,SAApD,IACKwJ,SAAS,GAAG,IADjB,GAEKA,SAAS,GAAG,KAFjB;;;SAIKA,SAAP;;;;;;;;AAQF,SAAgBG,mBACdrB,cACAsB;MAEMpB,SAAS,GAAGoB,aAAa,CAAC7L,KAAd,CAAoB,GAApB,CAAlB;MACIC,CAAJ;MACIC,MAAM,GAAG,EAAb;MACIwK,WAAW,GAAGH,YAAlB;;OACKtK,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGwK,SAAS,CAACtL,MAAV,GAAmB,CAAnC,GAAwC;QAClCsL,SAAS,CAACxK,CAAD,CAAT,KAAiB,QAArB,EAA+B;MAC7BA,CAAC,IAAI,CAAL;;UACIC,MAAM,GAAGuK,SAAS,CAACxK,CAAD,CAAlB,IAAyByK,WAA7B,EAA0C;QACxCA,WAAW,GAAGA,WAAW,CAACxK,MAAM,GAAGuK,SAAS,CAACxK,CAAD,CAAnB,CAAzB;OADF,MAEO;QACLyK,WAAW,CAACxK,MAAM,GAAGuK,SAAS,CAACxK,CAAD,CAAnB,CAAX,GAAqC,EAArC;;;UAEIiE,KAAK,GAAGrB,QAAQ,CAAC4H,SAAS,CAACxK,CAAC,GAAG,CAAL,CAAV,EAAmB,EAAnB,CAAtB;;UACIyK,WAAW,CAACxG,KAAD,CAAf,EAAwB;QACtBwG,WAAW,GAAGA,WAAW,CAACxG,KAAD,CAAzB;OADF,MAEO;QACLwG,WAAW,CAACxG,KAAD,CAAX,GAAqB,EAArB;QACAwG,WAAW,GAAGA,WAAW,CAACxG,KAAD,CAAzB;;;MAEFhE,MAAM,GAAGA,MAAM,GAAGuK,SAAS,CAACxK,CAAD,CAAlB,GAAwB,GAAjC;MACAA,CAAC,IAAI,CAAL;KAfF,MAgBO;MACLC,MAAM,GAAGA,MAAM,GAAGuK,SAAS,CAACxK,CAAC,GAAG,CAAL,CAAlB,GAA4B,GAArC;MACAA,CAAC,IAAI,CAAL;;;;EAGJqH,MAAM,CAACwE,IAAP,CAAYpB,WAAZ,EAAyB1L,OAAzB,CAAiC,UAAA+M,MAAM;QACjCA,MAAM,CAACC,UAAP,CAAkB9L,MAAM,GAAGuK,SAAS,CAACA,SAAS,CAACtL,MAAV,GAAmB,CAApB,CAApC,CAAJ,EAAiE;MAC/DuL,WAAW,CAACqB,MAAD,CAAX,GAAsB,IAAtB;;GAFJ;SAKOxB,YAAP;;;;;;;;AAQF,SAAgB0B,2BACd1B,cACAsB;MAEMpB,SAAS,GAAGoB,aAAa,CAAC7L,KAAd,CAAoB,GAApB,CAAlB;MACIC,CAAJ;MACIC,MAAM,GAAG,EAAb;MACIwK,WAAW,GAAGH,YAAlB;;OACKtK,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGwK,SAAS,CAACtL,MAAV,GAAmB,CAAnC,GAAwC;QAClCsL,SAAS,CAACxK,CAAD,CAAT,KAAiB,QAArB,EAA+B;MAC7BA,CAAC,IAAI,CAAL;;UACIC,MAAM,GAAGuK,SAAS,CAACxK,CAAD,CAAlB,IAAyByK,WAA7B,EAA0C;QACxCA,WAAW,GAAGA,WAAW,CAACxK,MAAM,GAAGuK,SAAS,CAACxK,CAAD,CAAnB,CAAzB;OADF,MAEO;QACLyK,WAAW,CAACxK,MAAM,GAAGuK,SAAS,CAACxK,CAAD,CAAnB,CAAX,GAAqC,EAArC;;;UAEIiE,KAAK,GAAGrB,QAAQ,CAAC4H,SAAS,CAACxK,CAAC,GAAG,CAAL,CAAV,EAAmB,EAAnB,CAAtB;;UACIyK,WAAW,CAACxG,KAAD,CAAf,EAAwB;QACtBwG,WAAW,GAAGA,WAAW,CAACxG,KAAD,CAAzB;OADF,MAEO;QACLwG,WAAW,CAACxG,KAAD,CAAX,GAAqB,EAArB;QACAwG,WAAW,GAAGA,WAAW,CAACxG,KAAD,CAAzB;;;MAEFhE,MAAM,GAAGA,MAAM,GAAGuK,SAAS,CAACxK,CAAD,CAAlB,GAAwB,GAAjC;MACAA,CAAC,IAAI,CAAL;KAfF,MAgBO;MACLC,MAAM,GAAGA,MAAM,GAAGuK,SAAS,CAACxK,CAAC,GAAG,CAAL,CAAlB,GAA4B,GAArC;MACAA,CAAC,IAAI,CAAL;;;;MAGAiM,OAAO,GAAY,IAAvB;EACA5E,MAAM,CAACwE,IAAP,CAAYpB,WAAZ,EAAyB1L,OAAzB,CAAiC,UAAA+M,MAAM;QACjCA,MAAM,CAACC,UAAP,CAAkB9L,MAAM,GAAGuK,SAAS,CAACA,SAAS,CAACtL,MAAV,GAAmB,CAApB,CAApC,CAAJ,EAAiE;UAE7DuL,WAAW,CAACqB,MAAD,CAAX,KAAwB,IAAxB,IACArB,WAAW,CAACqB,MAAD,CAAX,KAAwB/N,SADxB,IAEAkO,OAHF,EAIE;QACAA,OAAO,GAAG,KAAV;;;GAPN;SAWOA,OAAP;;;ACtbF;;AACA,AAAO,IAAMC,oBAAoB,GAAG,uCAA7B;;;AAEP,AAAO,IAAMC,oBAAoB,GAAG,uCAA7B;;;AAEP,AAAO,IAAMC,gBAAgB,GAAG,mCAAzB;;;AAEP,AAAO,IAAMC,sBAAsB,GAAG,yCAA/B;;;AAEP,AAAO,IAAMC,8BAA8B,GACzC,iDADK;;;AAGP,AAAO,IAAMC,WAAW,GAAG,8BAApB;;;AAEP,AAAO,IAAMC,kBAAkB,GAAG,qCAA3B;;;AAEP,AAAO,IAAMC,qBAAqB,GAAG,wCAA9B;;;AAEP,AAAO,IAAMC,kBAAkB,GAAG,qCAA3B;;;AAEP,AAAO,IAAMC,+BAA+B,GAC1C,kDADK;AAEP,AAAO,IAAMC,kBAAkB,GAAG,qCAA3B;AACP,AAAO,IAAMC,WAAW,GAAG,8BAApB;AACP,AAAO,IAAMC,sBAAsB,GAAG,yCAA/B;AACP,AAAO,IAAMC,YAAY,GAAG,+BAArB;;;;;;;AA6FP,AAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CACpClE,aADoC,EAEpCyB,UAFoC;SAGR;IAC5BzB,aAAa,EAAbA,aAD4B;IAE5ByB,UAAU,EAAVA,UAF4B;IAG5BhO,IAAI,EAAE2P;GAN8B;CAA/B;;;;;;;AAcP,AAAO,IAAMe,sBAAsB,GAAG,SAAzBA,sBAAyB,CACpCnE,aADoC,EAEpCxI,UAFoC;SAGR;IAC5BwI,aAAa,EAAbA,aAD4B;IAE5BxI,UAAU,EAAVA,UAF4B;IAG5B/D,IAAI,EAAE4P;GAN8B;CAA/B;;;;;;AAaP,AAAO,IAAMe,oBAAoB,GAAG,SAAvBA,oBAAuB,CAClCpE,aADkC,EAElC6B,WAFkC;SAGR;IAC1B7B,aAAa,EAAbA,aAD0B;IAE1B6B,WAAW,EAAXA,WAF0B;IAG1BpO,IAAI,EAAE+P;GAN4B;CAA7B;;;;;;AAaP,AAAO,IAAMa,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,WAAD;SAA2C;IAC3EA,WAAW,EAAXA,WAD2E;IAE3E7Q,IAAI,EAAE6P;GAF0B;CAA3B;AAKP,AAaA;;;;AAGA,AAAO,IAAMiB,gBAAgB,GAAG,SAAnBA,gBAAmB;SAAyB;IACvD9Q,IAAI,EAAEgQ;GADwB;CAAzB;;;;;;AAQP,AAAO,IAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAACxE,aAAD;SAA6C;IAC1EA,aAAa,EAAbA,aAD0E;IAE1EvM,IAAI,EAAEiQ;GAFuB;CAAxB;;;;;;AASP,AAAO,IAAMe,kBAAkB,GAAG,SAArBA,kBAAqB,CAChCzE,aADgC;SAER;IACxBA,aAAa,EAAbA,aADwB;IAExBvM,IAAI,EAAEkQ;GAJ0B;CAA3B;;;;;;AAWP,AAAO,IAAMe,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAC1E,aAAD;SAA8C;IAC5EA,aAAa,EAAbA,aAD4E;IAE5EvM,IAAI,EAAEmQ;GAFwB;CAAzB;;;;;;AASP,AAAO,IAAMe,2BAA2B,GAAG,SAA9BA,2BAA8B,CACzC3E,aADyC;SAER;IACjCA,aAAa,EAAbA,aADiC;IAEjCvM,IAAI,EAAEoQ;GAJmC;CAApC;;;;;;AAWP,AAAO,IAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAACpD,YAAD;SAAyC;IACtE/N,IAAI,EAAEqQ,kBADgE;IAEtEtC,YAAY,EAAZA;GAF6B;CAAxB;;;;;;AASN,AAAO,IAAMqD,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD;SAA6B;IACrDrR,IAAI,EAAEsQ,WAD+C;IAErDe,MAAM,EAANA;GAFwB;CAAlB;;;;;;AASR,AAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACpN,QAAD;SAAoC;IACjElE,IAAI,EAAEwQ,YAD2D;IAEjEtM,QAAQ,EAARA;GAF6B;CAAxB;;;;;;AASP,AAAO,IAAMqN,mBAAmB,GAAG,SAAtBA,mBAAsB,CACjCC,eADiC;SAER;IACzBA,eAAe,EAAfA,eADyB;IAEzBxR,IAAI,EAAEuQ;GAJ2B;CAA5B;;;AA4BP,AAAO,IAAMkB,YAAY;;AAAuBC,iBAAiB,CAAC;EAChEC,MAAM,EAAE,EADwD;EAEhEH,eAAe,EAAE,KAF+C;EAGhEI,SAAS,EAAE,EAHqD;EAIhE7N,UAAU,EAAE,EAJoD;EAKhEjE,SAAS,EAAE,EALqD;EAMhEoE,QAAQ,EAAE,SANsD;EAOhEG,OAAO,EAAE;CAPsD,CAA1D;;;AAWP,SAAwB5E,QACtBkE,OACAkO;;;MADAlO;IAAAA,QAA4B8N;;;UAGpBI,MAAM,CAAC7R,IAAf;SACO2P,oBAAL;UACQmC,oBAAoB,GAAGhE,0BAA0B,CACrDnK,KAAK,CAACkE,KAAN,CAAY,CAAC,WAAD,CAAZ,EAA2BkK,SAA3B,CAAqC;QAAEC,IAAI,EAAE;OAA7C,CADqD,EAErDH,MAAM,CAACtF,aAF8C,EAGrDsF,MAAM,CAAC7D,UAH8C,CAAvD;UAKMiE,MAAM,GAAGtO,KAAK,CAACoO,SAAN,CAAgB;QAAEC,IAAI,EAAE;OAAxB,CAAf;aACON,iBAAiB,cAAMO,MAAN;QAAcnS,SAAS,EAAEgS;SAAjD;;SAEGlC,oBAAL;UACQsC,wBAAwB,GAAGpE,0BAA0B,CACzDnK,KAAK,CAACkE,KAAN,CAAY,CAAC,YAAD,CAAZ,EAA4BkK,SAA5B,CAAsC;QAAEC,IAAI,EAAE;OAA9C,CADyD,EAEzDH,MAAM,CAACtF,aAFkD,EAGzDsF,MAAM,CAAC9N,UAAP,IAAqB,IAArB,gBAAiC8N,MAAM,CAAC9N,UAAxC,IAAuD,IAHE,CAA3D;UAKMoO,QAAQ,GAAGxO,KAAK,CAACoO,SAAN,CAAgB;QAAEC,IAAI,EAAE;OAAxB,CAAjB;aACON,iBAAiB,cACnBS,QADmB;QAEtBpO,UAAU,EAAEmO;SAFd;;SAKGnC,8BAAL;UACM1B,mBAAmB,GAAQ,EAA/B;;UAEE1K,KAAK,CACFkE,KADH,CACS,CAAC,YAAD,CADT,EAEGkK,SAFH,CAEa;QAAEC,IAAI,EAAE;OAFrB,EAGGI,cAHH,CAGkBP,MAAM,CAACtF,aAHzB,CADF,EAKE;QACA8B,mBAAmB,aACdF,8BAA8B,CAC/BxK,KAAK,CAACkE,KAAN,CAAY,CAAC,YAAD,CAAZ,EAA4BkK,SAA5B,CAAsC;UAAEC,IAAI,EAAE;SAA9C,CAD+B,EAE/BH,MAAM,CAACtF,aAFwB,EAG/BsF,MAAM,CAACzD,WAHwB,CADhB,CAAnB;YAOMiE,wBAAwB,GAAGvE,0BAA0B,CACzDnK,KAAK,CAACkE,KAAN,CAAY,CAAC,YAAD,CAAZ,EAA4BkK,SAA5B,CAAsC;UAAEC,IAAI,EAAE;SAA9C,CADyD,EAEzDH,MAAM,CAACtF,aAFkD,eAGpD8B,mBAHoD,EAA3D;YAKMiE,iBAAiB,GAAG3O,KAAK,CAACoO,SAAN,CAAgB;UAAEC,IAAI,EAAE;SAAxB,CAA1B;eACON,iBAAiB,cACnBY,iBADmB;UAEtBvO,UAAU,EAAEsO;WAFd;;;aAKK1O,KAAP;;SAEGkM,gBAAL;UACQ0C,iBAAiB,gBAClB5O,KAAK,CAACkE,KAAN,CAAY,CAAC,WAAD,CAAZ,EAA2BkK,SAA3B,CAAqC;QAAEC,IAAI,EAAE;OAA7C,CADkB,6BAEpBH,MAAM,CAAChB,WAAP,CAAmB5M,IAFC,IAEM4N,MAAM,CAAChB,WAFb,aAAvB;;UAIM2B,aAAa,GAAG7O,KAAK,CAACoO,SAAN,CAAgB;QAAEC,IAAI,EAAE;OAAxB,CAAtB;aACON,iBAAiB,cACnBc,aADmB;QAEtBZ,SAAS,EAAEW;SAFb;;SAKGzC,sBAAL;UAEInM,KAAK,CACFkE,KADH,CACS,CAAC,WAAD,CADT,EAEGkK,SAFH,CAEa;QAAEC,IAAI,EAAE;OAFrB,EAGGI,cAHH,CAGkBP,MAAM,CAACtF,aAHzB,CADF,EAKE;;aAOK5I,KAAP;;SAEGqM,WAAL;aACSyB,YAAP;;SAEGxB,kBAAL;UACM,CAACtM,KAAK,CAACgO,MAAN,CAAalM,QAAb,CAAsBoM,MAAM,CAACtF,aAA7B,CAAL,EAAkD;eACzC5I,KAAK,CAAC8O,QAAN,CAAe,CAAC,QAAD,CAAf,EAA2B,UAAAC,GAAG;iBACnCA,GAAG,CAACC,MAAJ,CAAW,CAACd,MAAM,CAACtF,aAAR,CAAX,CADmC;SAA9B,CAAP;;;aAIK5I,KAAP;;SAEGuM,qBAAL;UACMvM,KAAK,CAACgO,MAAN,CAAalM,QAAb,CAAsBoM,MAAM,CAACtF,aAA7B,CAAJ,EAAiD;eACxC5I,KAAK,CAAC8O,QAAN,CAAe,CAAC,QAAD,CAAf,EAA2B,UAAAC,GAAG;iBACnCA,GAAG,CAACE,MAAJ,CAAW,UAAAC,GAAG;mBAAIA,GAAG,KAAKhB,MAAM,CAACtF,aAAnB;WAAd,CADmC;SAA9B,CAAP;;;aAIK5I,KAAP;;SAEGwM,kBAAL;UACQ2C,aAAa,GAAG1D,kBAAkB,CACtCzL,KAAK,CAACkE,KAAN,CAAY,CAAC,WAAD,CAAZ,EAA2BkK,SAA3B,CAAqC;QAAEC,IAAI,EAAE;OAA7C,CADsC,EAEtCH,MAAM,CAACtF,aAF+B,CAAxC;UAIMwG,MAAM,GAAGpP,KAAK,CAACoO,SAAN,CAAgB;QAAEC,IAAI,EAAE;OAAxB,CAAf;aACON,iBAAiB,cAAMqB,MAAN;QAAcjT,SAAS,EAAEgT;SAAjD;;SAEG1C,+BAAL;aACSzM,KAAK,CAAC8O,QAAN,CAAe,CAAC,QAAD,CAAf,EAA2B,UAAAC,GAAG;eACnCA,GAAG,CAACE,MAAJ,CAAW,UAAAC,GAAG;iBAAI,CAACA,GAAG,CAACrD,UAAJ,CAAeqC,MAAM,CAACtF,aAAtB,CAAL;SAAd,CADmC;OAA9B,CAAP;;SAIG8D,kBAAL;aACSqB,iBAAiB,cACnB/N,KADmB;QAEtB7D,SAAS,EAAG+R,MAAc,CAAC9D;SAF7B;;SAKGuC,WAAL;aACSoB,iBAAiB,cACnB/N,KADmB;QAEtBU,OAAO,EAAGwN,MAAc,CAACR;SAF3B;;SAKGd,sBAAL;aACSmB,iBAAiB,cACnB/N,KADmB;QAEtB6N,eAAe,EAAGK,MAAc,CAACL;SAFnC;;;aAMO7N,KAAP;;;;;;;;;;AAWN,SAAgBqP,cACdrP,OACA4I;SAEOwC,wBAAwB,CAC5BpL,KAAa,IAAInC,SAAjB,IAA+BmC,KAAa,CAACkE,KAAd,CAAoB,CAAC,WAAD,CAApB,EAAmCkK,SAAnC,CAA6C;IAAEC,IAAI,EAAE;GAArD,CADH,EAE7BzF,aAF6B,CAA/B;;;;;;;;AAWF,SAAgB0G,cACdtP,OACA4I;SAEOwC,wBAAwB,CAC5BpL,KAAa,IAAInC,SAAjB,IAA+BmC,KAAa,CAACkE,KAAd,CAAoB,CAAC,YAAD,CAApB,EAAoCkK,SAApC,CAA8C;IAAEC,IAAI,EAAE;GAAtD,CADH,EAE7BzF,aAF6B,CAA/B;;;;;;;;;AAYF,SAAgB2G,uBACdvP,OACAgI,YACAY;SAEOb,SAAS,CAACC,UAAD,EAAchI,KAAa,IAAInC,SAAjB,IAA+BmC,KAAa,CAAC7D,SAA3D,EAAsE,IAAtE,EAA4EyM,aAA5E,CAAhB;;;;;;;;;;AAUF,SAAgB4G,gCACdxP,OACAgI,YACAlO,SACA8O;SAEOb,SAAS,CACdC,UADc,EAEbhI,KAAa,CAAC7D,SAFD,EAGdrC,OAHc,EAId8O,aAJc,CAAhB;;;;;;;;AAaF,SAAgB6G,iBACdzP,OACA4I;SAES5I,KAAa,IAAInC,SAAjB,IAA+BmC,KAAa,CAACgO,MAAd,CAAqBlM,QAArB,CAA8B8G,aAA9B,CAAxC;;;;;;;;AAQF,SAAgB8G,mBACd1P,OACA4I;SAEOkD,0BAA0B,CAAG9L,KAAa,IAAInC,SAAjB,IAA+BmC,KAAa,CAAC7D,SAAhD,EAA2DyM,aAA3D,CAAjC;;;;;;;;AAQF,SAAgB+G,2BACd3P,OACA4I;MAEIgH,SAAS,GAAG,KAAhB;EACC5P,KAAa,CAACgO,MAAd,CAAqBnP,OAArB,CAA6B,UAACgR,MAAD;QACxBA,MAAM,CAAChE,UAAP,CAAkBjD,aAAlB,KAAoC,CAACgH,SAAzC,EAAoD;MAClDA,SAAS,GAAG,IAAZ;;GAFH;SAKMA,SAAP;;;;;;;AAOF,SAAgBE,mBAAmB9P;SACzBA,KAAa,IAAInC,SAAjB,IAA+BmC,KAAa,CAACgO,MAA7C,IAAwDhO,KAAa,CAACgO,MAAd,CAAqBhP,MAA7E,GAAsF,KAAtF,GAA8F,IAAtG;;;;;;;AAOF,SAAgB+Q,sBAAsB/P;SAC5BA,KAAa,IAAInC,SAAjB,IAA+BmC,KAAa,CAACkE,KAAd,CAAoB,CAAC,WAAD,CAApB,EAAmCkK,SAAnC,CAA6C;IAAEC,IAAI,EAAE;GAArD,CAAvC;;;;;;;AAOD,SAAgB2B,gBAAgBhQ;SACvBA,KAAa,IAAInC,SAAjB,IAA+BmC,KAAa,CAACkE,KAAd,CAAoB,CAAC,SAAD,CAApB,EAAiCkK,SAAjC,CAA2C;IAAEC,IAAI,EAAE;GAAnD,CAAvC;;;;;;;AAQF,SAAgB4B,oBAAoBjQ;SAC1BA,KAAa,IAAInC,SAAjB,IAA+BmC,KAAa,CAAC6N,eAArD;;;;;;;;AAQF,SAAgBqC,cAAclQ,OAAuBmQ;MAC7CC,UAAU,GAAIpQ,KAAa,CAACkE,KAAd,CAAoB,CAAC,WAAD,EAAciM,QAAd,CAApB,CAApB;SACOC,UAAU,GAAIpQ,KAAa,CAACkE,KAAd,CAAoB,CAAC,WAAD,EAAciM,QAAd,CAApB,CAAJ,GAAmD,IAApE;;;;;;;AAOF,SAAgBE,kBAAkBrQ;SACxBA,KAAa,IAAInC,SAAjB,IAA+BmC,KAAa,CAACkE,KAAd,CAAoB,CAAC,WAAD,CAApB,CAAvC;;;AC9lBF,IAAMoM,UAAU,GAAG,SAAbA,UAAa,CAACnZ,KAAD;;;SACjBoZ,YAAY,CAAC;IACX1X,IAAI,EAAE;oCAC0B;QAC5B2X,SAAS,iBAAerZ,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBE,IADlB;QAE5BsB,KAAK,EAAK3B,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBE,IAA3B,gBAFuB;mBAGjB;UACTiZ,eAAe,EAAKtZ,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBE,IAA3B,gBADN;UAETsB,KAAK,EAAK3B,KAAK,CAACE,OAAN,CAAcI,SAAd,CAAwBC,KAA7B;SALqB;0BAOV;UAChB+Y,eAAe,EAAKtZ,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBE,IAA3B,gBADC;UAEhBsB,KAAK,EAAK3B,KAAK,CAACE,OAAN,CAAcI,SAAd,CAAwBC,KAA7B;;;KAXA;IAeXgZ,cAAc,EAAE;MACdD,eAAe,EAAEtZ,KAAK,CAACE,OAAN,CAAcI,SAAd,CAAwBC,KAD3B;MAEdiZ,OAAO,EAAE;KAjBA;IAmBXC,gBAAgB,EAAE;MAChBH,eAAe,EAAE;KApBR;IAsBXI,UAAU,EAAE;MACVC,SAAS,qBAAmB3Z,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBI,KADxC;MAEV+Y,eAAe,EAAE,OAFP;MAGVM,SAAS,EAAE,EAHD;MAIVC,YAAY,EAAE,CAJJ;MAKVC,OAAO,EAAE;KA3BA;IA8BXC,WAAW;MACTP,OAAO,EAAE,MADA;MAETQ,UAAU,EAAE,QAFH;MAGTC,cAAc,EAAE,UAHP;MAITH,OAAO,EAAE;OACN9Z,KAAK,CAACka,MAAN,CAAaC,OALP;kBAMG;QACVxY,KAAK,EAAE;;MArCA;IAwCXyY,gBAAgB;MACdC,SAAS,EAAE,QADG;MAEdC,UAAU,EAAEta,KAAK,CAACua,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;QAC5CC,MAAM,EAAEza,KAAK,CAACua,WAAN,CAAkBE,MAAlB,CAAyBC,KADW;QAE5CC,QAAQ,EAAE3a,KAAK,CAACua,WAAN,CAAkBI,QAAlB,CAA2BC;OAF3B,CAFE;MAMdC,KAAK,EAAE7a,KAAK,CAAC8a,OAAN,CAAc,CAAd;yBACN9a,KAAK,CAAC+a,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAPa,IAOgB;MAC5BH,KAAK,EAAE7a,KAAK,CAAC8a,OAAN,CAAc,CAAd;KARK,oBAUdG,UAVc,GAUFjb,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBE,IAVpB,oBAxCL;IAoDX6a,KAAK,EAAE;MACLpB,OAAO,EAAE9Z,KAAK,CAAC8a,OAAN,CAAc,CAAd,CADJ;MAELtB,OAAO,EAAE,MAFJ;MAGL2B,QAAQ,EAAE,MAHL;MAILC,aAAa,EAAE;KAxDN;IA0DXC,QAAQ,EAAE;MACRR,KAAK,EAAE,KADC;MAERI,UAAU,EAAEjb,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBC,IAF1B;MAGRuB,KAAK,EAAE,MAHC;MAIRiY,SAAS,EAAE,KAJH;MAKR0B,UAAU,EAAE,KALJ;MAMRC,WAAW,EAAE,KANL;MAORC,YAAY,EAAE,KAPN;iBAQG;QACTP,UAAU,EAAEjb,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBI;;KAnE3B;IAsEXkb,YAAY,EAAE;MACZ9Z,KAAK,EAAE;KAvEE;IAyEX+Z,cAAc,EAAE;MACdb,KAAK,EAAE,KADO;MAEdI,UAAU,EAAEjb,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBI,KAFpB;MAGdoB,KAAK,EAAE,MAHO;MAIdiY,SAAS,EAAE,KAJG;MAKd0B,UAAU,EAAE,KALE;MAMdC,WAAW,EAAE,KANC;MAOdC,YAAY,EAAE,KAPA;iBAQH;QACTP,UAAU,EAAEjb,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBI;;KAlF3B;IAqFXob,MAAM,EAAE;MACNC,WAAW,EAAE5b,KAAK,CAAC8a,OAAN,CAAc,CAAd,CADP;MAENnZ,KAAK,EAAE;KAvFE;IAyFXka,OAAO,EAAE;MACPhB,KAAK,EAAE,KADA;MAEPiB,MAAM,EAAE,QAFD;MAGPhC,OAAO,EAAE,CAHF;MAIPR,eAAe,EAAE,MAJV;MAKPkC,YAAY,EAAE;KA9FL;IAgGXO,UAAU,EAAE;MACVpa,KAAK,EAAE3B,KAAK,CAACE,OAAN,CAAc8b,MAAd,CAAqBC,KADlB;4BAEY;QACpBta,KAAK,EAAE3B,KAAK,CAACE,OAAN,CAAc8b,MAAd,CAAqBC,KADR;0BAEF;UAAEta,KAAK,EAAE3B,KAAK,CAACE,OAAN,CAAc8b,MAAd,CAAqBC,KAA9B;UAAqC3C,eAAe,EAAEtZ,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBC;SAF1E;mBAGT;UACTuB,KAAK,EAAE3B,KAAK,CAACE,OAAN,CAAc8b,MAAd,CAAqBC,KADnB;UAET3C,eAAe,EAAEtZ,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBE;;;KAvGlC;IA2GX6b,WAAW;MACT7B,SAAS,EAAE,QADF;MAETC,UAAU,EAAEta,KAAK,CAACua,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;QAC5CG,QAAQ,EAAE3a,KAAK,CAACua,WAAN,CAAkBI,QAAlB,CAA2BC,aADO;QAE5CH,MAAM,EAAEza,KAAK,CAACua,WAAN,CAAkBE,MAAlB,CAAyBC;OAFvB,CAFH;MAMTG,KAAK,EAAE7a,KAAK,CAAC8a,OAAN,CAAc,CAAd,IAAmB;oBACzB9a,KAAK,CAAC+a,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAPQ,IAOqB;MAC5BH,KAAK,EAAE7a,KAAK,CAAC8a,OAAN,CAAc,CAAd,IAAmB;KARnB,eAUTG,UAVS,GAUGjb,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBE,IAVzB,eA3GA;IAuHX8b,UAAU,EAAE;iBACC;QACTC,SAAS,EAAE;OAFH;MAIVA,SAAS,EAAE,QAJD;MAKV9B,UAAU,EAAEta,KAAK,CAACua,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;QAC5CG,QAAQ,EAAE3a,KAAK,CAACua,WAAN,CAAkBI,QAAlB,CAA2B0B,cADO;QAE5C5B,MAAM,EAAEza,KAAK,CAACua,WAAN,CAAkBE,MAAlB,CAAyBC;OAFvB;;GA5HJ,CADK;CAAnB;;ACuCA,SAAS4B,KAAT,CAAexa,KAAf;MAEIya,UAMEza,MANFya;MACAhT,UAKEzH,MALFyH;MACA6H,eAIEtP,MAJFsP;MACAkB,sBAGExQ,MAHFwQ;MACAnP,kBAEErB,MAFFqB;MACAqZ,oBACE1a,MADF0a;MAEIC,UAAU,GAAGtL,iBAAiB,CAACC,YAAD,EAAejO,eAAf,CAApC;MACIuZ,sBAAsB,GAAG,KAA7B;;MACItL,YAAY,CAACgD,OAAb,IAAwBhD,YAAY,CAACgD,OAAb,CAAqBC,UAAjD,EAA6D;QACvD,aAAa9N,IAAb,CAAkB6K,YAAY,CAACgD,OAAb,CAAqBC,UAAvC,CAAJ,EAAwD;MACtDqI,sBAAsB,GAAG,IAAzB;;;;MAGE1c,KAAK,GAAG2c,QAAQ,EAAtB;MACMC,SAAS,GAAGC,UAAU,CAAC1D,UAAU,CAACnZ,KAAD,CAAX,CAA5B;MACM8c,UAAU,GAAGF,SAAS,EAA5B;;MAEEJ,iBAAiB,KACbpL,YAAY,CAACgD,OAAb,IAAwBhD,YAAY,CAACgD,OAAb,CAAqB2I,QAA7C,GACA3L,YAAY,CAACgD,OAAb,CAAqB2I,QAArB,KAAkC,KADlC,GAEA,IAHa,CADnB,EAKE;WAEE5a,aAAA,CAAC6a,SAAD;MAAWC,eAAe;MAACC,KAAK,EAAE;QAAErD,YAAY,EAAE;;KAAlD,EACE1X,aAAA,CAACgb,gBAAD;MACE7a,SAAS,EAAEwa,UAAU,CAACpb;MACtB0b,UAAU,EAAEjb,aAAA,CAACkb,cAAD,MAAA;KAFd,EAIElb,aAAA,CAACmb,UAAD,MAAA,EAAab,UAAb,CAJF,CADF,EAOEta,aAAA,CAACob,gBAAD;MAAkBjb,SAAS,EAAEwa,UAAU,CAACvD;KAAxC,EACEpX,aAAA,CAACqb,SAAD;MAAWlb,SAAS,EAAEwa,UAAU,CAACpD;KAAjC,EACGtI,YAAY,CAACqM,QAAb,IACCtb,aAAA,CAACub,2BAAD;MACEnB,OAAO,EAAEA;MACToB,aAAa,EAAEvM,YAAY,CAACqM;MAC5BnL,mBAAmB,EAAKA,mBAAL,cAAiClB,YAAY,CAACjI,IAA9C;MACnBhG,eAAe,EAAEA;MACjBoG,OAAO,EAAEA;MACTmT,sBAAsB,EAAEA;KAN1B,CAFJ,CADF,CAPF,CADF;;;MA2BA5a,KAAK,CAAC8b,kCAAN,CACKtL,mBADL,cACiClB,YAAY,CAACjI,IAD9C,OADF,EAIE;IACArH,KAAK,CAAC+b,wCAAN,CACKvL,mBADL,cACiClB,YAAY,CAACjI,IAD9C;;;MAKA,CAACrH,KAAK,CAACgc,0BAAN,CAAiCxL,mBAAmB,GAAGlB,YAAY,CAACjI,IAApE,CADH,EAEE;IACArH,KAAK,CAACic,6BAAN,CACEzL,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;SAIK,IAAP;;;;;AAqBF,IAAM6U,eAAe,GAAG,SAAlBA,eAAkB,CACtBnV,KADsB,EAEtBoV,WAFsB;MAId7M,eAAsC6M,YAAtC7M;MAAckB,sBAAwB2L,YAAxB3L;;MAChB4L,8BAA8B,GAAG,SAAjCA,8BAAiC,CACrCrN,UADqC,EAErCY,aAFqC;WAGlC2G,sBAAsB,CAACvP,KAAD,EAAQgI,UAAR,EAAoBY,aAApB,CAHY;GAAvC;;MAIMqM,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACrM,aAAD;WACjC8G,kBAAkB,CAAC1P,KAAD,EAAQ4I,aAAR,CADe;GAAnC;;MAEMmM,kCAAkC,GAAG,SAArCA,kCAAqC,CAACnM,aAAD;WACzC+G,0BAA0B,CAAC3P,KAAD,EAAQ4I,aAAR,CADe;GAA3C;;MAEM0M,MAAM,GAAG;IACbD,8BAA8B,EAA9BA,8BADa;IAEb1B,iBAAiB,EAAEnK,yBAAyB,CAC1CjB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAF/B;IAObN,kCAAkC,EAAlCA,kCAPa;IAQbE,0BAA0B,EAA1BA;GARF;SAUOK,MAAP;CAvBF;;;;AA2BA,IAAMC,kBAAkB,GAAG;EACzBL,6BAA6B,EAAE5H,gBADN;EAEzB0H,wCAAwC,EAAEzH;CAF5C;;;AAMA,IAAMiI,cAAc;;AAAGC,OAAO,CAC5BN,eAD4B,EAE5BI,kBAF4B,CAAP,CAGrB9B,KAHqB,CAAvB;;IC5IMiC;;;;;;;;;;sBAiDI,GAAe,UAACC,MAAD;wBASjB,MAAK1c;UAPPwR,0BAAAA;UACAJ,yBAAAA;UACAuL,gCAAAA;UACArN,2BAAAA;UACAkB,kCAAAA;UACAoM,4BAAAA;UACAC,kCAAAA;UAEEC,aAAa,aAAc1L,UAAd,CAAjB;MACA0L,aAAa,GAAGA,aAAa,CAAC9G,MAAd;gBAEb+G,KAAD,EAAQjS,KAAR;eAAkBA,KAAK,KAAK0G,WAA5B;OAFc,CAAhB;MAIAmL,iBAAiB,CAACnM,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,EAA0CyV,aAA1C,CAAjB;MACAF,aAAa,CAACpM,mBAAmB,GAAG,SAAtB,GAAkClB,YAAY,CAACjI,IAA/C,GAAsD,GAAvD,CAAb;MACAwV,mBAAmB,CAACrM,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,EAA0CmK,WAA1C,CAAnB;KAjBM;;;;;;;SAhDDzR,SAAA;uBASD,KAAKC;QAPPya,uBAAAA;QACAhT,uBAAAA;QACApG,+BAAAA;QACAiO,4BAAAA;QACAkB,mCAAAA;QACAgB,2BAAAA;QACAwL,6BAAAA;QAEEpC,sBAAsB,GAAG,KAA7B;;QACItL,YAAY,CAACgD,OAAb,IAAwBhD,YAAY,CAACgD,OAAb,CAAqBC,UAAjD,EAA6D;UACvD,aAAa9N,IAAb,CAAkB6K,YAAY,CAACgD,OAAb,CAAqBC,UAAvC,CAAJ,EAAwD;QACtDqI,sBAAsB,GAAG,IAAzB;;;;WAIFva,4BAAA,MAAA;MAAKG,SAAS,EAAE;KAAhB,EACG8O,YAAY,CAACqM,QAAb,IACCtb,4BAAA,CAACub,2BAAD;MACEnB,OAAO,EAAEA;MACToB,aAAa,EAAEvM,YAAY,CAACqM;MAC5BnL,mBAAmB,EACjBA,mBAAmB,GACnB,SADA,GAEAlB,YAAY,CAACjI,IAFb,GAGA,GAHA,GAIAmK,WAJA,GAKA;MAEFnQ,eAAe,EAAEA;MACjBoG,OAAO,EAAEA;MACTmT,sBAAsB,EAAEA;KAb1B,CAFJ,EAmBGoC,aAAa,KAAK,KAAlB,GACC3c,4BAAA,MAAA;MAAKG,SAAS,EAAE;KAAhB,EACEH,4BAAA,OAAA;MAAM4c,OAAO,EAAE,KAAKC;KAApB,EACE7c,4BAAA,CAAC8c,eAAD;MAAiBC,IAAI,EAAC;MAAe5c,SAAS,EAAE;KAAhD,CADF,CADF,CADD,GAMG,IAzBN,CADF;;;;EAjBuBH,cAAK,CAACgd;;ICoB3BC;;;;;;;;;;0BAyEI,GAAmB,UAACZ,MAAD;wBACiC,MAAK1c;UAAvDoR,yBAAAA;UAAYZ,kCAAAA;UAAqBlB,2BAAAA;UACnCwN,aAAa,aAAO1L,UAAP,CAAnB;MACA0L,aAAa,CAAC5b,IAAd,CAAmB,EAAnB;;YACKlB,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEEyV,aAFF;KAJM;;;;;;;SAxED/c,SAAA;uBAYD,KAAKC;QAVPya,uBAAAA;QACAhT,uBAAAA;QACA2J,0BAAAA;QACA9B,4BAAAA;QACAkB,mCAAAA;QACAnP,+BAAAA;QACAqZ,iCAAAA;QACA6C,6CAAAA;QACAxB,wDAAAA;QACAyB,iDAAAA;QAEI7C,UAAU,GAAGtL,iBAAiB,CAACC,YAAD,EAAejO,eAAf,CAApC;;QACIqZ,iBAAJ,EAAuB;UACjB,CAACtJ,UAAL,EAAiB;aACVpR,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE,CAAC,EAAD,CAFF;;;aAOAhH,aAAA,CAACqb,SAAD;QAAWlb,SAAS,EAAE;OAAtB,EACEH,aAAA,CAACod,KAAD,MAAA,EAAQ9C,UAAR,CADF,EAEGvJ,UAAU;MAETA,UAAU,CAACpQ,GAAX,CAAe,UAAC0c,IAAD,EAAY5S,KAAZ;eACbzK,aAAA,MAAA;UAAKG,SAAS,EAAC;UAAqB4G,GAAG,EAAE,WAAW0D;SAApD,EACEzK,aAAA,CAACoc,YAAD;UACEhC,OAAO,EAAEA;UACTpZ,eAAe,EAAEA;UACjBiO,YAAY,EAAEA;UACdkB,mBAAmB,EAAEA;UACrBY,UAAU,EAAEA;UACZI,WAAW,EAAE1G;UACb6R,iBAAiB,EAAEY;UACnBX,aAAa,EAAEb;UACfc,mBAAmB,EAAEW;UACrB/V,OAAO,EAAEA;UACTuV,aAAa,EAAE;SAXjB,CADF,CADa;OAAf,CAJJ,EAqBE3c,aAAA,MAAA,MAAA,EACEA,aAAA,OAAA;QAAM4c,OAAO,EAAE,KAAKU;OAApB,EACEtd,aAAA,CAAC8c,eAAD;QAAiBC,IAAI,EAAC;QAAc5c,SAAS,EAAE;OAA/C,CADF,CADF,CArBF,CADF;KARF,MAqCO;UAEH,KAAKR,KAAL,CAAW8b,kCAAX,CACEtL,mBAAmB,GAAG,SAAtB,GAAkClB,YAAY,CAACjI,IAA/C,GAAsD,GADxD,CADF,EAIE;aACKrH,KAAL,CAAW+b,wCAAX,CACEvL,mBAAmB,GAAG,SAAtB,GAAkClB,YAAY,CAACjI,IAA/C,GAAsD,GADxD;;;UAIE+J,UAAJ,EAAgB;aACTpR,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE,IAFF;;;aAKK,IAAP;;;;;EApEyBhH;;;;AAuG/B,IAAM6b,iBAAe,GAAG,SAAlBA,eAAkB,CACtBnV,KADsB,EAEtBoV,WAFsB;MAId7M,eAAsC6M,YAAtC7M;MAAckB,sBAAwB2L,YAAxB3L;;MAChB4L,8BAA8B,GAAG,SAAjCA,8BAAiC,CACrCrN,UADqC,EAErCY,aAFqC;WAGlC2G,sBAAsB,CAACvP,KAAD,EAAQgI,UAAR,EAAoBY,aAApB,CAHY;GAAvC;;MAIMqM,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACrM,aAAD;WACjC8G,kBAAkB,CAAC1P,KAAD,EAAQ4I,aAAR,CADe;GAAnC;;MAEMmM,kCAAkC,GAAG,SAArCA,kCAAqC,CAACnM,aAAD;WACzC+G,0BAA0B,CAAC3P,KAAD,EAAQ4I,aAAR,CADe;GAA3C;;MAEM0M,MAAM,GAAG;IACbjL,UAAU,EAAEgF,aAAa,CAACrP,KAAD,EAAQyJ,mBAAmB,GAAGlB,YAAY,CAACjI,IAA3C,CADZ;IAEb+U,8BAA8B,EAA9BA,8BAFa;IAGb1B,iBAAiB,EAAEnK,yBAAyB,CAC1CjB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAH/B;IAQbN,kCAAkC,EAAlCA,kCARa;IASbE,0BAA0B,EAA1BA;GATF;SAWOK,MAAP;CAxBF;;;;AA4BA,IAAMC,oBAAkB,GAAG;EACzBiB,6BAA6B,EAAE1J,sBADN;EAEzBoI,6BAA6B,EAAE5H,gBAFN;EAGzB0H,wCAAwC,EAAEzH,2BAHjB;EAIzBkJ,iCAAiC,EAAEzJ;CAJrC;;;AAQA,IAAM6J,yBAAyB;;AAAGpB,OAAO,CACvCN,iBADuC,EAEvCI,oBAFuC,CAAP,CAGhCgB,gBAHgC,CAAlC;;ICvIMO;;;;;;;;;;;SACG9d,SAAA;sBAaD,KAAKC;QAXPya,sBAAAA;QACAhT,sBAAAA;QACA2J,yBAAAA;QACA9B,2BAAAA;QACAkB,kCAAAA;QACAnP,8BAAAA;QACAqZ,gCAAAA;QACAvT,yBAAAA;QACAoW,4CAAAA;QACAxB,uDAAAA;QACAyB,gDAAAA;QAEI7C,UAAU,GAAGtL,iBAAiB,CAACC,YAAD,EAAejO,eAAf,CAApC;;QACIqZ,iBAAJ,EAAuB;UACjB,CAACtJ,UAAL,EAAiB;aACVpR,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE,EAFF;;;UAMEyW,WAAW,GAAW,CAA1B;;UAEIxO,YAAY,CAACgD,OAAjB,EAA0B;YAClByL,OAAO,GAAW,UAAxB;YACMC,GAAG,GAAQ1O,YAAY,CAACgD,OAAb,CAAqByL,OAArB,CAAjB;;YAEI,YAAYtZ,IAAZ,CAAiBuZ,GAAjB,CAAJ,EAA2B;UACzBF,WAAW,GAAGrU,QAAQ,CAACuU,GAAD,EAAM,EAAN,CAAtB;SADF,MAEO;cACCpd,KAAK,GAAQ,KAAKZ,KAAL,CAAWoc,8BAAX,CACjB4B,GADiB,EAEjBxN,mBAAmB,GAAGlB,YAAY,CAACjI,IAFlB,CAAnB;;cAIIzG,KAAJ,EAAW;YACTkd,WAAW,GAAGrU,QAAQ,CAAC7I,KAAD,EAAQ,EAAR,CAAtB;;;;;UAMJwQ,UAAU,IACVA,UAAU,CAACrL,MAAX,KAAsB,CADtB,IAEA+X,WAAW,KAAK,CAFhB,IAGA,KAAK9d,KAAL,CAAW8b,kCAAX,CACEtL,mBAAmB,GAAG,SAAtB,GAAkClB,YAAY,CAACjI,IAA/C,GAAsD,GADxD,CAJF,EAOE;aACKrH,KAAL,CAAW+b,wCAAX,CACEvL,mBAAmB,GAAG,SAAtB,GAAkClB,YAAY,CAACjI,IAA/C,GAAsD,GADxD;;;UAKE+J,UAAU,IAAIA,UAAU,CAACrL,MAAX,GAAoB,CAAlC,IAAuC+X,WAAW,KAAK,CAA3D,EAA8D;aACvDG,eAAL;aACKje,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE,EAFF;;;UAMEF,UAAU,IAAI+W,CAAC,CAACC,IAAF,CAAOhX,UAAP,IAAqB2W,WAAnC,IAAkDA,WAAW,KAAK,CAAtE,EAAyE;aAClE9d,KAAL,CAAWoe,6BAAX,CACE,KAAKpe,KAAL,CAAWwQ,mBAAX,GAAiC,KAAKxQ,KAAL,CAAWsP,YAAX,CAAwBjI,IAD3D,EAEE,EAFF;;;UAMEyW,WAAW,GAAG,CAAlB,EAAqB;YACbhB,aAAa,aAAO1L,UAAP,CAAnB;;YAEIA,UAAU,IAAIA,UAAU,CAACrL,MAAX,GAAoB+X,WAAtC,EAAmD;cAC3CO,OAAO,GAAGP,WAAW,GAAG1M,UAAU,CAACrL,MAAzC;;eACK,IAAImG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmS,OAApB,EAA6BnS,CAAC,EAA9B,EAAkC;YAChC4Q,aAAa,CAAC5b,IAAd,CAAmB,EAAnB;;;;YAIAkQ,UAAU,IAAIA,UAAU,CAACrL,MAAX,GAAoB+X,WAAtC,EAAmD;cAC3CO,QAAO,GAAGjN,UAAU,CAACrL,MAAX,GAAoB+X,WAApC;;eACK,IAAIjX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwX,QAApB,EAA6BxX,CAAC,EAA9B,EAAkC;YAChCiW,aAAa,CAACnR,GAAd;;;eAEG3L,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEEyV,aAFF;eAIKmB,eAAL;;;YAGE9W,UAAU,IAAI+W,CAAC,CAACC,IAAF,CAAOhX,UAAP,IAAqB2W,WAAvC,EAAoD;cAC5CO,SAAO,GAAGH,CAAC,CAACC,IAAF,CAAOhX,UAAP,IAAqB2W,WAArC;;eACK9d,KAAL,CAAWoe,6BAAX,CACE,KAAKpe,KAAL,CAAWwQ,mBAAX,GAAiC,KAAKxQ,KAAL,CAAWsP,YAAX,CAAwBjI,IAD3D,EAEEd,KAAK,CAAC4H,SAAN,CAAgBmQ,KAAhB,CAAsBjQ,IAAtB,CAA2BlH,UAA3B,EAAuCkX,SAAvC,CAFF;eAIKJ,eAAL;;;eAIA5d,aAAA,CAACqb,SAAD;UAAWlb,SAAS,EAAE;SAAtB,EACEH,aAAA,CAACod,KAAD,MAAA,EAAQ9C,UAAR,CADF,EAEGmC,aAAa;QAEZA,aAAa,CAAC9b,GAAd,CAAkB,UAAC0c,IAAD,EAAY5S,KAAZ;iBAChBzK,aAAA,MAAA;YAAKG,SAAS,EAAC;YAAqB4G,GAAG,EAAE,WAAW0D;WAApD,EACEzK,aAAA,CAACoc,YAAD;YACEhC,OAAO,EAAEA;YACTpZ,eAAe,EAAEA;YACjBiO,YAAY,EAAEA;YACdkB,mBAAmB,EAAEA;YACrBY,UAAU,EAAEA;YACZI,WAAW,EAAE1G;YACb6R,iBAAiB,EAAEY;YACnBX,aAAa,EAAEb;YACfc,mBAAmB,EAAEW;YACrB/V,OAAO,EAAEA;YACTuV,aAAa,EAAE;WAXjB,CADF,CADgB;SAAlB,CAJJ,CADF;OA/BF,MAuDO;eACE,IAAP;;KA/GJ,MAiHO;WACAiB,eAAL;;UACI7M,UAAJ,EAAgB;aACTpR,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE,IAFF;;;aAKK,IAAP;;;;SAII4W,kBAAA;QAEJ,KAAKje,KAAL,CAAW8b,kCAAX,CACE,KAAK9b,KAAL,CAAWwQ,mBAAX,GACE,SADF,GAEE,KAAKxQ,KAAL,CAAWsP,YAAX,CAAwBjI,IAF1B,GAGE,GAJJ,CADF,EAOE;WACKrH,KAAL,CAAW+b,wCAAX,CACE,KAAK/b,KAAL,CAAWwQ,mBAAX,GACE,SADF,GAEE,KAAKxQ,KAAL,CAAWsP,YAAX,CAAwBjI,IAF1B,GAGE,GAJJ;;;;;EAtJ2BhH;;;;AAoLjC,IAAM6b,iBAAe,GAAG,SAAlBA,eAAkB,CACtBnV,KADsB,EAEtBoV,WAFsB;MAId7M,eAAsC6M,YAAtC7M;MAAckB,sBAAwB2L,YAAxB3L;;MAChB4L,8BAA8B,GAAG,SAAjCA,8BAAiC,CACrCrN,UADqC,EAErCY,aAFqC;WAGlC2G,sBAAsB,CAACvP,KAAD,EAAQgI,UAAR,EAAoBY,aAApB,CAHY;GAAvC;;MAIMqM,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACrM,aAAD;WACjC8G,kBAAkB,CAAC1P,KAAD,EAAQ4I,aAAR,CADe;GAAnC;;MAEMmM,kCAAkC,GAAG,SAArCA,kCAAqC,CAACnM,aAAD;WACzC+G,0BAA0B,CAAC3P,KAAD,EAAQ4I,aAAR,CADe;GAA3C;;MAEM0M,MAAM,GAAG;IACbjL,UAAU,EAAEgF,aAAa,CAACrP,KAAD,EAAQyJ,mBAAmB,GAAGlB,YAAY,CAACjI,IAA3C,CADZ;IAEb+U,8BAA8B,EAA9BA,8BAFa;IAGb1B,iBAAiB,EAAEnK,yBAAyB,CAC1CjB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAH/B;IAQbN,kCAAkC,EAAlCA,kCARa;IASbE,0BAA0B,EAA1BA,0BATa;IAUb7U,UAAU,EAAEkP,aAAa,CAACtP,KAAD,EAAQyJ,mBAAmB,GAAGlB,YAAY,CAACjI,IAA3C;GAV3B;SAYOgV,MAAP;CAzBF;;;;AA6BA,IAAMC,oBAAkB,GAAG;EACzBiB,6BAA6B,EAAE1J,sBADN;EAEzBuK,6BAA6B,EAAEtK,sBAFN;EAGzBmI,6BAA6B,EAAE5H,gBAHN;EAIzB0H,wCAAwC,EAAEzH,2BAJjB;EAKzBkJ,iCAAiC,EAAEzJ;CALrC;;;AASA,IAAMwK,2BAA2B;;AAAG/B,OAAO,CACzCN,iBADyC,EAEzCI,oBAFyC,CAAP,CAGlCuB,kBAHkC,CAApC;;ICvPMW;;;;;;;;;;;SACGze,SAAA;QACGuP,eAAiB,KAAKtP,MAAtBsP;;QACJA,YAAY,CAACgD,OAAb,IAAwBhD,YAAY,CAACgD,OAAb,CAAqB,UAArB,CAA5B,EAA8D;aACrDjS,aAAA,CAACwd,2BAAD,oBAAwB,KAAK7d,MAA7B,CAAP;;;WAEKK,aAAA,CAACid,yBAAD,oBAAsB,KAAKtd,MAA3B,CAAP;;;;EANiBK;;ICqBfoe;;;;;;;;;;;SACG1e,SAAA;sBAQD,KAAKC;QANPsP,2BAAAA;QACAkB,kCAAAA;QACAY,yBAAAA;QACAsJ,gCAAAA;QACA0B,6CAAAA;QACAsC,uCAAAA;QAEIrO,UAAU,GAAGD,eAAe,CAACd,YAAD,CAAlC;QACMqP,kBAAkB,GAAGtO,UAAU,KAAK,CAACe,UAAD,IAAeA,UAAU,KAAK,EAAnC,CAArC;QACMH,oBAAoB,GACxBG,UAAU,IACVA,UAAU,KAAK,EADf,IAEAL,6BAA6B,CAC3BzB,YAD2B,EAE3BkB,mBAF2B,EAG3B4L,8BAH2B,CAH/B;;QASI1B,iBAAJ,EAAuB;UACjBtJ,UAAU,IAAI,IAAd,IAAsB,aAAa9B,YAAvC,EAAqD;aAC9CtP,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEEiI,YAAY,WAFd;;;UAKIsP,UAAU,GAAGhO,yBAAyB,CAC1CtB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAA5C;;UAOE,CAACuC,kBAAkB,IAAI1N,oBAAvB,KACA,CAACyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAF3B,EAGE;aACKrH,KAAL,CAAW6e,4BAAX,CACErO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;OAJF,MAOO,IACL,CAACsX,kBAAD,IACA,CAAC1N,oBADD,IAEAyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAHnB,EAIL;aACKrH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;UAIE0X,eAAe,GAAQ,EAA3B;;UACIzP,YAAY,CAACY,IAAb,IAAqBZ,YAAY,CAACY,IAAb,CAAkB8O,SAA3C,EAAsD;QACpDD,eAAe,GAAG,KAAK/e,KAAL,CAAWoc,8BAAX,CAChB9M,YAAY,CAACY,IAAb,CAAkB8O,SADF,EAEhBxO,mBAAmB,GAAGlB,YAAY,CAACjI,IAFnB,CAAlB;;;UAME0X,eAAe,IAAI3N,UAAU,KAAK2N,eAAtC,EAAuD;aAChD/e,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE0X,eAFF;;;aAOA1e,aAAA,MAAA,MAAA,EACEA,aAAA,CAAC4e,KAAD;QACE7b,IAAI,EAAC;QACLiE,IAAI,EAAEiI,YAAY,CAACjI;QACnBzG,KAAK,EAAEme,eAAe,IAAI;QAC1BG,QAAQ,EAAEN;OAJZ,CADF,CADF;KA5CF,MAsDO;UACDxN,UAAU,IAAI,IAAlB,EAAwB;aACjBpR,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE,IAFF;;YAIIqX,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAA5B,EAAuE;eAChErH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;;aAKG,IAAP;;;;;EAvFkBhH;;;;AA6GxB,IAAM6b,iBAAe,GAAG,SAAlBA,eAAkB,CACtBnV,KADsB,EAEtBoV,WAFsB;MAId7M,eAAsC6M,YAAtC7M;MAAckB,sBAAwB2L,YAAxB3L;;MAChB4L,8BAA8B,GAAG,SAAjCA,8BAAiC,CACrCrN,UADqC,EAErCY,aAFqC;WAGlC2G,sBAAsB,CAACvP,KAAD,EAAQgI,UAAR,EAAoBY,aAApB,CAHY;GAAvC;;MAIM+O,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAC/O,aAAD;WAC/B6G,gBAAgB,CAACzP,KAAD,EAAQ4I,aAAR,CADe;GAAjC;;MAEM0M,MAAM,GAAG;IACbjL,UAAU,EAAEgF,aAAa,CAACrP,KAAD,EAAQyJ,mBAAmB,GAAGlB,YAAY,CAACjI,IAA3C,CADZ;IAEb+U,8BAA8B,EAA9BA,8BAFa;IAGb1B,iBAAiB,EAAEnK,yBAAyB,CAC1CjB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAH/B;IAQbsC,wBAAwB,EAAxBA;GARF;SAUOrC,MAAP;CArBF;;;;AAyBA,IAAMC,oBAAkB,GAAG;EACzBuC,4BAA4B,EAAE1K,eADL;EAEzBoJ,6BAA6B,EAAE1J,sBAFN;EAGzBiL,+BAA+B,EAAE1K;CAHnC;;;AAOA,IAAM+K,kBAAkB;;AAAG3C,OAAO,CAChCN,iBADgC,EAEhCI,oBAFgC,CAAP,CAGzBmC,SAHyB,CAA3B;;ICtIMW;;;;;;;;;;;;;yBA0II,GAAkB,UAAC1e,KAAD;YACnBV,KAAL,CAAWud,6BAAX,CACE,MAAKvd,KAAL,CAAWwQ,mBAAX,GAAiC9P,KAAK,CAAC2e,aAAN,CAAoBhY,IADvD,EAEE3G,KAAK,CAAC2e,aAAN,CAAoBze,KAApB,KAA8B,EAA9B,GACI,IAAIoH,IAAJ,CAAStH,KAAK,CAAC2e,aAAN,CAAoBze,KAA7B,CADJ,GAEI,IAJN;KADM;;;;;;;SAzIDb,SAAA;sBAUD,KAAKC;QARPsP,2BAAAA;QACAkB,kCAAAA;QACAY,yBAAAA;QACAsJ,gCAAAA;QACA0B,6CAAAA;QACAkD,0CAAAA;QACAZ,uCAAAA;QACArd,8BAAAA;QAEIgP,UAAU,GAAGD,eAAe,CAACd,YAAD,CAAlC;QACMsF,eAAe,GAAY0K,2BAAjC;QACMX,kBAAkB,GAAGtO,UAAU,KAAK,CAACe,UAAD,IAAeA,UAAU,KAAK,EAAnC,CAArC;QACMH,oBAAoB,GACxBG,UAAU,IACVA,UAAU,KAAK,EADf,IAEAL,6BAA6B,CAC3BzB,YAD2B,EAE3BkB,mBAF2B,EAG3B4L,8BAH2B,CAH/B;QAQMzB,UAAU,GAAGtL,iBAAiB,CAACC,YAAD,EAAejO,eAAf,CAApC;QACMke,kBAAkB,GAAG/P,iCAAiC,CAC1D4M,8BAD0D,EAE1DzB,UAF0D,EAG1DnK,mBAAmB,GAAGlB,YAAY,CAACjI,IAHuB,CAA5D;QAKMmY,eAAe,GAAGvP,sBAAsB,CAC5CX,YAD4C,EAE5CjO,eAF4C,CAA9C;QAIMoe,uBAAuB,GAAGjQ,iCAAiC,CAC/D4M,8BAD+D,EAE/DoD,eAF+D,EAG/DhP,mBAAmB,GAAGlB,YAAY,CAACjI,IAH4B,CAAjE;QAKMqY,SAAS,GAAGnQ,gBAAgB,CAACD,YAAD,EAAejO,eAAf,CAAlC;;QACIqZ,iBAAJ,EAAuB;UACjBtJ,UAAU,IAAI,IAAd,IAAsB,aAAa9B,YAAvC,EAAqD;aAC9CtP,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEEiI,YAAY,WAFd;;;UAKIsP,UAAU,GAAGhO,yBAAyB,CAC1CtB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAA5C;;UAME,CAACuC,kBAAkB,IAAI1N,oBAAvB,KACA,CAACyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAF3B,EAGE;aACKrH,KAAL,CAAW6e,4BAAX,CACErO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;OAJF,MAOO,IACL,CAACsX,kBAAD,IACA,CAAC1N,oBADD,IAEAyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAHnB,EAIL;aACKrH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;UAIEsY,YAAY,GAAW,EAA3B;;UACIvO,UAAU,IAAIA,UAAU,KAAK,EAAjC,EAAqC;YAC7BwO,YAAY,GAAG,IAAI5X,IAAJ,CAASoJ,UAAT,CAArB;QACAuO,YAAY,GAAGC,YAAY,CAACC,WAAb,GAA2BvB,KAA3B,CAAiC,CAAjC,EAAoC,EAApC,CAAf;;;UAIES,eAAe,GAAQ,EAA3B;;UACIzP,YAAY,CAACY,IAAb,IAAqBZ,YAAY,CAACY,IAAb,CAAkB8O,SAA3C,EAAsD;QACpDD,eAAe,GAAG,KAAK/e,KAAL,CAAWoc,8BAAX,CAChB9M,YAAY,CAACY,IAAb,CAAkB8O,SADF,EAEhBxO,mBAAmB,GAAGlB,YAAY,CAACjI,IAFnB,CAAlB;;;UAME0X,eAAe,IAAI3N,UAAU,KAAK2N,eAAtC,EAAuD;aAChD/e,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE0X,eAFF;;;UAMIe,OAAO,GAAGpB,wBAAwB,CACtClO,mBAAmB,GAAGlB,YAAY,CAACjI,IADG,CAAxC;aAIEhH,aAAA,CAACqb,SAAD,MAAA,EACErb,aAAA,CAACod,KAAD,MAAA,EACG8B,kBADH,EACuB,GADvB,EAEGlP,UAAU,IACThQ,aAAA,OAAA;QAAMG,SAAS,EAAC;OAAhB,EAAsCkC,eAAtC,CAHJ,CADF,EAOErC,aAAA,CAAC4e,KAAD;QACE7b,IAAI,EAAC;QACLiE,IAAI,EAAEiI,YAAY,CAACjI;QACnB5F,QAAQ,EAAE,KAAKC;QACfd,KAAK,EAAE+e,YAAY,IAAIZ,eAAhB,IAAmC;QAC1CG,QAAQ,EAAEN;OALZ,CAPF,EAcGhK,eAAe,IAAIkL,OAAnB,IACCzf,aAAA,CAAC8c,eAAD;QAAiBC,IAAI,EAAC;QAAqB5c,SAAS,EAAC;OAArD,CAfJ,EAiBG8O,YAAY,CAACzQ,IAAb,IAAqBwB,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAA6Bkf,SAA7B,CAjBxB,EAkBG9K,eAAe,IAAI+J,kBAAnB,IACCte,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAiCiC,kBAAjC,CAnBJ,EAqBGwO,oBAAoB,IACnB5Q,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAmCif,uBAAnC,CAtBJ,CADF;KArDF,MAgFO;UACDrO,UAAU,IAAI,IAAlB,EAAwB;aACjBpR,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE,IAFF;;YAIIqX,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAA5B,EAAuE;eAChErH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;;aAKG,IAAP;;;;;EAnIehH;;;;AAsKrB,IAAM6b,iBAAe,GAAG,SAAlBA,eAAkB,CACtBnV,KADsB,EAEtBoV,WAFsB;MAId7M,eAAsC6M,YAAtC7M;MAAckB,sBAAwB2L,YAAxB3L;;MAChB4L,8BAA8B,GAAG,SAAjCA,8BAAiC,CACrCrN,UADqC,EAErCY,aAFqC;WAGlC2G,sBAAsB,CAACvP,KAAD,EAAQgI,UAAR,EAAoBY,aAApB,CAHY;GAAvC;;MAIM+O,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAC/O,aAAD;WAC/B6G,gBAAgB,CAACzP,KAAD,EAAQ4I,aAAR,CADe;GAAjC;;MAEM2P,2BAA2B,GAAGtI,mBAAmB,CAACjQ,KAAD,CAAvD;MACMsV,MAAM,GAAG;IACbjL,UAAU,EAAEgF,aAAa,CAACrP,KAAD,EAAQyJ,mBAAmB,GAAGlB,YAAY,CAACjI,IAA3C,CADZ;IAEb+U,8BAA8B,EAA9BA,8BAFa;IAGbkD,2BAA2B,EAA3BA,2BAHa;IAIb5E,iBAAiB,EAAEnK,yBAAyB,CAC1CjB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAJ/B;IASbsC,wBAAwB,EAAxBA;GATF;SAWOrC,MAAP;CAvBF;;;;AA2BA,IAAMC,oBAAkB,GAAG;EACzBuC,4BAA4B,EAAE1K,eADL;EAEzBoJ,6BAA6B,EAAE1J,sBAFN;EAGzBiL,+BAA+B,EAAE1K;CAHnC;;;AAOA,IAAM2L,aAAa;;AAAGvD,OAAO,CAC3BN,iBAD2B,EAE3BI,oBAF2B,CAAP,CAGpB8C,MAHoB,CAAtB;;ICrMMY;;;;;;;;;;sBAmII,GAAe,UAAC3Y,IAAD;aAAe,UAACzG,KAAD;YAC9Bgf,YAAY,GAAQ,IAAI5X,IAAJ,CAASpH,KAAT,CAA1B;YACMqf,cAAc,GAAGL,YAAY,CAACM,iBAAb,KAAmC,EAA1D;QACAN,YAAY,CAAC3X,QAAb,CAAsB2X,YAAY,CAACO,QAAb,KAA0BF,cAAhD;;cACKjgB,KAAL,CAAWud,6BAAX,CACE,MAAKvd,KAAL,CAAWwQ,mBAAX,GAAiCnJ,IADnC,EAEEzG,KAAK,KAAK,EAAV,GAAegf,YAAf,GAA8B,IAFhC;OAJqB;KAAf;;;;;;;SAlID7f,SAAA;sBAUD,KAAKC;QARPsP,2BAAAA;QACAkB,kCAAAA;QACAY,yBAAAA;QACAsJ,gCAAAA;QACA0B,6CAAAA;QACAkD,0CAAAA;QACAZ,uCAAAA;QACArd,8BAAAA;QAEIgP,UAAU,GAAGD,eAAe,CAACd,YAAD,CAAlC;QACMsF,eAAe,GAAY0K,2BAAjC;QACMX,kBAAkB,GAAGtO,UAAU,KAAK,CAACe,UAAD,IAAeA,UAAU,KAAK,EAAnC,CAArC;QACMH,oBAAoB,GACxBG,UAAU,IACVA,UAAU,KAAK,EADf,IAEAL,6BAA6B,CAC3BzB,YAD2B,EAE3BkB,mBAF2B,EAG3B4L,8BAH2B,CAH/B;QAQMzB,UAAU,GAAGtL,iBAAiB,CAACC,YAAD,EAAejO,eAAf,CAApC;QACMke,kBAAkB,GAAG/P,iCAAiC,CAC1D4M,8BAD0D,EAE1DzB,UAF0D,EAG1DnK,mBAAmB,GAAGlB,YAAY,CAACjI,IAHuB,CAA5D;QAMMmY,eAAe,GAAGvP,sBAAsB,CAC5CX,YAD4C,EAE5CjO,eAF4C,CAA9C;QAIMoe,uBAAuB,GAAGjQ,iCAAiC,CAC/D4M,8BAD+D,EAE/DoD,eAF+D,EAG/DhP,mBAAmB,GAAGlB,YAAY,CAACjI,IAH4B,CAAjE;QAKMqY,SAAS,GAAGnQ,gBAAgB,CAACD,YAAD,EAAejO,eAAf,CAAlC;;QACIqZ,iBAAJ,EAAuB;UACjBtJ,UAAU,IAAI,IAAd,IAAsB,aAAa9B,YAAvC,EAAqD;aAC9CtP,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEEiI,YAAY,WAFd;;;UAKIsP,UAAU,GAAGhO,yBAAyB,CAC1CtB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAA5C;;UAME,CAACuC,kBAAkB,IAAI1N,oBAAvB,KACA,CAACyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAF3B,EAGE;aACKrH,KAAL,CAAW6e,4BAAX,CACErO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;OAJF,MAOO,IACL,CAACsX,kBAAD,IACA,CAAC1N,oBADD,IAEAyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAHnB,EAIL;aACKrH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;UAKIyY,OAAO,GAAGpB,wBAAwB,CACtClO,mBAAmB,GAAGlB,YAAY,CAACjI,IADG,CAAxC;UAIIuY,YAAY,GAAQ,IAAxB;;UACIxO,UAAJ,EAAgB;QACdwO,YAAY,GAAG,IAAI5X,IAAJ,CAASoJ,UAAT,CAAf;YACM6O,cAAc,GAAGL,YAAY,CAACM,iBAAb,KAAmC,EAA1D;QACAN,YAAY,CAAC3X,QAAb,CAAsB2X,YAAY,CAACO,QAAb,KAA0BF,cAAhD;;;aAIA5f,aAAA,CAACqb,SAAD,MAAA,EACErb,aAAA,CAACod,KAAD,MAAA,EACG8B,kBADH,EACuB,GADvB,EAEGlP,UAAU,IACThQ,aAAA,OAAA;QAAMG,SAAS,EAAC;OAAhB,EAAsCkC,eAAtC,CAHJ,CADF,EAOErC,aAAA,KAAA,MAAA,CAPF,EAQEA,aAAA,CAAC+f,UAAD;QACE/Y,IAAI,EAAEiI,YAAY,CAACjI;QACnBgZ,QAAQ,EAAEjP,UAAU,GAAGwO,YAAH,GAAkB;QACtCne,QAAQ,EAAE,KAAKyb,YAAL,CAAkB5N,YAAY,CAACjI,IAA/B;QACViZ,cAAc,EAAE;QAChBC,UAAU,EAAC;QACXC,aAAa,EAAE;QACfC,WAAW,EAAC;QACZC,UAAU,EAAC;QACXC,eAAe,EAAC;QAChBngB,SAAS,EAAC;QACV0e,QAAQ,EAAEN;OAXZ,CARF,EAqBEve,aAAA,KAAA,MAAA,CArBF,EAsBGuU,eAAe,IAAIkL,OAAnB,IACCzf,aAAA,CAAC8c,eAAD;QAAiBC,IAAI,EAAC;QAAqB5c,SAAS,EAAC;OAArD,CAvBJ,EAyBG8O,YAAY,CAACzQ,IAAb,IAAqBwB,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAA6Bkf,SAA7B,CAzBxB,EA0BG9K,eAAe,IAAI+J,kBAAnB,IACCte,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAiCiC,kBAAjC,CA3BJ,EA6BGwO,oBAAoB,IACnB5Q,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAmCif,uBAAnC,CA9BJ,CADF;KAxCF,MA2EO;UACDrO,UAAU,IAAI,IAAlB,EAAwB;aACjBpR,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE,IAFF;;YAIIqX,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAA5B,EAAuE;eAChErH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;;aAKG,IAAP;;;;;EA/HiBhH;;;;AAgKvB,IAAM6b,iBAAe,GAAG,SAAlBA,eAAkB,CACtBnV,KADsB,EAEtBoV,WAFsB;MAId7M,eAAsC6M,YAAtC7M;MAAckB,sBAAwB2L,YAAxB3L;;MAChB4L,8BAA8B,GAAG,SAAjCA,8BAAiC,CACrCrN,UADqC,EAErCY,aAFqC;WAGlC2G,sBAAsB,CAACvP,KAAD,EAAQgI,UAAR,EAAoBY,aAApB,CAHY;GAAvC;;MAIM+O,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAC/O,aAAD;WAC/B6G,gBAAgB,CAACzP,KAAD,EAAQ4I,aAAR,CADe;GAAjC;;MAEM2P,2BAA2B,GAAGtI,mBAAmB,CAACjQ,KAAD,CAAvD;MACMsV,MAAM,GAAG;IACbjL,UAAU,EAAEgF,aAAa,CAACrP,KAAD,EAAQyJ,mBAAmB,GAAGlB,YAAY,CAACjI,IAA3C,CADZ;IAEb+U,8BAA8B,EAA9BA,8BAFa;IAGbkD,2BAA2B,EAA3BA,2BAHa;IAIb5E,iBAAiB,EAAEnK,yBAAyB,CAC1CjB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAJ/B;IASbsC,wBAAwB,EAAxBA;GATF;SAWOrC,MAAP;CAvBF;;;;AA2BA,IAAMC,oBAAkB,GAAG;EACzBuC,4BAA4B,EAAE1K,eADL;EAEzBoJ,6BAA6B,EAAE1J,sBAFN;EAGzBiL,+BAA+B,EAAE1K;CAHnC;;;AAOA,IAAMwM,iBAAiB;;AAAGpE,OAAO,CAC/BN,iBAD+B,EAE/BI,oBAF+B,CAAP,CAGxB0D,QAHwB,CAA1B;;IChMMa;;;;;mBACQ7gB,KAAZ;;;wCACQA,KAAN;;;;;yBAmKM,GAAkB,UAACU,KAAD;YACnBogB,QAAL,cACK,MAAK/Z,KADV;QAEEqK,UAAU,EAAE1Q,KAAK,CAAC2e,aAAN,CAAoBze,KAApB,IAA6B,EAF3C;QAGEmgB,SAAS,EAAE;;KAJP;;uBAQA,GAAgB,UAACrgB,KAAD;YACjBogB,QAAL,cACK,MAAK/Z,KADV;QAEEqK,UAAU,EAAE1Q,KAAK,CAAC2e,aAAN,CAAoBze,KAApB,IAA6B,EAF3C;QAGEmgB,SAAS,EAAE;;;YAER/gB,KAAL,CAAWud,6BAAX,CACE,MAAKvd,KAAL,CAAWwQ,mBAAX,GAAiC9P,KAAK,CAAC2e,aAAN,CAAoBhY,IADvD,EAEE3G,KAAK,CAAC2e,aAAN,CAAoBze,KAApB,KAA8B,EAA9B,GACIuI,UAAU,CAACzI,KAAK,CAAC2e,aAAN,CAAoBze,KAArB,CADd,GAEI,IAJN;KANM;;UA1KDmG,KAAL,GAAa;MAAEqK,UAAU,EAAE,EAAd;MAAkB2P,SAAS,EAAE;KAA1C;;;;;;SAEKhhB,SAAA;sBAUD,KAAKC;QARPsP,2BAAAA;QACAkB,kCAAAA;QACAY,yBAAAA;QACAsJ,gCAAAA;QACA0B,6CAAAA;QACAkD,0CAAAA;QACAZ,uCAAAA;QACArd,8BAAAA;QAGIgP,UAAU,GAAGD,eAAe,CAACd,YAAD,CAAlC;QACMsF,eAAe,GAAY0K,2BAAjC;QACMX,kBAAkB,GACtBtO,UAAU,KACTe,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,EAAtC,IAA4CA,UAAU,KAAKxM,SADlD,CADZ;QAGMqM,oBAAoB,GACxBG,UAAU,KAAK,EAAf,IACAA,UAAU,KAAK,IADf,IAEAA,UAAU,KAAKxM,SAFf,IAGAmM,6BAA6B,CAC3BzB,YAD2B,EAE3BkB,mBAF2B,EAG3B4L,8BAH2B,CAJ/B;QASMzB,UAAU,GAAGtL,iBAAiB,CAACC,YAAD,EAAejO,eAAf,CAApC;QACMke,kBAAkB,GAAG/P,iCAAiC,CAC1D4M,8BAD0D,EAE1DzB,UAF0D,EAG1DnK,mBAAmB,GAAGlB,YAAY,CAACjI,IAHuB,CAA5D;QAKMmY,eAAe,GAAGvP,sBAAsB,CAC5CX,YAD4C,EAE5CjO,eAF4C,CAA9C;QAIMoe,uBAAuB,GAAGjQ,iCAAiC,CAC/D4M,8BAD+D,EAE/DoD,eAF+D,EAG/DhP,mBAAmB,GAAGlB,YAAY,CAACjI,IAH4B,CAAjE;QAMMqY,SAAS,GAAGnQ,gBAAgB,CAACD,YAAD,EAAejO,eAAf,CAAlC;;QAEIqZ,iBAAJ,EAAuB;UACjBtJ,UAAU,IAAI,IAAd,IAAsB,aAAa9B,YAAvC,EAAqD;aAC9CtP,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEEiI,YAAY,WAFd;;;UAKIsP,UAAU,GAAGhO,yBAAyB,CAC1CtB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAA5C;;UAME,CAACuC,kBAAkB,IAAI1N,oBAAvB,KACA,CAACyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAF3B,EAGE;aACKrH,KAAL,CAAW6e,4BAAX,CACErO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;OAJF,MAOO,IACL,CAACsX,kBAAD,IACA,CAAC1N,oBADD,IAEAyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAHnB,EAIL;aACKrH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;UAKE,OAAO,KAAKrH,KAAL,CAAWoR,UAAlB,KAAiC,QAArC,EAA+C;aACxCpR,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE8B,UAAU,CAAC,KAAKnJ,KAAL,CAAWoR,UAAZ,CAFZ;;;UAME4P,aAAJ;;QAEE5P,UAAU,KAAK,CAAf,GAAoB4P,aAAa,GAAG,GAApC,GAA4CA,aAAa,GAAG5P,UAA5D;;UAGI0O,OAAO,GAAGpB,wBAAwB,CACtClO,mBAAmB,GAAGlB,YAAY,CAACjI,IADG,CAAxC;;UAIIiI,YAAY,CAACY,IAAb,IAAqBZ,YAAY,CAACY,IAAb,CAAkB8O,SAA3C,EAAsD;YAChDD,eAAe,GAAQ,EAA3B;QACAA,eAAe,GAAG,KAAK/e,KAAL,CAAWoc,8BAAX,CAChB9M,YAAY,CAACY,IAAb,CAAkB8O,SADF,EAEhBxO,mBAAmB,GAAGlB,YAAY,CAACjI,IAFnB,CAAlB;;YAKI+J,UAAU,IAAI2N,eAAe,KAAK3N,UAAtC,EAAkD;eAC3CpR,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE0X,eAFF;;;QAKFiC,aAAa,GAAGjC,eAAhB;;;aAIA1e,aAAA,CAACqb,SAAD,MAAA,EACErb,aAAA,CAACod,KAAD,MAAA,EACG8B,kBADH,EACuB,GADvB,EAEGlP,UAAU,IACThQ,aAAA,OAAA;QAAMG,SAAS,EAAC;OAAhB,EAAsCkC,eAAtC,CAHJ,CADF,EAOErC,aAAA,CAAC4e,KAAD;QACE7b,IAAI,EAAC;QACL6d,IAAI,EAAC;QACL5Z,IAAI,EAAEiI,YAAY,CAACjI;QACnB5F,QAAQ,EAAE,KAAKC;QACfwf,MAAM,EAAE,KAAKC;QACbvgB,KAAK,EACH,KAAKmG,KAAL,CAAWga,SAAX,GACI,KAAKha,KAAL,CAAWqK,UAAX,IAAyB,EAD7B,GAEI4P,aAAa,IAAI;QAEvB9B,QAAQ,EAAEN;OAXZ,CAPF,EAoBGhK,eAAe,IAAIkL,OAAnB,IACCzf,aAAA,CAAC8c,eAAD;QAAiBC,IAAI,EAAC;QAAqB5c,SAAS,EAAC;OAArD,CArBJ,EAuBG8O,YAAY,CAACzQ,IAAb,IAAqBwB,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAA6Bkf,SAA7B,CAvBxB,EAwBG9K,eAAe,IAAI+J,kBAAnB,IACCte,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAiCiC,kBAAjC,CAzBJ,EA2BGwO,oBAAoB,IACnB5Q,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAmCif,uBAAnC,CA5BJ,CADF;KA7DF,MA8FO;UACD,KAAK1Y,KAAL,CAAWga,SAAf,EAA0B;aACnBD,QAAL,cAAmB,KAAK/Z,KAAxB;UAA+Bga,SAAS,EAAE;;;;UAExC3P,UAAU,IAAI,IAAlB,EAAwB;aACjBpR,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE,IAFF;;YAIIqX,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAA5B,EAAuE;eAChErH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;;aAKG,IAAP;;;;;EA9JgBhH;;;;AA8MtB,IAAM6b,iBAAe,GAAG,SAAlBA,eAAkB,CACtBnV,KADsB,EAEtBoV,WAFsB;MAId7M,eAAsC6M,YAAtC7M;MAAckB,sBAAwB2L,YAAxB3L;;MAChB4L,8BAA8B,GAAG,SAAjCA,8BAAiC,CACrCrN,UADqC,EAErCY,aAFqC;WAGlC2G,sBAAsB,CAACvP,KAAD,EAAQgI,UAAR,EAAoBY,aAApB,CAHY;GAAvC;;MAIM+O,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAC/O,aAAD;WAC/B6G,gBAAgB,CAACzP,KAAD,EAAQ4I,aAAR,CADe;GAAjC;;MAEM2P,2BAA2B,GAAGtI,mBAAmB,CAACjQ,KAAD,CAAvD;MACMsV,MAAM,GAAG;IACbjL,UAAU,EAAEgF,aAAa,CAACrP,KAAD,EAAQyJ,mBAAmB,GAAGlB,YAAY,CAACjI,IAA3C,CADZ;IAEb+U,8BAA8B,EAA9BA,8BAFa;IAGbkD,2BAA2B,EAA3BA,2BAHa;IAIb5E,iBAAiB,EAAEnK,yBAAyB,CAC1CjB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAJ/B;IASbsC,wBAAwB,EAAxBA;GATF;SAWOrC,MAAP;CAvBF;;;;AA2BA,IAAMC,oBAAkB,GAAG;EACzBuC,4BAA4B,EAAE1K,eADL;EAEzBoJ,6BAA6B,EAAE1J,sBAFN;EAGzBiL,+BAA+B,EAAE1K;CAHnC;;;AAOA,IAAMgN,gBAAgB;;AAAG5E,OAAO,CAC9BN,iBAD8B,EAE9BI,oBAF8B,CAAP,CAGvBuE,OAHuB,CAAzB;;IClRMQ;;;;;;;;;;;SACGthB,SAAA;sBAC4D,KAAKC;QAA9DshB,wBAAAA;QAAWlQ,yBAAAA;QAAYmM,4CAAAA;;QACzBX,aAAa,GAAG,SAAhBA,aAAgB;MACpBW,6BAA6B,CAAC+D,SAAD,EAAY,IAAZ,CAA7B;KADF;;WAIEjhB,4BAAA,wBAAA,MAAA,EACEA,4BAAA,IAAA;MAAGG,SAAS,EAAC;KAAb,wBAAA,EACsBH,4BAAA,SAAA;MAAQG,SAAS,EAAC;KAAlB,KAAA,EAAmC4Q,UAAnC,KAAA,CADtB,CADF,EAIE/Q,4BAAA,CAACkhB,MAAD;MAAQpD,IAAI,EAAC;MAAKte,KAAK,EAAC;MAASod,OAAO,EAAEL;KAA1C,eAAA,CAJF,CADF;;;;EANsBvc,cAAK,CAACgd;;;;AAiChC,IAAMnB,iBAAe,GAAG,SAAlBA,eAAkB,CACtBnV,KADsB,EAEtBoV,WAFsB;MAId/K,aAAe+K,YAAf/K;MACFiL,MAAM,GAAG;IACblF,UAAU,EAAEF,aAAa,CAAClQ,KAAD,EAAQqK,UAAR;GAD3B;SAGOiL,MAAP;CARF;;;;AAYA,IAAMC,oBAAkB,GAAG;EACzBiB,6BAA6B,EAAE1J;CADjC;;;AAKA,IAAM2N,oBAAoB;;AAAGhF,OAAO,CAClCN,iBADkC,EAElCI,oBAFkC,CAAP,CAG3B+E,WAH2B,CAA7B;;ICjBMI;;;;;;;;;;;;;yBAsII,GAAkB,UAAC/gB,KAAD;UACpBA,KAAK,CAACghB,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAJ,EAA2B;cACpB3hB,KAAL,CAAWud,6BAAX,CACE,MAAKvd,KAAL,CAAWwQ,mBAAX,GAAiC9P,KAAK,CAACghB,MAAN,CAAara,IADhD,EAEE3G,KAAK,CAACghB,MAAN,CAAaC,KAAb,CAAmB,CAAnB,EAAsBta,IAFxB;;cAIKrH,KAAL,CAAW4hB,yBAAX,CAAqClhB,KAAK,CAACghB,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAArC;OALF,MAMO;cACA3hB,KAAL,CAAWud,6BAAX,CACE,MAAKvd,KAAL,CAAWwQ,mBAAX,GAAiC9P,KAAK,CAACghB,MAAN,CAAara,IADhD,EAEE,IAFF;;KARI;;;;;;;SArIDtH,SAAA;sBAUD,KAAKC;QARPsP,2BAAAA;QACAkB,kCAAAA;QACAY,yBAAAA;QACAsJ,gCAAAA;QACA0B,6CAAAA;QACAkD,0CAAAA;QACAZ,uCAAAA;QACArd,8BAAAA;QAEIgP,UAAU,GAAGD,eAAe,CAACd,YAAD,CAAlC;QACMsF,eAAe,GAAY0K,2BAAjC;QACMX,kBAAkB,GAAGtO,UAAU,KAAK,CAACe,UAAD,IAAeA,UAAU,KAAK,EAAnC,CAArC;QACMH,oBAAoB,GACxBG,UAAU,IACVA,UAAU,KAAK,EADf,IAEAL,6BAA6B,CAC3BzB,YAD2B,EAE3BkB,mBAF2B,EAG3B4L,8BAH2B,CAH/B;QAQMzB,UAAU,GAAGtL,iBAAiB,CAACC,YAAD,EAAejO,eAAf,CAApC;QACMke,kBAAkB,GAAG/P,iCAAiC,CAC1D4M,8BAD0D,EAE1DzB,UAF0D,EAG1DnK,mBAAmB,GAAGlB,YAAY,CAACjI,IAHuB,CAA5D;QAKMmY,eAAe,GAAGvP,sBAAsB,CAC5CX,YAD4C,EAE5CjO,eAF4C,CAA9C;QAIMoe,uBAAuB,GAAGjQ,iCAAiC,CAC/D4M,8BAD+D,EAE/DoD,eAF+D,EAG/DhP,mBAAmB,GAAGlB,YAAY,CAACjI,IAH4B,CAAjE;QAMMqY,SAAS,GAAGnQ,gBAAgB,CAACD,YAAD,EAAejO,eAAf,CAAlC;;QAEIqZ,iBAAJ,EAAuB;UACjBtJ,UAAU,IAAI,IAAd,IAAsB,aAAa9B,YAAvC,EAAqD;aAC9CtP,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEEiI,YAAY,WAFd;;;UAKIsP,UAAU,GAAGhO,yBAAyB,CAC1CtB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAA5C;;UAME,CAACuC,kBAAkB,IAAI1N,oBAAvB,KACA,CAACyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAF3B,EAGE;aACKrH,KAAL,CAAW6e,4BAAX,CACErO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;OAJF,MAOO,IACL,CAACsX,kBAAD,IACA,CAAC1N,oBADD,IAEAyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAHnB,EAIL;aACKrH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;UAKIyY,OAAO,GAAGpB,wBAAwB,CACtClO,mBAAmB,GAAGlB,YAAY,CAACjI,IADG,CAAxC;aAKEhH,aAAA,CAACqb,SAAD,MAAA,EACErb,aAAA,CAACod,KAAD,MAAA,EACG8B,kBADH,EACuB,GADvB,EAEGlP,UAAU,IACThQ,aAAA,OAAA;QAAMG,SAAS,EAAC;OAAhB,EAAsCkC,eAAtC,CAHJ,CADF,EAOG0O,UAAU,GACT/Q,aAAA,CAACghB,oBAAD;QACEC,SAAS,EAAE9Q,mBAAmB,GAAGlB,YAAY,CAACjI;QAC9C+J,UAAU,EAAEA;OAFd,CADS,GAKP9B,YAAY,CAAClM,IAAb,KAAsBjB,gBAAtB,GACF9B,aAAA,CAAC4e,KAAD;QACE7b,IAAI,EAAC;QACLye,MAAM,EAAC;QACPxa,IAAI,EAAEiI,YAAY,CAACjI;QACnB5F,QAAQ,EAAE,KAAKC;QACfwd,QAAQ,EAAEN;OALZ,CADE,GASFve,aAAA,CAAC4e,KAAD;QACE7b,IAAI,EAAC;QACLiE,IAAI,EAAEiI,YAAY,CAACjI;QACnB5F,QAAQ,EAAE,KAAKC;QACfwd,QAAQ,EAAEN;OAJZ,CArBJ,EA4BGhK,eAAe,IAAIkL,OAAnB,IACCzf,aAAA,CAAC8c,eAAD;QAAiBC,IAAI,EAAC;QAAqB5c,SAAS,EAAC;OAArD,CA7BJ,EA+BG8O,YAAY,CAACzQ,IAAb,IAAqBwB,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAA6Bkf,SAA7B,CA/BxB,EAgCG9K,eAAe,IAAI+J,kBAAnB,IACCte,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAiCiC,kBAAjC,CAjCJ,EAmCGwO,oBAAoB,IACnB5Q,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAmCif,uBAAnC,CApCJ,CADF;KAjCF,MA0EO;UACDrO,UAAU,IAAI,IAAlB,EAAwB;aACjBpR,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE,IAFF;;YAIIqX,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAA5B,EAAuE;eAChErH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;;aAKG,IAAP;;;;;EA/HahH;;;;AAwKnB,IAAM6b,iBAAe,GAAG,SAAlBA,eAAkB,CACtBnV,KADsB,EAEtBoV,WAFsB;MAId7M,eAAsC6M,YAAtC7M;MAAckB,sBAAwB2L,YAAxB3L;;MAChB4L,8BAA8B,GAAG,SAAjCA,8BAAiC,CACrCrN,UADqC,EAErCY,aAFqC;WAGlC2G,sBAAsB,CAACvP,KAAD,EAAQgI,UAAR,EAAoBY,aAApB,CAHY;GAAvC;;MAIM+O,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAC/O,aAAD;WAC/B6G,gBAAgB,CAACzP,KAAD,EAAQ4I,aAAR,CADe;GAAjC;;MAEM2P,2BAA2B,GAAGtI,mBAAmB,CAACjQ,KAAD,CAAvD;MACMsV,MAAM,GAAG;IACbjL,UAAU,EAAEgF,aAAa,CAACrP,KAAD,EAAQyJ,mBAAmB,GAAGlB,YAAY,CAACjI,IAA3C,CADZ;IAEb+U,8BAA8B,EAA9BA,8BAFa;IAGbkD,2BAA2B,EAA3BA,2BAHa;IAIb5E,iBAAiB,EAAEnK,yBAAyB,CAC1CjB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAJ/B;IASbsC,wBAAwB,EAAxBA;GATF;SAWOrC,MAAP;CAvBF;;;;AA2BA,IAAMC,oBAAkB,GAAG;EACzBuC,4BAA4B,EAAE1K,eADL;EAEzByN,yBAAyB,EAAE5N,kBAFF;EAGzBuJ,6BAA6B,EAAE1J,sBAHN;EAIzBiL,+BAA+B,EAAE1K;CAJnC;;;AAQA,IAAM0N,aAAa;;AAAGtF,OAAO,CAC3BN,iBAD2B,EAE3BI,oBAF2B,CAAP,CAGpBmF,IAHoB,CAAtB;;IC5MMM;;;;;mBACQ/hB,KAAZ;;;wCACQA,KAAN;;;;;yBAgKM,GAAkB,UAACU,KAAD;YACnBogB,QAAL,cACK,MAAK/Z,KADV;QAEEqK,UAAU,EAAE1Q,KAAK,CAAC2e,aAAN,CAAoBze,KAApB,IAA6B,EAF3C;QAGEmgB,SAAS,EAAE;;KAJP;;uBAQA,GAAgB,UAACrgB,KAAD;YACjBogB,QAAL,cACK,MAAK/Z,KADV;QAEEqK,UAAU,EAAE1Q,KAAK,CAAC2e,aAAN,CAAoBze,KAApB,IAA6B,EAF3C;QAGEmgB,SAAS,EAAE;;;YAER/gB,KAAL,CAAWud,6BAAX,CACE,MAAKvd,KAAL,CAAWwQ,mBAAX,GAAiC9P,KAAK,CAAC2e,aAAN,CAAoBhY,IADvD,EAEE3G,KAAK,CAAC2e,aAAN,CAAoBze,KAApB,KAA8B,EAA9B,GACI6I,QAAQ,CAAC/I,KAAK,CAAC2e,aAAN,CAAoBze,KAArB,EAA4B,EAA5B,CADZ,GAEI,IAJN;KANM;;UAvKDmG,KAAL,GAAa;MAAEqK,UAAU,EAAE,EAAd;MAAkB2P,SAAS,EAAE;KAA1C;;;;;;SAEKhhB,SAAA;sBAUD,KAAKC;QARPsP,2BAAAA;QACAkB,kCAAAA;QACAY,yBAAAA;QACAsJ,gCAAAA;QACA0B,6CAAAA;QACAkD,0CAAAA;QACAZ,uCAAAA;QACArd,8BAAAA;QAEIgP,UAAU,GAAGD,eAAe,CAACd,YAAD,CAAlC;QACMsF,eAAe,GAAY0K,2BAAjC;QACMX,kBAAkB,GACtBtO,UAAU,KACTe,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,EAAtC,IAA4CA,UAAU,KAAKxM,SADlD,CADZ;QAIMqM,oBAAoB,GACxBG,UAAU,KAAK,EAAf,IACAA,UAAU,KAAK,IADf,IAEAA,UAAU,KAAKxM,SAFf,IAGAmM,6BAA6B,CAC3BzB,YAD2B,EAE3BkB,mBAF2B,EAG3B4L,8BAH2B,CAJ/B;QAUMzB,UAAU,GAAGtL,iBAAiB,CAACC,YAAD,EAAejO,eAAf,CAApC;QACMke,kBAAkB,GAAG/P,iCAAiC,CAC1D4M,8BAD0D,EAE1DzB,UAF0D,EAG1DnK,mBAAmB,GAAGlB,YAAY,CAACjI,IAHuB,CAA5D;QAKMmY,eAAe,GAAGvP,sBAAsB,CAC5CX,YAD4C,EAE5CjO,eAF4C,CAA9C;QAIMoe,uBAAuB,GAC3BjQ,iCAAiC,CAC/B4M,8BAD+B,EAE/BoD,eAF+B,EAG/BhP,mBAAmB,GAAGlB,YAAY,CAACjI,IAHJ,CAAjC,IAIK,EALP;QAMMqY,SAAS,GAAGnQ,gBAAgB,CAACD,YAAD,EAAejO,eAAf,CAAlC;;QACIqZ,iBAAJ,EAAuB;UACjBtJ,UAAU,IAAI,IAAd,IAAsB,aAAa9B,YAAvC,EAAqD;aAC9CtP,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEEiI,YAAY,WAFd;;;UAKIsP,UAAU,GAAGhO,yBAAyB,CAC1CtB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAA5C;;UAME,CAACuC,kBAAkB,IAAI1N,oBAAvB,KACA,CAACyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAF3B,EAGE;aACKrH,KAAL,CAAW6e,4BAAX,CACErO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;OAJF,MAOO,IACL,CAACsX,kBAAD,IACA,CAAC1N,oBADD,IAEAyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAHnB,EAIL;aACKrH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;UAIE,OAAO,KAAKrH,KAAL,CAAWoR,UAAlB,KAAiC,QAArC,EAA+C;aACxCpR,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEEoC,QAAQ,CAAC,KAAKzJ,KAAL,CAAWoR,UAAZ,EAAwB,EAAxB,CAFV;;;UAME4P,aAAJ;;QAEE5P,UAAU,KAAK,CAAf,GAAoB4P,aAAa,GAAG,GAApC,GAA4CA,aAAa,GAAG5P,UAA5D;;UAGI0O,OAAO,GAAGpB,wBAAwB,CACtClO,mBAAmB,GAAGlB,YAAY,CAACjI,IADG,CAAxC;;UAIIiI,YAAY,CAACY,IAAb,IAAqBZ,YAAY,CAACY,IAAb,CAAkB8O,SAA3C,EAAsD;YAChDD,eAAe,GAAQ,EAA3B;QACAA,eAAe,GAAG,KAAK/e,KAAL,CAAWoc,8BAAX,CAChB9M,YAAY,CAACY,IAAb,CAAkB8O,SADF,EAEhBxO,mBAAmB,GAAGlB,YAAY,CAACjI,IAFnB,CAAlB;;YAKI+J,UAAU,IAAI2N,eAAe,KAAK3N,UAAtC,EAAkD;eAC3CpR,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE0X,eAFF;;;QAKFiC,aAAa,GAAGjC,eAAhB;;;aAIA1e,aAAA,CAACqb,SAAD,MAAA,EACErb,aAAA,CAACod,KAAD,MAAA,EACG8B,kBADH,EACuB,GADvB,EAEGlP,UAAU,IACThQ,aAAA,OAAA;QAAMG,SAAS,EAAC;OAAhB,EAAsCkC,eAAtC,CAHJ,CADF,EAOErC,aAAA,CAAC4e,KAAD;QACE7b,IAAI,EAAC;QACLiE,IAAI,EAAEiI,YAAY,CAACjI;QACnB5F,QAAQ,EAAE,KAAKC;QACfwf,MAAM,EAAE,KAAKC;QACbvgB,KAAK,EACH,KAAKmG,KAAL,CAAWga,SAAX,GACI,KAAKha,KAAL,CAAWqK,UAAX,IAAyB,EAD7B,GAEI4P,aAAa,IAAI;QAEvB9B,QAAQ,EAAEN;OAVZ,CAPF,EAmBGhK,eAAe,IAAIkL,OAAnB,IACCzf,aAAA,CAAC8c,eAAD;QAAiBC,IAAI,EAAC;QAAqB5c,SAAS,EAAC;OAArD,CApBJ,EAsBG8O,YAAY,CAACzQ,IAAb,IAAqBwB,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAA6Bkf,SAA7B,CAtBxB,EAuBG9K,eAAe,IAAI+J,kBAAnB,IACCte,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAiCiC,kBAAjC,CAxBJ,EA0BGwO,oBAAoB,IACnB5Q,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAmCif,uBAAnC,CA3BJ,CADF;KA5DF,MA4FO;UACD,KAAK1Y,KAAL,CAAWga,SAAf,EAA0B;aACnBD,QAAL,cAAmB,KAAK/Z,KAAxB;UAA+Bga,SAAS,EAAE;;;;UAExC3P,UAAU,IAAI,IAAlB,EAAwB;aACjBpR,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE,IAFF;;YAIIqX,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAA5B,EAAuE;eAChErH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;;aAKG,IAAP;;;;;EA5JgBhH;;;;AAuMtB,IAAM6b,iBAAe,GAAG,SAAlBA,eAAkB,CACtBnV,KADsB,EAEtBoV,WAFsB;MAId7M,eAAsC6M,YAAtC7M;MAAckB,sBAAwB2L,YAAxB3L;;MAChB4L,8BAA8B,GAAG,SAAjCA,8BAAiC,CACrCrN,UADqC,EAErCY,aAFqC;WAGlC2G,sBAAsB,CAACvP,KAAD,EAAQgI,UAAR,EAAoBY,aAApB,CAHY;GAAvC;;MAIM+O,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAC/O,aAAD;WAC/B6G,gBAAgB,CAACzP,KAAD,EAAQ4I,aAAR,CADe;GAAjC;;MAEM2P,2BAA2B,GAAGtI,mBAAmB,CAACjQ,KAAD,CAAvD;MACMsV,MAAM,GAAG;IACbjL,UAAU,EAAEgF,aAAa,CAACrP,KAAD,EAAQyJ,mBAAmB,GAAGlB,YAAY,CAACjI,IAA3C,CADZ;IAEb+U,8BAA8B,EAA9BA,8BAFa;IAGbkD,2BAA2B,EAA3BA,2BAHa;IAIb5E,iBAAiB,EAAEnK,yBAAyB,CAC1CjB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAJ/B;IASbsC,wBAAwB,EAAxBA;GATF;SAWOrC,MAAP;CAvBF;;;;AA0BA,IAAMC,oBAAkB,GAAG;EACzBuC,4BAA4B,EAAE1K,eADL;EAEzBoJ,6BAA6B,EAAE1J,sBAFN;EAGzBiL,+BAA+B,EAAE1K;CAHnC;;;AAMA,IAAM4N,gBAAgB;;AAAGxF,OAAO,CAC9BN,iBAD8B,EAE9BI,oBAF8B,CAAP,CAGvByF,OAHuB,CAAzB;;IC9OME;;;;;;;;;;;SACGliB,SAAA;sBASD,KAAKC;QAPPsP,2BAAAA;QACAkB,kCAAAA;QACAY,yBAAAA;QACAsJ,gCAAAA;QACA0B,6CAAAA;QACAsC,uCAAAA;QACArd,8BAAAA;QAEIgP,UAAU,GAAGD,eAAe,CAACd,YAAD,CAAlC;QACMqP,kBAAkB,GAAGtO,UAAU,KAAK,CAACe,UAAD,IAAeA,UAAU,KAAK,EAAnC,CAArC;QACMH,oBAAoB,GACxBG,UAAU,IACVA,UAAU,KAAK,EADf,IAEAL,6BAA6B,CAC3BzB,YAD2B,EAE3BkB,mBAF2B,EAG3B4L,8BAH2B,CAH/B;QAQMzB,UAAU,GAAGtL,iBAAiB,CAACC,YAAD,EAAejO,eAAf,CAApC;QACMme,eAAe,GAAGvP,sBAAsB,CAC5CX,YAD4C,EAE5CjO,eAF4C,CAA9C;QAIMoe,uBAAuB,GAAGjQ,iCAAiC,CAC/D4M,8BAD+D,EAE/DoD,eAF+D,EAG/DhP,mBAAmB,GAAGlB,YAAY,CAACjI,IAH4B,CAAjE;;QAKIqT,iBAAJ,EAAuB;UACjBtJ,UAAU,IAAI,IAAd,IAAsB,aAAa9B,YAAvC,EAAqD;aAC9CtP,KAAL,CAAWud,6BAAX,CACEjO,YAAY,CAACjI,IADf,EAEEiI,YAAY,WAFd;;;UAKI4S,SAAS,GAAG3S,gBAAgB,CAACD,YAAD,EAAejO,eAAf,CAAlC;;UAEE,CAACsd,kBAAkB,IAAI1N,oBAAvB,KACA,CAACyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAF3B,EAGE;aACKrH,KAAL,CAAW6e,4BAAX,CACErO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;OAJF,MAOO,IACL,CAACsX,kBAAD,IACA,CAAC1N,oBADD,IAEAyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAHnB,EAIL;aACKrH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;aAKAhH,aAAA,CAACqb,SAAD,MAAA,EACErb,aAAA,CAACod,KAAD,MAAA,EAAQ9C,UAAR,CADF,EAEGtK,UAAU,IACThQ,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAuCkC,eAAvC,CAHJ,EAKG4M,YAAY,CAACzQ,IAAb,IACCwB,aAAA,CAAC8hB,QAAD;QAAU3hB,SAAS,EAAC;OAApB,EAAgC0hB,SAAhC,CANJ,EASGvD,kBAAkB,IACjBte,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAiCiC,kBAAjC,CAVJ,EAYGwO,oBAAoB,IACnB5Q,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAmCif,uBAAnC,CAbJ,CADF;KAxBF,MA0CO;UACDrO,UAAU,IAAI,IAAlB,EAAwB;aACjBpR,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE,IAFF;;YAIIqX,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAA5B,EAAuE;eAChErH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;;aAKG,IAAP;;;;;EArFahH;;;;AA2GnB,IAAM6b,iBAAe,GAAG,SAAlBA,eAAkB,CACtBnV,KADsB,EAEtBoV,WAFsB;MAId7M,eAAsC6M,YAAtC7M;MAAckB,sBAAwB2L,YAAxB3L;;MAChB4L,8BAA8B,GAAG,SAAjCA,8BAAiC,CACrCrN,UADqC,EAErCY,aAFqC;WAGlC2G,sBAAsB,CAACvP,KAAD,EAAQgI,UAAR,EAAoBY,aAApB,CAHY;GAAvC;;MAIM+O,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAC/O,aAAD;WAC/B6G,gBAAgB,CAACzP,KAAD,EAAQ4I,aAAR,CADe;GAAjC;;MAEM0M,MAAM,GAAG;IACbjL,UAAU,EAAEgF,aAAa,CAACrP,KAAD,EAAQyJ,mBAAmB,GAAGlB,YAAY,CAACjI,IAA3C,CADZ;IAEb+U,8BAA8B,EAA9BA,8BAFa;IAGb1B,iBAAiB,EAAEnK,yBAAyB,CAC1CjB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAH/B;IAQbsC,wBAAwB,EAAxBA;GARF;SAUOrC,MAAP;CArBF;;;;AAyBA,IAAMC,oBAAkB,GAAG;EACzBuC,4BAA4B,EAAE1K,eADL;EAEzBoJ,6BAA6B,EAAE1J,sBAFN;EAGzBiL,+BAA+B,EAAE1K;CAHnC;;;AAOA,IAAMgO,aAAa;;AAAG5F,OAAO,CAC3BN,iBAD2B,EAE3BI,oBAF2B,CAAP,CAGpB2F,IAHoB,CAAtB;;ACvHA,IAAMI,YAAY,GAAG;;EAEnB/P,OAAO,EAAE,iBAACgQ,MAAD;QAAgBC,kBAAAA;wBAElBD,MADL;MAEE9K,eAAe,EAAE+K,UAAU,GAAG,OAAH,GAAa;;GALzB;;EAUjBC,SAAS,EAAE,mBAACF,MAAD;QAAgBC,mBAAAA;wBAEpBD,MADL;MAEE9K,eAAe,EAAE+K,UAAU,GAAG,OAAH,GAAa;;;CAbhD;;IAkBME;;;;;;;;;;;;;uBAsQI,GAAgB,UAACC,YAAD;UAChBC,YAAY,GAAQ,EAA1B;MACAD,YAAY,CAAC1hB,GAAb,CAAiB,UAACC,IAAD;YACT2hB,OAAO,GAAQ,EAArB;YACMvb,IAAI,GAAW,MAArB;YACMlG,KAAK,GAAW,OAAtB;QACAyhB,OAAO,CAACvb,IAAD,CAAP,GAAgBpG,IAAI,CAACoG,IAArB;QACAub,OAAO,CAACzhB,KAAD,CAAP,GAAiBF,IAAI,CAACE,KAAtB;QACAwhB,YAAY,CAACzhB,IAAb,CAAkB0hB,OAAlB;OANF;;UASI,CAAC1E,CAAC,CAAC2E,OAAF,CAAU,MAAK7iB,KAAL,CAAWmH,UAArB,eAAsCwb,YAAtC,EAAL,EAA4D;cACrD3iB,KAAL,CAAWoe,6BAAX,CACE,MAAKpe,KAAL,CAAWwQ,mBAAX,GAAiC,MAAKxQ,KAAL,CAAWsP,YAAX,CAAwBjI,IAD3D,EAEEsb,YAFF;;KAZI;;;;;;;yBAuBA,GAAkB,UAACrB,SAAD;aAAoB,UAACwB,MAAD;YACtCC,cAAc,GAAQ,EAA5B;YACIlc,CAAC,GAAG,CAAR;;YACIic,MAAM,IAAIA,MAAM,CAAC/c,MAAP,GAAgB,CAA9B,EAAiC;UAC/B+c,MAAM,CAAC9hB,GAAP,CAAW;gBACL,CAAC+hB,cAAc,CAACla,QAAf,CAAwBia,MAAM,CAACjc,CAAD,CAAN,CAAUjG,KAAlC,CAAL,EAA+C;cAC7CmiB,cAAc,CAAC7hB,IAAf,CAAoB4hB,MAAM,CAACjc,CAAD,CAAN,CAAUjG,KAA9B;;;YAEFiG,CAAC;WAJH;;gBAOK7G,KAAL,CAAWud,6BAAX,CACE,MAAKvd,KAAL,CAAWwQ,mBAAX,GAAiC8Q,SADnC,EAEEyB,cAFF;SARF,MAYO;gBACA/iB,KAAL,CAAWud,6BAAX,CACE,MAAKvd,KAAL,CAAWwQ,mBAAX,GAAiC8Q,SADnC,EAEE,IAFF;;OAhBsB;KAAlB;;;;;;4BA0BA,GAAqB,UAAC0B,uBAAD;UACrBC,oBAAoB,GAAGD,uBAAuB,CAACnT,KAAxB,CAC3B,aAD2B,KAExB,CAAC,EAAD,CAFL;UAGI3J,MAAM,GAAG+c,oBAAoB,CAAC,CAAD,CAAjC;;UAEI/c,MAAM,CAACH,MAAP,GAAgB,CAApB,EAAuB;QACrBG,MAAM,GAAGA,MAAM,CAACqE,SAAP,CAAiB,CAAjB,EAAoBrE,MAAM,CAACH,MAAP,GAAgB,CAApC,CAAT;YACMmd,WAAW,GAAGhd,MAAM,CAACU,KAAP,CAAa,GAAb,CAApB;YACIuc,cAAc,aAAOD,WAAP,CAAlB;QACAC,cAAc,GAAGA,cAAc,CAACC,MAAf,CAAsB,CAAtB,EAAyBD,cAAc,CAACpd,MAAxC,CAAjB;eACO,MAAKsd,uBAAL,CACLH,WAAW,CAAC,CAAD,CADN,EAELA,WAAW,CAAC,CAAD,CAAX,IAAkB,IAFb,EAGLC,cAAc,IAAI,EAHb,CAAP;;;aAMK,EAAP;KAjBM;;;;;;;;iCAyBA,GAA0B,UAChCG,OADgC,EAEhCC,YAFgC,EAGhCC,eAHgC;UAK5BD,YAAJ,EAAkB;QAChBA,YAAY,GAAGA,YAAY,CAACE,IAAb,EAAf;QACAF,YAAY,GAAGA,YAAY,CAAChZ,SAAb,CAAuB,CAAvB,EAA0BgZ,YAAY,CAACxd,MAAb,GAAsB,CAAhD,EAAmD0d,IAAnD,EAAf;;;UAGE5iB,OAAO,GAAU,EAArB;UACM6iB,eAAe,GAAU,EAA/B;UACMC,QAAQ,GAAU,EAAxB;UACMnc,GAAG,GAAQ,MAAKxH,KAAL,CAAWyH,OAA5B;MACA6b,OAAO,GAAGA,OAAO,CAAC/Y,SAAR,CAAkB,CAAlB,EAAqB+Y,OAAO,CAACvd,MAAR,GAAiB,CAAtC,IAA2C,MAArD;;UAEIyB,GAAG,CAAC8b,OAAD,CAAP,EAAkB;YACVM,YAAY,GAAGN,OAAO,CAACpc,OAAR,CAAgB,IAAhB,EAAsB,EAAtB,CAArB;QACArG,OAAO,GAAG,MAAKb,KAAL,CAAWyH,OAAX,CAAmBmc,YAAnB,KAAoC,EAA9C;;;UAGEL,YAAY,IAAIA,YAAY,CAACE,IAAb,OAAwB,SAA5C,EAAuD;YACjD5c,CAAC,GAAG,CAAR;;;cAEMgd,SAAS,GAAGL,eAAe,CAAC3c,CAAD,CAAf,CAAmB4c,IAAnB,EAAhB;UACAI,SAAS,GAAGA,SAAS,CAACtZ,SAAV,CAAoB,CAApB,EAAuBsZ,SAAS,CAAC9d,MAAV,GAAmB,CAA1C,EAA6C0d,IAA7C,EAAZ;cACMK,mBAAmB,GAAGN,eAAe,CAAC3c,CAAC,GAAG,CAAL,CAA3C;cACMkd,WAAW,aAAOljB,OAAP,CAAjB;cAEImjB,YAAY,GAAQ,EAAxB;UACAD,WAAW,CAACne,OAAZ,CAAoB,UAAAqQ,GAAG;YACrB+N,YAAY,GAAG,MAAKhkB,KAAL,CAAWikB,uCAAX,CACbH,mBADa,EAEb,MAAK9jB,KAAL,CAAWwQ,mBAAX,GAAiC,MAAKxQ,KAAL,CAAWsP,YAAX,CAAwBjI,IAF5C,EAGb4O,GAHa,CAAf;WADF;cAQI/J,CAAC,GAAG,CAAR;UACA8X,YAAY,CAAChjB,GAAb,CAAiB;YACfH,OAAO,CAACG,GAAR,CAAY,UAAAkjB,MAAM;kBACZA,MAAM,CAACL,SAAD,CAAN,KAAsBG,YAAY,CAAC9X,CAAD,CAAtC,EAA2C;gBACzCyX,QAAQ,CAACziB,IAAT,CAAcgjB,MAAd;;aAFJ;YAKAhY,CAAC,GAAGA,CAAC,GAAG,CAAR;WANF;UASArF,CAAC,GAAGA,CAAC,GAAG,CAAR;;;eAzBKA,CAAC,GAAG2c,eAAe,CAACzd,MAA3B,EAAmC;;;;QA4BnClF,OAAO,aAAO0F,KAAK,CAAC4d,IAAN,CAAW,IAAIC,GAAJ,CAAQT,QAAR,CAAX,CAAP,CAAP;;;UAGE9iB,OAAO,CAACkF,MAAR,KAAmB,CAAvB,EAA0B;YACpBse,eAAe,GAAW,EAA9B;YACIC,eAAe,GAAW,EAA9B;;YAEE,MAAKtkB,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,IACA,MAAK3b,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,CAAiC,CAAjC,CADA,IAEA,MAAK3b,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,CAAiC,CAAjC,EAAoCtU,IAFpC,IAGA,MAAKrH,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,CAAiC,CAAjC,EAAoCxa,KAJtC,EAKE;UACAkjB,eAAe,GAAGhV,iBAAiB,CACjC,MAAKrP,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,CAAiC,CAAjC,CADiC,EAEjC,MAAK3b,KAAL,CAAWqB,eAFsB,CAAnC;UAIAijB,eAAe,GAAG,MAAKtkB,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,CAAiC,CAAjC,EAAoCtU,IAAtD;;;QAGFxG,OAAO,CAAC+E,OAAR,CAAgB,UAAA3E,IAAI;cACZsjB,MAAM,GAAQ,EAApB;cACMpjB,KAAK,GAAW,OAAtB;cACMkG,IAAI,GAAW,MAArB;UACAkd,MAAM,CAACpjB,KAAD,CAAN,GAAgBF,IAAI,CAACojB,eAAD,CAAJ,CAAsBZ,IAAtB,EAAhB;UACAc,MAAM,CAACld,IAAD,CAAN,GAAepG,IAAI,CAACqjB,eAAD,CAAJ,CAAsBb,IAAtB,EAAf;UACAC,eAAe,CAACxiB,IAAhB,CAAqBqjB,MAArB;SANF;eASOrG,CAAC,CAACsG,MAAF,CAASd,eAAT,EAA0B,MAA1B,CAAP;;;aAEK,EAAP;KAjFM;;;;;;;SA/UD3jB,SAAA;;;sBAWD,KAAKC;QATPya,sBAAAA;QACAnL,2BAAAA;QACAkB,kCAAAA;QACAY,yBAAAA;QACAsJ,gCAAAA;QACA0B,6CAAAA;QACAkD,0CAAAA;QACAZ,uCAAAA;QACArd,8BAAAA;QAGIgP,UAAU,GAAGD,eAAe,CAACd,YAAD,CAAlC;QACMsF,eAAe,GAAY0K,2BAAjC;QACMX,kBAAkB,GAAGtO,UAAU,KAAK,CAACe,UAAD,IAAeA,UAAU,KAAK,EAAnC,CAArC;QACMH,oBAAoB,GACxBG,UAAU,IACVA,UAAU,KAAK,EADf,IAEAL,6BAA6B,CAC3BzB,YAD2B,EAE3BkB,mBAF2B,EAG3B4L,8BAH2B,CAH/B;QAQMzB,UAAU,GAAGtL,iBAAiB,CAACC,YAAD,EAAejO,eAAf,CAApC;QACMke,kBAAkB,GAAG/P,iCAAiC,CAC1D4M,8BAD0D,EAE1DzB,UAF0D,EAG1DnK,mBAAmB,GAAGlB,YAAY,CAACjI,IAHuB,CAA5D;QAKMmY,eAAe,GAAGvP,sBAAsB,CAC5CX,YAD4C,EAE5CjO,eAF4C,CAA9C;QAIMoe,uBAAuB,GAAGjQ,iCAAiC,CAC/D4M,8BAD+D,EAE/DoD,eAF+D,EAG/DhP,mBAAmB,GAAGlB,YAAY,CAACjI,IAH4B,CAAjE;QAKMqY,SAAS,GAAGnQ,gBAAgB,CAACD,YAAD,EAAejO,eAAf,CAAlC;;QACIqZ,iBAAJ,EAAuB;UACjBtJ,UAAU,IAAI,IAAd,IAAsB,aAAa9B,YAAvC,EAAqD;aAC9CtP,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEEiI,YAAY,WAFd;;;UAMIsP,UAAU,GAAGhO,yBAAyB,CAC1CtB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAA5C;;UAOE,CAACuC,kBAAkB,IAAI1N,oBAAvB,KACA,CAACyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAF3B,EAGE;aACKrH,KAAL,CAAW6e,4BAAX,CACErO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;OAJF,MAOO,IACL,CAACsX,kBAAD,IACA,CAAC1N,oBADD,IAEAyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAHnB,EAIL;aACKrH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;UAKEod,aAAa,GAAU,EAA3B;UACM5jB,OAAO,GAAc,EAA3B;;UAEIyO,YAAY,CAACgD,OAAb,IAAwBhD,YAAY,CAACgD,OAAb,CAAqBC,UAAjD,EAA6D;YACrDmS,mBAAmB,GAAQpV,YAAY,CAACgD,OAAb,CAAqBC,UAArB,CAC9BnE,QAD8B,GAE9BlH,OAF8B,CAEtB,SAFsB,EAEX,EAFW,CAAjC;;YAGI,sBAAsBzC,IAAtB,CAA2BigB,mBAA3B,CAAJ,EAAqD;cAC7CzB,oBAAoB,GAAGyB,mBAAmB,CAAC7U,KAApB,CAC3B,qBAD2B,KAExB,CAAC,EAAD,CAFL;UAGA4U,aAAa,GAAG,KAAKE,kBAAL,CAAwB1B,oBAAoB,CAAC,CAAD,CAA5C,CAAhB;;;;UAKF3T,YAAY,CAACgD,OAAb,IACAhD,YAAY,CAACgD,OAAb,CAAqBC,UADrB,IAEA,sBAAsB9N,IAAtB,CAA2B6K,YAAY,CAACgD,OAAb,CAAqBC,UAAhD,CAHF,EAIE;QACAkS,aAAa,CAACzjB,GAAd,CAAkB,UAAAC,IAAI;iBACpBJ,OAAO,CAACK,IAAR,CAAa;YAAEC,KAAK,EAAEF,IAAI,CAACE,KAAd;YAAqBP,KAAK,EAAEK,IAAI,CAACoG;WAA9C,CADoB;SAAtB;aAGKud,aAAL,CAAmBH,aAAnB;OARF,MASO,IAAInV,YAAY,CAACuV,OAAjB,EAA0B;YAC3BpK,OAAO,IAAIA,OAAO,CAACnL,YAAY,CAACuV,OAAb,CAAqBpB,IAArB,EAAD,CAAtB,EAAqD;UACnDvF,CAAC,CAACtY,OAAF,CAAU6U,OAAO,CAACnL,YAAY,CAACuV,OAAb,CAAqBpB,IAArB,EAAD,CAAjB,EAAgD,UAACxiB,IAAD;gBAE5CqO,YAAY,CAACwV,aAAb,IACA,MAAI,CAAC9kB,KAAL,CAAWikB,uCAAX,CACE3U,YAAY,CAACwV,aADf,EAEEtU,mBAAmB,GAAGlB,YAAY,CAACjI,IAFrC,EAGEpG,IAHF,CAFF,EAOE;kBACM8jB,aAAa,GAAW1V,iBAAiB,CAC7CpO,IAD6C,EAE7CI,eAF6C,CAA/C;cAIAR,OAAO,CAACK,IAAR,CAAa;gBAAEC,KAAK,EAAE4jB,aAAT;gBAAwBnkB,KAAK,EAAEK,IAAI,CAACoG;eAAjD;;WAbJ;;cAiBM2d,YAAY,GAAQ,EAA1B;;cACInkB,OAAJ,EAAa;YACXA,OAAO,CAACG,GAAR,CAAY,UAAAC,IAAI;kBACR2hB,OAAO,GAAQ,EAArB;kBACMvb,IAAI,GAAW,MAArB;kBACMlG,KAAK,GAAW,OAAtB;cACAyhB,OAAO,CAACvb,IAAD,CAAP,GAAgBpG,IAAI,CAACL,KAArB;cACAgiB,OAAO,CAACzhB,KAAD,CAAP,GAAiBF,IAAI,CAACE,KAAtB;cACA6jB,YAAY,CAAC9jB,IAAb,CAAkB0hB,OAAlB;aANF;;;eASGgC,aAAL,CAAmBI,YAAnB;;OA9BG,MAgCA;YACD1V,YAAY,CAACqM,QAAjB,EAA2B;UACzBrM,YAAY,CAACqM,QAAb,CAAsB3a,GAAtB,CAA0B,UAAAC,IAAI;gBACtB8jB,aAAa,GAAW1V,iBAAiB,CAC7CpO,IAD6C,EAE7CI,eAF6C,CAA/C;YAKAR,OAAO,CAACK,IAAR,CAAa;cAAEC,KAAK,EAAE4jB,aAAT;cAAwBnkB,KAAK,EAAEK,IAAI,CAACoG;aAAjD;WANF;eAQKud,aAAL,CAAmBtV,YAAY,CAACqM,QAAhC;;;;UAIEsJ,aAAa,GAAQ,EAA3B;UACIC,aAAa,GAAY,KAA7B;;UACI9T,UAAU,IAAIA,UAAU,CAACrL,MAAX,GAAoB,CAAtC,EAAyC;YACjCof,iBAAiB,GAAQ,EAA/B;QACAtkB,OAAO,CAACG,GAAR,CAAY,UAAAC,IAAI;cACVA,IAAI,CAACL,KAAT,EAAgB;YACdukB,iBAAiB,CAACjkB,IAAlB,CAAuBD,IAAI,CAACL,KAA5B;;SAFJ;;6BAMkBwQ,UAAlB,kHAA8B;;;;;;;;;;;;cAAnBgU,GAAmB;;cACxB,CAACD,iBAAiB,CAACtc,QAAlB,CAA2Buc,GAA3B,CAAL,EAAsC;YACpCF,aAAa,GAAG,IAAhB;WADF,MAEO;YACLD,aAAa,CAAC/jB,IAAd,CAAmBkkB,GAAnB;;;;;UAKFhU,UAAU,IAAIA,UAAU,CAACrL,MAAX,GAAoB,CAAlC,IAAuCmf,aAA3C,EAA0D;aACnDllB,KAAL,CAAWud,6BAAX,CACE,KAAKvd,KAAL,CAAWwQ,mBAAX,GAAiClB,YAAY,CAACjI,IADhD,EAEE4d,aAAa,IAAI,EAFnB;;;UAMIlC,cAAc,GAAU,EAA9B;;UACI3R,UAAU,IAAIA,UAAU,CAACrL,MAAX,GAAoB,CAAtC,EAAyC;QACvClF,OAAO,CAACG,GAAR,CAAY,UAAAC,IAAI;gCACImQ,UAAlB,yHAA8B;;;;;;;;;;;;gBAAnBgU,IAAmB;;gBACxBnkB,IAAI,CAACL,KAAL,KAAewkB,IAAnB,EAAwB;cACtBrC,cAAc,CAAC7hB,IAAf,CAAoBD,IAApB;;;SAHN;;;UASE,OAAO,KAAKjB,KAAL,CAAWoR,UAAlB,KAAiC,QAArC,EAA+C;YACvCiU,eAAe,GAAajU,UAAU,CAACxK,KAAX,CAAiB,GAAjB,CAAlC;aACK5G,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEEge,eAFF;;;UAMEtG,eAAe,GAAQ,EAA3B;;UACIzP,YAAY,CAACY,IAAb,IAAqBZ,YAAY,CAACY,IAAb,CAAkB8O,SAA3C,EAAsD;QACpDD,eAAe,GAAG,KAAK/e,KAAL,CAAWoc,8BAAX,CAChB9M,YAAY,CAACY,IAAb,CAAkB8O,SADF,EAEhBxO,mBAAmB,GAAGlB,YAAY,CAACjI,IAFnB,CAAlB;;;UAME0X,eAAe,IAAI3N,UAAU,KAAK2N,eAAtC,EAAuD;aAChD/e,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE0X,eAFF;;;UAMIe,OAAO,GAAGpB,wBAAwB,CACtClO,mBAAmB,GAAGlB,YAAY,CAACjI,IADG,CAAxC;aAKEhH,aAAA,CAACqb,SAAD,MAAA,EACErb,aAAA,CAACod,KAAD,MAAA,EACG8B,kBADH,EACuB,GADvB,EAEGlP,UAAU,IACThQ,aAAA,OAAA;QAAMG,SAAS,EAAC;OAAhB,EAAsCkC,eAAtC,CAHJ,CADF,EAOErC,aAAA,MAAA;QAAK+G,GAAG,EAAEkI,YAAY,CAACjI;QAAM7G,SAAS,EAAC;OAAvC,EACEH,aAAA,CAACiB,MAAD;QACEghB,MAAM,EAAED;QACRE,UAAU,EAAE3D;QACZ0G,OAAO,EAAE;QACTje,IAAI,EAAEiI,YAAY,CAACjI;QACnBxG,OAAO,EAAEA;QACTY,QAAQ,EAAE,KAAKC,eAAL,CAAqB4N,YAAY,CAACjI,IAAlC;QACVzG,KAAK,EAAEmiB,cAAc,IAAIhE,eAAlB,IAAqC;OAP9C,CADF,CAPF,EAkBGnK,eAAe,IAAIkL,OAAnB,IACCzf,aAAA,CAAC8c,eAAD;QAAiBC,IAAI,EAAC;QAAqB5c,SAAS,EAAC;OAArD,CAnBJ,EAqBG8O,YAAY,CAACzQ,IAAb,IAAqBwB,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAA6Bkf,SAA7B,CArBxB,EAsBG9K,eAAe,IAAI+J,kBAAnB,IACCte,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAiCiC,kBAAjC,CAvBJ,EAyBGwO,oBAAoB,IACnB5Q,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAmCif,uBAAnC,CA1BJ,CADF;KArKF,MAoMO;UACDrO,UAAU,IAAI,IAAlB,EAAwB;aACjBpR,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE,IAFF;;YAIIqX,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAA5B,EAAuE;eAChErH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;;UAKA,KAAKrH,KAAL,CAAWmH,UAAX,IAAyB,IAA7B,EAAmC;aAC5BnH,KAAL,CAAWoe,6BAAX,CACE,KAAKpe,KAAL,CAAWwQ,mBAAX,GAAiClB,YAAY,CAACjI,IADhD,EAEE,IAFF;;;aAKK,IAAP;;;;;EA/P0BhH;;;;AA0bhC,IAAM6b,iBAAe,GAAG,SAAlBA,eAAkB,CACtBnV,KADsB,EAEtBoV,WAFsB;MAId7M,eAAsC6M,YAAtC7M;MAAckB,sBAAwB2L,YAAxB3L;;MAChB4L,8BAA8B,GAAG,SAAjCA,8BAAiC,CACrCrN,UADqC,EAErCY,aAFqC;WAGlC2G,sBAAsB,CAACvP,KAAD,EAAQgI,UAAR,EAAoBY,aAApB,CAHY;GAAvC;;MAIMsU,uCAAuC,GAAG,SAA1CA,uCAA0C,CAC9ClV,UAD8C,EAE9CY,aAF8C,EAG9C9O,OAH8C;WAK9C0V,+BAA+B,CAACxP,KAAD,EAAQgI,UAAR,EAAoBlO,OAApB,EAA6B8O,aAA7B,CALe;GAAhD;;MAMM+O,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAC/O,aAAD;WAC/B6G,gBAAgB,CAACzP,KAAD,EAAQ4I,aAAR,CADe;GAAjC;;MAEM2P,2BAA2B,GAAGtI,mBAAmB,CAACjQ,KAAD,CAAvD;MACMsV,MAAM,GAAG;IACbjL,UAAU,EAAEgF,aAAa,CAACrP,KAAD,EAAQyJ,mBAAmB,GAAGlB,YAAY,CAACjI,IAA3C,CADZ;IAEb+U,8BAA8B,EAA9BA,8BAFa;IAGb6H,uCAAuC,EAAvCA,uCAHa;IAIb3E,2BAA2B,EAA3BA,2BAJa;IAKb5E,iBAAiB,EAAEnK,yBAAyB,CAC1CjB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAL/B;IAUbsC,wBAAwB,EAAxBA,wBAVa;IAWbvX,UAAU,EAAEkP,aAAa,CAACtP,KAAD,EAAQyJ,mBAAmB,GAAGlB,YAAY,CAACjI,IAA3C;GAX3B;SAaOgV,MAAP;CA/BF;;;;AAmCA,IAAMC,oBAAkB,GAAG;EACzBuC,4BAA4B,EAAE1K,eADL;EAEzBoJ,6BAA6B,EAAE1J,sBAFN;EAGzBuK,6BAA6B,EAAEtK,sBAHN;EAIzBgL,+BAA+B,EAAE1K;CAJnC;;;AAQA,IAAMmR,0BAA0B;;AAAG/I,OAAO,CACxCN,iBADwC,EAExCI,oBAFwC,CAAP,CAGjCmG,iBAHiC,CAAnC;;ICzfM+C;;;;;;;;;;;;;iCAwVI,GAA0B,UAAC9kB,KAAD;wBAC0B,MAAKV;UAAvDoR,yBAAAA;UAAY9B,2BAAAA;UAAckB,kCAAAA;UAC5B8Q,SAAS,GAAG9Q,mBAAmB,GAAGlB,YAAY,CAACjI,IAArD;;UACI3G,KAAK,CAACghB,MAAN,CAAa+D,OAAjB,EAA0B;YAEtBrU,UAAU,IACVA,UAAU,CAACrL,MAAX,GAAoB,CADpB,IAEA,CAACqL,UAAU,CAACvI,QAAX,CAAoBnI,KAAK,CAACghB,MAAN,CAAa9gB,KAAjC,CAHH,EAIE;gBACKZ,KAAL,CAAWud,6BAAX,CAAyC+D,SAAzC,YACKlQ,UADL,GAEE1Q,KAAK,CAACghB,MAAN,CAAa9gB,KAFf;SALF,MASO;gBACAZ,KAAL,CAAWud,6BAAX,CAAyC+D,SAAzC,EAAoD,CAClD5gB,KAAK,CAACghB,MAAN,CAAa9gB,KADqC,CAApD;;OAXJ,MAeO;YAEHwQ,UAAU,IACVA,UAAU,CAACrL,MAAX,GAAoB,CADpB,IAEAqL,UAAU,CAACvI,QAAX,CAAoBnI,KAAK,CAACghB,MAAN,CAAa9gB,KAAjC,CAHF,EAIE;cACM8kB,QAAQ,GAAGtU,UAAU,CAAC4E,MAAX,CACf,UAACC,GAAD;mBAAcA,GAAG,KAAKvV,KAAK,CAACghB,MAAN,CAAa9gB,KAAnC;WADe,CAAjB;;gBAIKZ,KAAL,CAAWud,6BAAX,CACE+D,SADF,EAEEoE,QAAQ,CAAC3f,MAAT,GAAkB2f,QAAlB,GAA6B,IAF/B;;;KA5BE;;;;;;4BAuCA,GAAqB,UAAC1C,uBAAD;UACrBC,oBAAoB,GAAGD,uBAAuB,CAACnT,KAAxB,CAC3B,aAD2B,KAExB,CAAC,EAAD,CAFL;UAGI3J,MAAM,GAAG+c,oBAAoB,CAAC,CAAD,CAAjC;;UAEI/c,MAAM,CAACH,MAAP,GAAgB,CAApB,EAAuB;QACrBG,MAAM,GAAGA,MAAM,CAACqE,SAAP,CAAiB,CAAjB,EAAoBrE,MAAM,CAACH,MAAP,GAAgB,CAApC,CAAT;YACMmd,WAAW,GAAGhd,MAAM,CAACU,KAAP,CAAa,GAAb,CAApB;YACIuc,cAAc,aAAOD,WAAP,CAAlB;QACAC,cAAc,GAAGA,cAAc,CAACC,MAAf,CAAsB,CAAtB,EAAyBD,cAAc,CAACpd,MAAxC,CAAjB;eACO,MAAKsd,uBAAL,CACLH,WAAW,CAAC,CAAD,CADN,EAELA,WAAW,CAAC,CAAD,CAAX,IAAkB,IAFb,EAGLC,cAAc,IAAI,EAHb,CAAP;;;aAMK,EAAP;KAjBM;;;;;;;;iCAyBA,GAA0B,UAChCG,OADgC,EAEhCC,YAFgC,EAGhCC,eAHgC;UAK5BD,YAAJ,EAAkB;QAChBA,YAAY,GAAGA,YAAY,CAACE,IAAb,EAAf;QACAF,YAAY,GAAGA,YAAY,CAAChZ,SAAb,CAAuB,CAAvB,EAA0BgZ,YAAY,CAACxd,MAAb,GAAsB,CAAhD,EAAmD0d,IAAnD,EAAf;;;UAGE5iB,OAAO,GAAU,EAArB;UACM6iB,eAAe,GAAU,EAA/B;UACMC,QAAQ,GAAU,EAAxB;UACMnc,GAAG,GAAQ,MAAKxH,KAAL,CAAWyH,OAA5B;MACA6b,OAAO,GAAGA,OAAO,CAAC/Y,SAAR,CAAkB,CAAlB,EAAqB+Y,OAAO,CAACvd,MAAR,GAAiB,CAAtC,IAA2C,MAArD;;UAEIyB,GAAG,CAAC8b,OAAD,CAAP,EAAkB;YACVM,YAAY,GAAGN,OAAO,CAACpc,OAAR,CAAgB,IAAhB,EAAsB,EAAtB,CAArB;QACArG,OAAO,GAAG,MAAKb,KAAL,CAAWyH,OAAX,CAAmBmc,YAAnB,KAAoC,EAA9C;;;UAGEL,YAAY,IAAIA,YAAY,CAACE,IAAb,OAAwB,SAA5C,EAAuD;YACjD5c,CAAC,GAAG,CAAR;;;cAEMgd,SAAS,GAAGL,eAAe,CAAC3c,CAAD,CAAf,CAAmB4c,IAAnB,EAAhB;UACAI,SAAS,GAAGA,SAAS,CAACtZ,SAAV,CAAoB,CAApB,EAAuBsZ,SAAS,CAAC9d,MAAV,GAAmB,CAA1C,EAA6C0d,IAA7C,EAAZ;cACMK,mBAAmB,GAAGN,eAAe,CAAC3c,CAAC,GAAG,CAAL,CAA3C;cACMkd,WAAW,aAAOljB,OAAP,CAAjB;cAEImjB,YAAY,GAAQ,EAAxB;UACAD,WAAW,CAACne,OAAZ,CAAoB,UAAAqQ,GAAG;YACrB+N,YAAY,GAAG,MAAKhkB,KAAL,CAAWikB,uCAAX,CACbH,mBADa,EAEb,MAAK9jB,KAAL,CAAWwQ,mBAAX,GAAiC,MAAKxQ,KAAL,CAAWsP,YAAX,CAAwBjI,IAF5C,EAGb4O,GAHa,CAAf;WADF;cAQI/J,CAAC,GAAG,CAAR;UACA8X,YAAY,CAAChjB,GAAb,CAAiB;YACfH,OAAO,CAACG,GAAR,CAAY,UAAAkjB,MAAM;kBACZA,MAAM,CAACL,SAAD,CAAN,KAAsBG,YAAY,CAAC9X,CAAD,CAAtC,EAA2C;gBACzCyX,QAAQ,CAACziB,IAAT,CAAcgjB,MAAd;;aAFJ;YAKAhY,CAAC,GAAGA,CAAC,GAAG,CAAR;WANF;UASArF,CAAC,GAAGA,CAAC,GAAG,CAAR;;;eAzBKA,CAAC,GAAG2c,eAAe,CAACzd,MAA3B,EAAmC;;;;QA4BnClF,OAAO,aAAO0F,KAAK,CAAC4d,IAAN,CAAW,IAAIC,GAAJ,CAAQT,QAAR,CAAX,CAAP,CAAP;;;UAGE9iB,OAAO,CAACkF,MAAR,KAAmB,CAAvB,EAA0B;YACpBse,eAAe,GAAW,EAA9B;YACIC,eAAe,GAAW,EAA9B;;YAEE,MAAKtkB,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,IACA,MAAK3b,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,CAAiC,CAAjC,CADA,IAEA,MAAK3b,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,CAAiC,CAAjC,EAAoCtU,IAFpC,IAGA,MAAKrH,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,CAAiC,CAAjC,EAAoCxa,KAJtC,EAKE;UACAkjB,eAAe,GAAGhV,iBAAiB,CACjC,MAAKrP,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,CAAiC,CAAjC,CADiC,EAEjC,MAAK3b,KAAL,CAAWqB,eAFsB,CAAnC;UAIAijB,eAAe,GAAG,MAAKtkB,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,CAAiC,CAAjC,EAAoCtU,IAAtD;;;QAGFxG,OAAO,CAAC+E,OAAR,CAAgB,UAAA3E,IAAI;cACZsjB,MAAM,GAAQ,EAApB;cACMpjB,KAAK,GAAW,OAAtB;cACMkG,IAAI,GAAW,MAArB;UACAkd,MAAM,CAACpjB,KAAD,CAAN,GAAgBF,IAAI,CAACojB,eAAD,CAAJ,CAAsBZ,IAAtB,EAAhB;UACAc,MAAM,CAACld,IAAD,CAAN,GAAepG,IAAI,CAACqjB,eAAD,CAAJ,CAAsBb,IAAtB,EAAf;UACAC,eAAe,CAACxiB,IAAhB,CAAqBqjB,MAArB;SANF;eASOrG,CAAC,CAACsG,MAAF,CAASd,eAAT,EAA0B,MAA1B,CAAP;;;aAEK,EAAP;KAjFM;;;;;;;SAvZD3jB,SAAA;;;uBAWD,KAAKC;QATPya,uBAAAA;QACAnL,4BAAAA;QACAkB,mCAAAA;QACAY,0BAAAA;QACAsJ,iCAAAA;QACA0B,8CAAAA;QACAkD,2CAAAA;QACAZ,wCAAAA;QACArd,+BAAAA;QAEIgP,UAAU,GAAGD,eAAe,CAACd,YAAD,CAAlC;QACMsF,eAAe,GAAY0K,2BAAjC;QACMX,kBAAkB,GAAGtO,UAAU,KAAK,CAACe,UAAD,IAAeA,UAAU,KAAK,EAAnC,CAArC;QACMH,oBAAoB,GACxBG,UAAU,IACVA,UAAU,KAAK,EADf,IAEAL,6BAA6B,CAC3BzB,YAD2B,EAE3BkB,mBAF2B,EAG3B4L,8BAH2B,CAH/B;QAQMzB,UAAU,GAAGtL,iBAAiB,CAACC,YAAD,EAAejO,eAAf,CAApC;QACMke,kBAAkB,GAAG/P,iCAAiC,CAC1D4M,8BAD0D,EAE1DzB,UAF0D,EAG1DnK,mBAAmB,GAAGlB,YAAY,CAACjI,IAHuB,CAA5D;QAKMmY,eAAe,GAAGvP,sBAAsB,CAC5CX,YAD4C,EAE5CjO,eAF4C,CAA9C;QAIMoe,uBAAuB,GAAGjQ,iCAAiC,CAC/D4M,8BAD+D,EAE/DoD,eAF+D,EAG/DhP,mBAAmB,GAAGlB,YAAY,CAACjI,IAH4B,CAAjE;QAKMqY,SAAS,GAAGnQ,gBAAgB,CAACD,YAAD,EAAejO,eAAf,CAAlC;;QACIqZ,iBAAJ,EAAuB;UACjBtJ,UAAU,IAAI,IAAd,IAAsB,aAAa9B,YAAvC,EAAqD;aAC9CtP,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEEiI,YAAY,WAFd;;;UAKIsP,UAAU,GAAGhO,yBAAyB,CAC1CtB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAA5C;;UAME,CAACuC,kBAAkB,IAAI1N,oBAAvB,KACA,CAACyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAF3B,EAGE;aACKrH,KAAL,CAAW6e,4BAAX,CACErO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;OAJF,MAOO,IACL,CAACsX,kBAAD,IACA,CAAC1N,oBADD,IAEAyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAHnB,EAIL;aACKrH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;UAKEod,aAAa,GAAU,EAA3B;UACI5jB,OAAO,GAAc,EAAzB;;UAEIyO,YAAY,CAACgD,OAAb,IAAwBhD,YAAY,CAACgD,OAAb,CAAqBC,UAAjD,EAA6D;YACrDmS,mBAAmB,GAAQpV,YAAY,CAACgD,OAAb,CAAqBC,UAArB,CAC9BnE,QAD8B,GAE9BlH,OAF8B,CAEtB,SAFsB,EAEX,EAFW,CAAjC;;YAGI,sBAAsBzC,IAAtB,CAA2BigB,mBAA3B,CAAJ,EAAqD;cAC7CzB,oBAAoB,GAAGyB,mBAAmB,CAAC7U,KAApB,CAC3B,qBAD2B,KAExB,CAAC,EAAD,CAFL;UAGA4U,aAAa,GAAG,KAAKE,kBAAL,CAAwB1B,oBAAoB,CAAC,CAAD,CAA5C,CAAhB;;;;UAIE0C,aAAa,GAAQ,EAA3B;;UACIrW,YAAY,CAACqM,QAAjB,EAA2B;QACzBrM,YAAY,CAACqM,QAAb,CAAsB3a,GAAtB,CAA0B,UAAAC,IAAI;cACtB2hB,OAAO,GAAQ,EAArB;cACMvb,IAAI,GAAW,MAArB;cACMlG,KAAK,GAAW,OAAtB;UACAyhB,OAAO,CAACvb,IAAD,CAAP,GAAgBpG,IAAI,CAACoG,IAArB;UACAub,OAAO,CAACzhB,KAAD,CAAP,GAAiBF,IAAI,CAACE,KAAtB;UACAwkB,aAAa,CAACzkB,IAAd,CAAmB0hB,OAAnB;SANF;;;UAUEE,MAAM,GAAQ,EAAlB;;UAGExT,YAAY,CAACgD,OAAb,IACAhD,YAAY,CAACgD,OAAb,CAAqBC,UADrB,IAEA,sBAAsB9N,IAAtB,CAA2B6K,YAAY,CAACgD,OAAb,CAAqBC,UAAhD,CAHF,EAIE;QACAuQ,MAAM,GAAG,EAAT;QACAjiB,OAAO,GAAG,EAAV;YACMokB,aAAa,GAAQ,EAA3B;YACIC,aAAa,GAAY,KAA7B;QAEAT,aAAa,CAACzjB,GAAd,CAAkB,UAAAC,IAAI;iBACpBJ,OAAO,CAACK,IAAR,CAAa;YAAEC,KAAK,EAAEF,IAAI,CAACE,KAAd;YAAqBP,KAAK,EAAEK,IAAI,CAACoG;WAA9C,CADoB;SAAtB;;YAII+J,UAAU,IAAIA,UAAU,CAACrL,MAAX,GAAoB,CAAtC,EAAyC;cACjCof,iBAAiB,GAAQ,EAA/B;UACAtkB,OAAO,CAACG,GAAR,CAAY,UAAAC,IAAI;gBACVA,IAAI,CAACL,KAAT,EAAgB;cACdukB,iBAAiB,CAACjkB,IAAlB,CAAuBD,IAAI,CAACL,KAA5B;;WAFJ;;+BAMkBwQ,UAAlB,kHAA8B;;;;;;;;;;;;gBAAnBgU,GAAmB;;gBACxB,CAACD,iBAAiB,CAACtc,QAAlB,CAA2Buc,GAA3B,CAAL,EAAsC;cACpCF,aAAa,GAAG,IAAhB;aADF,MAEO;cACLD,aAAa,CAAC/jB,IAAd,CAAmBkkB,GAAnB;;;;;YAKFhU,UAAU,IAAIA,UAAU,CAACrL,MAAX,GAAoB,CAAlC,IAAuCmf,aAA3C,EAA0D;eACnDllB,KAAL,CAAWud,6BAAX,CACE,KAAKvd,KAAL,CAAWwQ,mBAAX,GAAiClB,YAAY,CAACjI,IADhD,EAEE4d,aAAa,IAAI,EAFnB;;;YAME,CAAC/G,CAAC,CAAC2E,OAAF,CAAU,KAAK7iB,KAAL,CAAWmH,UAArB,eAAsCsd,aAAtC,EAAL,EAA6D;eACtDzkB,KAAL,CAAWoe,6BAAX,CACE,KAAKpe,KAAL,CAAWwQ,mBAAX,GAAiClB,YAAY,CAACjI,IADhD,EAEEod,aAFF;;;QAKF3B,MAAM,aAAO2B,aAAP,CAAN;OA5CF,MA6CO,IAAInV,YAAY,CAACuV,OAAjB,EAA0B;QAC/B/B,MAAM,GAAG,EAAT;QACAjiB,OAAO,GAAG,EAAV;YACMokB,cAAa,GAAQ,EAA3B;YACMD,YAAY,GAAQ,EAA1B;YACIE,cAAa,GAAY,KAA7B;;YAEIzK,OAAO,IAAIA,OAAO,CAACnL,YAAY,CAACuV,OAAb,CAAqBpB,IAArB,EAAD,CAAtB,EAAqD;UACnDvF,CAAC,CAACtY,OAAF,CAAU6U,OAAO,CAACnL,YAAY,CAACuV,OAAb,CAAqBpB,IAArB,EAAD,CAAjB,EAAgD,UAACxiB,IAAD;gBAE5CqO,YAAY,CAACwV,aAAb,IACA,MAAI,CAAC9kB,KAAL,CAAWikB,uCAAX,CACE3U,YAAY,CAACwV,aADf,EAEEtU,mBAAmB,GAAGlB,YAAY,CAACjI,IAFrC,EAGEpG,IAHF,CAFF,EAOE;kBACM8jB,aAAa,GAAW1V,iBAAiB,CAC7CpO,IAD6C,EAE7CI,eAF6C,CAA/C;cAIAR,OAAO,CAACK,IAAR,CAAa;gBAAEC,KAAK,EAAE4jB,aAAT;gBAAwBnkB,KAAK,EAAEK,IAAI,CAACoG;eAAjD;;WAbJ;;;YAkBE+J,UAAU,IAAIA,UAAU,CAACrL,MAAX,GAAoB,CAAtC,EAAyC;cACjCof,kBAAiB,GAAQ,EAA/B;UACAtkB,OAAO,CAACG,GAAR,CAAY,UAACC,IAAD;gBACNA,IAAI,CAACL,KAAT,EAAgB;cACdukB,kBAAiB,CAACjkB,IAAlB,CAAuBD,IAAI,CAACL,KAA5B;;WAFJ;;gCAMkBwQ,UAAlB,yHAA8B;;;;;;;;;;;;gBAAnBgU,IAAmB;;gBACxB,CAACD,kBAAiB,CAACtc,QAAlB,CAA2Buc,IAA3B,CAAL,EAAsC;cACpCF,cAAa,GAAG,IAAhB;aADF,MAEO;cACLD,cAAa,CAAC/jB,IAAd,CAAmBkkB,IAAnB;;;;;YAKFhU,UAAU,IAAIA,UAAU,CAACrL,MAAX,GAAoB,CAAlC,IAAuCmf,cAA3C,EAA0D;eACnDllB,KAAL,CAAWud,6BAAX,CACE,KAAKvd,KAAL,CAAWwQ,mBAAX,GAAiClB,YAAY,CAACjI,IADhD,EAEE4d,cAAa,IAAI,EAFnB;;;YAMEpkB,OAAJ,EAAa;UACXA,OAAO,CAACG,GAAR,CAAY,UAAAC,IAAI;gBACR2hB,OAAO,GAAQ,EAArB;gBACMvb,IAAI,GAAW,MAArB;gBACMlG,KAAK,GAAW,OAAtB;YACAyhB,OAAO,CAACvb,IAAD,CAAP,GAAgBpG,IAAI,CAACL,KAArB;YACAgiB,OAAO,CAACzhB,KAAD,CAAP,GAAiBF,IAAI,CAACE,KAAtB;YACA6jB,YAAY,CAAC9jB,IAAb,CAAkB0hB,OAAlB;WANF;;;YAUE,CAAC1E,CAAC,CAAC2E,OAAF,CAAU,KAAK7iB,KAAL,CAAWmH,UAArB,eAAsC6d,YAAtC,EAAL,EAA4D;eACrDhlB,KAAL,CAAWoe,6BAAX,CACE,KAAKpe,KAAL,CAAWwQ,mBAAX,GAAiClB,YAAY,CAACjI,IADhD,EAEE2d,YAFF;;;QAMFlC,MAAM,aAAOkC,YAAP,CAAN;OApEK,MAqEA;QACLlC,MAAM,GAAG,EAAT;QACAjiB,OAAO,GAAG,EAAV;;YACIyO,YAAY,CAACqM,QAAjB,EAA2B;UACzBrM,YAAY,CAACqM,QAAb,CAAsB3a,GAAtB,CAA0B,UAAAC,IAAI;mBAC5BJ,OAAO,CAACK,IAAR,CAAa;cAAEC,KAAK,EAAEF,IAAI,CAACE,KAAd;cAAqBP,KAAK,EAAEK,IAAI,CAACoG;aAA9C,CAD4B;WAA9B;;;YAKE,CAAC6W,CAAC,CAAC2E,OAAF,CAAU,KAAK7iB,KAAL,CAAWmH,UAArB,eAAsCwe,aAAtC,EAAL,EAA6D;eACtD3lB,KAAL,CAAWoe,6BAAX,CACE,KAAKpe,KAAL,CAAWwQ,mBAAX,GAAiClB,YAAY,CAACjI,IADhD,EAEEse,aAFF;;;QAKF7C,MAAM,aAAO6C,aAAP,CAAN;;;UAGI5C,cAAc,GAAU,EAA9B;;UACI3R,UAAU,IAAIA,UAAU,CAACrL,MAAX,GAAoB,CAAtC,EAAyC;QACvClF,OAAO,CAACG,GAAR,CAAY,UAAAC,IAAI;gCACImQ,UAAlB,yHAA8B;;;;;;;;;;;;gBAAnBgU,KAAmB;;gBACxBnkB,IAAI,CAACL,KAAL,KAAewkB,KAAnB,EAAwB;cACtBrC,cAAc,CAAC7hB,IAAf,CAAoBD,IAAI,CAACL,KAAzB;;;SAHN;;;UASEglB,UAAU,GAAG,KAAjB;;UACItW,YAAY,CAACgD,OAAb,IAAwBhD,YAAY,CAACgD,OAAb,CAAqBC,UAAjD,EAA6D;QAC3DjD,YAAY,CAACgD,OAAb,CAAqBC,UAArB,CAAgC3L,KAAhC,CAAsC,GAAtC,EAA2ChB,OAA3C,CAAmD,UAACigB,QAAD;cAC7C,CAACD,UAAD,IAAeC,QAAQ,KAAK,oBAAhC,EAAsD;YACpDD,UAAU,GAAG,IAAb;;SAFJ;;;UAOE,OAAO,KAAK5lB,KAAL,CAAWoR,UAAlB,KAAiC,QAArC,EAA+C;YACvCiU,eAAe,GAAajU,UAAU,CAACxK,KAAX,CAAiB,GAAjB,CAAlC;aACK5G,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEEge,eAFF;;;UAMEtG,eAAe,GAAQ,EAA3B;;UACIzP,YAAY,CAACY,IAAb,IAAqBZ,YAAY,CAACY,IAAb,CAAkB8O,SAA3C,EAAsD;QACpDD,eAAe,GAAG,KAAK/e,KAAL,CAAWoc,8BAAX,CAChB9M,YAAY,CAACY,IAAb,CAAkB8O,SADF,EAEhBxO,mBAAmB,GAAGlB,YAAY,CAACjI,IAFnB,CAAlB;;;UAME0X,eAAe,IAAI3N,UAAU,KAAK2N,eAAtC,EAAuD;aAChD/e,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE0X,eAFF;;;UAMIe,OAAO,GAAGpB,wBAAwB,CACtClO,mBAAmB,GAAGlB,YAAY,CAACjI,IADG,CAAxC;aAKEhH,aAAA,MAAA,MAAA,EACEA,aAAA,CAACod,KAAD,MAAA,EACG8B,kBADH,EACuB,GADvB,EAEGlP,UAAU,IACThQ,aAAA,OAAA;QAAMG,SAAS,EAAC;OAAhB,EAAsCkC,eAAtC,CAHJ,CADF,EAOErC,aAAA,CAACylB,IAAD;QAAM1e,GAAG,EAAC;OAAV,EACG0b,MAAM,CAAC9hB,GAAP,CAAW,UAACC,IAAD,EAAY6J,KAAZ;eACVzK,aAAA,CAACqb,SAAD;UAAWtU,GAAG,EAAE0D;UAAOib,KAAK,EAAE;UAAMC,MAAM,EAAEJ;SAA5C,EACEvlB,aAAA,CAACod,KAAD;UAAOsI,KAAK,EAAE;SAAd,EACE1lB,aAAA,CAAC4e,KAAD;UACE7X,GAAG,EAAEkI,YAAY,CAACjI,IAAb,GAAoB,GAApB,GAA0ByD;UAC/B1H,IAAI,EAAC;UACLiE,IAAI,EAAEiI,YAAY,CAACjI;UACnBzG,KAAK,EAAEK,IAAI,CAACoG,IAAL,IAAa;UACpB5F,QAAQ,EAAE,MAAI,CAACwkB;UACf/G,QAAQ,EAAEN;UACV6G,OAAO,EAAE1C,cAAc,CAACla,QAAf,CAAwB5H,IAAI,CAACoG,IAA7B,KAAsC0X,eAAe,CAAClW,QAAhB,CAAyB5H,IAAI,CAACoG,IAA9B;SAPjD,CADF,EASK,GATL,EAUGgI,iBAAiB,CAACpO,IAAD,EAAOI,eAAP,CAVpB,CADF,CADU;OAAX,CADH,CAPF,EAyBGuT,eAAe,IAAIkL,OAAnB,IACCzf,aAAA,CAAC8c,eAAD;QAAiBC,IAAI,EAAC;QAAqB5c,SAAS,EAAC;OAArD,CA1BJ,EA4BG8O,YAAY,CAACzQ,IAAb,IAAqBwB,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAA6Bkf,SAA7B,CA5BxB,EA6BG9K,eAAe,IAAI+J,kBAAnB,IACCte,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAiCiC,kBAAjC,CA9BJ,EAgCGwO,oBAAoB,IACnB5Q,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAmCif,uBAAnC,CAjCJ,CADF;KA7OF,MAmRO;UACDrO,UAAU,IAAI,IAAlB,EAAwB;aACjBpR,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE,IAFF;;YAKIqX,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAA5B,EAAuE;eAChErH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;;UAMA,KAAKrH,KAAL,CAAWmH,UAAX,IAAyB,IAA7B,EAAmC;aAC5BnH,KAAL,CAAWoe,6BAAX,CACE,KAAKpe,KAAL,CAAWwQ,mBAAX,GAAiClB,YAAY,CAACjI,IADhD,EAEE,IAFF;;;aAMK,IAAP;;;;;EAhVuBhH;;;;AAigB7B,IAAM6b,iBAAe,GAAG,SAAlBA,eAAkB,CACtBnV,KADsB,EAEtBoV,WAFsB;MAId7M,eAAsC6M,YAAtC7M;MAAckB,sBAAwB2L,YAAxB3L;;MAChB4L,8BAA8B,GAAG,SAAjCA,8BAAiC,CACrCrN,UADqC,EAErCY,aAFqC;WAGlC2G,sBAAsB,CAACvP,KAAD,EAAQgI,UAAR,EAAoBY,aAApB,CAHY;GAAvC;;MAIMsU,uCAAuC,GAAG,SAA1CA,uCAA0C,CAC9ClV,UAD8C,EAE9CY,aAF8C,EAG9C9O,OAH8C;WAK9C0V,+BAA+B,CAACxP,KAAD,EAAQgI,UAAR,EAAoBlO,OAApB,EAA6B8O,aAA7B,CALe;GAAhD;;MAMM+O,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAC/O,aAAD;WAC/B6G,gBAAgB,CAACzP,KAAD,EAAQ4I,aAAR,CADe;GAAjC;;MAEM2P,2BAA2B,GAAGtI,mBAAmB,CAACjQ,KAAD,CAAvD;MACMsV,MAAM,GAAG;IACbjL,UAAU,EAAEgF,aAAa,CAACrP,KAAD,EAAQyJ,mBAAmB,GAAGlB,YAAY,CAACjI,IAA3C,CADZ;IAEb+U,8BAA8B,EAA9BA,8BAFa;IAGb6H,uCAAuC,EAAvCA,uCAHa;IAIb3E,2BAA2B,EAA3BA,2BAJa;IAKb5E,iBAAiB,EAAEnK,yBAAyB,CAC1CjB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAL/B;IAUbsC,wBAAwB,EAAxBA,wBAVa;IAWbvX,UAAU,EAAEkP,aAAa,CAACtP,KAAD,EAAQyJ,mBAAmB,GAAGlB,YAAY,CAACjI,IAA3C;GAX3B;SAcOgV,MAAP;CAhCF;;;;AAoCA,IAAMC,oBAAkB,GAAG;EACzBuC,4BAA4B,EAAE1K,eADL;EAEzBoJ,6BAA6B,EAAE1J,sBAFN;EAGzBuK,6BAA6B,EAAEtK,sBAHN;EAIzBgL,+BAA+B,EAAE1K;CAJnC;;;AAQA,IAAM8R,uBAAuB;;AAAG1J,OAAO,CACrCN,iBADqC,EAErCI,oBAFqC,CAAP,CAG9BkJ,cAH8B,CAAhC;;ICtlBMW;;;;;;;;;;;SACGpmB,SAAA;QACGuP,eAAiB,KAAKtP,MAAtBsP;;QACJ8C,wBAAwB,CAAC9C,YAAD,CAA5B,EAA4C;aACnCjP,aAAA,CAAC+lB,0BAAD,oBAAc,KAAKpmB,MAAnB,CAAP;;;WAEKK,aAAA,CAACgmB,uBAAD,oBAAW,KAAKrmB,MAAhB,CAAP;;;;EANoBK;;AC2CxB,IAAMgiB,cAAY,GAAG;;EAEnB/P,OAAO,EAAE,iBAACgQ,MAAD;QAAgBC,kBAAAA;wBAElBD,MADL;MAEE9K,eAAe,EAAE+K,UAAU,GAAG,OAAH,GAAa;;GALzB;;EAWjBC,SAAS,EAAE,mBAACF,MAAD;QAAgBC,mBAAAA;wBAEpBD,MADL;MAEE9K,eAAe,EAAE+K,UAAU,GAAG,OAAH,GAAa;;;CAdhD;;IAmBM+D;;;;;;;;;;;;;uBA+NI,GAAgB,UAAC5D,YAAD;UAChBC,YAAY,GAAQ,EAA1B;MACAD,YAAY,CAAC1hB,GAAb,CAAiB,UAACC,IAAD;YACT2hB,OAAO,GAAQ,EAArB;YACMvb,IAAI,GAAW,MAArB;YACMlG,KAAK,GAAW,OAAtB;QACAyhB,OAAO,CAACvb,IAAD,CAAP,GAAgBpG,IAAI,CAACoG,IAArB;QACAub,OAAO,CAACzhB,KAAD,CAAP,GAAiBF,IAAI,CAACE,KAAtB;QACAwhB,YAAY,CAACzhB,IAAb,CAAkB0hB,OAAlB;OANF;;UASI,CAAC1E,CAAC,CAAC2E,OAAF,CAAU,MAAK7iB,KAAL,CAAWmH,UAArB,eAAsCwb,YAAtC,EAAL,EAA4D;cACrD3iB,KAAL,CAAWoe,6BAAX,CACE,MAAKpe,KAAL,CAAWwQ,mBAAX,GAAiC,MAAKxQ,KAAL,CAAWsP,YAAX,CAAwBjI,IAD3D,EAEEsb,YAFF;;KAZI;;;;;;;yBAuBA,GAAkB,UAACrB,SAAD;aAAoB,UAAC5gB,KAAD;cACvCV,KAAL,CAAWud,6BAAX,CACE,MAAKvd,KAAL,CAAWwQ,mBAAX,GAAiC8Q,SADnC,EAEE5gB,KAAK,CAACE,KAAN,IAAe,EAFjB;OADwB;KAAlB;;;;;;4BAUA,GAAqB,UAACoiB,uBAAD;UACrBC,oBAAoB,GAAGD,uBAAuB,CAACnT,KAAxB,CAC3B,aAD2B,KAExB,CAAC,EAAD,CAFL;UAGI3J,MAAM,GAAG+c,oBAAoB,CAAC,CAAD,CAAjC;;UAEI/c,MAAM,CAACH,MAAP,GAAgB,CAApB,EAAuB;QACrBG,MAAM,GAAGA,MAAM,CAACqE,SAAP,CAAiB,CAAjB,EAAoBrE,MAAM,CAACH,MAAP,GAAgB,CAApC,CAAT;YACMmd,WAAW,GAAGhd,MAAM,CAACU,KAAP,CAAa,GAAb,CAApB;YACIuc,cAAc,aAAOD,WAAP,CAAlB;QACAC,cAAc,GAAGA,cAAc,CAACC,MAAf,CAAsB,CAAtB,EAAyBD,cAAc,CAACpd,MAAxC,CAAjB;eACO,MAAKsd,uBAAL,CACLH,WAAW,CAAC,CAAD,CADN,EAELA,WAAW,CAAC,CAAD,CAAX,IAAkB,IAFb,EAGLC,cAAc,IAAI,EAHb,CAAP;;;aAMK,EAAP;KAjBM;;;;;;;;iCAyBA,GAA0B,UAChCG,OADgC,EAEhCC,YAFgC,EAGhCC,eAHgC;UAK5BD,YAAJ,EAAkB;QAChBA,YAAY,GAAGA,YAAY,CAACE,IAAb,EAAf;QACAF,YAAY,GAAGA,YAAY,CAAChZ,SAAb,CAAuB,CAAvB,EAA0BgZ,YAAY,CAACxd,MAAb,GAAsB,CAAhD,EAAmD0d,IAAnD,EAAf;;;UAGE5iB,OAAO,GAAU,EAArB;UACM6iB,eAAe,GAAU,EAA/B;UACMlc,GAAG,GAAQ,MAAKxH,KAAL,CAAWyH,OAA5B;MACA6b,OAAO,GAAGA,OAAO,CAAC/Y,SAAR,CAAkB,CAAlB,EAAqB+Y,OAAO,CAACvd,MAAR,GAAiB,CAAtC,IAA2C,MAArD;;UAEIyB,GAAG,CAAC8b,OAAD,CAAP,EAAkB;YACVM,YAAY,GAAGN,OAAO,CAACpc,OAAR,CAAgB,IAAhB,EAAsB,EAAtB,CAArB;QACArG,OAAO,GAAG,MAAKb,KAAL,CAAWyH,OAAX,CAAmBmc,YAAnB,KAAoC,EAA9C;;;UAGEL,YAAY,IAAIA,YAAY,CAACE,IAAb,OAAwB,SAA5C,EAAuD;YACjD5c,CAAC,GAAG,CAAR;;;cAEMgd,SAAS,GAAGL,eAAe,CAAC3c,CAAD,CAAf,CAAmB4c,IAAnB,EAAhB;UACAI,SAAS,GAAGA,SAAS,CAACtZ,SAAV,CAAoB,CAApB,EAAuBsZ,SAAS,CAAC9d,MAAV,GAAmB,CAA1C,EAA6C0d,IAA7C,EAAZ;cACMK,mBAAmB,GAAGN,eAAe,CAAC3c,CAAC,GAAG,CAAL,CAA3C;cACMkd,WAAW,aAAOljB,OAAP,CAAjB;cACImjB,YAAY,GAAQ,EAAxB;UACAD,WAAW,CAACne,OAAZ,CAAoB,UAAAqQ,GAAG;YACrB+N,YAAY,GAAG,MAAKhkB,KAAL,CAAWikB,uCAAX,CACbH,mBADa,EAEb,MAAK9jB,KAAL,CAAWwQ,mBAAX,GAAiC,MAAKxQ,KAAL,CAAWsP,YAAX,CAAwBjI,IAF5C,EAGb4O,GAHa,CAAf;WADF;UAOApV,OAAO,GAAGA,OAAO,CAACmV,MAAR,CAAe,UAAAkO,MAAM;mBAAIA,MAAM,CAACL,SAAD,CAAN,KAAsBG,YAA1B;WAArB,CAAV;UACAnd,CAAC,GAAGA,CAAC,GAAG,CAAR;;;eAdKA,CAAC,GAAG2c,eAAe,CAACzd,MAA3B,EAAmC;;;;;UAkBjClF,OAAO,CAACkF,MAAR,KAAmB,CAAvB,EAA0B;YACpBse,eAAe,GAAW,EAA9B;YACIC,eAAe,GAAW,EAA9B;;YAEE,MAAKtkB,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,IACA,MAAK3b,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,CAAiC,CAAjC,CADA,IAEA,MAAK3b,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,CAAiC,CAAjC,EAAoCtU,IAFpC,IAGA,MAAKrH,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,CAAiC,CAAjC,EAAoCxa,KAJtC,EAKE;UACAkjB,eAAe,GAAGhV,iBAAiB,CACjC,MAAKrP,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,CAAiC,CAAjC,CADiC,EAEjC,MAAK3b,KAAL,CAAWqB,eAFsB,CAAnC;UAIAijB,eAAe,GAAG,MAAKtkB,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,CAAiC,CAAjC,EAAoCtU,IAAtD;;;QAGFxG,OAAO,CAAC+E,OAAR,CAAgB,UAAA3E,IAAI;cACZsjB,MAAM,GAAQ,EAApB;cACMpjB,KAAK,GAAW,OAAtB;cACMkG,IAAI,GAAW,MAArB;UACAkd,MAAM,CAACpjB,KAAD,CAAN,GAAgBF,IAAI,CAACojB,eAAD,CAAJ,CAAsBZ,IAAtB,EAAhB;UACAc,MAAM,CAACld,IAAD,CAAN,GAAepG,IAAI,CAACqjB,eAAD,CAAJ,CAAsBb,IAAtB,EAAf;UACAC,eAAe,CAACxiB,IAAhB,CAAqBqjB,MAArB;SANF;eASOrG,CAAC,CAACsG,MAAF,CAASd,eAAT,EAA0B,MAA1B,CAAP;;;aAEK,EAAP;KAnEM;;;;;;;SAxRD3jB,SAAA;;;sBAWD,KAAKC;QATPya,sBAAAA;QACAnL,2BAAAA;QACAkB,kCAAAA;QACAY,yBAAAA;QACAsJ,gCAAAA;QACA0B,6CAAAA;QACAkD,0CAAAA;QACAZ,uCAAAA;QACArd,8BAAAA;QAEIgP,UAAU,GAAGD,eAAe,CAACd,YAAD,CAAlC;QACMsF,eAAe,GAAY0K,2BAAjC;QACMX,kBAAkB,GAAGtO,UAAU,KAAK,CAACe,UAAD,IAAeA,UAAU,KAAK,EAAnC,CAArC;QACMH,oBAAoB,GACxBG,UAAU,IACVA,UAAU,KAAK,EADf,IAEAL,6BAA6B,CAC3BzB,YAD2B,EAE3BkB,mBAF2B,EAG3B4L,8BAH2B,CAH/B;QAQMzB,UAAU,GAAGtL,iBAAiB,CAACC,YAAD,EAAejO,eAAf,CAApC;QACMke,kBAAkB,GAAG/P,iCAAiC,CAC1D4M,8BAD0D,EAE1DzB,UAF0D,EAG1DnK,mBAAmB,GAAGlB,YAAY,CAACjI,IAHuB,CAA5D;QAKMmY,eAAe,GAAGvP,sBAAsB,CAC5CX,YAD4C,EAE5CjO,eAF4C,CAA9C;QAKMoe,uBAAuB,GAAGjQ,iCAAiC,CAC/D4M,8BAD+D,EAE/DoD,eAF+D,EAG/DhP,mBAAmB,GAAGlB,YAAY,CAACjI,IAH4B,CAAjE;QAKMqY,SAAS,GAAGnQ,gBAAgB,CAACD,YAAD,EAAejO,eAAf,CAAlC;;QACIqZ,iBAAJ,EAAuB;UACjBtJ,UAAU,IAAI,IAAd,IAAsB,aAAa9B,YAAvC,EAAqD;aAC9CtP,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEEiI,YAAY,WAFd;;;UAMIsP,UAAU,GAAGhO,yBAAyB,CAC1CtB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAA5C;;UAOE,CAACuC,kBAAkB,IAAI1N,oBAAvB,KACA,CAACyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAF3B,EAGE;aACKrH,KAAL,CAAW6e,4BAAX,CACErO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;OAJF,MAOO,IACL,CAACsX,kBAAD,IACA,CAAC1N,oBADD,IAEAyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAHnB,EAIL;aACKrH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;UAKEod,aAAa,GAAU,EAA3B;UACM5jB,OAAO,GAAc,EAA3B;;UAEIyO,YAAY,CAACgD,OAAb,IAAwBhD,YAAY,CAACgD,OAAb,CAAqBC,UAAjD,EAA6D;YACrDmS,mBAAmB,GAAQpV,YAAY,CAACgD,OAAb,CAAqBC,UAArB,CAC9BnE,QAD8B,GAE9BlH,OAF8B,CAEtB,SAFsB,EAEX,EAFW,CAAjC;;YAGI,sBAAsBzC,IAAtB,CAA2BigB,mBAA3B,CAAJ,EAAqD;cAC7CzB,oBAAoB,GAAGyB,mBAAmB,CAAC7U,KAApB,CAC3B,qBAD2B,KAExB,CAAC,EAAD,CAFL;UAGA4U,aAAa,GAAG,KAAKE,kBAAL,CAAwB1B,oBAAoB,CAAC,CAAD,CAA5C,CAAhB;;;;UAKF3T,YAAY,CAACgD,OAAb,IACAhD,YAAY,CAACgD,OAAb,CAAqBC,UADrB,IAEA,sBAAsB9N,IAAtB,CAA2B6K,YAAY,CAACgD,OAAb,CAAqBC,UAAhD,CAHF,EAIE;QACAkS,aAAa,CAACzjB,GAAd,CAAkB,UAAAC,IAAI;iBACpBJ,OAAO,CAACK,IAAR,CAAa;YAAEC,KAAK,EAAEF,IAAI,CAACE,KAAd;YAAqBP,KAAK,EAAEK,IAAI,CAACoG;WAA9C,CADoB;SAAtB;aAIKud,aAAL,CAAmBH,aAAnB;OATF,MAUO,IAAInV,YAAY,CAACuV,OAAjB,EAA0B;YAC3BpK,OAAO,IAAIA,OAAO,CAACnL,YAAY,CAACuV,OAAb,CAAqBpB,IAArB,EAAD,CAAtB,EAAqD;UACnDvF,CAAC,CAACtY,OAAF,CAAU6U,OAAO,CAACnL,YAAY,CAACuV,OAAb,CAAqBpB,IAArB,EAAD,CAAjB,EAAgD,UAACxiB,IAAD;gBAE5CqO,YAAY,CAACwV,aAAb,IACA,MAAI,CAAC9kB,KAAL,CAAWikB,uCAAX,CACE3U,YAAY,CAACwV,aADf,EAEEtU,mBAAmB,GAAGlB,YAAY,CAACjI,IAFrC,EAGEpG,IAHF,CAFF,EAOE;kBACM8jB,aAAa,GAAW1V,iBAAiB,CAC7CpO,IAD6C,EAE7CI,eAF6C,CAA/C;cAIAR,OAAO,CAACK,IAAR,CAAa;gBAAEC,KAAK,EAAE4jB,aAAT;gBAAwBnkB,KAAK,EAAEK,IAAI,CAACoG;eAAjD;;WAbJ;;eAgBKud,aAAL,CAAmBnK,OAAO,CAACnL,YAAY,CAACuV,OAAb,CAAqBpB,IAArB,EAAD,CAA1B;;OAlBG,MAoBA;YACDnU,YAAY,CAACqM,QAAjB,EAA2B;UACzBrM,YAAY,CAACqM,QAAb,CAAsB3a,GAAtB,CAA0B,UAAAC,IAAI;gBACtB8jB,aAAa,GAAW1V,iBAAiB,CAC7CpO,IAD6C,EAE7CI,eAF6C,CAA/C;YAIAR,OAAO,CAACK,IAAR,CAAa;cAAEC,KAAK,EAAE4jB,aAAT;cAAwBnkB,KAAK,EAAEK,IAAI,CAACoG;aAAjD;WALF;eAQKud,aAAL,CAAmBtV,YAAY,CAACqM,QAAhC;;;;UAIAvK,UAAJ,EAAgB;YACR+T,iBAAiB,GAAQ,EAA/B;QACAtkB,OAAO,CAACG,GAAR,CAAY,UAAAC,IAAI;cACVA,IAAI,CAACL,KAAT,EAAgB;YACdukB,iBAAiB,CAACjkB,IAAlB,CAAuBD,IAAI,CAACL,KAA5B;;SAFJ;;YAMI,CAACukB,iBAAiB,CAACtc,QAAlB,CAA2BuI,UAA3B,CAAL,EAA6C;eACtCpR,KAAL,CAAWud,6BAAX,CACE,KAAKvd,KAAL,CAAWwQ,mBAAX,GAAiClB,YAAY,CAACjI,IADhD,EAEE,EAFF;;;;UAOAjG,aAAJ;MACAP,OAAO,CAACG,GAAR,CAAY,UAAAC,IAAI;YACVA,IAAI,CAACL,KAAL,KAAewQ,UAAnB,EAA+B;UAC7BhQ,aAAa,GAAGH,IAAhB;;OAFJ;UAMI8d,eAAe,GAAQ,EAA3B;;UACIzP,YAAY,CAACY,IAAb,IAAqBZ,YAAY,CAACY,IAAb,CAAkB8O,SAA3C,EAAsD;QACpDD,eAAe,GAAG,KAAK/e,KAAL,CAAWoc,8BAAX,CAChB9M,YAAY,CAACY,IAAb,CAAkB8O,SADF,EAEhBxO,mBAAmB,GAAGlB,YAAY,CAACjI,IAFnB,CAAlB;;;UAME0X,eAAe,IAAI3N,UAAU,KAAK2N,eAAtC,EAAuD;aAChD/e,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE0X,eAFF;;;UAMIe,OAAO,GAAGpB,wBAAwB,CACtClO,mBAAmB,GAAGlB,YAAY,CAACjI,IADG,CAAxC;aAKEhH,aAAA,CAACqb,SAAD,MAAA,EACErb,aAAA,CAACod,KAAD,MAAA,EACG8B,kBADH,EACuB,GADvB,EAEGlP,UAAU,IACThQ,aAAA,OAAA;QAAMG,SAAS,EAAC;OAAhB,EAAsCkC,eAAtC,CAHJ,CADF,EAOErC,aAAA,MAAA;QAAK+G,GAAG,EAAEkI,YAAY,CAACjI;QAAM7G,SAAS,EAAC;OAAvC,EACEH,aAAA,CAACiB,MAAD;QACEghB,MAAM,EAAED;QACRE,UAAU,EAAE3D;QACZrd,KAAK,EAAE;QACP8F,IAAI,EAAEiI,YAAY,CAACjI;QACnBxG,OAAO,EAAEA;QACTD,KAAK,EAAEQ,aAAa,IAAI2d,eAAjB,IAAoC;QAC3Ctd,QAAQ,EAAE,KAAKC,eAAL,CAAqB4N,YAAY,CAACjI,IAAlC;OAPZ,CADF,CAPF,EAkBGuN,eAAe,IAAIkL,OAAnB,IACCzf,aAAA,CAAC8c,eAAD;QAAiBC,IAAI,EAAC;QAAqB5c,SAAS,EAAC;OAArD,CAnBJ,EAqBG8O,YAAY,CAACzQ,IAAb,IAAqBwB,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAA6Bkf,SAA7B,CArBxB,EAsBG9K,eAAe,IAAI+J,kBAAnB,IACCte,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAiCiC,kBAAjC,CAvBJ,EAyBGwO,oBAAoB,IACnB5Q,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAmCif,uBAAnC,CA1BJ,CADF;KApIF,MAmKO;UACDrO,UAAU,IAAI,IAAlB,EAAwB;aACjBpR,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE,IAFF;;YAIIqX,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAA5B,EAAuE;eAChErH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;;aAKG,IAAP;;;;;EAxN0BhH;;;;AAqXhC,IAAM6b,iBAAe,GAAG,SAAlBA,eAAkB,CACtBnV,KADsB,EAEtBoV,WAFsB;MAId7M,eAAsC6M,YAAtC7M;MAAckB,sBAAwB2L,YAAxB3L;;MAChB4L,8BAA8B,GAAG,SAAjCA,8BAAiC,CACrCrN,UADqC,EAErCY,aAFqC;WAGlC2G,sBAAsB,CAACvP,KAAD,EAAQgI,UAAR,EAAoBY,aAApB,CAHY;GAAvC;;MAKMsU,uCAAuC,GAAG,SAA1CA,uCAA0C,CAC9ClV,UAD8C,EAE9CY,aAF8C,EAG9C9O,OAH8C;WAK9C0V,+BAA+B,CAACxP,KAAD,EAAQgI,UAAR,EAAoBlO,OAApB,EAA6B8O,aAA7B,CALe;GAAhD;;MAMM+O,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAC/O,aAAD;WAC/B6G,gBAAgB,CAACzP,KAAD,EAAQ4I,aAAR,CADe;GAAjC;;MAEM2P,2BAA2B,GAAGtI,mBAAmB,CAACjQ,KAAD,CAAvD;MACMsV,MAAM,GAAG;IACbjL,UAAU,EAAEgF,aAAa,CAACrP,KAAD,EAAQyJ,mBAAmB,GAAGlB,YAAY,CAACjI,IAA3C,CADZ;IAEb+U,8BAA8B,EAA9BA,8BAFa;IAGb6H,uCAAuC,EAAvCA,uCAHa;IAIb3E,2BAA2B,EAA3BA,2BAJa;IAKb5E,iBAAiB,EAAEnK,yBAAyB,CAC1CjB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAL/B;IAUbsC,wBAAwB,EAAxBA,wBAVa;IAWbvX,UAAU,EAAEkP,aAAa,CAACtP,KAAD,EAAQyJ,mBAAmB,GAAGlB,YAAY,CAACjI,IAA3C;GAX3B;SAaOgV,MAAP;CAhCF;;;;AAoCA,IAAMC,oBAAkB,GAAG;EACzBuC,4BAA4B,EAAE1K,eADL;EAEzBoJ,6BAA6B,EAAE1J,sBAFN;EAGzBuK,6BAA6B,EAAEtK,sBAHN;EAIzBgL,+BAA+B,EAAE1K;CAJnC;;;AAQA,IAAMmS,0BAA0B;;AAAG/J,OAAO,CACxCN,iBADwC,EAExCI,oBAFwC,CAAP,CAGjCgK,iBAHiC,CAAnC;;ICtbME;;;;;;;;;;;;;;8BAyQI,GAAuB,UAAClF,SAAD;aAAoB,UAAC5gB,KAAD;cAC5CV,KAAL,CAAWud,6BAAX,CACE,MAAKvd,KAAL,CAAWwQ,mBAAX,GAAiC8Q,SADnC,EAEE5gB,KAAK,CAACghB,MAAN,CAAa9gB,KAAb,IAAsB,EAFxB;OAD6B;KAAvB;;;;;;4BAUA,GAAqB,UAACoiB,uBAAD;UACrBC,oBAAoB,GAAGD,uBAAuB,CAACnT,KAAxB,CAC3B,aAD2B,KAExB,CAAC,EAAD,CAFL;UAGI3J,MAAM,GAAG+c,oBAAoB,CAAC,CAAD,CAAjC;;UAEI/c,MAAM,CAACH,MAAP,GAAgB,CAApB,EAAuB;QACrBG,MAAM,GAAGA,MAAM,CAACqE,SAAP,CAAiB,CAAjB,EAAoBrE,MAAM,CAACH,MAAP,GAAgB,CAApC,CAAT;YACMmd,WAAW,GAAGhd,MAAM,CAACU,KAAP,CAAa,GAAb,CAApB;YACIuc,cAAc,aAAOD,WAAP,CAAlB;QACAC,cAAc,GAAGA,cAAc,CAACC,MAAf,CAAsB,CAAtB,EAAyBD,cAAc,CAACpd,MAAxC,CAAjB;eACO,MAAKsd,uBAAL,CACLH,WAAW,CAAC,CAAD,CADN,EAELA,WAAW,CAAC,CAAD,CAAX,IAAkB,IAFb,EAGLC,cAAc,IAAI,EAHb,CAAP;;;aAMK,EAAP;KAjBM;;;;;;;;iCAyBA,GAA0B,UAChCG,OADgC,EAEhCC,YAFgC,EAGhCC,eAHgC;UAK5BD,YAAJ,EAAkB;QAChBA,YAAY,GAAGA,YAAY,CAACE,IAAb,EAAf;QACAF,YAAY,GAAGA,YAAY,CAAChZ,SAAb,CAAuB,CAAvB,EAA0BgZ,YAAY,CAACxd,MAAb,GAAsB,CAAhD,EAAmD0d,IAAnD,EAAf;;;UAGE5iB,OAAO,GAAU,EAArB;UACM6iB,eAAe,GAAU,EAA/B;UACMlc,GAAG,GAAQ,MAAKxH,KAAL,CAAWyH,OAA5B;MACA6b,OAAO,GAAGA,OAAO,CAAC/Y,SAAR,CAAkB,CAAlB,EAAqB+Y,OAAO,CAACvd,MAAR,GAAiB,CAAtC,IAA2C,MAArD;;UACIyB,GAAG,CAAC8b,OAAD,CAAP,EAAkB;YACVM,YAAY,GAAGN,OAAO,CAACpc,OAAR,CAAgB,IAAhB,EAAsB,EAAtB,CAArB;QACArG,OAAO,GAAG,MAAKb,KAAL,CAAWyH,OAAX,CAAmBmc,YAAnB,KAAoC,EAA9C;;;UAGEL,YAAY,IAAIA,YAAY,CAACE,IAAb,OAAwB,SAA5C,EAAuD;YACjD5c,CAAC,GAAG,CAAR;;;cAEMgd,SAAS,GAAGL,eAAe,CAAC3c,CAAD,CAAf,CAAmB4c,IAAnB,EAAhB;UACAI,SAAS,GAAGA,SAAS,CAACtZ,SAAV,CAAoB,CAApB,EAAuBsZ,SAAS,CAAC9d,MAAV,GAAmB,CAA1C,EAA6C0d,IAA7C,EAAZ;cACMK,mBAAmB,GAAGN,eAAe,CAAC3c,CAAC,GAAG,CAAL,CAA3C;cACMkd,WAAW,aAAOljB,OAAP,CAAjB;cACImjB,YAAY,GAAQ,EAAxB;UACAD,WAAW,CAACne,OAAZ,CAAoB,UAAAqQ,GAAG;YACrB+N,YAAY,GAAG,MAAKhkB,KAAL,CAAWikB,uCAAX,CACbH,mBADa,EAEb,MAAK9jB,KAAL,CAAWwQ,mBAAX,GAAiC,MAAKxQ,KAAL,CAAWsP,YAAX,CAAwBjI,IAF5C,EAGb4O,GAHa,CAAf;WADF;UAOApV,OAAO,GAAGA,OAAO,CAACmV,MAAR,CAAe,UAAAkO,MAAM;mBAAIA,MAAM,CAACL,SAAD,CAAN,KAAsBG,YAA1B;WAArB,CAAV;UACAnd,CAAC,GAAGA,CAAC,GAAG,CAAR;;;eAdKA,CAAC,GAAG2c,eAAe,CAACzd,MAA3B,EAAmC;;;;;UAiBjClF,OAAO,CAACkF,MAAR,KAAmB,CAAvB,EAA0B;YACpBse,eAAe,GAAW,EAA9B;YACIC,eAAe,GAAW,EAA9B;;YAEE,MAAKtkB,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,IACA,MAAK3b,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,CAAiC,CAAjC,CADA,IAEA,MAAK3b,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,CAAiC,CAAjC,EAAoCtU,IAFpC,IAGA,MAAKrH,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,CAAiC,CAAjC,EAAoCxa,KAJtC,EAKE;UACAkjB,eAAe,GAAGhV,iBAAiB,CACjC,MAAKrP,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,CAAiC,CAAjC,CADiC,EAEjC,MAAK3b,KAAL,CAAWqB,eAFsB,CAAnC;UAIAijB,eAAe,GAAG,MAAKtkB,KAAL,CAAWsP,YAAX,CAAwBqM,QAAxB,CAAiC,CAAjC,EAAoCtU,IAAtD;;;QAEFxG,OAAO,CAAC+E,OAAR,CAAgB,UAAA3E,IAAI;cACZsjB,MAAM,GAAQ,EAApB;cACMpjB,KAAK,GAAW,OAAtB;cACMkG,IAAI,GAAW,MAArB;UACAkd,MAAM,CAACpjB,KAAD,CAAN,GAAgBF,IAAI,CAACojB,eAAD,CAAJ,CAAsBZ,IAAtB,EAAhB;UACAc,MAAM,CAACld,IAAD,CAAN,GAAepG,IAAI,CAACqjB,eAAD,CAAJ,CAAsBb,IAAtB,EAAf;UACAC,eAAe,CAACxiB,IAAhB,CAAqBqjB,MAArB;SANF;eAQOrG,CAAC,CAACsG,MAAF,CAASd,eAAT,EAA0B,MAA1B,CAAP;;;aAEK,EAAP;KA/DM;;;;;;;SA3SD3jB,SAAA;;;sBAWD,KAAKC;QATPya,sBAAAA;QACAnL,2BAAAA;QACAkB,kCAAAA;QACAY,yBAAAA;QACAsJ,gCAAAA;QACA0B,6CAAAA;QACAkD,0CAAAA;QACAZ,uCAAAA;QACArd,8BAAAA;QAGIgP,UAAU,GAAGD,eAAe,CAACd,YAAD,CAAlC;QACMsF,eAAe,GAAY0K,2BAAjC;QACMX,kBAAkB,GAAGtO,UAAU,KAAK,CAACe,UAAD,IAAeA,UAAU,KAAK,EAAnC,CAArC;QACMH,oBAAoB,GACxBG,UAAU,IACVA,UAAU,KAAK,EADf,IAEAL,6BAA6B,CAC3BzB,YAD2B,EAE3BkB,mBAF2B,EAG3B4L,8BAH2B,CAH/B;QAQMzB,UAAU,GAAGtL,iBAAiB,CAACC,YAAD,EAAejO,eAAf,CAApC;QACMke,kBAAkB,GAAG/P,iCAAiC,CAC1D4M,8BAD0D,EAE1DzB,UAF0D,EAG1DnK,mBAAmB,GAAGlB,YAAY,CAACjI,IAHuB,CAA5D;QAKMmY,eAAe,GAAGvP,sBAAsB,CAC5CX,YAD4C,EAE5CjO,eAF4C,CAA9C;QAIMoe,uBAAuB,GAAGjQ,iCAAiC,CAC/D4M,8BAD+D,EAE/DoD,eAF+D,EAG/DhP,mBAAmB,GAAGlB,YAAY,CAACjI,IAH4B,CAAjE;QAKMqY,SAAS,GAAGnQ,gBAAgB,CAACD,YAAD,EAAejO,eAAf,CAAlC;;QAEIqZ,iBAAJ,EAAuB;UACjBtJ,UAAU,IAAI,IAAd,IAAsB,aAAa9B,YAAvC,EAAqD;aAC9CtP,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEEiI,YAAY,WAFd;;;UAKIsP,UAAU,GAAGhO,yBAAyB,CAC1CtB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAA5C;;UAME,CAACuC,kBAAkB,IAAI1N,oBAAvB,KACA,CAACyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAF3B,EAGE;aACKrH,KAAL,CAAW6e,4BAAX,CACErO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;OAJF,MAOO,IACL,CAACsX,kBAAD,IACA,CAAC1N,oBADD,IAEAyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAHnB,EAIL;aACKrH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;UAKEod,aAAa,GAAU,EAA3B;;UAEInV,YAAY,CAACgD,OAAb,IAAwBhD,YAAY,CAACgD,OAAb,CAAqBC,UAAjD,EAA6D;YACvD,sBAAsB9N,IAAtB,CAA2B6K,YAAY,CAACgD,OAAb,CAAqBC,UAAhD,CAAJ,EAAiE;cACzD0Q,oBAAoB,GAAG3T,YAAY,CAACgD,OAAb,CAAqBC,UAArB,CAAgC1C,KAAhC,CAC3B,qBAD2B,KAExB,CAAC,EAAD,CAFL;UAIA4U,aAAa,GAAG,KAAKE,kBAAL,CAAwB1B,oBAAoB,CAAC,CAAD,CAA5C,CAAhB;;;;UAIE0C,aAAa,GAAQ,EAA3B;;UACIrW,YAAY,CAACqM,QAAjB,EAA2B;QACzBrM,YAAY,CAACqM,QAAb,CAAsB3a,GAAtB,CAA0B,UAAAC,IAAI;cACtB2hB,OAAO,GAAQ,EAArB;cACMvb,IAAI,GAAW,MAArB;cACMlG,KAAK,GAAW,OAAtB;UACAyhB,OAAO,CAACvb,IAAD,CAAP,GAAgBpG,IAAI,CAACoG,IAArB;UACAub,OAAO,CAACzhB,KAAD,CAAP,GAAiBF,IAAI,CAACE,KAAtB;UACAwkB,aAAa,CAACzkB,IAAd,CAAmB0hB,OAAnB;SANF;;;UAUEE,MAAM,GAAQ,EAAlB;;UAGExT,YAAY,CAACgD,OAAb,IACAhD,YAAY,CAACgD,OAAb,CAAqBC,UADrB,IAEA,sBAAsB9N,IAAtB,CAA2B6K,YAAY,CAACgD,OAAb,CAAqBC,UAAhD,CAHF,EAIE;QACAuQ,MAAM,GAAG,EAAT;;YACI1R,UAAJ,EAAgB;cACR+T,iBAAiB,GAAQ,EAA/B;UACAV,aAAa,CAACzjB,GAAd,CAAkB,UAAAC,IAAI;gBAChBA,IAAI,CAACoG,IAAT,EAAe;cACb8d,iBAAiB,CAACjkB,IAAlB,CAAuBD,IAAI,CAACoG,IAA5B;;WAFJ;;cAMI,CAAC8d,iBAAiB,CAACtc,QAAlB,CAA2BuI,UAA3B,CAAL,EAA6C;iBACtCpR,KAAL,CAAWud,6BAAX,CACE,KAAKvd,KAAL,CAAWwQ,mBAAX,GAAiClB,YAAY,CAACjI,IADhD,EAEE,EAFF;;;;YAOA,CAAC6W,CAAC,CAAC2E,OAAF,CAAU,KAAK7iB,KAAL,CAAWmH,UAArB,eAAsCsd,aAAtC,EAAL,EAA6D;eACtDzkB,KAAL,CAAWoe,6BAAX,CACE,KAAKpe,KAAL,CAAWwQ,mBAAX,GAAiClB,YAAY,CAACjI,IADhD,EAEEod,aAFF;;;QAKF3B,MAAM,aAAO2B,aAAP,CAAN;OA5BF,MA6BO,IAAInV,YAAY,CAACuV,OAAjB,EAA0B;YACzB4B,aAAa,GAAQ,EAA3B;QACA3D,MAAM,GAAG,EAAT;;YACIrI,OAAO,IAAIA,OAAO,CAACnL,YAAY,CAACuV,OAAb,CAAqBpB,IAArB,EAAD,CAAtB,EAAqD;UACnDvF,CAAC,CAACtY,OAAF,CAAU6U,OAAO,CAACnL,YAAY,CAACuV,OAAb,CAAqBpB,IAArB,EAAD,CAAjB,EAAgD,UAACxiB,IAAD;gBAE5CqO,YAAY,CAACwV,aAAb,IACA,MAAI,CAAC9kB,KAAL,CAAWikB,uCAAX,CACE3U,YAAY,CAACwV,aADf,EAEEtU,mBAAmB,GAAGlB,YAAY,CAACjI,IAFrC,EAGEpG,IAHF,CAFF,EAOE;kBACM8jB,aAAa,GAAW1V,iBAAiB,CAC7CpO,IAD6C,EAE7CI,eAF6C,CAA/C;cAIAolB,aAAa,CAACvlB,IAAd,CAAmB;gBAAEC,KAAK,EAAE4jB,aAAT;gBAAwB1d,IAAI,EAAEpG,IAAI,CAACoG;eAAtD;;WAbJ;;cAiBI+J,UAAJ,EAAgB;gBACR+T,kBAAiB,GAAQ,EAA/B;YACAsB,aAAa,CAACzlB,GAAd,CAAkB,UAACC,IAAD;kBACZA,IAAI,CAACoG,IAAT,EAAe;gBACb8d,kBAAiB,CAACjkB,IAAlB,CAAuBD,IAAI,CAACoG,IAA5B;;aAFJ;;gBAKI,CAAC8d,kBAAiB,CAACtc,QAAlB,CAA2BuI,UAA3B,CAAL,EAA6C;mBACtCpR,KAAL,CAAWud,6BAAX,CACE,KAAKvd,KAAL,CAAWwQ,mBAAX,GAAiClB,YAAY,CAACjI,IADhD,EAEE,EAFF;;;;cAMA,CAAC6W,CAAC,CAAC2E,OAAF,CAAU,KAAK7iB,KAAL,CAAWmH,UAArB,eAAsCsf,aAAtC,EAAL,EAA6D;iBACtDzmB,KAAL,CAAWoe,6BAAX,CACE,KAAKpe,KAAL,CAAWwQ,mBAAX,GAAiClB,YAAY,CAACjI,IADhD,EAEEof,aAFF;;;UAKF3D,MAAM,aAAO2D,aAAP,CAAN;;OAzCG,MA2CA;QACL3D,MAAM,GAAG,EAAT;;YACI,CAAC5E,CAAC,CAAC2E,OAAF,CAAU,KAAK7iB,KAAL,CAAWmH,UAArB,eAAsCwe,aAAtC,EAAL,EAA6D;eACtD3lB,KAAL,CAAWoe,6BAAX,CACE,KAAKpe,KAAL,CAAWwQ,mBAAX,GAAiClB,YAAY,CAACjI,IADhD,EAEEse,aAFF;;;QAKF7C,MAAM,aAAO6C,aAAP,CAAN;;;UAGEC,UAAU,GAAG,KAAjB;;UACItW,YAAY,CAACgD,OAAb,IAAwBhD,YAAY,CAACgD,OAAb,CAAqBC,UAAjD,EAA6D;QAC3DjD,YAAY,CAACgD,OAAb,CAAqBC,UAArB,CAAgC3L,KAAhC,CAAsC,GAAtC,EAA2ChB,OAA3C,CAAmD,UAACigB,QAAD;cAC7C,CAACD,UAAD,IAAeC,QAAQ,KAAK,oBAAhC,EAAsD;YACpDD,UAAU,GAAG,IAAb;;SAFJ;;;UAOE7G,eAAe,GAAQ,EAA3B;;UACIzP,YAAY,CAACY,IAAb,IAAqBZ,YAAY,CAACY,IAAb,CAAkB8O,SAA3C,EAAsD;QACpDD,eAAe,GAAG,KAAK/e,KAAL,CAAWoc,8BAAX,CAChB9M,YAAY,CAACY,IAAb,CAAkB8O,SADF,EAEhBxO,mBAAmB,GAAGlB,YAAY,CAACjI,IAFnB,CAAlB;;;UAME0X,eAAe,IAAI3N,UAAU,KAAK2N,eAAtC,EAAuD;aAChD/e,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE0X,eAFF;;;UAMIe,OAAO,GAAGpB,wBAAwB,CACtClO,mBAAmB,GAAGlB,YAAY,CAACjI,IADG,CAAxC;aAKEhH,aAAA,MAAA,MAAA,EACEA,aAAA,CAACod,KAAD,MAAA,EACG8B,kBADH,EACuB,GADvB,EAEGlP,UAAU,IACThQ,aAAA,OAAA;QAAMG,SAAS,EAAC;OAAhB,EAAsCkC,eAAtC,CAHJ,CADF,EAOErC,aAAA,CAACylB,IAAD;QAAM1e,GAAG,EAAC;OAAV,EACG0b,MAAM,CAAC9hB,GAAP,CAAW,UAACC,IAAD,EAAY6J,KAAZ;eACVzK,aAAA,CAACqb,SAAD;UAAWtU,GAAG,EAAE0D;UAAOib,KAAK,EAAE;UAAMC,MAAM,EAAEJ;SAA5C,EACEvlB,aAAA,CAACod,KAAD;UAAOsI,KAAK,EAAE;SAAd,EACE1lB,aAAA,CAAC4e,KAAD;UACE7X,GAAG,EAAEkI,YAAY,CAACjI,IAAb,GAAoB,GAApB,GAA0ByD;UAC/B1H,IAAI,EAAC;UACLiE,IAAI,EAAEiI,YAAY,CAACjI;UACnBzG,KAAK,EAAEK,IAAI,CAACoG;UACZ5F,QAAQ,EAAE,MAAI,CAACilB,oBAAL,CAA0BpX,YAAY,CAACjI,IAAvC;UACV6X,QAAQ,EAAEN;UACV6G,OAAO,EAAExkB,IAAI,CAACoG,IAAL,KAAc+J,UAAd,IAA4BnQ,IAAI,CAACoG,IAAL,KAAc0X;SAPrD,CADF,EASK,GATL,EAUG1P,iBAAiB,CAACpO,IAAD,EAAOI,eAAP,CAVpB,CADF,CADU;OAAX,CADH,CAPF,EAyBGuT,eAAe,IAAIkL,OAAnB,IACCzf,aAAA,CAAC8c,eAAD;QAAiBC,IAAI,EAAC;QAAqB5c,SAAS,EAAC;OAArD,CA1BJ,EA4BG8O,YAAY,CAACzQ,IAAb,IAAqBwB,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAA6Bkf,SAA7B,CA5BxB,EA6BG9K,eAAe,IAAI+J,kBAAnB,IACCte,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAiCiC,kBAAjC,CA9BJ,EAgCGwO,oBAAoB,IACnB5Q,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAmCif,uBAAnC,CAjCJ,CADF;KAtKF,MA4MO;UACDrO,UAAU,IAAI,IAAlB,EAAwB;aACjBpR,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE,IAFF;;YAIIqX,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAA5B,EAAuE;eAChErH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;;aAKG,IAAP;;;;;EAlQuBhH;;;;AAoY7B,IAAM6b,iBAAe,GAAG,SAAlBA,eAAkB,CACtBnV,KADsB,EAEtBoV,WAFsB;MAId7M,eAAsC6M,YAAtC7M;MAAckB,sBAAwB2L,YAAxB3L;;MAChB4L,8BAA8B,GAAG,SAAjCA,8BAAiC,CACrCrN,UADqC,EAErCY,aAFqC;WAGlC2G,sBAAsB,CAACvP,KAAD,EAAQgI,UAAR,EAAoBY,aAApB,CAHY;GAAvC;;MAIMsU,uCAAuC,GAAG,SAA1CA,uCAA0C,CAC9ClV,UAD8C,EAE9CY,aAF8C,EAG9C9O,OAH8C;WAK9C0V,+BAA+B,CAACxP,KAAD,EAAQgI,UAAR,EAAoBlO,OAApB,EAA6B8O,aAA7B,CALe;GAAhD;;MAMM+O,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAC/O,aAAD;WAC/B6G,gBAAgB,CAACzP,KAAD,EAAQ4I,aAAR,CADe;GAAjC;;MAEM2P,2BAA2B,GAAGtI,mBAAmB,CAACjQ,KAAD,CAAvD;MACMsV,MAAM,GAAG;IACbjL,UAAU,EAAEgF,aAAa,CAACrP,KAAD,EAAQyJ,mBAAmB,GAAGlB,YAAY,CAACjI,IAA3C,CADZ;IAEb+U,8BAA8B,EAA9BA,8BAFa;IAGb6H,uCAAuC,EAAvCA,uCAHa;IAIb3E,2BAA2B,EAA3BA,2BAJa;IAKb5E,iBAAiB,EAAEnK,yBAAyB,CAC1CjB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAL/B;IAUbsC,wBAAwB,EAAxBA,wBAVa;IAWbvX,UAAU,EAAEkP,aAAa,CAACtP,KAAD,EAAQyJ,mBAAmB,GAAGlB,YAAY,CAACjI,IAA3C;GAX3B;SAaOgV,MAAP;CA/BF;;;;AAmCA,IAAMC,oBAAkB,GAAG;EACzBuC,4BAA4B,EAAE1K,eADL;EAEzBoJ,6BAA6B,EAAE1J,sBAFN;EAGzBuK,6BAA6B,EAAEtK,sBAHN;EAIzBgL,+BAA+B,EAAE1K;CAJnC;;;AAQA,IAAMuS,uBAAuB;;AAAGnK,OAAO,CACrCN,iBADqC,EAErCI,oBAFqC,CAAP,CAG9BkK,cAH8B,CAAhC;;ICxdMI;;;;;;;;;;;SACG7mB,SAAA;QACGuP,eAAiB,KAAKtP,MAAtBsP;;QACJ8C,wBAAwB,CAAC9C,YAAD,CAA5B,EAA4C;aACnCjP,aAAA,CAAC+lB,0BAAD,oBAAc,KAAKpmB,MAAnB,CAAP;;;WAEKK,aAAA,CAACgmB,uBAAD,oBAAW,KAAKrmB,MAAhB,CAAP;;;;EANoBK;;ICgClBwmB;;;;;gBACQ7mB,KAAZ;;;wCACQA,KAAN;;;;;yBAkMM,GAAkB,UAACU,KAAD;YACnBogB,QAAL,cACK,MAAK/Z,KADV;QAEEqK,UAAU,EAAE1Q,KAAK,CAAC2e,aAAN,CAAoBze,KAApB,IAA6B,EAF3C;QAGEmgB,SAAS,EAAE;;KAJP;;uBAQA,GAAgB,UAACrgB,KAAD;YACjBogB,QAAL,cACK,MAAK/Z,KADV;QAEEqK,UAAU,EAAE1Q,KAAK,CAAC2e,aAAN,CAAoBze,KAApB,IAA6B,EAF3C;QAGEmgB,SAAS,EAAE;;;YAER/gB,KAAL,CAAWud,6BAAX,CACE,MAAKvd,KAAL,CAAWwQ,mBAAX,GAAiC9P,KAAK,CAAC2e,aAAN,CAAoBhY,IADvD,EAEE3G,KAAK,CAAC2e,aAAN,CAAoBze,KAApB,IAA6B,EAF/B;KANM;;UAzMDmG,KAAL,GAAa;MAAEqK,UAAU,EAAE,EAAd;MAAkB2P,SAAS,EAAE;KAA1C;;;;;;SAGKhhB,SAAA;sBAUD,KAAKC;QARPsP,2BAAAA;QACAkB,kCAAAA;QACAY,yBAAAA;QACAsJ,gCAAAA;QACA0B,6CAAAA;QACAkD,0CAAAA;QACAZ,uCAAAA;QACArd,8BAAAA;QAEIgP,UAAU,GAAGD,eAAe,CAACd,YAAD,CAAlC;QACMsF,eAAe,GAAY0K,2BAAjC;QACMX,kBAAkB,GAAGtO,UAAU,KAAK,CAACe,UAAD,IAAeA,UAAU,KAAK,EAAnC,CAArC;QACMH,oBAAoB,GACxBG,UAAU,IACVA,UAAU,KAAK,EADf,IAEAL,6BAA6B,CAC3BzB,YAD2B,EAE3BkB,mBAF2B,EAG3B4L,8BAH2B,CAH/B;QAQMzB,UAAU,GAAGtL,iBAAiB,CAACC,YAAD,EAAejO,eAAf,CAApC;QACMke,kBAAkB,GAAG/P,iCAAiC,CAC1D4M,8BAD0D,EAE1DzB,UAF0D,EAG1DnK,mBAAmB,GAAGlB,YAAY,CAACjI,IAHuB,CAA5D;QAMMmY,eAAe,GAAGvP,sBAAsB,CAC5CX,YAD4C,EAE5CjO,eAF4C,CAA9C;QAIMoe,uBAAuB,GAAGjQ,iCAAiC,CAC/D4M,8BAD+D,EAE/DoD,eAF+D,EAG/DhP,mBAAmB,GAAGlB,YAAY,CAACjI,IAH4B,CAAjE;QAMMqY,SAAS,GAAGnQ,gBAAgB,CAACD,YAAD,EAAejO,eAAf,CAAlC;;QAEIqZ,iBAAJ,EAAuB;UACjBtJ,UAAU,IAAI,IAAd,IAAsB,aAAa9B,YAAvC,EAAqD;aAC9CtP,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEEiI,YAAY,WAFd;;;UAKIsP,UAAU,GAAGhO,yBAAyB,CAC1CtB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAA5C;;UAME,CAACuC,kBAAkB,IAAI1N,oBAAvB,KACA,CAACyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAF3B,EAGE;aACKrH,KAAL,CAAW6e,4BAAX,CACErO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;OAJF,MAOO,IACL,CAACsX,kBAAD,IACA,CAAC1N,oBADD,IAEAyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAHnB,EAIL;aACKrH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;UAKIyY,OAAO,GAAGpB,wBAAwB,CACtClO,mBAAmB,GAAGlB,YAAY,CAACjI,IADG,CAAxC;;UAIIiI,YAAY,CAACY,IAAb,IAAqBZ,YAAY,CAACY,IAAb,CAAkB8O,SAA3C,EAAsD;YAChDD,eAAe,GAAQ,EAA3B;QACAA,eAAe,GAAG,KAAK/e,KAAL,CAAWoc,8BAAX,CAChB9M,YAAY,CAACY,IAAb,CAAkB8O,SADF,EAEhBxO,mBAAmB,GAAGlB,YAAY,CAACjI,IAFnB,CAAlB;;YAKI0X,eAAe,IAAIA,eAAe,KAAK3N,UAA3C,EAAuD;eAChDpR,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE0X,eAFF;;;eAOA1e,aAAA,CAACqb,SAAD,MAAA,EACErb,aAAA,CAACod,KAAD,MAAA,EACG8B,kBADH,EACuB,GADvB,EAEGlP,UAAU,IACThQ,aAAA,OAAA;UAAMG,SAAS,EAAC;SAAhB,EAAsCkC,eAAtC,CAHJ,CADF,EAOErC,aAAA,CAAC4e,KAAD;UACE7b,IAAI,EAAC;UACLiE,IAAI,EAAEiI,YAAY,CAACjI;UACnB5F,QAAQ,EAAE,KAAKC;UACfwf,MAAM,EAAE,KAAKC;UACbvgB,KAAK,EACH,KAAKmG,KAAL,CAAWga,SAAX,GACI,KAAKha,KAAL,CAAWqK,UAAX,IAAyB,EAD7B,GAEI2N,eAAe,IAAI;UAEzBG,QAAQ,EAAEN;SAVZ,CAPF,EAmBGhK,eAAe,IAAIkL,OAAnB,IACCzf,aAAA,CAAC8c,eAAD;UACEC,IAAI,EAAC;UACL5c,SAAS,EAAC;SAFZ,CApBJ,EAyBG8O,YAAY,CAACzQ,IAAb,IACCwB,aAAA,CAACod,KAAD;UAAOjd,SAAS,EAAC;SAAjB,EAA6Bkf,SAA7B,CA1BJ,EA4BG9K,eAAe,IAAI+J,kBAAnB,IACCte,aAAA,CAACod,KAAD;UAAOjd,SAAS,EAAC;SAAjB,EAAiCiC,kBAAjC,CA7BJ,EA+BGwO,oBAAoB,IACnB5Q,aAAA,CAACod,KAAD;UAAOjd,SAAS,EAAC;SAAjB,EACGif,uBADH,CAhCJ,CADF;OAdF,MAqDO;eAEHpf,aAAA,CAACqb,SAAD,MAAA,EACErb,aAAA,CAACod,KAAD,MAAA,EACG8B,kBADH,EACuB,GADvB,EAEGlP,UAAU,IACThQ,aAAA,OAAA;UAAMG,SAAS,EAAC;SAAhB,EAAsCkC,eAAtC,CAHJ,CADF,EAOErC,aAAA,CAAC4e,KAAD;UACE7b,IAAI,EAAC;UACLiE,IAAI,EAAEiI,YAAY,CAACjI;UACnB5F,QAAQ,EAAE,KAAKC;UACfwf,MAAM,EAAE,KAAKC;UACbvgB,KAAK,EACH,KAAKmG,KAAL,CAAWga,SAAX,GACI,KAAKha,KAAL,CAAWqK,UAAX,IAAyB,EAD7B,GAEIA,UAAU,IAAI;UAEpB8N,QAAQ,EAAEN;SAVZ,CAPF,EAmBGhK,eAAe,IAAIkL,OAAnB,IACCzf,aAAA,CAAC8c,eAAD;UACEC,IAAI,EAAC;UACL5c,SAAS,EAAC;SAFZ,CApBJ,EAyBG8O,YAAY,CAACzQ,IAAb,IACCwB,aAAA,CAACod,KAAD;UAAOjd,SAAS,EAAC;SAAjB,EAA6Bkf,SAA7B,CA1BJ,EA4BG9K,eAAe,IAAI+J,kBAAnB,IACCte,aAAA,CAACod,KAAD;UAAOjd,SAAS,EAAC;SAAjB,EAAiCiC,kBAAjC,CA7BJ,EA+BGwO,oBAAoB,IACnB5Q,aAAA,CAACod,KAAD;UAAOjd,SAAS,EAAC;SAAjB,EACGif,uBADH,CAhCJ,CADF;;KAvFJ,MA+HO;UACD,KAAK1Y,KAAL,CAAWga,SAAf,EAA0B;aACnBD,QAAL,cAAmB,KAAK/Z,KAAxB;UAA+Bga,SAAS,EAAE;;;;UAExC3P,UAAU,IAAI,IAAlB,EAAwB;aACjBpR,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE,IAFF;;YAIIqX,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAA5B,EAAuE;eAChErH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;;aAKG,IAAP;;;;;EA7LahH;;;;AA2OnB,IAAM6b,iBAAe,GAAG,SAAlBA,eAAkB,CACtBnV,KADsB,EAEtBoV,WAFsB;MAId7M,eAAsC6M,YAAtC7M;MAAckB,sBAAwB2L,YAAxB3L;;MAChB4L,8BAA8B,GAAG,SAAjCA,8BAAiC,CACrCrN,UADqC,EAErCY,aAFqC;WAGlC2G,sBAAsB,CAACvP,KAAD,EAAQgI,UAAR,EAAoBY,aAApB,CAHY;GAAvC;;MAIM+O,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAC/O,aAAD;WAC/B6G,gBAAgB,CAACzP,KAAD,EAAQ4I,aAAR,CADe;GAAjC;;MAEM2P,2BAA2B,GAAGtI,mBAAmB,CAACjQ,KAAD,CAAvD;MACMsV,MAAM,GAAG;IACbjL,UAAU,EAAEgF,aAAa,CAACrP,KAAD,EAAQyJ,mBAAmB,GAAGlB,YAAY,CAACjI,IAA3C,CADZ;IAEb+U,8BAA8B,EAA9BA,8BAFa;IAGbkD,2BAA2B,EAA3BA,2BAHa;IAIb5E,iBAAiB,EAAEnK,yBAAyB,CAC1CjB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAJ/B;IASbsC,wBAAwB,EAAxBA;GATF;SAWOrC,MAAP;CAvBF;;;;AA2BA,IAAMC,oBAAkB,GAAG;EACzBuC,4BAA4B,EAAE1K,eADL;EAEzBoJ,6BAA6B,EAAE1J,sBAFN;EAGzBiL,+BAA+B,EAAE1K;CAHnC;;;AAOA,IAAM0S,aAAa;;AAAGtK,OAAO,CAC3BN,iBAD2B,EAE3BI,oBAF2B,CAAP,CAGpBuK,IAHoB,CAAtB;;IClRME;;;;;;;;;;yBAmII,GAAkB,UAACrmB,KAAD;YACnBV,KAAL,CAAWud,6BAAX,CACE,MAAKvd,KAAL,CAAWwQ,mBAAX,GAAiC9P,KAAK,CAAC2e,aAAN,CAAoBhY,IADvD,EAEE3G,KAAK,CAAC2e,aAAN,CAAoBze,KAApB,KAA8B,EAA9B,GAAmCF,KAAK,CAAC2e,aAAN,CAAoBze,KAAvD,GAA+D,IAFjE;KADM;;;;;;;SAlIDb,SAAA;sBAUD,KAAKC;QARPsP,2BAAAA;QACAkB,kCAAAA;QACAY,yBAAAA;QACAsJ,gCAAAA;QACA0B,6CAAAA;QACAkD,0CAAAA;QACAZ,uCAAAA;QACArd,8BAAAA;QAEIgP,UAAU,GAAGD,eAAe,CAACd,YAAD,CAAlC;QACMsF,eAAe,GAAY0K,2BAAjC;QACMX,kBAAkB,GAAGtO,UAAU,KAAK,CAACe,UAAD,IAAeA,UAAU,KAAK,EAAnC,CAArC;QACMH,oBAAoB,GACxBG,UAAU,IACVA,UAAU,KAAK,EADf,IAEAL,6BAA6B,CAC3BzB,YAD2B,EAE3BkB,mBAF2B,EAG3B4L,8BAH2B,CAH/B;QAQMzB,UAAU,GAAGtL,iBAAiB,CAACC,YAAD,EAAejO,eAAf,CAApC;QACMke,kBAAkB,GAAG/P,iCAAiC,CAC1D4M,8BAD0D,EAE1DzB,UAF0D,EAG1DnK,mBAAmB,GAAGlB,YAAY,CAACjI,IAHuB,CAA5D;QAKMmY,eAAe,GAAGvP,sBAAsB,CAC5CX,YAD4C,EAE5CjO,eAF4C,CAA9C;QAIMoe,uBAAuB,GAAGjQ,iCAAiC,CAC/D4M,8BAD+D,EAE/DoD,eAF+D,EAG/DhP,mBAAmB,GAAGlB,YAAY,CAACjI,IAH4B,CAAjE;QAKMqY,SAAS,GAAGnQ,gBAAgB,CAACD,YAAD,EAAejO,eAAf,CAAlC;;QACIqZ,iBAAJ,EAAuB;UACjBtJ,UAAU,IAAI,IAAd,IAAsB,aAAa9B,YAAvC,EAAqD;aAC9CtP,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEEiI,YAAY,WAFd;;;UAKIsP,UAAU,GAAGhO,yBAAyB,CAC1CtB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAA5C;;UAME,CAACuC,kBAAkB,IAAI1N,oBAAvB,KACA,CAACyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAF3B,EAGE;aACKrH,KAAL,CAAW6e,4BAAX,CACErO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;OAJF,MAOO,IACL,CAACsX,kBAAD,IACA,CAAC1N,oBADD,IAEAyN,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAHnB,EAIL;aACKrH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;UAKIyY,OAAO,GAAGpB,wBAAwB,CACtClO,mBAAmB,GAAGlB,YAAY,CAACjI,IADG,CAAxC;UAII0X,eAAe,GAAQ,EAA3B;;UACIzP,YAAY,CAACY,IAAb,IAAqBZ,YAAY,CAACY,IAAb,CAAkB8O,SAA3C,EAAsD;QACpDD,eAAe,GAAG,KAAK/e,KAAL,CAAWoc,8BAAX,CAChB9M,YAAY,CAACY,IAAb,CAAkB8O,SADF,EAEhBxO,mBAAmB,GAAGlB,YAAY,CAACjI,IAFnB,CAAlB;;;UAME0X,eAAe,IAAI3N,UAAU,KAAK2N,eAAtC,EAAuD;aAChD/e,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE0X,eAFF;;;aAQA1e,aAAA,CAACqb,SAAD,MAAA,EACErb,aAAA,CAACod,KAAD,MAAA,EACG8B,kBADH,EACuB,GADvB,EAEGlP,UAAU,IACThQ,aAAA,OAAA;QAAMG,SAAS,EAAC;OAAhB,EAAsCkC,eAAtC,CAHJ,CADF,EAOErC,aAAA,CAAC4e,KAAD;QACE7b,IAAI,EAAC;QACLiE,IAAI,EAAEiI,YAAY,CAACjI;QACnB5F,QAAQ,EAAE,KAAKC;QACfd,KAAK,EAAEwQ,UAAU,IAAI2N,eAAd,IAAiC;QACxCG,QAAQ,EAAEN;OALZ,CAPF,EAcGhK,eAAe,IAAIkL,OAAnB,IACCzf,aAAA,CAAC8c,eAAD;QAAiBC,IAAI,EAAC;QAAqB5c,SAAS,EAAC;OAArD,CAfJ,EAiBG8O,YAAY,CAACzQ,IAAb,IAAqBwB,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAA6Bkf,SAA7B,CAjBxB,EAkBG9K,eAAe,IAAI+J,kBAAnB,IACCte,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAiCiC,kBAAjC,CAnBJ,EAqBGwO,oBAAoB,IACnB5Q,aAAA,CAACod,KAAD;QAAOjd,SAAS,EAAC;OAAjB,EAAmCif,uBAAnC,CAtBJ,CADF;KAjDF,MA4EO;UACDrO,UAAU,IAAI,IAAlB,EAAwB;aACjBpR,KAAL,CAAWud,6BAAX,CACE/M,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC,EAEE,IAFF;;YAIIqX,wBAAwB,CAAClO,mBAAmB,GAAGlB,YAAY,CAACjI,IAApC,CAA5B,EAAuE;eAChErH,KAAL,CAAW8e,+BAAX,CACEtO,mBAAmB,GAAGlB,YAAY,CAACjI,IADrC;;;;aAKG,IAAP;;;;;EA/HehH;;;;AA6JrB,IAAM6b,iBAAe,GAAG,SAAlBA,eAAkB,CACtBnV,KADsB,EAEtBoV,WAFsB;MAId7M,eAAsC6M,YAAtC7M;MAAckB,sBAAwB2L,YAAxB3L;;MAChB4L,8BAA8B,GAAG,SAAjCA,8BAAiC,CACrCrN,UADqC,EAErCY,aAFqC;WAGlC2G,sBAAsB,CAACvP,KAAD,EAAQgI,UAAR,EAAoBY,aAApB,CAHY;GAAvC;;MAIM+O,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAC/O,aAAD;WAC/B6G,gBAAgB,CAACzP,KAAD,EAAQ4I,aAAR,CADe;GAAjC;;MAEM2P,2BAA2B,GAAGtI,mBAAmB,CAACjQ,KAAD,CAAvD;MACMsV,MAAM,GAAG;IACbjL,UAAU,EAAEgF,aAAa,CAACrP,KAAD,EAAQyJ,mBAAmB,GAAGlB,YAAY,CAACjI,IAA3C,CADZ;IAEb+U,8BAA8B,EAA9BA,8BAFa;IAGbkD,2BAA2B,EAA3BA,2BAHa;IAIb5E,iBAAiB,EAAEnK,yBAAyB,CAC1CjB,YAD0C,EAE1CkB,mBAF0C,EAG1C4L,8BAH0C,CAJ/B;IASbsC,wBAAwB,EAAxBA;GATF;SAWOrC,MAAP;CAvBF;;;;AA2BA,IAAMC,oBAAkB,GAAG;EACzBuC,4BAA4B,EAAE1K,eADL;EAEzBoJ,6BAA6B,EAAE1J,sBAFN;EAGzBiL,+BAA+B,EAAE1K;CAHnC;;;AAOA,IAAM4S,aAAa;;AAAGxK,OAAO,CAC3BN,iBAD2B,EAE3BI,oBAF2B,CAAP,CAGpByK,MAHoB,CAAtB;;IC5KME;;;;;;;;;;;SACGlnB,SAAA;sBAOD,KAAKC;QALPya,sBAAAA;QACAhT,sBAAAA;QACA6H,2BAAAA;QACAkB,kCAAAA;QACAnP,8BAAAA;WAEK,KAAK6lB,aAAL,CACLzM,OADK,EAELhT,OAFK,EAGL6H,YAHK,EAILkB,mBAJK,EAKLnP,eALK,CAAP;;;;;;;;;;SAeM6lB,gBAAA,uBACNzM,OADM,EAENhT,OAFM,EAGN6H,YAHM,EAINkB,mBAJM,EAKNnP,eALM;YAOEiO,YAAY,CAAClM,IAArB;WACOvB,eAAL;eAEIxB,aAAA,CAACwmB,aAAD;UACEvX,YAAY,EAAEA;UACdkB,mBAAmB,EAAEA;UACrBnP,eAAe,EAAEA;SAHnB,CADF;;WAOGS,eAAL;eAEIzB,aAAA,CAAC+e,aAAD;UACE9P,YAAY,EAAEA;UACdkB,mBAAmB,EAAEA;UACrBnP,eAAe,EAAEA;SAHnB,CADF;;WAOGW,eAAL;eAEI3B,aAAA,CAAC0mB,aAAD;UACEzX,YAAY,EAAEA;UACdkB,mBAAmB,EAAEA;UACrBnP,eAAe,EAAEA;SAHnB,CADF;;WAOGU,oBAAL;eAEI1B,aAAA,CAAC2f,iBAAD;UACE1Q,YAAY,EAAEA;UACdkB,mBAAmB,EAAEA;UACrBnP,eAAe,EAAEA;SAHnB,CADF;;WAOGY,kBAAL;eAEI5B,aAAA,CAAC0hB,gBAAD;UACEzS,YAAY,EAAEA;UACdkB,mBAAmB,EAAEA;UACrBnP,eAAe,EAAEA;SAHnB,CADF;;WAOGa,kBAAL;eAEI7B,aAAA,CAACwgB,gBAAD;UACEvR,YAAY,EAAEA;UACdkB,mBAAmB,EAAEA;UACrBnP,eAAe,EAAEA;SAHnB,CADF;;WAOGgB,eAAL;eAEIhC,aAAA,CAAC4hB,aAAD;UACE3S,YAAY,EAAEA;UACdkB,mBAAmB,EAAEA;UACrBnP,eAAe,EAAEA;SAHnB,CADF;;WAOGmB,oBAAL;eAEInC,aAAA,CAACoe,kBAAD;UACEnP,YAAY,EAAEA;UACdkB,mBAAmB,EAAEA;UACrBnP,eAAe,EAAEA;SAHnB,CADF;;WAOGiB,qBAAL;eAEIjC,aAAA,CAACumB,SAAD;UACEnM,OAAO,EAAEA;UACTnL,YAAY,EAAEA;UACdkB,mBAAmB,EAAEA;UACrBnP,eAAe,EAAEA;UACjBoG,OAAO,EAAEA;SALX,CADF;;WASGlF,qBAAL;eAEIlC,aAAA,CAAC8lB,SAAD;UACE1L,OAAO,EAAEA;UACTnL,YAAY,EAAEA;UACdkB,mBAAmB,EAAEA;UACrBnP,eAAe,EAAEA;UACjBoG,OAAO,EAAEA;SALX,CADF;;WASGtF,gBAAL;eAEI9B,aAAA,CAACohB,aAAD;UACEnS,YAAY,EAAEA;UACdkB,mBAAmB,EAAEA;UACrBnP,eAAe,EAAEA;SAHnB,CADF;;WAOGe,eAAL;eAEI/B,aAAA,CAACohB,aAAD;UACEnS,YAAY,EAAEA;UACdkB,mBAAmB,EAAEA;UACrBnP,eAAe,EAAEA;SAHnB,CADF;;;eASEhB,aAAA,MAAA;UAAK+a,KAAK,EAAE;YAAE1D,OAAO,EAAE;;SAAvB,UAAA,EACSpI,YAAY,CAAClM,IADtB,KAAA,EAC6BkM,YAAY,CAACjI,IAD1C,CADF;;;;;EArIwBhH;;IC1C1Bub;;;;;;;;;;4BA0FI,GAAqB,UAC3BtM,YAD2B,EAE3BkB,mBAF2B,EAG3BoK,sBAH2B;UAKrBuM,QAAQ,GAAY5W,yBAAyB,CACjDjB,YADiD,EAEjDkB,mBAFiD,EAGjD,MAAKxQ,KAAL,CAAWoc,8BAHsC,CAAnD;;UAMI,CAAC+K,QAAL,EAAe;eACN,CAAP;;;UAEAA,QAAQ,IACLvM,sBADH,IAEGtL,YAAY,CAACgD,OAFhB,IAGGhD,YAAY,CAACgD,OAAb,CAAqBC,UAJxB,EAKA;YACI,aAAa9N,IAAb,CAAkB6K,YAAY,CAACgD,OAAb,CAAqBC,UAAvC,CAAJ,EAAwD;cAChD0Q,oBAAoB,GAAG3T,YAAY,CAACgD,OAAb,CAAqBC,UAArB,CAAgC1C,KAAhC,CAC3B,YAD2B,CAA7B;cAGMuX,eAAe,GAAGnE,oBAAoB,CAAC,CAAD,CAApB,CAAwB/b,OAAxB,CAAgC,GAAhC,EAAqC,EAArC,CAAxB;cACMmV,MAAM,GAAG/N,KAAK,CAAC8Y,eAAD,CAAL,GACX,EADW,GAEX3d,QAAQ,CAAC2d,eAAD,EAAkB,EAAlB,CAFZ;iBAGO/K,MAAP;;;;aAGG,EAAP;KA9BM;;;;;;;SAzFDtc,SAAA;;;sBAQD,KAAKC;QANPya,sBAAAA;QACAhT,sBAAAA;QACAoU,4BAAAA;QACArL,kCAAAA;QACAnP,8BAAAA;QACAuZ,qCAAAA;WAGAva,aAAA,CAACgnB,GAAD;MAAK7mB,SAAS,EAAC;KAAf,EACGqb,aAAa,CAAC7a,GAAd,CAAkB,UAACsO,YAAD;UACX1O,KAAK,GAAW,MAAI,CAAC0mB,kBAAL,CACpBhY,YADoB,EAEpBkB,mBAFoB,EAGpBoK,sBAHoB,CAAtB;;aAMEva,aAAA,CAACknB,GAAD;QACEngB,GAAG,aAAWkI,YAAY,CAACjI;QAC3B7G,SAAS,EAAGI,KAAK,KAAK,CAAV,IAAe0O,YAAY,CAAClM,IAAb,KAAsBZ,oBAArC,GAA4D,4BAA5D,GAA2F;QACvGglB,EAAE,EAAE5mB;OAHN,EAMG,MAAI,CAACsmB,aAAL,CACCzM,OADD,EAEChT,OAFD,EAGC6H,YAHD,EAICkB,mBAJD,EAKCnP,eALD,CANH,CADF;KAND,CADH,CADF;;;;;;;;;;SAmCM6lB,gBAAA,uBACNzM,OADM,EAENhT,OAFM,EAGN6H,YAHM,EAINkB,mBAJM,EAKNnP,eALM;YAOEiO,YAAY,CAAClM,IAArB;WACOzB,gBAAL;eAEItB,aAAA,MAAA,MAAA,EACEA,aAAA,CAACma,cAAD;UACEC,OAAO,EAAEA;UACTnL,YAAY,EAAEA;UACdkB,mBAAmB,EAAEA;UACrBnP,eAAe,EAAEA;UACjBoG,OAAO,EAAEA;SALX,CADF,CADF;;WAWG7F,iBAAL;eAEIvB,aAAA,MAAA,MAAA,EACEA,aAAA,CAACme,MAAD;UACE/D,OAAO,EAAEA;UACTnL,YAAY,EAAEA;UACdkB,mBAAmB,EAAEA;UACrBnP,eAAe,EAAEA;UACjBoG,OAAO,EAAEA;SALX,CADF,CADF;;;eAaEpH,aAAA,CAAC4mB,iBAAD;UACExM,OAAO,EAAEA;UACTnL,YAAY,EAAEA;UACdkB,mBAAmB,EAAEA;UACrBnP,eAAe,EAAEA;UACjBoG,OAAO,EAAEA;SALX,CADF;;;;;EA9EyBpH;;;;AAoIjC,IAAM6b,iBAAe,GAAG,SAAlBA,eAAkB,CAACnV,KAAD;MAChBqV,8BAA8B,GAAG,SAAjCA,8BAAiC,CACrCrN,UADqC,EAErCY,aAFqC;WAGlC2G,sBAAsB,CAACvP,KAAD,EAAQgI,UAAR,EAAoBY,aAApB,CAHY;GAAvC;;MAKM0M,MAAM,GAAG;IACbD,8BAA8B,EAA9BA;GADF;SAGOC,MAAP;CATF;;;;AAaA,IAAMoL,2BAA2B;;AAAGjL,OAAO,CAACN,iBAAD,CAAP,CAClCN,kBADkC,CAApC;;AC9IA8L,OAAO,CAACC,GAAR,CAAYC,YAAZ,EAA0BC,aAA1B,EAAyCC,mBAAzC;;IA2BMC;;;;;eACQ/nB,KAAZ;;;wCACQA,KAAN;;sBAmBK,GAAe,UAACgoB,YAAD;YACflH,QAAL,CAAc;QAAEzf,eAAe,EAAE2mB;OAAjC;;YACKhoB,KAAL,CAAWioB,qBAAX,CAAiC,MAAKjoB,KAAL,CAAWqB,eAA5C;KAFK;;;qBAiEC,GAAc,UAACqb,MAAD;wBAC0C,MAAK1c;UAA3DkoB,2BAAAA;UAAcC,yBAAAA;UAAYhX,2BAAAA;UAAc6D,wBAAAA;;UAC5CmT,UAAJ,EAAgB;QACdD,YAAY,CAAC/W,YAAD,EAAe6D,SAAf,CAAZ;OADF,MAEO;QACLkT,YAAY,CAAC,gBAAD,EAAmBlT,SAAnB,CAAZ;;cACK8L,QAAL,CAAc;UAAEsH,iBAAiB,EAAE;SAAnC;;cACKpoB,KAAL,CAAWqoB,yBAAX,CAAqC,IAArC;;QACAC,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;;KARI;;0BAYA,GAAmB;YACpBzH,QAAL,CAAc;QAAEsH,iBAAiB,EAAE;OAAnC;KADM;;;;;;;SA7FDI,oBAAA;uBACoD,KAAKxoB;QAAtDyoB,6BAAAA;QAAetX,4BAAAA;QAAc1J,uBAAAA;QAASgN,sBAAAA;SACzCzU,KAAL,CAAW0oB,uBAAX;;QACID,aAAa,IAAIA,aAAa,KAAKtX,YAAvC,EAAqD;WAC9CnR,KAAL,CAAW2oB,kBAAX,CAA8BF,aAA9B;;;QAEEhhB,OAAO,IAAIA,OAAO,KAAKgN,MAA3B,EAAmC;WAC5BzU,KAAL,CAAW4oB,YAAX,CAAwBnhB,OAAxB;;;SAEGzH,KAAL,CAAWioB,qBAAX,CAAiC,KAAKjoB,KAAL,CAAWqB,eAA5C;SACKyf,QAAL,CAAc;MACZzf,eAAe,EAAE,KAAKrB,KAAL,CAAWqB,eADhB;MAEZ+mB,iBAAiB,EAAE;KAFrB;;;SAWKroB,SAAA;uBAOD,KAAKC;QALPyH,uBAAAA;QACAoU,6BAAAA;QACAgN,yBAAAA;QACA/nB,+BAAAA;QACA2Z,uBAAAA;;eAE0B,KAAK1T,KAAL,IAAc,KAAK/G;QAAvCqB,uBAAAA;;QAEFrB,KAAK,GAAG;MACZya,OAAO,EAAPA,OADY;MAEZhT,OAAO,EAAPA,OAFY;MAGZpG,eAAe,EAAfA,eAHY;MAIZwa,aAAa,EAAbA,aAJY;MAKZrL,mBAAmB,EAAE,EALT;MAMZoK,sBAAsB,EAAE,KANZ;MAOZ9Z,eAAe,EAAfA;KAPF;WAWET,aAAA,CAACyoB,SAAD;MAAWtoB,SAAS,EAAC;KAArB,EACEH,aAAA,CAACgnB,GAAD;MAAK7mB,SAAS,EAAE;KAAhB,EACEH,aAAA,CAACknB,GAAD,MAAA,EACElnB,aAAA,KAAA;MAAIG,SAAS,EAAC;KAAd,EAA4BqoB,SAA5B,CADF,CADF,EAIExoB,aAAA,CAACI,QAAD;MACEM,SAAS,EAAKD;MACdH,cAAc,EAAE,KAAKooB;MACrB1nB,eAAe,EAAEA;KAHnB,CAJF,CADF,EAWG,KAAK0F,KAAL,IAAc,KAAKA,KAAL,CAAWqhB,iBAAzB,IACC/nB,aAAA,CAACP,OAAD;MACED,KAAK,EAAE;MACPO,MAAM,EAAE,KAAK2G,KAAL,CAAWqhB;MACnBjoB,YAAY,EAAE,KAAK6oB;MACnB/oB,UAAU,EAAE;MACZC,QAAQ,EACN;KANJ,CAZJ,EAsBEG,aAAA,CAACgnB,GAAD,MAAA,EACEhnB,aAAA,CAACknB,GAAD;MAAKnM,KAAK,EAAE;QAAEpD,OAAO,EAAE;;KAAvB,EACE3X,aAAA,CAACub,2BAAD,oBAAwB5b,MAAxB,CADF,EAEEK,aAAA,CAACgnB,GAAD;MAAK7mB,SAAS,EAAC;MAAc4a,KAAK,EAAE;QAAEpD,OAAO,EAAE;;KAA/C,EACE3X,aAAA,CAACknB,GAAD,MAAA,EACElnB,aAAA,CAACkhB,MAAD;MAAQ/gB,SAAS,EAAC;MAAkByc,OAAO,EAAE,KAAKgM;KAAlD,UAAA,CADF,CADF,CAFF,CADF,CAtBF,CADF;;;;EA9Cc5oB;;;;AAkHlB,IAAM6b,iBAAe,GAAG,SAAlBA,eAAkB,CAACnV,KAAD;MAChBsV,MAAM,GAAG;IACb8L,UAAU,EAAEtR,kBAAkB,CAAC9P,KAAD,CADjB;IAEbiO,SAAS,EAAEoC,iBAAiB,CAACrQ,KAAD,CAFf;IAGboK,YAAY,EAAE2F,qBAAqB,CAAC/P,KAAD,CAHtB;IAIb0N,MAAM,EAAEsC,eAAe,CAAChQ,KAAD;GAJzB;SAMOsV,MAAP;CAPF;;;;AAWA,IAAMC,oBAAkB,GAAG;EACzBoM,uBAAuB,EAAExU,gBADA;EAEzBmU,yBAAyB,EAAE1T,mBAFF;EAGzBgU,kBAAkB,EAAEpU,eAHK;EAIzB0T,qBAAqB,EAAEvT,eAJE;EAKzBkU,YAAY,EAAEpU;CALhB;;;AASA,IAAM0U,YAAY;;AAAG1M,OAAO,CAC1BN,iBAD0B,EAE1BI,oBAF0B,CAAP,CAGnByL,GAHmB,CAArB;;ICzKMoB;;;;;;;;;;;SACGppB,SAAA;sBAQD,KAAKC;QANPyH,sBAAAA;QACApG,8BAAAA;QACA+nB,iCAAAA;QACAX,4BAAAA;QACA3nB,8BAAAA;QACAonB,2BAAAA;QAEIloB,KAAK,GAAG;MACZya,OAAO,EAAE2O,kBAAkB,CAAC3O,OAAnB,IAA8B,EAD3B;MAEZhT,OAAO,EAAPA,OAFY;MAGZpG,eAAe,EAAfA,eAHY;MAIZwa,aAAa,EAAEuN,kBAAkB,CAACzN,QAJtB;MAKZkN,SAAS,EAAEO,kBAAkB,CAACC,KALlB;MAMZnB,YAAY,EAAZA,YANY;MAOZpnB,eAAe,EAAfA,eAPY;MAQZ2nB,aAAa,EAAbA;KARF;WAWEpoB,aAAA,CAACipB,QAAD;MAAU3mB,KAAK,EAAEA;KAAjB,EACEtC,aAAA,CAACkpB,gBAAD;MAAkBrrB,KAAK,EAAEA;KAAzB,EACEmC,aAAA,CAAC0nB,YAAD,oBAAS/nB,MAAT,CADF,CADF,CADF;;;;EApB0BK;;;;"}